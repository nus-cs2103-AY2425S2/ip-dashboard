[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"# Dar Chatbot User Guide","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"Welcome to the DAR Chatbot! This guide will help you understand how to interact with the chatbot and make the most out of its features.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"## Table of Contents","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"1. [Getting Started](#getting-started)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"2. [Basic Commands](#basic-commands)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"3. [Task Management](#task-management)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"4. [Exiting the Chatbot](#exiting-the-chatbot)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"5. [Error Handling](#error-handling)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"## Getting Started","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"To start using the DAR Chatbot, simply run the application. You will be greeted with a welcome message and instructions on how to use the chatbot.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"## Basic Commands","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"Dar Chatbot understands several basic commands to help you manage your tasks. Here are some of the basic commands you can use:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"- `todo \u003cdescription\u003e`: Adds a new ToDo task with the given description.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"- `deadline \u003cdescription\u003e /by \u003cdate and/or time\u003e`: Adds a new Deadline task with the given description and deadline.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"- `event \u003cdescription\u003e /at \u003cdate and/or time\u003e`: Adds a new Event task with the given description and event time.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"## Task Management","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"### Adding a ToDo Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"To add a ToDo task, use the following command:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"todo Buy milk","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"### Adding a Deadline Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"To add a Deadline task, use the following command:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"deadline Submit assignment by 20/10/2023 2359","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"### Adding an Event Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"To add an Event task, use the following command:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"event Team meeting from Monday to Tuesday","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"### Viewing Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"To view all tasks, use the `list` command:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"This will display a list of all tasks with their status (done or not done).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"### Marking and Unmarking Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"To mark or unmark a task, use the `mark` and `unmark`  command respectively followed by the task number:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"mark 2","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"This will mark the second task in the list as done.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"### Deleting Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"To delete a task, use the `delete` command followed by the task number:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"delete 3","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"This will delete the third task in the list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darHH"},"content":"## Saving and Loading Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darHH"},"content":"The DAR Chatbot automatically saves your tasks to a file called `tasks.txt`. When you start the chatbot, it will load the tasks from this file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darHH"},"content":"## Exiting the Chatbot","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darHH"},"content":"To exit the chatbot, use the `bye` command:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darHH"},"content":"bye","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darHH"},"content":"This will save your tasks and exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darHH"},"content":"## Error Handling","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darHH"},"content":"If you enter an invalid command or provide incorrect input, the Dar Chatbot will display an error message. Make sure to follow the correct command format as described in this guide.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darHH"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darHH"},"content":"Thank you for using the Dar Chatbot! I hope this guide helps you manage your tasks effectively. If you have any questions or need further assistance, feel free to reach out to me!","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darHH"},"content":"https://darHH.github.io/ip/","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darHH"},"content":"https://darHH.github.io/ip/Ui.png","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"darHH":90}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"checkstyle {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"    mainClass.set(\"gui.Launcher\")","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"    archiveBaseName \u003d \"dar\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-24","isFullCredit":false}],"authorContributionMap":{"darHH":25,"-":36}},{"path":"data/dardata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"T | 0 | watch lecture 5","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"D | 0 | lecture quizby 17/02/2025 2359","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"darHH":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"# Dar Chatbot User Guide","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"Welcome to Dar Chatbot! This guide will help you understand how to interact with Dar and make the most out of its features.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"## Table of Contents","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"1. [Getting Started](#getting-started)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"2. [Basic Commands](#basic-commands)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"3. [Task Management](#task-management)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"4. [Exiting the Chatbot](#exiting-the-chatbot)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"5. [Error Handling](#error-handling)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"## Getting Started","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"To start using the DAR Chatbot, simply run the application with `npm run dev`. You will be greeted with a GUI and a welcome message from Dar.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"## Basic Commands","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"Dar Chatbot understands several basic commands to help you manage your tasks. Here are the three tasks that Dar understands and can keep track of:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"- `todo \u003cdescription\u003e`: Adds a new ToDo task with the given description.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"- `deadline \u003cdescription\u003e /by \u003cdate and/or time\u003e`: Adds a new Deadline task with the given description and deadline.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"- `event \u003cdescription\u003e from \u003cdate and/or time\u003e to \u003cdate and/or time\u003e`: Adds a new Event task with the given description and event time.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"## Task Management","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"Dar listens to the first word very carefully, these are the commands that Dar understands. (Commands are not case-sensitive)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"### Adding a ToDo Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"To add a ToDo task, use the following command:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"todo Buy milk","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"### Adding a Deadline Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"To add a Deadline task, use the following command:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"deadline Submit assignment by 20/10/2023 2359","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"### Adding an Event Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"To add an Event task, use the following command:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"event Team meeting from Monday to Tuesday","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"### Viewing Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"To view all tasks, use the `list` command:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"This will display a list of all tasks with their status (done or not done).","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"### Marking and Unmarking Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"To mark or unmark a task, use the `mark` and `unmark`  command respectively followed by the task number:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"mark 2","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"This will mark the second task in the list as done.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"### Deleting Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"To delete a task, use the `delete` command followed by the task number:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"delete 3","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"This will delete the third task in the list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darHH"},"content":"### Sorting Deadline Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darHH"},"content":"To view all your deadlines in chronological order, use the following command:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darHH"},"content":"sort","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darHH"},"content":"### Finding Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darHH"},"content":"To find a specific task by a keyword, use the following command: ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darHH"},"content":"find work","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darHH"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darHH"},"content":"## Saving and Loading Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darHH"},"content":"The DAR Chatbot automatically saves your tasks to a file called `tasks.txt`. When you start the chatbot, it will load the tasks from this file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darHH"},"content":"## Exiting the Chatbot","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darHH"},"content":"To exit the chatbot, use the `bye` command:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darHH"},"content":"bye","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darHH"},"content":"This will save your tasks and exit the application.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darHH"},"content":"## Error Handling","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darHH"},"content":"If you enter an invalid command or provide incorrect input, the Dar Chatbot will display an error message. Make sure to follow the correct command format as described in this guide.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darHH"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darHH"},"content":"Thank you for using the Dar Chatbot! I hope this guide helps you manage your tasks effectively. If you have any questions or need further assistance, feel free to reach out to me!","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"darHH":83,"-":18}},{"path":"exceptions/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package exceptions;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"public class InvalidDateTimeException extends RuntimeException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"    public InvalidDateTimeException(String message) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"        super(message);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"darHH":7}},{"path":"src/main/java/command/CommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package command;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import java.util.List;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"import dar.Storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"import task.Event;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"import task.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"import task.ToDo;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":" * The CommandManager class manages the list of tasks and handles commands to manipulate them.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":" * The task list is loaded from and saved to a `Storage` object, ensuring persistence of tasks across program sessions.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":" * The class interprets user commands and interacts with the task list to perform the requested actions.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"public class CommandManager {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"     * Constructs a CommandManager instance that manages the list of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"     * @param storage The storage object used to load and save tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"    public CommandManager(Storage storage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(storage.loadTasks()); // Load tasks from storage","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"     * Returns string of all tasks in the list in order of its task number.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"     * If the task list is empty, return a String message indicating no tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"     * This method does not return anything.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"    public String listTasks() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"            return \"Nice, your list is empty, you deserve a break! :)\\n\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"        return \"Here\u0027s your list, better get going!\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"               + taskList.stream()","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"                   .map(task -\u003e task.getTaskNumber() + \". \" + task)","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"                   .reduce(\"\", (a, b) -\u003e a + b + \"\\n\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"     * Marks the specified task as done, then returns a String of the marked task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"     * If the given task number is invalid, an error message is shown.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"     * @param input The task number as a string","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"    public String markTask(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"            int taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"            Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"            task.setMark();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"            return \"Good job, one less task to worry about:\\n\" + task + \"\\n\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darHH"},"content":"            return \"Invalid input. Please enter a valid task number to mark.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darHH"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darHH"},"content":"            return \"Invalid task number. Please choose a valid task.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darHH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darHH"},"content":"            return \"An error occurred while marking the task.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darHH"},"content":"     * Unmarks the specified task as not done, then displays the unmarked task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darHH"},"content":"     * If the given task number is invalid, an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darHH"},"content":"     * @param input The task number as a string","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darHH"},"content":"    public String unmarkTask(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darHH"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darHH"},"content":"            int taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darHH"},"content":"            Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darHH"},"content":"            task.setUnmark();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darHH"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darHH"},"content":"            return \"Oh okay, this task has been unmarked:\\n\" + task + \"\\n\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darHH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darHH"},"content":"            return \"Invalid input. Please enter a valid task number to unmark.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darHH"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darHH"},"content":"            return \"Invalid task number. Please choose a valid task.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darHH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darHH"},"content":"            return \"An error occurred while unmarking the task.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darHH"},"content":"     * Adds a new ToDo task to the task list and saves it to storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darHH"},"content":"     * If the description is empty or contains only whitespace, an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darHH"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darHH"},"content":"    public String addTodo(String description) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darHH"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darHH"},"content":"            return \"The description of a todo task cannot be empty :\u003c\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"darHH"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"darHH"},"content":"        taskList.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"darHH"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"darHH"},"content":"        if (isDuplicate(task)) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"darHH"},"content":"            return \"This task has duplicates, delete tasks using \u0027delete (task no.)\u0027\\n\\n\" + findDuplicates(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"darHH"},"content":"            return \"Got it! I\u0027ve added this todo:\\n\" + Task.getTotalTasks() + \". \" + task + \"\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"darHH"},"content":"     * Adds a new Deadline task to the task list and saves it to storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"darHH"},"content":"     * If the description is empty or the date/time format is invalid, an error message is returned.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"darHH"},"content":"     * @param description The description of the Deadline task, including the deadline date/time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"darHH"},"content":"     * @return A success message or an error message if the input is invalid.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"darHH"},"content":"    public String addDeadline(String description) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"darHH"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"darHH"},"content":"            return \"The description of a deadline task cannot be empty :\u003c\\n\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"darHH"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"darHH"},"content":"            Task task \u003d new Deadline(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"darHH"},"content":"            taskList.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"darHH"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"darHH"},"content":"            if (isDuplicate(task)) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"darHH"},"content":"                return \"This task has duplicates, delete tasks using \u0027delete (task no.)\u0027\\n\\n\" + findDuplicates(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"darHH"},"content":"            } else {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"darHH"},"content":"                return \"Got it! I\u0027ve added this deadline:\\n\" + Task.getTotalTasks() + \". \" + task + \"\\n\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"darHH"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"darHH"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"darHH"},"content":"     * Adds a new Event task to the task list and saves it to storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"darHH"},"content":"     * The description should include the event details along with its start and end time (format with \"from\" and \"to\").","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"darHH"},"content":"     * If the description is empty or contains only whitespace, an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"darHH"},"content":"     * @param description The description of the Event task, including start and end time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"darHH"},"content":"    public String addEvent(String description) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"darHH"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"darHH"},"content":"            return \"The description of an event task cannot be empty :\u003c\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"darHH"},"content":"        Task task \u003d new Event(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"darHH"},"content":"        taskList.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"darHH"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"darHH"},"content":"        if (isDuplicate(task)) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"darHH"},"content":"            return \"This task has duplicates, delete tasks using \u0027delete (task no.)\u0027\\n\\n\" + findDuplicates(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"darHH"},"content":"            return \"Got it! I\u0027ve added this event:\\n\" + Task.getTotalTasks() + \". \" + task + \"\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"darHH"},"content":"     * Deletes a task from the task list by its task number and updates the remaining tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"darHH"},"content":"     * If the input task number is invalid (non-numeric or out of range), an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"darHH"},"content":"     * @param input The task number as a string.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"darHH"},"content":"    public String deleteTask(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"darHH"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"darHH"},"content":"            int taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"darHH"},"content":"            Task task \u003d taskList.remove(taskNumber - 1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"darHH"},"content":"            task.decrementTotalTasksCount();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"darHH"},"content":"            // Update remaining task numbers","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"darHH"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"darHH"},"content":"                taskList.get(i).updateTaskNumber(i + 1);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"darHH"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"darHH"},"content":"            return \"Roger that, this task has been removed:\\n\" + task","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"darHH"},"content":"                + \"\\nNow you have \" + Task.getTotalTasks() + \" task(s) in your list.\\n\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"darHH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"darHH"},"content":"            return \"Invalid input. Please enter a valid task number for deletion.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"darHH"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"darHH"},"content":"            return \"Invalid task number. Please choose a valid task.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"darHH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"darHH"},"content":"            return \"An error occurred while deleting the task.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"darHH"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"darHH"},"content":"        return taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"darHH"},"content":"     * Finds and displays tasks that contain the specified keyword.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"darHH"},"content":"     * @param matchWord The keyword to search for in task descriptions.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"darHH"},"content":"    public String findTasks(String matchWord) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"darHH"},"content":"        String header \u003d \"You looking for these?\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"darHH"},"content":"                       + \"(Numbers represent that task\u0027s number, for deleting and marking etc.)\\n\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"darHH"},"content":"        String matches \u003d taskList.stream()","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"darHH"},"content":"            .filter(task -\u003e task.getDescription().toLowerCase().contains(matchWord.toLowerCase()))","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"darHH"},"content":"            .map(task -\u003e task.getTaskNumber() + \". \" + task)","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"darHH"},"content":"            .reduce(\"\", (a, b) -\u003e a + b + \"\\n\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"darHH"},"content":"        return header + (matches.isEmpty() ? \"You have no matching tasks :(\\n\" : matches);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"darHH"},"content":"     * Finds and returns a list of duplicate tasks that have the same description as the given task.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"darHH"},"content":"     * @param newTask The task to check for duplicates.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"darHH"},"content":"     * @return A string listing all duplicate tasks, including their task numbers.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"darHH"},"content":"    public String findDuplicates(Task newTask) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"darHH"},"content":"        List\u003cTask\u003e duplicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"darHH"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"darHH"},"content":"            if (task.getDescription().equals(newTask.getDescription())) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"darHH"},"content":"                duplicates.add(task);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"darHH"},"content":"        if (duplicates.isEmpty()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"darHH"},"content":"            return \"No duplicate tasks found.\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"darHH"},"content":"        StringBuilder result \u003d new StringBuilder(\"Your duplicate tasks:\\n\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"darHH"},"content":"        for (Task task : duplicates) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"darHH"},"content":"            result.append(task.getTaskNumber()).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"darHH"},"content":"        return result.toString();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"darHH"},"content":"     * Checks if the given task is a duplicate in the task list.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"darHH"},"content":"     * @param newTask The task to check for duplication.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"darHH"},"content":"     * @return {@code true} if there are multiple tasks with the same description, {@code false} otherwise.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"darHH"},"content":"    public Boolean isDuplicate(Task newTask) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"darHH"},"content":"        int count \u003d 0;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"darHH"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"darHH"},"content":"            if (task.getDescription().equals(newTask.getDescription())) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"darHH"},"content":"                count++;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"darHH"},"content":"        if (count \u003e 1) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"darHH"},"content":"            return true;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"darHH"},"content":"        return false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"darHH"},"content":"     * Sorts all deadline tasks in chronological order based on their date and time.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"darHH"},"content":"     * @return A formatted string listing all deadlines in chronological order with their task numbers","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"darHH"},"content":"    public String sortDeadline() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"darHH"},"content":"        List\u003cDeadline\u003e sortedDeadlines \u003d taskList.stream()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"darHH"},"content":"            .filter(task -\u003e task instanceof Deadline)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"darHH"},"content":"            .map(task -\u003e (Deadline) task)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"darHH"},"content":"            .sorted(Comparator.comparing(Deadline::getDeadlineDate).thenComparing(Deadline::getDeadlineTime))","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"darHH"},"content":"            .toList();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"darHH"},"content":"        return sortedDeadlines.isEmpty()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"darHH"},"content":"            ? \"No deadlines found.\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"darHH"},"content":"            : \"Your deadlines in chronological order:\\n\" + sortedDeadlines.stream()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"darHH"},"content":"                .map(deadline -\u003e deadline.getTaskNumber() + \". \" + deadline)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"darHH"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"darHH":286}},{"path":"src/main/java/dar/Dar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package dar;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import java.util.function.Function;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"import command.CommandManager;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":" * Main class for the Dar task management application. This class serves as the entry point","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":" * and handles user interaction through a command-line interface.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":" *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":" * Tasks are persisted to a file and loaded on startup.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"public class Dar {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"     * This HashMap links command strings (e.g., \"todo\", \"list\", \"delete\")","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"     * to their corresponding functions that return a response string.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"    private static final HashMap\u003cString, Function\u003cString, String\u003e\u003e instructionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"     * Handles persistence of tasks to and from disk storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"     * Tasks are stored in \"./data/dardata.txt\".","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"    private static final Storage storage \u003d new Storage(\"./data/dardata.txt\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"     * Manages the execution of commands and maintains the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"    private static final CommandManager commandManager \u003d new CommandManager(storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"     * Handles user interface interactions.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"     * Initializes Dar and sets up the instruction map.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"    public Dar() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"        // Filling in the Instruction Map with functions that return Strings","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"list\", parameter -\u003e commandManager.listTasks());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"sort\", parameter -\u003e commandManager.sortDeadline());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"mark\", commandManager::markTask);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"unmark\", commandManager::unmarkTask);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"todo\", commandManager::addTodo);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"deadline\", commandManager::addDeadline);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"event\", commandManager::addEvent);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"delete\", commandManager::deleteTask);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"find\", commandManager::findTasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"     * @param input User input string","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"     * @return Response from Dar","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"            return ui.showInvalidInputMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"        // Parse the user input into a command and description","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"        String commandWord \u003d parser.getCommandWord();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darHH"},"content":"        String descriptionText \u003d parser.getDescriptionText();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darHH"},"content":"        // Handle \"bye\" separately","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darHH"},"content":"        if (commandWord.equals(\"bye\")) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darHH"},"content":"            storage.saveTasks(commandManager.getTaskList());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darHH"},"content":"            return ui.showExitMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darHH"},"content":"        // If the command exists in instructionMap, execute and return response","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darHH"},"content":"        if (instructionMap.containsKey(commandWord)) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darHH"},"content":"            return instructionMap.get(commandWord).apply(descriptionText);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darHH"},"content":"        // If the command is unknown","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darHH"},"content":"        return ui.showUnknownInputMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"darHH":84}},{"path":"src/main/java/dar/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package dar;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":" * The Parser class is responsible for parsing user input into two parts:","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":" * the first word (the command) and the remaining description text.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"public class Parser {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"    private final String commandWord;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"    private final String descriptionText;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"     * Constructs a new Parser instance by parsing the provided input text.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"     * The input text is split into two parts: the first word (command) and the remaining text (description).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"     * If there is no description provided, an empty string is used as the description.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"     * @param inputText The input text to be parsed, typically containing a command followed by its description.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"    public Parser(String inputText) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"        assert inputText !\u003d null : \"Input text cannot be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"        // Split the input text after first word, into two sections.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"        String[] inputParts \u003d inputText.trim().split(\" \", 2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"        // Extract the first word","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"        this.commandWord \u003d inputParts[0].toLowerCase();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"        // Extract the rest","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"        this.descriptionText \u003d (inputParts.length \u003e 1) ? inputParts[1] : \"\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"        return this.commandWord;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"    public String getDescriptionText() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"        return this.descriptionText;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"darHH":36}},{"path":"src/main/java/dar/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package dar;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"import java.io.File;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"import task.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":" * The Storage class handles the saving and loading of tasks to and from a specified file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":" * The class provides methods for saving tasks, loading tasks, and managing the file that stores the tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":" * If the file or directory does not exist, it will be created automatically.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"public class Storage {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    private String filePath;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"     * Constructs a new Storage instance with the specified file path.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"     * @param filePath The path to the file where tasks will be saved or loaded.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"        assert filePath !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"        createFileAndDirectoryIfNotExists();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"     * Ensures that the data file and its parent directory exist.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"     * If the parent directory or data file does not exist, it is created.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"     * If an error occurs during file creation, an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"    private void createFileAndDirectoryIfNotExists() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"            if (file.getParentFile() !\u003d null \u0026\u0026 !file.getParentFile().exists()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"                file.createNewFile();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"     * Saves a list of tasks to the specified file (data/dardata.txt).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"     * Each task is converted into data format before being saved.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"     * If an error occurs during writing, an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"        assert tasks !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"                writer.write(task.toDataFormat() + System.lineSeparator());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darHH"},"content":"     * Loads tasks from the specified file and returns them as an array list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darHH"},"content":"     * Each line in the file is converted into a `Task` object.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darHH"},"content":"     * If an error occurs while reading a line, an error message is displayed, and skipped.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darHH"},"content":"     * @return An array list of tasks loaded from the dardata.txt file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darHH"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darHH"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darHH"},"content":"        try (Scanner scanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darHH"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darHH"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darHH"},"content":"                try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darHH"},"content":"                    tasks.add(Task.fromDataFormat(line)); // Deserialize each line","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darHH"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darHH"},"content":"                    System.out.println(\"Error loading task: \" + line);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darHH"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darHH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Error reading tasks from file: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darHH"},"content":"        return tasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"darHH":93}},{"path":"src/main/java/dar/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package dar;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":" * The Ui class handles the display of messages to the user.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"public class Ui {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"     * Constructs a new Ui instance.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"    public Ui() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"        // Empty constructor","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"     * Displays greeting message","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"     * This method does not return anything.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"    public String showGreetingMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"        return (\"Hey buddy! The name\u0027s Dar, what can I do for you today?\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"     * Displays error message when chatbot input is empty","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"     * This method does not return anything.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"    public String showInvalidInputMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"        return (\"Oops! You entered nothing. Try again.\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"     * Displays error message when input (first word) is an unknown command","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"     * This method does not return anything.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"    public String showUnknownInputMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"        return (\"My apologies, I don\u0027t understand what you mean! Please let my dev know :D \\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"     * Displays exit message, when input is \"bye\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"     * This method does not return anything.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"    public String showExitMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"        return (\"I\u0027ll see ya around, take it easy bud!\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"darHH":52}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package gui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"    private void flip() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"        db.flip();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"        return db;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"darHH":61}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package gui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"public class Launcher {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"darHH":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package gui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"import dar.Dar;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":" * A GUI for Dar using FXML.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"    private Dar dar \u003d new Dar();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"            stage.setTitle(\"Dar the Chatbot\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDar(dar); // inject the Duke instance","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"            stage.show();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"darHH":34}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package gui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import dar.Dar;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import dar.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"    private Dar dar;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dar.png\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"    private Image darImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/boy.png\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"    public void setDar(Dar d) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"        dar \u003d d;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"        // Show the greeting message when the chatbot starts","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"        String greeting \u003d ui.showGreetingMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"                DialogBox.getDukeDialog(greeting, darImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"        String response \u003d dar.getResponse(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"                DialogBox.getDukeDialog(response, darImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"darHH":64}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"import java.util.List;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":" * Represents a Deadline task, which includes a description and a deadline with both date and time.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"    private static final DateTimeFormatter DISPLAY_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"ha\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"    private String afterBy;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"    private String description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"    private LocalTime deadlineTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"     * Constructs a Deadline task and extracts its deadline details.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"     * @param description The task description, including the \"by\" keyword followed by the deadline.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"     * @throws IllegalArgumentException If the deadline format is invalid.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"    public Deadline(String description) throws IllegalArgumentException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"        parseDescription(description);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"     * Parses the task description to extract the deadline details.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"     * @param description The input string containing the task details and deadline.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"     * @throws IllegalArgumentException If the deadline format is invalid.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"    private void parseDescription(String description) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"        String[] descriptionParts \u003d description.split(\"by\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"        this.description \u003d descriptionParts[0].trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"        this.afterBy \u003d (descriptionParts.length \u003e 1) ? descriptionParts[1].trim() : \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"        if (!extractAndSaveDateTime(afterBy)) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"            decrementTotalTasksCount();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"            throw new IllegalArgumentException(\"Invalid date or time format. \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"                    + \"Declare date and time after \u0027by\u0027 in DD/MM/YYYY and/or HHMM format.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"     * Extracts and saves a valid date and/or time from the given description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"     * @param description The input string containing date and/or time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"     * @return true if a valid date or time is found, false otherwise.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"    private boolean extractAndSaveDateTime(String description) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"        List\u003cString\u003e numberSequences \u003d extractNumericSequences(description);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"        return parseDateTime(numberSequences);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"     * Extracts numeric sequences from a given string, capturing potential date or time values.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"     * @param description The input string that may contain date and/or time.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darHH"},"content":"     * @return A list of extracted numeric sequences.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darHH"},"content":"    private List\u003cString\u003e extractNumericSequences(String description) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darHH"},"content":"        List\u003cString\u003e numberSequences \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darHH"},"content":"        StringBuilder currentNumber \u003d new StringBuilder();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darHH"},"content":"        for (char ch : description.toCharArray()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darHH"},"content":"            if (Character.isDigit(ch) || ch \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darHH"},"content":"                currentNumber.append(ch);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darHH"},"content":"            } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darHH"},"content":"                if (currentNumber.length() \u003e 0) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darHH"},"content":"                    numberSequences.add(currentNumber.toString());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darHH"},"content":"                    currentNumber.setLength(0);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darHH"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darHH"},"content":"        if (currentNumber.length() \u003e 0) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darHH"},"content":"            numberSequences.add(currentNumber.toString());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darHH"},"content":"        return numberSequences;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darHH"},"content":"     * Parses the extracted numeric sequences to determine if they represent a valid date or time.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darHH"},"content":"     * @param numberSequences A list of extracted numeric sequences to be checked.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darHH"},"content":"     * @return true if a valid date or time is found, false otherwise.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darHH"},"content":"    private boolean parseDateTime(List\u003cString\u003e numberSequences) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darHH"},"content":"        boolean isValidDateOrTime \u003d false;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darHH"},"content":"        for (String element : numberSequences) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darHH"},"content":"            try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darHH"},"content":"                if (element.matches(\"\\\\d{2}/\\\\d{2}/\\\\d{4}\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darHH"},"content":"                    deadlineDate \u003d LocalDate.parse(element, DATE_FORMATTER);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darHH"},"content":"                    isValidDateOrTime \u003d true;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darHH"},"content":"                } else if (element.matches(\"\\\\d{4}\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darHH"},"content":"                    deadlineTime \u003d LocalTime.parse(element, TIME_FORMATTER);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darHH"},"content":"                    isValidDateOrTime \u003d true;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darHH"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darHH"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"darHH"},"content":"                return false; // Invalid date/time format","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"darHH"},"content":"        return isValidDateOrTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"darHH"},"content":"    public String getDeadlineDate() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"darHH"},"content":"        return (deadlineDate !\u003d null) ? deadlineDate.format(DISPLAY_DATE_FORMATTER) : \"No date set\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"darHH"},"content":"    public String getDeadlineTime() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"darHH"},"content":"        return (deadlineTime !\u003d null) ? deadlineTime.format(DISPLAY_TIME_FORMATTER) : \"No time set\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"darHH"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"darHH"},"content":"        return this.description;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"darHH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"darHH"},"content":"        String formattedDate \u003d (deadlineDate !\u003d null)","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"darHH"},"content":"                ? deadlineDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"darHH"},"content":"                : \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"darHH"},"content":"        String formattedTime \u003d (deadlineTime !\u003d null)","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"darHH"},"content":"                ? deadlineTime.format(DateTimeFormatter.ofPattern(\"ha\"))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"darHH"},"content":"                : \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"darHH"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"darHH"},"content":"                + \" (By: \" + formattedDate + \" \" + formattedTime + \")\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"darHH"},"content":"    public String toDataFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"darHH"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description + \"by \" + this.afterBy;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"darHH":148}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":" * Represents an Event task, which includes a description, start time, and end time.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":" * This class extends the Task class and adds functionality for handling time-bound events.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"    private String afterFrom;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"    private String afterTo;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"    private String description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"     * Constructs an Event task and extracts its time range.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"     * Calls {@code parseDescription} to extract the event details.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"     * @param description The event description, including the \"from\" and \"to\" time range.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"    public Event(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"        parseDescription(description);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"     * Parses the event description to extract the time range.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"     * Splits the input based on the \"from\" keyword to extract the start time","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"     * and the \"to\" keyword to extract the end time. If either is missing,","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"     * a default value (\"-\") is assigned.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"     * @param description The input string containing the event details and time range.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"    private void parseDescription(String description) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"        String[] descriptionPartOne \u003d description.split(\"from\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"        this.description \u003d descriptionPartOne[0];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"        if (descriptionPartOne.length \u003e 1) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"            String[] descriptionPartTwo \u003d descriptionPartOne[1].split(\"to\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"            this.afterFrom \u003d descriptionPartTwo[0].trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"            if (descriptionPartTwo.length \u003e 1) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"                this.afterTo \u003d descriptionPartTwo[1].trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"            } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"                this.afterTo \u003d \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"            this.afterFrom \u003d \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"            this.afterTo \u003d \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"        return this.description;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"                + \" (From: \" + this.afterFrom + \" To: \" + this.afterTo + \")\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"    public String toDataFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description + \"from\" + this.afterFrom + \"to \" + afterTo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"darHH":69}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":" * The Task class represents a generic task with a description and a completion status.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":" * It provides functionality for managing task attributes such as the","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":" * description, completion status (done or not done), and task number.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"    private static int totalTasks \u003d 0;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"    protected String description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"    private int taskNumber;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"     * (Not really used as instances of its classes will be created instead)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"        totalTasks++;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"        assert totalTasks \u003e\u003d 0 : \"Total tasks cannot be negative\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"        this.taskNumber \u003d totalTasks;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"        assert this.taskNumber \u003e\u003d 0 : \"Task number cannot be negative\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"    public void setMark() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"    public void setUnmark() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"        assert this.taskNumber \u003e\u003d 0 : \"Task number cannot be negative\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"        return this.taskNumber;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"        return this.description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"    public static int getTotalTasks() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"        assert totalTasks \u003e\u003d 0 : \"Total tasks cannot be negative\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"        return totalTasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"     * Updates task number of this task, for when other task is deleted","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"     * @param newTaskNumber The new task number of the task.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"    public void updateTaskNumber(int newTaskNumber) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"        assert this.taskNumber \u003e\u003d 0 : \"Task number cannot be negative\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"        this.taskNumber \u003d newTaskNumber;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"     * Decreases total number of tasks, for when other task is deleted","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darHH"},"content":"    public void decrementTotalTasksCount() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darHH"},"content":"        assert totalTasks \u003e 0 : \"Total tasks cannot be negative\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darHH"},"content":"        totalTasks--;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darHH"},"content":"    public abstract String toDataFormat();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darHH"},"content":"     * Converts a String (e.g from Storage and dardata.txt) from data format into a Task object (either T, D, E).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darHH"},"content":"     * @param dataLine A string representing a task in data format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darHH"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darHH"},"content":"     * @throws IllegalArgumentException If the task type is unknown.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darHH"},"content":"    public static Task fromDataFormat(String dataLine) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darHH"},"content":"        String[] parts \u003d dataLine.split(\" \\\\| \");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darHH"},"content":"        String typeTask \u003d parts[0];","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darHH"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darHH"},"content":"        String dataDescription \u003d parts[2];","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darHH"},"content":"        Task newTask;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darHH"},"content":"        if (typeTask.equals(\"T\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darHH"},"content":"            newTask \u003d new ToDo(dataDescription);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darHH"},"content":"        } else if (typeTask.equals(\"D\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darHH"},"content":"            newTask \u003d new Deadline(dataDescription);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darHH"},"content":"        } else if (typeTask.equals(\"E\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darHH"},"content":"            newTask \u003d new Event(dataDescription);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darHH"},"content":"            throw new IllegalArgumentException(\"Unknown task type: \" + typeTask);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darHH"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darHH"},"content":"            newTask.setMark();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darHH"},"content":"            newTask.setUnmark();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darHH"},"content":"        return newTask;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"darHH":110}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":" * Represents a ToDo task, which contains only a description and a status","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"     * Constructs a ToDo task with a description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"    public String toDataFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"darHH":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"            \u003cInsets left\u003d\"8.0\" right\u003d\"8.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"darHH":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"326.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"74.0\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"         \u003cfont\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"            \u003cFont name\u003d\"Arial Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"darHH":23}},{"path":"src/test/java/task/CommandManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals; // Static Import","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"// Standard Java Package Imports","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"// Special Imports (JUnit)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"// Custom Imports","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"import command.CommandManager;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"import dar.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"public class CommandManagerTest {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    private CommandManager commandManager;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"    private Storage mockStorage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"        mockStorage \u003d new Storage(\"testTasks.txt\") {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"            @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"            public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"        };","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"        commandManager \u003d new CommandManager(mockStorage);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"    @Test","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"    public void addTodo_validDescription_success() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"        String result \u003d commandManager.addTodo(\"Buy milk\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"        assertTrue(result.contains(\"I\u0027ve added this todo\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"        assertEquals(1, commandManager.getTaskList().size());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"    @Test","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"    public void addTodo_emptyDescription_errorMessage() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"        String result \u003d commandManager.addTodo(\"   \");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"        assertEquals(\"The description of a todo task cannot be empty :\u003c\\n\", result);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"        assertEquals(0, commandManager.getTaskList().size());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"    @Test","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"    public void addTodo_duplicateTask_detected() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"        commandManager.addTodo(\"Buy eggs\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"        String result \u003d commandManager.addTodo(\"Buy eggs\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"        assertTrue(result.contains(\"This task has duplicates\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"darHH":51}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"    public void deadlineDateSaved() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"        Deadline deadline \u003d new Deadline(\"Project Work by 12/12/2222 1600\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"        assertEquals(\"12 Dec 2222\", deadline.getDeadlineDate());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"    public void deadlineTimeSaved() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"        Deadline deadline \u003d new Deadline(\"Project Work by 12/12/2222 1600\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"        assertEquals(\"4PM\", deadline.getDeadlineTime().toUpperCase());","lastModifiedDate":"2025-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"darHH":17}},{"path":"src/test/java/task/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals; // Static Import","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"// Standard Java Package Imports","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"import java.io.File;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"import java.util.List;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"// Special Imports (JUnit)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"// Custom Imports","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"import dar.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    public void testSaveAndLoadTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"        Storage storage \u003d new Storage(\"test_data.txt\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"        // Create sample tasks","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"        tasks.add(new ToDo(\"Finish homework\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"        tasks.add(new Deadline(\"Submit assignment by 12/12/2222 1600\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"        tasks.add(new Event(\"Project meeting from monday to wednesday\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"        // Validate the loaded tasks match the saved ones","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"        assertEquals(tasks.size(), loadedTasks.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"        assertEquals(tasks.get(0).toString(), loadedTasks.get(0).toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"        assertEquals(tasks.get(1).toString(), loadedTasks.get(1).toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"        assertEquals(tasks.get(2).toString(), loadedTasks.get(2).toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"        new File(\"test_data.txt\").delete();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"darHH":38}},{"path":"testTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"T | 0 | Buy eggs","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"T | 0 | Buy eggs","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"darHH":2}}]
