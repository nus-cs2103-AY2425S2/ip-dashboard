[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"checkstyle {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"    configFile \u003d file(\"${rootProject.projectDir}/config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"    configProperties.suppressionsFile \u003d file(\"${rootProject.projectDir}/config/checkstyle/suppressions.xml\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"    archiveBaseName \u003d \"dar\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"darHH":8,"-":40}},{"path":"data/dardata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"T | 0 | Workout","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"darHH":1}},{"path":"exceptions/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package exceptions;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"public class InvalidDateTimeException extends RuntimeException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"    public InvalidDateTimeException(String message) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"        super(message);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"darHH":7}},{"path":"src/main/java/command/CommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package command;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import dar.Storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"import task.Event;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"import task.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"import task.ToDo;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"public class CommandManager {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"    public CommandManager(Storage storage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(storage.loadTasks()); // Load tasks from storage","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"     * Displays all tasks in the list in order of its task number.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"     * If the task list is empty, displays a message indicating no tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"     * This method does not return anything.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"    public void listTasks() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Nice, your list is empty, you deserve a break! :)\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Here\u0027s your list, better get going!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"                System.out.println(task.getTaskNumber() + \".\" + task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"            System.out.println();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"     * Marks the specified task as done, then displays the marked task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"     * If the given task number is invalid, an error message is shown.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"     * @param input The task number as a string","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"    public void markTask(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"            int taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"            Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"            task.setMark();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Good job, one less task to worry about:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"            System.out.println(task + \"\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Invalid task number for marking.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"     * Unmarks the specified task as not done, then displays the unmarked task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"     * If the given task number is invalid, an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"     * @param input The task number as a string","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"    public void unmarkTask(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darHH"},"content":"            int taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darHH"},"content":"            Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darHH"},"content":"            task.setUnmark();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darHH"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Oh okay, this task has been unmarked:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darHH"},"content":"            System.out.println(task + \"\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darHH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Invalid task number for unmarking.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darHH"},"content":"     * Adds a new ToDo task to the task list and saves it to storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darHH"},"content":"     * If the description is empty or contains only whitespace, an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darHH"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darHH"},"content":"    public void addTodo(String description) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darHH"},"content":"        if (!description.trim().isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darHH"},"content":"            Task task \u003d new ToDo(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darHH"},"content":"            taskList.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darHH"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darHH"},"content":"            System.out.println(\"The description of a todo task cannot be empty :\u003c\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darHH"},"content":"     * Adds a new Deadline task to the task list and saves it to storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darHH"},"content":"     * The description should include both the task details and the deadline in a specific format","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darHH"},"content":"     * (after \"by\" in DD/MM/YYYY and HHMM).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darHH"},"content":"     * If the description is empty or contains only whitespace, an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darHH"},"content":"     * @param description The description of the Deadline task, including the deadline date/time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darHH"},"content":"    public void addDeadline(String description) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darHH"},"content":"        if (!description.trim().isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darHH"},"content":"            Task task \u003d new Deadline(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darHH"},"content":"            taskList.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darHH"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"darHH"},"content":"            System.out.println(\"The description of a deadline task cannot be empty :\u003c\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"darHH"},"content":"     * Adds a new Event task to the task list and saves it to storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"darHH"},"content":"     * The description should include the event details along with its start and end time (format with \"from\" and \"to\").","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"darHH"},"content":"     * If the description is empty or contains only whitespace, an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"darHH"},"content":"     * @param description The description of the Event task, including start and end time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"darHH"},"content":"    public void addEvent(String description) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"darHH"},"content":"        if (!description.trim().isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"darHH"},"content":"            Task task \u003d new Event(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"darHH"},"content":"            taskList.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"darHH"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"darHH"},"content":"            System.out.println(\"The description of an event task cannot be empty :\u003c\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"darHH"},"content":"     * Deletes a task from the task list by its task number and updates the remaining tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"darHH"},"content":"     * If the input task number is invalid (non-numeric or out of range), an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"darHH"},"content":"     * @param input The task number as a string.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"darHH"},"content":"    public void deleteTask(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"darHH"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"darHH"},"content":"            int taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"darHH"},"content":"            Task task \u003d taskList.remove(taskNumber - 1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"darHH"},"content":"            task.totalTasksMinusOne();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"darHH"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"darHH"},"content":"                taskList.get(i).updateTaskNumber(i + 1); // Update remaining task numbers","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"darHH"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Roger that, this task has been removed:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"darHH"},"content":"            System.out.println(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Now you have \" + Task.getTotalTasks() + \" task(s) in your list.\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"darHH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Invalid task number for deletion.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"darHH"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"darHH"},"content":"        return taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"darHH"},"content":"     * Finds and displays tasks that contain the specified keyword.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"darHH"},"content":"     * @param matchWord The keyword to search for in task descriptions.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"darHH"},"content":"    public void findTasks(String matchWord) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"darHH"},"content":"        System.out.println(\"You looking for these?\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"darHH"},"content":"        System.out.println(\"(Numbers represent that task\u0027s number, for deleting and marking etc.)\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"darHH"},"content":"        matchWord \u003d matchWord.toLowerCase();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"darHH"},"content":"        boolean found \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"darHH"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"darHH"},"content":"            if (task.getDescription().toLowerCase().contains(matchWord)) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"darHH"},"content":"                System.out.println(task.getTaskNumber() + \".\" + task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"darHH"},"content":"                found \u003d true;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"darHH"},"content":"        if (!found) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"darHH"},"content":"            System.out.println(\"You have no matching tasks :(\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"darHH"},"content":"        System.out.println();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"darHH":183}},{"path":"src/main/java/dar/Dar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package dar;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"import command.CommandManager;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"public class Dar {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"     * This HashMap links command strings (e.g., \"todo\", \"list\", \"delete\")","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"     * to their corresponding Consumer functions that execute the commands.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"    private static final HashMap\u003cString, Consumer\u003cString\u003e\u003e instructionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"    private static final Storage storage \u003d new Storage(\"./data/dardata.txt\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"    private static final CommandManager commandManager \u003d new CommandManager(storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"        // Initialization and bot start up","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"        // Greeting","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"        ui.showGreetingMessage();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"        // Filling in the Instruction Map","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"list\", parameter -\u003e commandManager.listTasks());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"mark\", commandManager::markTask);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"unmark\", commandManager::unmarkTask);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"todo\", commandManager::addTodo);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"deadline\", commandManager::addDeadline);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"event\", commandManager::addEvent);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"delete\", commandManager::deleteTask);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"        instructionMap.put(\"find\", commandManager::findTasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"        // Continuously reads user input until \"bye\" is entered.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"        while (true) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"            String inputText \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"            if (inputText.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"                ui.showInvalidInputMessage();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"                continue;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"            // Parse the user input into a command and description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"            Parser parser \u003d new Parser(inputText);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"            String commandWord \u003d parser.getCommandWord();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"            String descriptionText \u003d parser.getDescriptionText();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"            // If the user types \"bye\", save all tasks and exit the loop.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"            if (commandWord.equals(\"bye\")) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"                storage.saveTasks(commandManager.getTaskList()); // Save tasks on exit","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"            // If the command is recognized, execute the corresponding action.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"            } else if (instructionMap.containsKey(commandWord)) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"                instructionMap.get(commandWord).accept(descriptionText);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"            // If the command is unknown, show an error message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"            } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"                ui.showUnknownInputMessage();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"        // Exit","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"        scanner.close();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"        ui.showExitMessage();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"darHH":67}},{"path":"src/main/java/dar/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package dar;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"public class Parser {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"    private final String commandWord;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"    private final String descriptionText;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"    public Parser(String inputText) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"        // Split the input text after first word, into two sections.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"        String[] inputParts \u003d inputText.trim().split(\" \", 2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"        // Extract the first word","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"        this.commandWord \u003d inputParts[0].toLowerCase();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"        // Extract the rest","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"        this.descriptionText \u003d (inputParts.length \u003e 1) ? inputParts[1] : \"\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"        return this.commandWord;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"    public String getDescriptionText() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"        return this.descriptionText;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"darHH":24}},{"path":"src/main/java/dar/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package dar;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"import java.io.File;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"import task.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"public class Storage {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"    private String filePath;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"        doesFileExist();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"     * Ensures that the data file and its parent directory exist.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"     * If the parent directory or data file does not exist, it is created.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"     * If an error occurs during file creation, an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"    private void doesFileExist() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"            if (file.getParentFile() !\u003d null \u0026\u0026 !file.getParentFile().exists()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"                file.createNewFile();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"     * Saves a list of tasks to the specified file (data/dardata.txt).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"     * Each task is converted into data format before being saved.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"     * If an error occurs during writing, an error message is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"                writer.write(task.toDataFormat() + System.lineSeparator());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"     * Loads tasks from the specified file and returns them as an array list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"     * Each line in the file is converted into a `Task` object.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"     * If an error occurs while reading a line, an error message is displayed, and skipped.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"     * @return An array list of tasks loaded from the dardata.txt file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"        try (Scanner scanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darHH"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darHH"},"content":"                try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darHH"},"content":"                    tasks.add(Task.fromDataFormat(line)); // Deserialize each line","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darHH"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darHH"},"content":"                    System.out.println(\"Error loading task: \" + line);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darHH"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darHH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Error reading tasks from file: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darHH"},"content":"        return tasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"darHH":80}},{"path":"src/main/java/dar/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package dar;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"public class Ui {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"    public Ui() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"        // Empty constructor","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"     * Displays greeting message","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"     * This method does not return anything.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"    public void showGreetingMessage() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"        System.out.println(\"Hey buddy! The name\u0027s Dar, what can I do for you today?\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"     * Displays error message when chatbot input is empty","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"     * This method does not return anything.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"    public void showInvalidInputMessage() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"        System.out.println(\"Oops! You entered nothing. Try again.\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"     * Displays error message when input (first word) is an unknown command","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"     * This method does not return anything.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"    public void showUnknownInputMessage() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"        System.out.println(\"My apologies, I don\u0027t understand what you mean! Please let my dev know :D \\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"     * Displays exit message, when input is \"bye\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"     * This method does not return anything.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"    public void showExitMessage() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"        System.out.println(\"I\u0027ll see ya around, take it easy bud!\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"darHH":44}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"    private String afterBy;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"    private String description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"    private LocalTime deadlineTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"    public Deadline(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"        String[] descriptionParts \u003d description.split(\"by\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"        this.description \u003d descriptionParts[0];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"        // TEST System.out.println(this.description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"        this.afterBy \u003d (descriptionParts.length \u003e 1) ? descriptionParts[1].trim() : \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"        saveDateTime(afterBy);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"        System.out.println(\"Deadline task has been added:\\n  \" + this.toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"        System.out.println(\"Now you have \" + Task.getTotalTasks() + \" task(s) in your list.\\n\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"     * Extracts and saves a valid date and/or time from the given description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"     * This method scans the input string for numerical sequences that match","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"     * either the date format (DD/MM/YYYY) or the time format (HHMM).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"     * Only if a valid date or time is found, it is saved as a `LocalDate` or `LocalTime`, respectively.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"     * Otherwise, a message is displayed indicating an invalid format","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"     * @param description The input string containing date and/or time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"    public void saveDateTime(String description) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"        ArrayList\u003cString\u003e numberSequence \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"        StringBuilder currentNumber \u003d new StringBuilder();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"        // Extract the digits and slashes that might represent dates or times","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"        for (char ch : description.toCharArray()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"            if (Character.isDigit(ch) || ch \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"                currentNumber.append(ch); // Add digit to the current sequence","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"            } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"                if (currentNumber.length() \u003e 0) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"                    numberSequence.add(currentNumber.toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"                    currentNumber.setLength(0); // Reset for the next sequence","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"        if (currentNumber.length() \u003e 0) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"            numberSequence.add(currentNumber.toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"        boolean validDateOrTime \u003d false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"        // Check extracted sequences for valid date or time formats","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"        for (String element : numberSequence) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"            if (element.matches(\"\\\\d{2}/\\\\d{2}/\\\\d{4}\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"                deadlineDate \u003d LocalDate.parse(element, dateFormatter);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"                validDateOrTime \u003d true;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"            } else if (element.matches(\"\\\\d{4}\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"                DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"                deadlineTime \u003d LocalTime.parse(element, timeFormatter);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"                validDateOrTime \u003d true;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darHH"},"content":"        // Handle invalid input cases","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darHH"},"content":"        if (!validDateOrTime) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darHH"},"content":"            afterBy \u003d \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darHH"},"content":"            System.out.println(\"(Invalid Date/Time - Date should be in DD/MM/YYYY and Time in HHMM format)\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darHH"},"content":"            System.out.println(\"Deadline saved with:\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darHH"},"content":"            if (deadlineDate !\u003d null) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darHH"},"content":"                System.out.println(\"  Date: \" + deadlineDate);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darHH"},"content":"            if (deadlineTime !\u003d null) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darHH"},"content":"                System.out.println(\"  Time: \" + deadlineTime);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darHH"},"content":"    public String getDeadlineDate() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darHH"},"content":"        return deadlineDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darHH"},"content":"    public String getDeadlineTime() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darHH"},"content":"        return this.deadlineTime.format(DateTimeFormatter.ofPattern(\"ha\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darHH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darHH"},"content":"        String formattedDate \u003d (deadlineDate !\u003d null)","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darHH"},"content":"                ? deadlineDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darHH"},"content":"                : \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darHH"},"content":"        String formattedTime \u003d (deadlineTime !\u003d null)","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darHH"},"content":"                ? deadlineTime.format(DateTimeFormatter.ofPattern(\"ha\"))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darHH"},"content":"                : \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darHH"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darHH"},"content":"                + \" (By: \" + formattedDate + \" \" + formattedTime + \")\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darHH"},"content":"    public String toDataFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darHH"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description + \"by \" + this.afterBy;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"darHH":110}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"    private String afterFrom;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"    private String afterTo;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"    private String description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"     * Constructs an Event task with a description and time range.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"     * The description should contain the keyword \"from\" to specify the start time","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"     * and \"to\" to specify the end time. If these are missing, default value \"-\" is assigned.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"     * @param description The full event description, including start (\"from\") and end (\"to\") times.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    public Event(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"        String[] descriptionPartOne \u003d description.split(\"from\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"        this.description \u003d descriptionPartOne[0];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"        if (descriptionPartOne.length \u003e 1) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"            String[] descriptionPartTwo \u003d descriptionPartOne[1].split(\"to\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"            this.afterFrom \u003d descriptionPartTwo[0].trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"            if (descriptionPartTwo.length \u003e 1) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"                this.afterTo \u003d descriptionPartTwo[1].trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"            } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"                this.afterTo \u003d \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"            this.afterFrom \u003d \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"            this.afterTo \u003d \"-\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"        System.out.println(\"Event task has been added:\\n  \" + this.toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"        System.out.println(\"Now you have \" + Task.getTotalTasks() + \" task(s) in your list.\\n\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"                + \"(From: \" + this.afterFrom + \" To: \" + this.afterTo + \")\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"    public String toDataFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description + \"from\" + this.afterFrom + \"to \" + afterTo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"darHH":48}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"    private static int totalTasks \u003d 0;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"    protected String description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"    private int taskNumber;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"        totalTasks++;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"        this.taskNumber \u003d totalTasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"    public void setMark() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"    public void setUnmark() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"        return this.taskNumber;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"        return this.description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darHH"},"content":"    public static int getTotalTasks() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darHH"},"content":"        return totalTasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darHH"},"content":"    public void updateTaskNumber(int newTaskNumber) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darHH"},"content":"        this.taskNumber \u003d newTaskNumber;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darHH"},"content":"    public void totalTasksMinusOne() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darHH"},"content":"        totalTasks--;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darHH"},"content":"    public abstract String toDataFormat();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darHH"},"content":"     * Converts a String (e.g from Storage and dardata.txt) from data format into a Task object (either T, D, E).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darHH"},"content":"     * @param dataLine A string representing a task in data format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darHH"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darHH"},"content":"     * @throws IllegalArgumentException If the task type is unknown.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darHH"},"content":"    public static Task fromDataFormat(String dataLine) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darHH"},"content":"        String[] parts \u003d dataLine.split(\" \\\\| \");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darHH"},"content":"        String typeTask \u003d parts[0];","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darHH"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darHH"},"content":"        String dataDescription \u003d parts[2];","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darHH"},"content":"        Task newTask;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darHH"},"content":"        if (typeTask.equals(\"T\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darHH"},"content":"            newTask \u003d new ToDo(dataDescription);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darHH"},"content":"        } else if (typeTask.equals(\"D\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darHH"},"content":"            newTask \u003d new Deadline(dataDescription);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darHH"},"content":"        } else if (typeTask.equals(\"E\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darHH"},"content":"            newTask \u003d new Event(dataDescription);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darHH"},"content":"            throw new IllegalArgumentException(\"Unknown task type: \" + typeTask);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darHH"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darHH"},"content":"            newTask.setMark();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darHH"},"content":"        } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darHH"},"content":"            newTask.setUnmark();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darHH"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darHH"},"content":"        return newTask;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"darHH":84}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"     * Constructs a ToDo task with a description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"        System.out.println(\"ToDo task has been added:\\n  \" + this.toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"        System.out.println(\"Now you have \" + Task.getTotalTasks() + \" task(s) in your list.\\n\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"    public String toDataFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"darHH":25}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"    public void deadlineDateSaved(){","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"        Deadline deadline \u003d new Deadline(\"Project Work by 12/12/2222 1600\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"        assertEquals(\"12 Dec 2222\", deadline.getDeadlineDate());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"    public void deadlineTimeSaved(){","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"        Deadline deadline \u003d new Deadline(\"Project Work by 12/12/2222 1600\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"        assertEquals(\"4pm\", deadline.getDeadlineTime());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"darHH":17}},{"path":"src/test/java/task/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import dar.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"import java.io.File;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"import java.util.List;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"    public void testSaveAndLoadTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"        Storage storage \u003d new Storage(\"test_data.txt\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"        // Create sample tasks","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darHH"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darHH"},"content":"        tasks.add(new ToDo(\"Finish homework\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darHH"},"content":"        tasks.add(new Deadline(\"Submit assignment by 12/12/2222 1600\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darHH"},"content":"        tasks.add(new Event(\"Project meeting from monday to wednesday\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darHH"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darHH"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darHH"},"content":"        // Validate the loaded tasks match the saved ones","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darHH"},"content":"        assertEquals(tasks.size(), loadedTasks.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darHH"},"content":"        assertEquals(tasks.get(0).toString(), loadedTasks.get(0).toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darHH"},"content":"        assertEquals(tasks.get(1).toString(), loadedTasks.get(1).toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darHH"},"content":"        assertEquals(tasks.get(2).toString(), loadedTasks.get(2).toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darHH"},"content":"        new File(\"test_data.txt\").delete();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"darHH":34}},{"path":"src/test/java/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"package task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"public class ToDoTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"    public void dummyTest(){","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darHH"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"darHH":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darHH"},"content":"todo borrow book","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darHH"},"content":"deadline return book by monday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darHH"},"content":"event project meeting from monday to tuesday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darHH"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darHH"},"content":"mark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darHH"},"content":"unmark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darHH"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darHH"},"content":"unknownCommand","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darHH"},"content":"   ","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darHH"},"content":"delete 1","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darHH"},"content":"delete 1","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darHH"},"content":"delete 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darHH"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darHH"},"content":"bye","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"darHH":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darHH"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/dar/*.java ../src/main/java/task/*.java ../src/main/java/command/*.java","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darHH"},"content":"java -classpath ../bin dar.Dar \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"darHH":2,"-":36}}]
