[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leewaikin19"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leewaikin19"},"content":"    protected String by;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leewaikin19"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leewaikin19"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leewaikin19"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leewaikin19"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leewaikin19"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leewaikin19"},"content":"    ","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leewaikin19"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leewaikin19"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leewaikin19"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leewaikin19"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"leewaikin19":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leewaikin19"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leewaikin19"},"content":"    protected String to;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leewaikin19"},"content":"    protected String from;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leewaikin19"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leewaikin19"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leewaikin19"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leewaikin19"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leewaikin19"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leewaikin19"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leewaikin19"},"content":"    ","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leewaikin19"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leewaikin19"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leewaikin19"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leewaikin19"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"leewaikin19":14}},{"path":"src/main/java/Glados.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leewaikin19"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leewaikin19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leewaikin19"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leewaikin19"},"content":"public class Glados {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leewaikin19"},"content":"    private static ArrayList\u003cTask\u003e items \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leewaikin19"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leewaikin19"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leewaikin19"},"content":"        ","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leewaikin19"},"content":"        System.out.println(\"Ah, thou art here! I am Glados, at thy service \"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leewaikin19"},"content":"                + \"- if such a thing may be called service.\\n\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leewaikin19"},"content":"                + \"How may I, in my immeasurable greatness, \"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leewaikin19"},"content":"                + \"deign to assist thee, thou artless hedge-born scullion?\\n\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leewaikin19"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leewaikin19"},"content":"        while (true) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leewaikin19"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leewaikin19"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leewaikin19"},"content":"                System.out.println(\"Begone, thou pribbling, ill-nurtured knave!\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leewaikin19"},"content":"                        + \"I care not when our paths cross again, \"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leewaikin19"},"content":"                        + \"for I hold thy presence in contempt!\\n\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leewaikin19"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leewaikin19"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leewaikin19"},"content":"                for (int i \u003d 0; i \u003c items.size(); i++){","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println((i + 1) + \". \" + items.get(i));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leewaikin19"},"content":"            } else if (userInput.startsWith(\"mark \")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leewaikin19"},"content":"                userInput \u003d userInput.replaceFirst(\"mark \", \"\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leewaikin19"},"content":"                int index \u003d 0;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leewaikin19"},"content":"                try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leewaikin19"},"content":"                    index \u003d Integer.parseInt(userInput) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leewaikin19"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println(\"Only use numbers after mark!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leewaikin19"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leewaikin19"},"content":"                Task targetTask \u003d items.get(index);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leewaikin19"},"content":"                targetTask.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leewaikin19"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" ","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leewaikin19"},"content":"                        + targetTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leewaikin19"},"content":"            } else if (userInput.startsWith(\"unmark \")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leewaikin19"},"content":"                userInput \u003d userInput.replaceFirst(\"unmark \", \"\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leewaikin19"},"content":"                int index \u003d 0;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leewaikin19"},"content":"                try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leewaikin19"},"content":"                    index \u003d Integer.parseInt(userInput) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leewaikin19"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println(\"Only use numbers after unmark!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leewaikin19"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leewaikin19"},"content":"                Task targetTask \u003d items.get(index);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leewaikin19"},"content":"                targetTask.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leewaikin19"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" ","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leewaikin19"},"content":"                        + targetTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leewaikin19"},"content":"            } else if (userInput.startsWith(\"delete \")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leewaikin19"},"content":"                userInput \u003d userInput.replaceFirst(\"delete \", \"\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leewaikin19"},"content":"                int index \u003d 0;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leewaikin19"},"content":"                try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leewaikin19"},"content":"                    index \u003d Integer.parseInt(userInput) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leewaikin19"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println(\"Only use numbers after delete!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leewaikin19"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leewaikin19"},"content":"                Task targetTask \u003d items.get(index);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leewaikin19"},"content":"                items.remove(index);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leewaikin19"},"content":"                System.out.println(\"Got it. I\u0027ve removed this task:\\n\" + targetTask","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leewaikin19"},"content":"                        + \"\\nNow you have \" + items.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leewaikin19"},"content":"            } else if (userInput.startsWith(\"todo \")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leewaikin19"},"content":"                userInput \u003d userInput.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leewaikin19"},"content":"                if (userInput.isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println(\"Todo description cannot be blank. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leewaikin19"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leewaikin19"},"content":"                Task newItem \u003d new Todo(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leewaikin19"},"content":"                items.add(newItem);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leewaikin19"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newItem ","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leewaikin19"},"content":"                        + \"\\nNow you have \" + items.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leewaikin19"},"content":"            } else if (userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leewaikin19"},"content":"                userInput \u003d userInput.replaceFirst(\"deadline \", \"\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leewaikin19"},"content":"                if (userInput.isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println(\"Deadline description cannot be blank. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leewaikin19"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leewaikin19"},"content":"                if (!userInput.contains(\" /by \")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println(\"Deadline must contain /by field. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leewaikin19"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leewaikin19"},"content":"                if (userInput.split(\" /by \")[1].stripTrailing().isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println(\"Deadline /by field cannot be empty. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leewaikin19"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leewaikin19"},"content":"                Task newItem \u003d new Deadline(userInput.split(\" /by \")[0].stripTrailing(), ","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leewaikin19"},"content":"                        userInput.split(\" /by \")[1].stripTrailing());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leewaikin19"},"content":"                items.add(newItem);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leewaikin19"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newItem ","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leewaikin19"},"content":"                        + \"\\nNow you have \" + items.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leewaikin19"},"content":"            } else if (userInput.startsWith(\"event \")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leewaikin19"},"content":"                userInput \u003d userInput.replaceFirst(\"event \", \"\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leewaikin19"},"content":"                String description \u003d \"\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leewaikin19"},"content":"                String from \u003d \"\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leewaikin19"},"content":"                String to \u003d \"\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leewaikin19"},"content":"                String[] commands \u003d userInput.split(\"/\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leewaikin19"},"content":"                for (int i \u003d 0; i \u003c commands.length; i++) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leewaikin19"},"content":"                    if (commands[i].startsWith(\"from \")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leewaikin19"},"content":"                        from \u003d commands[i].replaceFirst(\"from \", \"\").stripTrailing();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leewaikin19"},"content":"                    } else if (commands[i].startsWith(\"to \")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leewaikin19"},"content":"                        to \u003d commands[i].replaceFirst(\"to \", \"\").stripTrailing();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leewaikin19"},"content":"                    } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leewaikin19"},"content":"                        description \u003d commands[i].stripTrailing();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leewaikin19"},"content":"                    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leewaikin19"},"content":"                if (userInput.isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println(\"Event description cannot be blank. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"leewaikin19"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"leewaikin19"},"content":"                if (!userInput.contains(\" /from \")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println(\"Event must contain /from field. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"leewaikin19"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"leewaikin19"},"content":"                if (userInput.split(\" /from \")[1].stripTrailing().isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println(\"Event /from field cannot be empty. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"leewaikin19"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"leewaikin19"},"content":"                if (!userInput.contains(\" /to \")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println(\"Event must contain /to field. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"leewaikin19"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"leewaikin19"},"content":"                if (userInput.split(\" /to \")[1].stripTrailing().isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"leewaikin19"},"content":"                    System.out.println(\"Event /to field cannot be empty. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"leewaikin19"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"leewaikin19"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"leewaikin19"},"content":"                Task newItem \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"leewaikin19"},"content":"                items.add(newItem);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"leewaikin19"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newItem ","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"leewaikin19"},"content":"                        + \"\\nNow you have \" + items.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"leewaikin19"},"content":"            } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"leewaikin19"},"content":"                System.out.println(\"Unknown command. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"leewaikin19"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"leewaikin19"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"leewaikin19"},"content":"        scanner.close();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"leewaikin19"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"leewaikin19"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"leewaikin19":138}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leewaikin19"},"content":"public class Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leewaikin19"},"content":"    protected String description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leewaikin19"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leewaikin19"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leewaikin19"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leewaikin19"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leewaikin19"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leewaikin19"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leewaikin19"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leewaikin19"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leewaikin19"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leewaikin19"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leewaikin19"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leewaikin19"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leewaikin19"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leewaikin19"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leewaikin19"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"leewaikin19":17}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leewaikin19"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leewaikin19"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leewaikin19"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leewaikin19"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leewaikin19"},"content":"    ","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leewaikin19"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leewaikin19"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leewaikin19"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leewaikin19"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"leewaikin19":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leewaikin19"},"content":"todo todo 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leewaikin19"},"content":"event event 1 /from from1 /to to1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leewaikin19"},"content":"deadline deadline 1 /by by1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leewaikin19"},"content":"event event 2 /to to 2 /from from 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leewaikin19"},"content":"deadline deadline 2 /by by 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leewaikin19"},"content":"mark 4","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leewaikin19"},"content":"mark 3","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leewaikin19"},"content":"unmark 3","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leewaikin19"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leewaikin19"},"content":"bye","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"leewaikin19":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leewaikin19"},"content":"java -classpath ..\\bin Glados \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"leewaikin19":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leewaikin19"},"content":"java -classpath ../bin Glados \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"leewaikin19":1,"-":37}}]
