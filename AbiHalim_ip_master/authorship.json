[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AbiHalim"},"content":"# iP.AI","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AbiHalim"},"content":"The ChatGPT chat I am using for this project can be accessed at: https://chatgpt.com/share/678f824a-ac2c-8009-98aa-3d963f924adf","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AbiHalim"},"content":"## Week 1:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AbiHalim"},"content":"This week (and probably for the whole project), I used ChatGPT-4o to work on the project. I started by feeding it as much context as I could about the project, and for each task I fed it as much context about each task by copying the instructions from the website. It worked very well overall, the only mistakes I encountered were at the end when trying to implement enumerations, which I had to go in and fix manually. While it probably didn\u0027t save any time for the earlier tasks which were extremely easy, it saved a lot of time in later tasks which involved writing a lot of code (ie. lots of functions along with their full responses)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"AbiHalim":6}},{"path":"src/main/java/joni/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AbiHalim"},"content":"package joni;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AbiHalim"},"content":"enum CommandType {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AbiHalim"},"content":"    BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, UNKNOWN, HELP;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AbiHalim"},"content":"    public static CommandType fromString(String command) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AbiHalim"},"content":"        switch (command.toLowerCase()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AbiHalim"},"content":"        case \"help\": return HELP;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AbiHalim"},"content":"        case \"bye\": return BYE;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AbiHalim"},"content":"        case \"exit\": return BYE;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AbiHalim"},"content":"        case \"list\": return LIST;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AbiHalim"},"content":"        case \"mark\": return MARK;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AbiHalim"},"content":"        case \"unmark\": return UNMARK;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AbiHalim"},"content":"        case \"todo\": return TODO;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AbiHalim"},"content":"        case \"deadline\": return DEADLINE;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AbiHalim"},"content":"        case \"event\": return EVENT;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AbiHalim"},"content":"        case \"delete\": return DELETE;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AbiHalim"},"content":"        default: return UNKNOWN;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AbiHalim"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"AbiHalim":21}},{"path":"src/main/java/joni/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AbiHalim"},"content":"package joni;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AbiHalim"},"content":"class Deadline extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AbiHalim"},"content":"    protected String by;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AbiHalim"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AbiHalim"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AbiHalim"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AbiHalim"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AbiHalim"},"content":"        super(description, TaskType.DEADLINE, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AbiHalim"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AbiHalim"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AbiHalim"},"content":"    public String toCsvFormat() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AbiHalim"},"content":"        return \"D, \" + (isDone ? \"1\" : \"0\") + \", \" + description + \", \" + by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AbiHalim"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AbiHalim"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AbiHalim"},"content":"        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AbiHalim"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"AbiHalim":25}},{"path":"src/main/java/joni/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AbiHalim"},"content":"package joni;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AbiHalim"},"content":"class Event extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AbiHalim"},"content":"    protected String from;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AbiHalim"},"content":"    protected String to;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AbiHalim"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AbiHalim"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AbiHalim"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AbiHalim"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AbiHalim"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AbiHalim"},"content":"        super(description, TaskType.EVENT, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AbiHalim"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AbiHalim"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AbiHalim"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AbiHalim"},"content":"    public String toCsvFormat() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AbiHalim"},"content":"        return \"E, \" + (isDone ? \"1\" : \"0\") + \", \" + description + \", \" + from + \", \" + to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AbiHalim"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AbiHalim"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AbiHalim"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AbiHalim"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"AbiHalim":28}},{"path":"src/main/java/joni/Joni.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AbiHalim"},"content":"package joni;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AbiHalim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AbiHalim"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AbiHalim"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AbiHalim"},"content":" * Main class for the chatbot.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AbiHalim"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AbiHalim"},"content":"public class Joni {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AbiHalim"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d Storage.loadTasks();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AbiHalim"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AbiHalim"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AbiHalim"},"content":"        String logo \u003d \"    .---.    .-\u0027\u0027\u0027-.                    \\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AbiHalim"},"content":"                \"    |   |   \u0027   _    \\\\                  \\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AbiHalim"},"content":"                \"    \u0027---\u0027 /   /` \u0027.   \\\\    _..._   .--. \\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AbiHalim"},"content":"                \"    .---..   |     \\\\  \u0027  .\u0027     \u0027. |__| \\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AbiHalim"},"content":"                \"    |   ||   \u0027      |  \u0027.   .-.   ..--. \\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AbiHalim"},"content":"                \"    |   |\\\\    \\\\     / / |  \u0027   \u0027  ||  | \\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AbiHalim"},"content":"                \"    |   | `.   ` ..\u0027 /  |  |   |  ||  | \\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AbiHalim"},"content":"                \"    |   |    \u0027-...-\u0027`   |  |   |  ||  | \\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AbiHalim"},"content":"                \"    |   |               |  |   |  ||  | \\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AbiHalim"},"content":"                \"    |   |               |  |   |  ||__| \\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AbiHalim"},"content":"                \" __.\u0027   \u0027               |  |   |  |     \\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AbiHalim"},"content":"                \"|      \u0027                |  |   |  |     \\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AbiHalim"},"content":"                \"|____.\u0027                 \u0027--\u0027   \u0027--\u0027     \\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(logo);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(\" Hello! My name is Joni\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(\" And this is my promise: helping you!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(\" Type \\\"help\\\" for a list of commands.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AbiHalim"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AbiHalim"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AbiHalim"},"content":"        while (isRunning) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AbiHalim"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AbiHalim"},"content":"                String input \u003d sc.nextLine().trim();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AbiHalim"},"content":"                isRunning \u003d processCommand(input);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AbiHalim"},"content":"            } catch (JoniException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AbiHalim"},"content":"                printErrorMessage(e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AbiHalim"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AbiHalim"},"content":"                printErrorMessage(\"Unexpected error occurred. Please try again.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AbiHalim"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AbiHalim"},"content":"        sc.close();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AbiHalim"},"content":"    private static boolean processCommand(String input) throws JoniException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AbiHalim"},"content":"        String[] inputParts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AbiHalim"},"content":"        CommandType command \u003d CommandType.fromString(inputParts[0]);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AbiHalim"},"content":"        switch (command) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AbiHalim"},"content":"        case BYE:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AbiHalim"},"content":"            return false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AbiHalim"},"content":"        case HELP:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" Here are the available commands:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" 1. list - Shows all tasks.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" 2. todo \u003cdescription\u003e - Adds a new todo task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" 3. deadline \u003cdescription\u003e /by \u003cdate/time\u003e - Adds a deadline task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" 4. event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e - Adds an event.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" 5. mark \u003ctask number\u003e - Marks a task as completed.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" 6. unmark \u003ctask number\u003e - Marks a task as not done.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" 7. delete \u003ctask number\u003e - Removes a task.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" 8. help - Displays this help message.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" 9. bye - Exits the chatbot.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AbiHalim"},"content":"            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AbiHalim"},"content":"        case LIST:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AbiHalim"},"content":"            printTaskList();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AbiHalim"},"content":"            break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AbiHalim"},"content":"        case MARK:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AbiHalim"},"content":"            markTaskAsDone(inputParts);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AbiHalim"},"content":"            break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AbiHalim"},"content":"        case UNMARK:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AbiHalim"},"content":"            unmarkTask(inputParts);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AbiHalim"},"content":"            break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AbiHalim"},"content":"        case TODO:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AbiHalim"},"content":"            if (inputParts.length \u003c 2 || inputParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AbiHalim"},"content":"                throw new JoniException(\"Oops! The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AbiHalim"},"content":"                        + \"Tip: Try \u0027todo \u003ctask description\u003e\u0027.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AbiHalim"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AbiHalim"},"content":"            addTodo(inputParts[1].trim());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AbiHalim"},"content":"            break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AbiHalim"},"content":"        case DEADLINE:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AbiHalim"},"content":"            addDeadline(inputParts[1].trim());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AbiHalim"},"content":"            break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AbiHalim"},"content":"        case EVENT:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AbiHalim"},"content":"            addEvent(inputParts[1].trim());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AbiHalim"},"content":"            break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"AbiHalim"},"content":"        case DELETE:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"AbiHalim"},"content":"            deleteTask(inputParts);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"AbiHalim"},"content":"            break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"AbiHalim"},"content":"        default:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"AbiHalim"},"content":"            throw new JoniException(\"Oops! I don\u0027t understand that command.\\n\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"AbiHalim"},"content":"                    + \"Tip: Try \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027, or \u0027delete\u0027.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"AbiHalim"},"content":"        return true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"AbiHalim"},"content":"    private static void addTodo(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"AbiHalim"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"AbiHalim"},"content":"        Storage.saveTasks(tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"AbiHalim"},"content":"        printTaskAdded(tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"AbiHalim"},"content":"    private static void addDeadline(String input) throws JoniException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"AbiHalim"},"content":"        String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"AbiHalim"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"AbiHalim"},"content":"            throw new JoniException(\"Oops! A deadline requires \u0027/by\u0027 followed by a date/time.\\n\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"AbiHalim"},"content":"                    + \"Tip: Try \u0027deadline \u003ctask description\u003e /by \u003cdue date\u003e\u0027.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"AbiHalim"},"content":"        tasks.add(new Deadline(parts[0].trim(), parts[1].trim()));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"AbiHalim"},"content":"        Storage.saveTasks(tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"AbiHalim"},"content":"        printTaskAdded(tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"AbiHalim"},"content":"    private static void addEvent(String input) throws JoniException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"AbiHalim"},"content":"        String[] parts \u003d input.split(\" /from | /to \", 3);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"AbiHalim"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"AbiHalim"},"content":"            throw new JoniException(\"Oops! An event requires \u0027/from\u0027 and \u0027/to\u0027 followed by dates/times.\\n\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"AbiHalim"},"content":"                    + \"Tip: Try \u0027event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\u0027.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"AbiHalim"},"content":"        tasks.add(new Event(parts[0].trim(), parts[1].trim(), parts[2].trim()));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"AbiHalim"},"content":"        Storage.saveTasks(tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"AbiHalim"},"content":"        printTaskAdded(tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"AbiHalim"},"content":"    private static void markTaskAsDone(String[] inputParts) throws JoniException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"AbiHalim"},"content":"        if (inputParts.length \u003c 2) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"AbiHalim"},"content":"            throw new JoniException(\"Invalid command! Use \u0027mark \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"AbiHalim"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"AbiHalim"},"content":"            int index \u003d Integer.parseInt(inputParts[1]) - 1;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"AbiHalim"},"content":"            tasks.get(index).markAsDone();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"AbiHalim"},"content":"            Storage.saveTasks(tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\"   \" + tasks.get(index));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"AbiHalim"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"AbiHalim"},"content":"            throw new JoniException(\"Invalid task number! Use \u0027mark \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"AbiHalim"},"content":"    private static void deleteTask(String[] inputParts) throws JoniException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"AbiHalim"},"content":"        if (inputParts.length \u003c 2) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"AbiHalim"},"content":"            throw new JoniException(\"Invalid command! Use \u0027delete \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"AbiHalim"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"AbiHalim"},"content":"            int index \u003d Integer.parseInt(inputParts[1]) - 1;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"AbiHalim"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"AbiHalim"},"content":"                throw new JoniException(\"Invalid task number! Use \u0027delete \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"AbiHalim"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"AbiHalim"},"content":"            Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"AbiHalim"},"content":"            Storage.saveTasks(tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\"   \" + removedTask);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"AbiHalim"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"AbiHalim"},"content":"            throw new JoniException(\"Invalid task number! Use \u0027delete \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"AbiHalim"},"content":"    private static void printTaskAdded(Task task) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"AbiHalim"},"content":"    private static void printTaskList() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"AbiHalim"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" No tasks added yet.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"AbiHalim"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"AbiHalim"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"AbiHalim"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"AbiHalim"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"AbiHalim"},"content":"    private static void unmarkTask(String[] inputParts) throws JoniException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"AbiHalim"},"content":"        if (inputParts.length \u003c 2) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"AbiHalim"},"content":"            throw new JoniException(\"Invalid command! Use \u0027unmark \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"AbiHalim"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"AbiHalim"},"content":"            int index \u003d Integer.parseInt(inputParts[1]) - 1;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"AbiHalim"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"AbiHalim"},"content":"                throw new JoniException(\"Invalid task number! Use \u0027unmark \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"AbiHalim"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"AbiHalim"},"content":"            tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"AbiHalim"},"content":"            Storage.saveTasks(tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\"   \" + tasks.get(index));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"AbiHalim"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"AbiHalim"},"content":"            throw new JoniException(\"Invalid task number! Use \u0027unmark \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"AbiHalim"},"content":"    private static void printErrorMessage(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(\" \" + message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"AbiHalim"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"AbiHalim"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"AbiHalim":219}},{"path":"src/main/java/joni/JoniException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AbiHalim"},"content":"package joni;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AbiHalim"},"content":"public class JoniException extends Exception {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AbiHalim"},"content":"    public JoniException(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AbiHalim"},"content":"        super(message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AbiHalim"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"AbiHalim":7}},{"path":"src/main/java/joni/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AbiHalim"},"content":"package joni;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AbiHalim"},"content":"import java.io.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AbiHalim"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AbiHalim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AbiHalim"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AbiHalim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AbiHalim"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AbiHalim"},"content":"class Storage {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AbiHalim"},"content":"    private static final String DIRECTORY \u003d \"data\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AbiHalim"},"content":"    private static final String FILE_PATH \u003d DIRECTORY + \"/savedata.csv\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AbiHalim"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AbiHalim"},"content":"     * Saves the current list of tasks to savedata.csv.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AbiHalim"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AbiHalim"},"content":"     * @param tasks List of tasks to be saved.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AbiHalim"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AbiHalim"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AbiHalim"},"content":"        ensureFileExists();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AbiHalim"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AbiHalim"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AbiHalim"},"content":"                writer.write(task.toCsvFormat());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AbiHalim"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AbiHalim"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AbiHalim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AbiHalim"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AbiHalim"},"content":"     * Loads tasks from savedata.csv and returns them as a list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AbiHalim"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AbiHalim"},"content":"     * @return List of tasks loaded from file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AbiHalim"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AbiHalim"},"content":"    public static ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AbiHalim"},"content":"        ensureFileExists();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AbiHalim"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AbiHalim"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AbiHalim"},"content":"            String line;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AbiHalim"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AbiHalim"},"content":"                Task task \u003d parseTaskFromCsv(line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AbiHalim"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AbiHalim"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AbiHalim"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AbiHalim"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AbiHalim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AbiHalim"},"content":"        return tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AbiHalim"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AbiHalim"},"content":"     * Ensures the data directory and file exist before reading/writing.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AbiHalim"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AbiHalim"},"content":"    private static void ensureFileExists() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AbiHalim"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AbiHalim"},"content":"            Path directoryPath \u003d Paths.get(DIRECTORY);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AbiHalim"},"content":"            if (!Files.exists(directoryPath)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AbiHalim"},"content":"                Files.createDirectories(directoryPath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AbiHalim"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AbiHalim"},"content":"            Path filePath \u003d Paths.get(FILE_PATH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AbiHalim"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AbiHalim"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AbiHalim"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AbiHalim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\"Error creating data file: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AbiHalim"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AbiHalim"},"content":"     * Parses a CSV line into a Task object.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AbiHalim"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AbiHalim"},"content":"     * @param csvLine The CSV-formatted task entry.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AbiHalim"},"content":"     * @return Task object or null if parsing fails.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AbiHalim"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AbiHalim"},"content":"    private static Task parseTaskFromCsv(String csvLine) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AbiHalim"},"content":"        String[] parts \u003d csvLine.split(\", \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AbiHalim"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AbiHalim"},"content":"            System.out.println(\"Corrupted data detected: \" + csvLine);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AbiHalim"},"content":"            return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AbiHalim"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AbiHalim"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AbiHalim"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AbiHalim"},"content":"        switch (type) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AbiHalim"},"content":"        case \"T\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AbiHalim"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AbiHalim"},"content":"        case \"D\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AbiHalim"},"content":"            if (parts.length \u003c 4) return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AbiHalim"},"content":"            return new Deadline(description, parts[3], isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"AbiHalim"},"content":"        case \"E\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"AbiHalim"},"content":"            if (parts.length \u003c 5) return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"AbiHalim"},"content":"            return new Event(description, parts[3], parts[4], isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"AbiHalim"},"content":"        default:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"AbiHalim"},"content":"            return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"AbiHalim"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"AbiHalim"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"AbiHalim":104}},{"path":"src/main/java/joni/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AbiHalim"},"content":"package joni;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AbiHalim"},"content":"abstract class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AbiHalim"},"content":"    protected String description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AbiHalim"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AbiHalim"},"content":"    protected TaskType taskType;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AbiHalim"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AbiHalim"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AbiHalim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AbiHalim"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AbiHalim"},"content":"    public Task(String description, TaskType taskType, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AbiHalim"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AbiHalim"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AbiHalim"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AbiHalim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AbiHalim"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AbiHalim"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AbiHalim"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AbiHalim"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AbiHalim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AbiHalim"},"content":"    public abstract String toCsvFormat();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AbiHalim"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AbiHalim"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AbiHalim"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AbiHalim"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"AbiHalim":38}},{"path":"src/main/java/joni/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AbiHalim"},"content":"package joni;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AbiHalim"},"content":"enum TaskType {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AbiHalim"},"content":"    TODO, DEADLINE, EVENT;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AbiHalim"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"AbiHalim":5}},{"path":"src/main/java/joni/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AbiHalim"},"content":"package joni;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AbiHalim"},"content":"class Todo extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AbiHalim"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AbiHalim"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AbiHalim"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AbiHalim"},"content":"        super(description, TaskType.TODO, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AbiHalim"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AbiHalim"},"content":"    public String toCsvFormat() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AbiHalim"},"content":"        return \"T, \" + (isDone ? \"1\" : \"0\") + \", \" + description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AbiHalim"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AbiHalim"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AbiHalim"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AbiHalim"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AbiHalim"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AbiHalim"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"AbiHalim":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AbiHalim"},"content":"todo read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AbiHalim"},"content":"todo","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AbiHalim"},"content":"deadline submit report /by Monday","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AbiHalim"},"content":"deadline assignment","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AbiHalim"},"content":"event project meeting /from Tue 2pm /to 4pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AbiHalim"},"content":"event workshop /from Wed","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AbiHalim"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AbiHalim"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AbiHalim"},"content":"mark 5","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AbiHalim"},"content":"unmark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AbiHalim"},"content":"unmark 3","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AbiHalim"},"content":"delete 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AbiHalim"},"content":"delete 5","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AbiHalim"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AbiHalim"},"content":"todo go jogging","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AbiHalim"},"content":"deadline complete project /by Friday","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AbiHalim"},"content":"event hackathon /from Sat 10am /to Sun 5pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AbiHalim"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AbiHalim"},"content":"blah blah","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AbiHalim"},"content":"delete abc","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AbiHalim"},"content":"mark 100","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AbiHalim"},"content":"unmark -1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AbiHalim"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"AbiHalim":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AbiHalim"},"content":"java -classpath ../bin Joni \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"AbiHalim":1,"-":37}}]
