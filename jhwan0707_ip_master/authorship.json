[{"path":"data/johan.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jhwan0707"},"content":"E | 0 | project meeting | 2/12/2019 | 9/12/2019","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"jhwan0707":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhwan0707"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jhwan0707"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jhwan0707"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jhwan0707"},"content":"    protected LocalDate by;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jhwan0707"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jhwan0707"},"content":"        super(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jhwan0707"},"content":"        // this.by \u003d by;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jhwan0707"},"content":"        // DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jhwan0707"},"content":"        this.by \u003d parseDate(by);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jhwan0707"},"content":"    private static LocalDate parseDate(String dateString) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jhwan0707"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jhwan0707"},"content":"            DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\").withLocale(java.util.Locale.ENGLISH);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jhwan0707"},"content":"            return LocalDate.parse(dateString.trim(), formatter1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jhwan0707"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jhwan0707"},"content":"            DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\").withLocale(java.util.Locale.ENGLISH);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jhwan0707"},"content":"            return LocalDate.parse(dateString.trim(), formatter2);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jhwan0707"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jhwan0707"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jhwan0707"},"content":"    public String toString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jhwan0707"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jhwan0707"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jhwan0707"},"content":"        return by;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jhwan0707"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"jhwan0707":33}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhwan0707"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jhwan0707"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jhwan0707"},"content":"import java.util.Date;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jhwan0707"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jhwan0707"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jhwan0707"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jhwan0707"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jhwan0707"},"content":"        super(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jhwan0707"},"content":"        // DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jhwan0707"},"content":"        // this.startDate \u003d LocalDate.parse(startDate, inputFormatter);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jhwan0707"},"content":"        // this.endDate \u003d LocalDate.parse(endDate, inputFormatter);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jhwan0707"},"content":"        this.startDate \u003d parseDate(startDate);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jhwan0707"},"content":"        this.endDate \u003d parseDate(endDate);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jhwan0707"},"content":"    private static LocalDate parseDate(String dateString) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jhwan0707"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jhwan0707"},"content":"            DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\").withLocale(java.util.Locale.ENGLISH);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jhwan0707"},"content":"            return LocalDate.parse(dateString.trim(), formatter1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jhwan0707"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jhwan0707"},"content":"            DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\").withLocale(java.util.Locale.ENGLISH);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jhwan0707"},"content":"            return LocalDate.parse(dateString.trim(), formatter2);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jhwan0707"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jhwan0707"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jhwan0707"},"content":"    public String toString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jhwan0707"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jhwan0707"},"content":"                \" (from: \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jhwan0707"},"content":"                \" to: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jhwan0707"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jhwan0707"},"content":"        return startDate;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jhwan0707"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jhwan0707"},"content":"        return endDate;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jhwan0707"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"jhwan0707":43}},{"path":"src/main/java/Johan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhwan0707"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jhwan0707"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jhwan0707"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jhwan0707"},"content":"import java.util.Date;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jhwan0707"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jhwan0707"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jhwan0707"},"content":"public class Johan {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jhwan0707"},"content":"    private static final String FILE_PATH \u003d \"./data/johan.txt\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jhwan0707"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jhwan0707"},"content":"    private static Storage storage;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jhwan0707"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jhwan0707"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jhwan0707"},"content":"        tasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jhwan0707"},"content":"        String input;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jhwan0707"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jhwan0707"},"content":"        System.out.println(\"Hello! I\u0027m Johan\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jhwan0707"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jhwan0707"},"content":"        // Task[] tasks \u003d new Task[100];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jhwan0707"},"content":"        // ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jhwan0707"},"content":"        // int taskCount \u003d 0;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jhwan0707"},"content":"        while (true) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jhwan0707"},"content":"            input \u003d scanner.nextLine().toLowerCase().trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jhwan0707"},"content":"            // String[] words \u003d input.split(\"\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jhwan0707"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jhwan0707"},"content":"                break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jhwan0707"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jhwan0707"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jhwan0707"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jhwan0707"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jhwan0707"},"content":"            } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jhwan0707"},"content":"                String taskID \u003d input.substring(5);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jhwan0707"},"content":"                int id \u003d Integer.parseInt(taskID);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jhwan0707"},"content":"                if (id \u003e 0 \u0026\u0026 id \u003c\u003d tasks.size()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jhwan0707"},"content":"                    tasks.get(id - 1).markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(tasks.get(id - 1).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jhwan0707"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jhwan0707"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jhwan0707"},"content":"            } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jhwan0707"},"content":"                String taskID \u003d input.substring(7);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jhwan0707"},"content":"                int id \u003d Integer.parseInt(taskID);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jhwan0707"},"content":"                if (id \u003e 0 \u0026\u0026 id \u003c\u003d tasks.size()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jhwan0707"},"content":"                    tasks.get(id - 1).markAsNotDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(tasks.get(id - 1).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jhwan0707"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jhwan0707"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jhwan0707"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jhwan0707"},"content":"                String description \u003d input.substring(4).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jhwan0707"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\" OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jhwan0707"},"content":"                } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jhwan0707"},"content":"                    tasks.add(new Todo(description));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jhwan0707"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jhwan0707"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jhwan0707"},"content":"                // tasks[taskCount++] \u003d new Todo(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jhwan0707"},"content":"                // System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jhwan0707"},"content":"                // System.out.println(tasks[taskCount - 1].toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jhwan0707"},"content":"                // System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jhwan0707"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jhwan0707"},"content":"                int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jhwan0707"},"content":"                if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\" OOPS!!! Please specify a deadline with /by in d/M/yyyy format (e.g., 2/12/2019).\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jhwan0707"},"content":"                    continue;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jhwan0707"},"content":"                }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jhwan0707"},"content":"                String description \u003d input.substring(9, byIndex).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jhwan0707"},"content":"                String by \u003d input.substring(byIndex + 4);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jhwan0707"},"content":"                try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jhwan0707"},"content":"                    // DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jhwan0707"},"content":"                    // LocalDate dateTime \u003d LocalDate.parse(by, inputFormatter);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jhwan0707"},"content":"                    tasks.add(new Deadline(description, by));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jhwan0707"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jhwan0707"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\" OOPS!!! Invalid date format. Use d/M/yyyy (e.g., 2/12/2019).\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jhwan0707"},"content":"                }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jhwan0707"},"content":"                // by \u003d by.substring(0, 1).toUpperCase() + by.substring(1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jhwan0707"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jhwan0707"},"content":"                int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jhwan0707"},"content":"                int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jhwan0707"},"content":"                if (fromIndex \u003d\u003d -1 \u0026\u0026 toIndex \u003d\u003d -1) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\" OOPS!!! Please specify start and end times with /from and /to in d/M/yyyy format (e.g., 2/12/2019).\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jhwan0707"},"content":"                    continue;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jhwan0707"},"content":"                }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jhwan0707"},"content":"                String description \u003d input.substring(6, fromIndex).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jhwan0707"},"content":"                String startDate \u003d input.substring(fromIndex + 6, toIndex).trim();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jhwan0707"},"content":"                // startDate \u003d startDate.substring(0, 1).toUpperCase() + startDate.substring(1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jhwan0707"},"content":"                // String endDate \u003d input.substring(toIndex + 3).trim();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jhwan0707"},"content":"                String endDate \u003d input.substring(toIndex + 4).trim();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jhwan0707"},"content":"                // endDate \u003d endDate.substring(0, 1).toUpperCase() + endDate.substring(1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jhwan0707"},"content":"                try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jhwan0707"},"content":"                    // DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jhwan0707"},"content":"                    // System.out.println(\"Parsing date: \" + startDate + \" to \" + endDate); // Debug","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jhwan0707"},"content":"                    // LocalDate dateTime \u003d LocalDate.parse(startDate, inputFormatter);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jhwan0707"},"content":"                    // LocalDate endDateTime \u003d LocalDate.parse(endDate, inputFormatter);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jhwan0707"},"content":"                    LocalDate dateTime \u003d parseDate(startDate);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jhwan0707"},"content":"                    LocalDate endDateTime \u003d parseDate(startDate);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jhwan0707"},"content":"                    tasks.add(new Event(description, startDate, endDate));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jhwan0707"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jhwan0707"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\" OOPS!!! Invalid date format. Use d/M/yyyy (e.g., 2/12/2019).\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jhwan0707"},"content":"                }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jhwan0707"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jhwan0707"},"content":"                String taskID \u003d input.substring(7);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jhwan0707"},"content":"                int id \u003d Integer.parseInt(taskID);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jhwan0707"},"content":"                if (id \u003e 0 \u0026\u0026 id \u003c\u003d tasks.size()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jhwan0707"},"content":"                    Task removedTask \u003d tasks.remove(id - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(removedTask.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jhwan0707"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jhwan0707"},"content":"                } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\" OOPS!!! The task ID is invalid.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jhwan0707"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jhwan0707"},"content":"            } else if (input.startsWith(\"on \")) { // fix this, showing everything despite not being on the right date","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jhwan0707"},"content":"                String dateStr \u003d input.substring(3).trim();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jhwan0707"},"content":"                try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jhwan0707"},"content":"                    // DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jhwan0707"},"content":"                    // LocalDate targetDate \u003d LocalDate.parse(dateStr, dateFormatter);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jhwan0707"},"content":"                    LocalDate targetDate \u003d parseDate(dateStr);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"Tasks on \" + targetDate.format(DateTimeFormatter.ofPattern(\"d/MM/yyyy\")) + \":\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jhwan0707"},"content":"                    boolean found \u003d false;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jhwan0707"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jhwan0707"},"content":"                        Task task \u003d tasks.get(i);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jhwan0707"},"content":"                        if (task instanceof Deadline) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jhwan0707"},"content":"                            LocalDate deadline \u003d ((Deadline) task).getBy();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jhwan0707"},"content":"                            if (deadline !\u003d null \u0026\u0026 deadline.equals(targetDate)) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jhwan0707"},"content":"                                System.out.println((i + 1) + \".\" + task.toString());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jhwan0707"},"content":"                                found \u003d true;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jhwan0707"},"content":"                            }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jhwan0707"},"content":"                        } else if (task instanceof Event) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jhwan0707"},"content":"                            LocalDate startDate \u003d ((Event) task).getStartDate();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jhwan0707"},"content":"                            LocalDate endDate \u003d ((Event) task).getEndDate();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jhwan0707"},"content":"                            if (startDate !\u003d null \u0026\u0026 endDate !\u003d null) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jhwan0707"},"content":"                                if (!startDate.isAfter(targetDate) \u0026\u0026 !endDate.isBefore(targetDate)) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jhwan0707"},"content":"                                    System.out.println((i + 1) + \".\" + task.toString());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jhwan0707"},"content":"                                    found \u003d true;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jhwan0707"},"content":"                                }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jhwan0707"},"content":"                            }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jhwan0707"},"content":"                        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jhwan0707"},"content":"                    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jhwan0707"},"content":"                    if (!found) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jhwan0707"},"content":"                        System.out.println(\"No tasks found on this date.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jhwan0707"},"content":"                    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jhwan0707"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\" OOPS!!! Invalid date format. Use d/M/yyyy (e.g., 2/12/2019).\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jhwan0707"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jhwan0707"},"content":"                }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jhwan0707"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jhwan0707"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jhwan0707"},"content":"                System.out.println(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jhwan0707"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jhwan0707"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jhwan0707"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jhwan0707"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jhwan0707"},"content":"    private static LocalDate parseDate(String dateStr) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jhwan0707"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jhwan0707"},"content":"            DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\").withLocale(java.util.Locale.ENGLISH);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jhwan0707"},"content":"            return LocalDate.parse(dateStr.trim(), formatter1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jhwan0707"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jhwan0707"},"content":"            DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\").withLocale(java.util.Locale.ENGLISH);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jhwan0707"},"content":"            return LocalDate.parse(dateStr.trim(), formatter2);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jhwan0707"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jhwan0707"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"jhwan0707":194}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhwan0707"},"content":"import java.io.*;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jhwan0707"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jhwan0707"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jhwan0707"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jhwan0707"},"content":"import java.util.Date;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jhwan0707"},"content":"public class Storage {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jhwan0707"},"content":"    private final String filePath;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jhwan0707"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jhwan0707"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jhwan0707"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jhwan0707"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jhwan0707"},"content":"        File directory \u003d new File(file.getParent());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jhwan0707"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jhwan0707"},"content":"            directory.mkdirs(); // Ensure directory exists","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jhwan0707"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jhwan0707"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jhwan0707"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jhwan0707"},"content":"                writer.write(formatTaskForSaving(task));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jhwan0707"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jhwan0707"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jhwan0707"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jhwan0707"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jhwan0707"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jhwan0707"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jhwan0707"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jhwan0707"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jhwan0707"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jhwan0707"},"content":"            System.out.println(\"No saved tasks found. Starting fresh.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jhwan0707"},"content":"            return tasks;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jhwan0707"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jhwan0707"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jhwan0707"},"content":"            String line;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jhwan0707"},"content":"            // DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jhwan0707"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jhwan0707"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jhwan0707"},"content":"                if (parts.length \u003c 3) continue;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jhwan0707"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jhwan0707"},"content":"                boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jhwan0707"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jhwan0707"},"content":"                Task task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jhwan0707"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jhwan0707"},"content":"                    task \u003d new Todo(description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jhwan0707"},"content":"                } else if (type.equals(\"D\") \u0026\u0026 parts.length \u003d\u003d 4) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jhwan0707"},"content":"                    try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jhwan0707"},"content":"                        // LocalDate deadline \u003d LocalDate.parse(parts[3], inputFormatter);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jhwan0707"},"content":"                        task \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jhwan0707"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jhwan0707"},"content":"                        System.out.println(\"Error parsing deadline for task: \" + description + \". Skipping...\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jhwan0707"},"content":"                        continue;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jhwan0707"},"content":"                    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jhwan0707"},"content":"                } else if (type.equals(\"E\") \u0026\u0026 parts.length \u003d\u003d 5) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jhwan0707"},"content":"                    try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jhwan0707"},"content":"                        // LocalDate from \u003d LocalDate.parse(parts[3], inputFormatter);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jhwan0707"},"content":"                        // LocalDate to \u003d LocalDate.parse(parts[4], inputFormatter);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jhwan0707"},"content":"                        task \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jhwan0707"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jhwan0707"},"content":"                        System.out.println(\"Error parsing deadline for task: \" + description + \". Skipping...\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jhwan0707"},"content":"                        continue;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jhwan0707"},"content":"                    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jhwan0707"},"content":"                } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jhwan0707"},"content":"                    continue; // Ignore invalid entries","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jhwan0707"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jhwan0707"},"content":"                if (isDone) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jhwan0707"},"content":"                    task.markAsDone();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jhwan0707"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jhwan0707"},"content":"                tasks.add(task);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jhwan0707"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jhwan0707"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jhwan0707"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jhwan0707"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jhwan0707"},"content":"        return tasks;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jhwan0707"},"content":"    private String formatTaskForSaving(Task task) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jhwan0707"},"content":"        String type;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jhwan0707"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jhwan0707"},"content":"            type \u003d \"T\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jhwan0707"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jhwan0707"},"content":"            type \u003d \"D\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jhwan0707"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jhwan0707"},"content":"            type \u003d \"E\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jhwan0707"},"content":"        } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jhwan0707"},"content":"            return \"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jhwan0707"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jhwan0707"},"content":"        String status \u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jhwan0707"},"content":"        String description \u003d task.description;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jhwan0707"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jhwan0707"},"content":"            LocalDate deadline \u003d ((Deadline) task).getBy();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jhwan0707"},"content":"            return type + \" | \" + status + \" | \" + description + \" | \" + deadline.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jhwan0707"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jhwan0707"},"content":"            LocalDate startDate \u003d ((Event) task).getStartDate();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jhwan0707"},"content":"            LocalDate endDate \u003d ((Event) task).getEndDate();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jhwan0707"},"content":"            return type + \" | \" + status + \" | \" + description + \" | \" + startDate.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\")) + \" | \" + endDate.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jhwan0707"},"content":"        } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jhwan0707"},"content":"            return type + \" | \" + status + \" | \" + description;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jhwan0707"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jhwan0707"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"jhwan0707":115}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhwan0707"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jhwan0707"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jhwan0707"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jhwan0707"},"content":"    protected String description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jhwan0707"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jhwan0707"},"content":"    private static int nextTaskID \u003d 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jhwan0707"},"content":"    private final int ID;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jhwan0707"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jhwan0707"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jhwan0707"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jhwan0707"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jhwan0707"},"content":"        this.ID \u003d nextTaskID++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jhwan0707"},"content":"        this.deadline \u003d null;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jhwan0707"},"content":"    public String getID() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jhwan0707"},"content":"        return Integer.toString(this.ID);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jhwan0707"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jhwan0707"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jhwan0707"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jhwan0707"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jhwan0707"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jhwan0707"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jhwan0707"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jhwan0707"},"content":"        return deadline;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jhwan0707"},"content":"    public void setDeadline(LocalDate deadline) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jhwan0707"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jhwan0707"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jhwan0707"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jhwan0707"},"content":"        String baseString \u003d \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jhwan0707"},"content":"        if (deadline !\u003d null) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jhwan0707"},"content":"            baseString +\u003d \"(by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jhwan0707"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jhwan0707"},"content":"        return baseString;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jhwan0707"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"jhwan0707":50}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhwan0707"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jhwan0707"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jhwan0707"},"content":"        super(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jhwan0707"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jhwan0707"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jhwan0707"},"content":"    public String toString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jhwan0707"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jhwan0707"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jhwan0707"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"jhwan0707":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jhwan0707"},"content":"java -classpath ../bin Johan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jhwan0707":1,"-":37}}]
