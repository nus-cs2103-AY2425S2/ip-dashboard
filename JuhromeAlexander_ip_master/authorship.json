[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"checkstyle {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"    mainClass.set(\"donezo.Donezo\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"    archiveBaseName \u003d \"donezo\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":7,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"# Donezo User Guide","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":1,"-":29}},{"path":"src/main/java/donezo/Donezo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.commands.DeadlineCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.commands.DeleteCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.commands.EventCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.commands.FindCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.commands.ListCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.commands.MarkCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.commands.TodoCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.commands.UnmarkCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.exceptions.DonezoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.parser.Parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":" * The Donezo class represents a command-line task manager application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":" * It provides functionality to manage a user\u0027s task list, including adding,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":" * marking, unmarking, deleting tasks, and listing current tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"public class Donezo {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"        Donezo donezo \u003d new Donezo();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"            donezo.run();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"        } catch (DonezoException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"            System.out.println(e);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"     * Executes the primary workflow of the application. This method initializes key components","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"     * required for the application\u0027s operations, including the user interface (UI), storage,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"     * task list, and command parser. The main loop manages user inputs and delegates actions","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"     * to the appropriate commands, enabling tasks to be listed, marked/unmarked, added, or deleted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"     * The workflow continues until the user inputs \"bye\", at which point the application","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"     * terminates gracefully by closing resources and displaying an exit message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"     * Commands are classified into task-related operations such as \"list\", \"mark\", \"unmark\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"     * \"delete\", \"deadline\", \"event\", and \"todo\". Each command processes user input for the","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JuhromeAlexander"},"content":"     * corresponding task operation. Unrecognized commands prompt the user to enter a valid command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JuhromeAlexander"},"content":"     * A DonezoException may be thrown for invalid operations, particularly during task additions","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JuhromeAlexander"},"content":"     * (deadline, event, todo) or task deletions. Exception messages are displayed to the user as part","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JuhromeAlexander"},"content":"     * of handling these errors.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JuhromeAlexander"},"content":"     * @throws DonezoException if an error occurs while loading the task list from the file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JuhromeAlexander"},"content":"     *     or during specific command executions that involve invalid task operations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JuhromeAlexander"},"content":"    private void run() throws DonezoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JuhromeAlexander"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JuhromeAlexander"},"content":"        Storage storageActual \u003d new Storage(\"tasks.txt\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JuhromeAlexander"},"content":"        TaskList taskListActual \u003d storageActual.loadFromFile();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JuhromeAlexander"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JuhromeAlexander"},"content":"        int numTasks \u003d taskListActual.getSizeTaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(ui.greetUser());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JuhromeAlexander"},"content":"        String userInput \u003d ui.nextLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JuhromeAlexander"},"content":"        ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JuhromeAlexander"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JuhromeAlexander"},"content":"            String taskType \u003d parser.parseCommand(userInput);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JuhromeAlexander"},"content":"            switch (taskType.toLowerCase()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JuhromeAlexander"},"content":"            case \"list\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JuhromeAlexander"},"content":"                ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JuhromeAlexander"},"content":"                listCommand.executeCommand(userInput, taskListActual);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JuhromeAlexander"},"content":"                userInput \u003d ui.nextLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JuhromeAlexander"},"content":"                break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JuhromeAlexander"},"content":"            ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JuhromeAlexander"},"content":"            case \"mark\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JuhromeAlexander"},"content":"                MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JuhromeAlexander"},"content":"                markCommand.executeCommand(userInput, taskListActual);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JuhromeAlexander"},"content":"                userInput \u003d ui.nextLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JuhromeAlexander"},"content":"                break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JuhromeAlexander"},"content":"            ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JuhromeAlexander"},"content":"            case \"unmark\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JuhromeAlexander"},"content":"                UnmarkCommand unmarkCommand \u003d new UnmarkCommand();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JuhromeAlexander"},"content":"                unmarkCommand.executeCommand(userInput, taskListActual);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JuhromeAlexander"},"content":"                userInput \u003d ui.nextLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JuhromeAlexander"},"content":"                break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JuhromeAlexander"},"content":"            case \"delete\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JuhromeAlexander"},"content":"                DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JuhromeAlexander"},"content":"                try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JuhromeAlexander"},"content":"                    deleteCommand.executeCommand(userInput, taskListActual);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JuhromeAlexander"},"content":"                    numTasks--;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JuhromeAlexander"},"content":"                    ui.printNumTasks(numTasks);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JuhromeAlexander"},"content":"                } catch (DonezoException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JuhromeAlexander"},"content":"                    ui.printDonezoExceptionMessage(e);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JuhromeAlexander"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JuhromeAlexander"},"content":"                userInput \u003d ui.nextLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JuhromeAlexander"},"content":"                break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JuhromeAlexander"},"content":"            ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JuhromeAlexander"},"content":"            case \"deadline\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JuhromeAlexander"},"content":"                DeadlineCommand deadlineCommand \u003d new DeadlineCommand();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JuhromeAlexander"},"content":"                try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JuhromeAlexander"},"content":"                    deadlineCommand.executeCommand(userInput, taskListActual);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JuhromeAlexander"},"content":"                    numTasks++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JuhromeAlexander"},"content":"                    ui.printNumTasks(numTasks);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JuhromeAlexander"},"content":"                } catch (DonezoException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JuhromeAlexander"},"content":"                    ui.printDonezoExceptionMessage(e);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JuhromeAlexander"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JuhromeAlexander"},"content":"                userInput \u003d ui.nextLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JuhromeAlexander"},"content":"                break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JuhromeAlexander"},"content":"            ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JuhromeAlexander"},"content":"            case \"event\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JuhromeAlexander"},"content":"                EventCommand eventCommand \u003d new EventCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JuhromeAlexander"},"content":"                try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JuhromeAlexander"},"content":"                    eventCommand.executeCommand(userInput, taskListActual);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JuhromeAlexander"},"content":"                    numTasks++;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JuhromeAlexander"},"content":"                    ui.printNumTasks(numTasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JuhromeAlexander"},"content":"                } catch (DonezoException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JuhromeAlexander"},"content":"                    ui.printDonezoExceptionMessage(e);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JuhromeAlexander"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JuhromeAlexander"},"content":"                userInput \u003d ui.nextLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JuhromeAlexander"},"content":"                break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JuhromeAlexander"},"content":"            case \"todo\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JuhromeAlexander"},"content":"                TodoCommand todoCommand \u003d new TodoCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JuhromeAlexander"},"content":"                try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JuhromeAlexander"},"content":"                    todoCommand.executeCommand(userInput, taskListActual);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JuhromeAlexander"},"content":"                    numTasks++;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JuhromeAlexander"},"content":"                    ui.printNumTasks(numTasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JuhromeAlexander"},"content":"                } catch (DonezoException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JuhromeAlexander"},"content":"                    ui.printDonezoExceptionMessage(e);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JuhromeAlexander"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JuhromeAlexander"},"content":"                userInput \u003d ui.nextLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JuhromeAlexander"},"content":"                break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JuhromeAlexander"},"content":"            case \"find\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JuhromeAlexander"},"content":"                FindCommand findCommand \u003d new FindCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JuhromeAlexander"},"content":"                try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JuhromeAlexander"},"content":"                    findCommand.executeCommand(userInput, taskListActual);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JuhromeAlexander"},"content":"                } catch (DonezoException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JuhromeAlexander"},"content":"                    ui.printDonezoExceptionMessage(e);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JuhromeAlexander"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JuhromeAlexander"},"content":"                userInput \u003d ui.nextLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JuhromeAlexander"},"content":"                break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JuhromeAlexander"},"content":"            default:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JuhromeAlexander"},"content":"                ui.printTryCommandAgain();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JuhromeAlexander"},"content":"                userInput \u003d ui.nextLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JuhromeAlexander"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(ui.sayBye());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JuhromeAlexander"},"content":"        ui.closeInput();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":149}},{"path":"src/main/java/donezo/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.io.File;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"import java.util.List;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.exceptions.DonezoException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.parser.Parser;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":" * The Storage class handles reading from and writing to a file to persist task data between sessions.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"public class Storage {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"    //private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"    private String filePath;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"    private TaskList taskListActual;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"     * Constructs a Storage object with a specified filename.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param fileName The name of the file used for storing tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"        filePath \u003d \"data/\" + fileName;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"        taskListActual \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"    public String getFilePath() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"        return this.filePath;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"        return this.taskListActual;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JuhromeAlexander"},"content":"     * Appends a line of text to the specified file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param filePath  The file path where the text should be written.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param lineToAdd The text to add to the file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JuhromeAlexander"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JuhromeAlexander"},"content":"    public void writeToFile(String filePath, String lineToAdd) throws IOException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JuhromeAlexander"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(filePath, true)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JuhromeAlexander"},"content":"            fileWriter.write(lineToAdd + \"\\n\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JuhromeAlexander"},"content":"     * Deletes and rewrites the file with the current tasks in the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param filePath  The file path to overwrite.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param taskList  The TaskList containing the tasks to save.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JuhromeAlexander"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JuhromeAlexander"},"content":"    public void deleteFromFile(String filePath, TaskList taskList) throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JuhromeAlexander"},"content":"        File tempFile \u003d new File(\"data/tempFile.txt\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JuhromeAlexander"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(\"data/tempFile.txt\", true)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JuhromeAlexander"},"content":"            ","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JuhromeAlexander"},"content":"            for (int i \u003d 0; i \u003c taskList.getSizeTaskList(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JuhromeAlexander"},"content":"                String line \u003d taskList.getTask(i).toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JuhromeAlexander"},"content":"                fileWriter.write(line + \"\\n\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JuhromeAlexander"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JuhromeAlexander"},"content":"        Files.delete(Paths.get(filePath));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JuhromeAlexander"},"content":"        File actualFile \u003d new File(filePath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JuhromeAlexander"},"content":"        tempFile.renameTo(actualFile);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JuhromeAlexander"},"content":"        ","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JuhromeAlexander"},"content":"     * Loads tasks from the file and populates the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return The TaskList containing loaded tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JuhromeAlexander"},"content":"     * @throws DonezoException If there is an error reading the file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JuhromeAlexander"},"content":"    public TaskList loadFromFile() throws DonezoException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JuhromeAlexander"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JuhromeAlexander"},"content":"            checkFileExist();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JuhromeAlexander"},"content":"            List\u003cString\u003e tasks \u003d Files.readAllLines(Paths.get(this.filePath));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JuhromeAlexander"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JuhromeAlexander"},"content":"                String line \u003d tasks.get(i);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JuhromeAlexander"},"content":"                Parser.parseStorageLine(line, this);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JuhromeAlexander"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JuhromeAlexander"},"content":"            return taskListActual;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JuhromeAlexander"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(\"Oops boss, can\u0027t read from the existing file. Data may be lost!\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JuhromeAlexander"},"content":"     * Ensures the storage file and its parent directory exist.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JuhromeAlexander"},"content":"     * If they do not exist, they are created.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JuhromeAlexander"},"content":"     * @throws IOException If an error occurs while creating the file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JuhromeAlexander"},"content":"    private void checkFileExist() throws IOException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JuhromeAlexander"},"content":"        File expectedFile \u003d new File(getFilePath());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JuhromeAlexander"},"content":"        File expectedFolder \u003d expectedFile.getParentFile();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JuhromeAlexander"},"content":"        if (!expectedFolder.exists()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JuhromeAlexander"},"content":"            expectedFolder.mkdirs();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JuhromeAlexander"},"content":"        if (!expectedFile.exists()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JuhromeAlexander"},"content":"            expectedFile.createNewFile();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JuhromeAlexander"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JuhromeAlexander"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JuhromeAlexander"},"content":"        taskListActual.addTask(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JuhromeAlexander"},"content":"    ","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":124}},{"path":"src/main/java/donezo/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":" * This class provides functionality to add, remove, and retrieve tasks from the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":" * It also allows for obtaining the total number of tasks in the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"public class TaskList {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"        return taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"    public int getSizeTaskList() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"        return taskList.size();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"    public Task getTask(int ndx) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"        return taskList.get(ndx);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"        taskList.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"    public void removeTask(int ndx) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"        taskList.remove(ndx);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JuhromeAlexander"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JuhromeAlexander"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JuhromeAlexander"},"content":"     * Searches for tasks in the current task list that contain a specific search term","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JuhromeAlexander"},"content":"     * (case-insensitive) in their description and returns a new TaskList containing","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JuhromeAlexander"},"content":"     * the matching tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param searchTerm The term to search for within the task descriptions.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JuhromeAlexander"},"content":"     *                   This search is case-insensitive, meaning \"Task\" and \"task\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JuhromeAlexander"},"content":"     *                   would be treated as equivalent.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return A TaskList containing all tasks that match the specified search term.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JuhromeAlexander"},"content":"     *         If no tasks match, an empty TaskList is returned.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JuhromeAlexander"},"content":"    public TaskList findMatchingTasks(String searchTerm) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JuhromeAlexander"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JuhromeAlexander"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JuhromeAlexander"},"content":"            if (task.getDescription().toLowerCase().contains(searchTerm.toLowerCase())) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JuhromeAlexander"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JuhromeAlexander"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JuhromeAlexander"},"content":"        return matchingTasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":68}},{"path":"src/main/java/donezo/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.exceptions.DonezoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":" * The UI class handles user interactions, including input and output operations.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":" * It provides methods for displaying messages and handling user commands.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"public class UI {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"    private final Scanner input;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"    private final String logo \u003d \" ______   _______  _        _______  _______  _______ \\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"            + \"(  __  \\\\ (  ___  )( (    /|(  ____ \\\\/ ___   )(  ___  )\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"            + \"| (  \\\\  )| (   ) ||  \\\\  ( || (    \\\\/\\\\/   )  || (   ) |\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"            + \"| |   ) || |   | ||   \\\\ | || (__        /   )| |   | |\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"            + \"| |   | || |   | || (\\\\ \\\\) ||  __)      /   / | |   | |\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"            + \"| |   ) || |   | || | \\\\   || (        /   /  | |   | |\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"            + \"| (__/  )| (___) || )  \\\\  || (____/\\\\ /   (_/\\\\| (___) |\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"            + \"(______/ (_______)|/    )_)(_______/(_______/(_______)\\n\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"    public UI() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"        this.input \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"    public String nextLine() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"        return input.nextLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"    public void closeInput() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"        input.close();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"     * Generates a greeting message for the user.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return A greeting message as a String.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"    public String greetUser() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JuhromeAlexander"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JuhromeAlexander"},"content":"        stringBuilder.append(\"Hello from \\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JuhromeAlexander"},"content":"        stringBuilder.append(logo);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JuhromeAlexander"},"content":"        stringBuilder.append(\"\\nWhat can I do for you?\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JuhromeAlexander"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JuhromeAlexander"},"content":"     * Generates a farewell message for the user.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return A farewell message as a String.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JuhromeAlexander"},"content":"    public String sayBye() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JuhromeAlexander"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JuhromeAlexander"},"content":"        stringBuilder.append(\"Peace out. Hope to see you again soon!\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JuhromeAlexander"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JuhromeAlexander"},"content":"    public void markTaskComplete() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(\"Good. This task is now complete\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JuhromeAlexander"},"content":"    public void unmarkTaskComplete() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(\"Really? You need to finish this soon. Marked as Undone\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JuhromeAlexander"},"content":"    public void printNumTasks(int numTasks) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(\"Now you have \" + numTasks + \" tasks in your list.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JuhromeAlexander"},"content":"    public void printDeleteTask(Task task) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(\"Aight boss, I have removed the following task for you:\\n\" + task.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JuhromeAlexander"},"content":"    public void printAddTask(Task task) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(\"Got it. This task has been added to your list:\\n\" + task.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JuhromeAlexander"},"content":"    public void printDonezoExceptionMessage(DonezoException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JuhromeAlexander"},"content":"    public void printUnableToSaveTaskFile() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(\"Unable to save task to file!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JuhromeAlexander"},"content":"    public void printTryCommandAgain() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(\"Sorry boss, can\u0027t help you there. Try another command!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JuhromeAlexander"},"content":"    public void printTaskNotFound() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(\"Hey boss, that task doesn\u0027t exist in your list! Maybe you misspelled it?\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JuhromeAlexander"},"content":"    public void printTaskFound() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(\"Hey boss, here are the tasks that matched your search term:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JuhromeAlexander"},"content":"     * Prints the list of tasks in the given TaskList object. Each task is displayed","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JuhromeAlexander"},"content":"     * with its index in the list, starting from 1, followed by its string representation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JuhromeAlexander"},"content":"     * This method outputs the entire task list to the standard output.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param taskList The TaskList object containing the tasks to be printed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JuhromeAlexander"},"content":"    public void printTaskList(TaskList taskList) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JuhromeAlexander"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JuhromeAlexander"},"content":"        for (int i \u003d 0; i \u003c taskList.getSizeTaskList(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JuhromeAlexander"},"content":"            int indexNum \u003d i + 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JuhromeAlexander"},"content":"            stringBuilder.append(indexNum);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JuhromeAlexander"},"content":"            stringBuilder.append(\". \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JuhromeAlexander"},"content":"            stringBuilder.append(taskList.getTask(i).toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JuhromeAlexander"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(stringBuilder);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JuhromeAlexander"},"content":"    public void genericErrorMsg() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(\"Oooops! Something went wrong!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":121}},{"path":"src/main/java/donezo/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.UI;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.exceptions.DonezoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents an abstract command that can be executed within the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":" * This class serves as a base for specific command implementations,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":" * enforcing a structure for executing commands.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"    protected UI ui \u003d new UI();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"    protected Storage storage \u003d new Storage(\"tasks.txt\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"     * Executes the specified command based on the user\u0027s input and interacts","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"     * with the provided task list. Commands vary depending on their specific","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"     * implementation in subclasses. Each command may modify the task list and","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"     * handle additional behaviors like file storage updates or user feedback.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param userInput the full command input provided by the user","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param taskList the task list containing tasks to be processed or modified","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"     * @throws DonezoException if an error occurs while executing the command,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"     *                         such as invalid input or missing parameters for the command","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"    public abstract void executeCommand(String userInput, TaskList taskList) throws DonezoException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":29}},{"path":"src/main/java/donezo/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.exceptions.DonezoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents a Deadline command that can be executed within the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":" * This class serves as a base for specific command implementations,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"     * Executes the \"deadline\" command by extracting the task description and due date,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"     * creating a Deadline task, and adding it to the given task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param userInput the full command input from the user","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param taskList the task list where the deadline task will be added","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"     * @throws DonezoException if the input is missing the \"/by\" argument, task description or deadline date","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"    public void executeCommand(String userInput, TaskList taskList) throws DonezoException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"        if (!userInput.contains(\"/by\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(\"Hey boss, the \u0027/by\u0027 argument ain\u0027t here. Add it in!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"        String deadlineDescription \u003d","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"                userInput.substring(userInput.indexOf(\"deadline\") + 9, userInput.indexOf(\"/by\")).trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"        if (deadlineDescription.isBlank()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"                    \"Hey boss, I think you\u0027re forgetting the description this deadline is for. Add it in!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"        ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"        String deadlineArgs \u003d userInput.substring(userInput.indexOf(\"/by\") + 4).trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"        if (deadlineArgs.isBlank()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(\"Hey boss, I think you\u0027re forgetting the actual deadline. Add it in!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"        ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JuhromeAlexander"},"content":"        Deadline deadlineTask \u003d new Deadline(deadlineDescription, deadlineArgs);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JuhromeAlexander"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JuhromeAlexander"},"content":"        ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JuhromeAlexander"},"content":"        ui.printAddTask(deadlineTask);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JuhromeAlexander"},"content":"                        ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JuhromeAlexander"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JuhromeAlexander"},"content":"            storage.writeToFile(storage.getFilePath(), deadlineTask.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JuhromeAlexander"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JuhromeAlexander"},"content":"            ui.printUnableToSaveTaskFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":52}},{"path":"src/main/java/donezo/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.exceptions.DonezoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents a Delete command that can be executed within the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":" * This class serves as a base for specific command implementations,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"     * Executes the \"delete\" command by removing a specified task from the task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"     * and updating the task list and file storage accordingly.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"     * Throws an exception if the task index provided is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param userInput the full command input from the user, including the task index to be deleted","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param taskList the task list containing the tasks to be managed","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"     * @throws DonezoException if the task index is invalid or if an error occurs while updating the storage file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"    public void executeCommand(String userInput, TaskList taskList) throws DonezoException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"        int taskNdx \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"        if (taskNdx \u003e taskList.getSizeTaskList()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"                    \"Sorry boss, that task does not exist. Try using \u0027list\u0027 to see the index of the task again!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"        ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"        ui.printDeleteTask(taskList.getTask(taskNdx));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"        taskList.removeTask(taskNdx);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"            storage.deleteFromFile(storage.getFilePath(), taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(\"Whoops unable to delete file!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JuhromeAlexander"},"content":"    ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":42}},{"path":"src/main/java/donezo/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.exceptions.DonezoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Event;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents an Event command that can be executed within the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":" * This class serves as a base for specific command implementations,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"     * Executes the \"event\" command by extracting the task description, the from field and the to field","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"     * creating an Event task, and adding it to the given task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param userInput the full command input from the user","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param taskList the task list where the deadline task will be added","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"     * @throws DonezoException if the input is missing the \"/from\", \"/to\" arguments or its contents and task description","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"    public void executeCommand(String userInput, TaskList taskList) throws DonezoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"        if (!userInput.contains(\"/from\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(\"Hey boss, the \u0027/from\u0027 argument ain\u0027t here. Add it in!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"        if (!userInput.contains(\"/to\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(\"Hey boss, the \u0027/to\u0027 argument ain\u0027t here. Add it in!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"                        ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"        String eventDescription \u003d","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"                userInput.substring(userInput.indexOf(\"event\") + 6, userInput.indexOf(\"/from\")).trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"        if (eventDescription.isBlank()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"                    \"Hey boss, I think you\u0027re forgetting the description this deadline is for. Add it in!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"        ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"        String eventFromArgs \u003d","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"                userInput.substring(userInput.indexOf(\"/from\") + 6, userInput.indexOf(\"/to\")).trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"        if (eventFromArgs.isBlank()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(\"Hey boss, I ain\u0027t no mind reader, add the content for the /from field.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JuhromeAlexander"},"content":"        ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JuhromeAlexander"},"content":"        String eventToArgs \u003d userInput.substring(userInput.indexOf(\"/to\") + 4).trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JuhromeAlexander"},"content":"        if (eventToArgs.isBlank()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(\"Hey boss, I ain\u0027t no mind reader, add the content for the /to field.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JuhromeAlexander"},"content":"        ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JuhromeAlexander"},"content":"        Event eventTask \u003d new Event(eventDescription, eventFromArgs, eventToArgs);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JuhromeAlexander"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JuhromeAlexander"},"content":"        ui.printAddTask(eventTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JuhromeAlexander"},"content":"        ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JuhromeAlexander"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JuhromeAlexander"},"content":"            storage.writeToFile(storage.getFilePath(), eventTask.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JuhromeAlexander"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JuhromeAlexander"},"content":"            ui.printUnableToSaveTaskFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JuhromeAlexander"},"content":"    ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":60}},{"path":"src/main/java/donezo/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.exceptions.DonezoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents a Find command that can be executed within the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":" * This class serves as a base for specific command implementations,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"     * Executes the Find Command. Takes in an instruction from the user, and splits the","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"     * instruction into its search parameter to find all tasks that contains the search","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"     * parameter","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param userInput a string representing the input of the user","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param taskList the list of tasks that will be used by the command","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"    public void executeCommand(String userInput, TaskList taskList) throws DonezoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"        String searchTerm \u003d userInput.substring(4).trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"        if (searchTerm.isBlank()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(\"Hey boss, can\u0027t search if you don\u0027t give me a search term!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"        TaskList matchingTasks \u003d taskList.findMatchingTasks(searchTerm);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"            ui.printTaskNotFound();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"            ui.printTaskFound();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"            ui.printTaskList(matchingTasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":37}},{"path":"src/main/java/donezo/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents a List command that can be executed within the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":" * This class serves as a base for specific command implementations,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"     * Executes the \"list\" command by printing all the tasks in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param userInput the full command input from the user","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param taskList the task list containing the tasks to be printed","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"    public void executeCommand(String userInput, TaskList taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"        ui.printTaskList(taskList);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"    ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":21}},{"path":"src/main/java/donezo/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents a Mark command that can be executed within the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":" * This class serves as a base for specific command implementations,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"     * Executes the \"mark\" command by marking a specified task as complete","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"     * and updating the corresponding task list and file storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param userInput the full command input from the user, including the task index to be marked","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param taskList the task list containing the tasks to be updated","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"    public void executeCommand(String userInput, TaskList taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"        int taskNdx \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"        Task affectedTask \u003d taskList.getTask(taskNdx);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"        affectedTask.setDone(true);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"        ui.markTaskComplete();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(affectedTask.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"            storage.deleteFromFile(storage.getFilePath(), taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"            ui.genericErrorMsg();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"    ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":36}},{"path":"src/main/java/donezo/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.exceptions.DonezoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Todo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents a Todo command that can be executed within the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":" * This class serves as a base for specific command implementations,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"     * Executes the \"todo\" command by extracting a task description from the user input,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"     * creating a Todo task, and adding it to the given task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"     * It also handles storage updates and provides appropriate feedback to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param userInput the full command input from the user, including the task description","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param taskList the task list where the new todo task will be added","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"     * @throws DonezoException if the task description is missing or empty","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"    public void executeCommand(String userInput, TaskList taskList) throws DonezoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"        String todoDesc \u003d userInput.substring(5).trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"        if (todoDesc.isBlank()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"            throw new DonezoException(\"Hey boss, the description for this task can\u0027t be empty!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"        Todo todoTask \u003d new Todo(userInput.substring(5).trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"        ui.printAddTask(todoTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"            storage.writeToFile(storage.getFilePath(), todoTask.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"            ui.printUnableToSaveTaskFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":40}},{"path":"src/main/java/donezo/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents an Unmark command that can be executed within the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":" * This class serves as a base for specific command implementations,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"     * Executes the \"unmark\" command by marking a specified task as incomplete","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"     * and updating the corresponding task list and file storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param userInput the full command input from the user, including the task index to be unmarked","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param taskList the task list containing the tasks to be updated","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"    public void executeCommand(String userInput, TaskList taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"        int taskNdx \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"        Task affectedTask \u003d taskList.getTask(taskNdx);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"        affectedTask.setDone(false);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"        ui.unmarkTaskComplete();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"        System.out.println(affectedTask.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"            storage.deleteFromFile(storage.getFilePath(), taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"            ui.genericErrorMsg();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"    ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":36}},{"path":"src/main/java/donezo/exceptions/DonezoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.exceptions;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":" * The DonezoException class handles exceptions faced in Donezo","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"public class DonezoException extends Exception {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"     * Constructs a new DonezoException with the specified detail message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param message the detail message to describe the exception","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"    public DonezoException(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"        super(message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":15}},{"path":"src/main/java/donezo/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":" * The Parser class is responsible for interpreting and processing input lines","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":" * from storage files and user commands","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"public class Parser {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"     * Parses a line of input from a storage file and delegates the parsing","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"     * to the appropriate parser method based on the type of task encoded","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"     * in the line.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param lineToParse The line to be parsed, containing task details and type.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param storage The storage object to which the parsed task will be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"    public static void parseStorageLine(String lineToParse, Storage storage) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"        if (lineToParse.contains(\"[D]\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"            ParserStorage.parseDeadline(lineToParse, storage);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"        } else if (lineToParse.contains(\"[T]\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"            ParserStorage.parseToDo(lineToParse, storage);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"        } else if (lineToParse.contains(\"[E]\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"            ParserStorage.parseEvent(lineToParse, storage);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"     * Extracts the command type from the user\u0027s input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param userInput the full command input from the user","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return A string representing the type of command (e.g., \"list\", \"mark\", \"todo\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"    public String parseCommand(String userInput) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"        String taskType \u003d userInput.split(\" \")[0];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"        return taskType;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":38}},{"path":"src/main/java/donezo/parser/ParserStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Deadline;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Event;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Todo;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":" * The ParserStorage class is responsible for parsing task-related input strings","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":" * from storage files and converting them into corresponding Task objects.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":" * It handles Deadline, Todo, and Event tasks, extracting relevant details such as","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":" * descriptions, completion statuses, and timestamps, and storing them appropriately.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"public class ParserStorage {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"     * Parses a line of input containing a \"deadline\" task, extracts the description,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"     * deadline date and time, and completion status from the line, creates a Deadline","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"     * object, and adds it to the specified storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param lineToParse The string containing the serialized representation of a","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"     *                    \"deadline\" task, including its description, deadline time,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"     *                    and completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param storage The storage object to which the newly created \"deadline\" task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"     *                will be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"    public static void parseDeadline(String lineToParse, Storage storage) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"        int ndxDescriptionStart \u003d lineToParse.indexOf(\"] \") + 2;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"        int ndxDescriptionEnd \u003d lineToParse.indexOf(\" (by: \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"        String description \u003d lineToParse.substring(ndxDescriptionStart, ndxDescriptionEnd);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"        int ndxByStart \u003d lineToParse.indexOf(\"(by: \") + 5;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"        int ndxByEnd \u003d lineToParse.lastIndexOf(\u0027)\u0027);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"        String by \u003d lineToParse.substring(ndxByStart, ndxByEnd);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"        // DateTimeFormatters for Saved Deadlines in the Task File","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"        DateTimeFormatter storedFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JuhromeAlexander"},"content":"        DateTimeFormatter deadlineConstructorFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JuhromeAlexander"},"content":"        LocalDateTime byDateTime \u003d LocalDateTime.parse(by, storedFormat);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JuhromeAlexander"},"content":"        String formattedBy \u003d byDateTime.format(deadlineConstructorFormat);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JuhromeAlexander"},"content":"        ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JuhromeAlexander"},"content":"        Deadline deadlineTask \u003d new Deadline(description, formattedBy);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JuhromeAlexander"},"content":"        if (lineToParse.contains(\"[X]\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JuhromeAlexander"},"content":"            deadlineTask.setDone(true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JuhromeAlexander"},"content":"        storage.addTask(deadlineTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JuhromeAlexander"},"content":"     * Parses a line of input containing a \"todo\" task, extracts the description","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JuhromeAlexander"},"content":"     * and completion status from the line, creates a Todo object, and adds it to","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JuhromeAlexander"},"content":"     * the specified storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param lineToParse The string containing the serialized representation of","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JuhromeAlexander"},"content":"     *                    a \"todo\" task, including its description and completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param storage The storage object to which the newly created \"todo\" task will be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JuhromeAlexander"},"content":"    public static void parseToDo(String lineToParse, Storage storage) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JuhromeAlexander"},"content":"        int ndxDescriptionStart \u003d lineToParse.indexOf(\"] \") + 2;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JuhromeAlexander"},"content":"        String description \u003d lineToParse.substring(ndxDescriptionStart);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JuhromeAlexander"},"content":"        Todo todoTask \u003d new Todo(description);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JuhromeAlexander"},"content":"        if (lineToParse.contains(\"[X]\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JuhromeAlexander"},"content":"            todoTask.setDone(true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JuhromeAlexander"},"content":"        storage.addTask(todoTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JuhromeAlexander"},"content":"     * Parses a line of input containing an event task, extracts relevant details","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JuhromeAlexander"},"content":"     * such as description, start time, end time, and completion status, creates","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JuhromeAlexander"},"content":"     * an Event object, and adds it to the provided storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param lineToParse The string containing the serialized representation of","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JuhromeAlexander"},"content":"     *                    an event task, including its description, time range,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JuhromeAlexander"},"content":"     *                    and completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param storage     The storage object to which the newly created Event","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JuhromeAlexander"},"content":"     *                    task will be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JuhromeAlexander"},"content":"    public static void parseEvent(String lineToParse, Storage storage) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JuhromeAlexander"},"content":"        int ndxDescriptionStart \u003d lineToParse.indexOf(\"] \") + 2;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JuhromeAlexander"},"content":"        int ndxDescriptionEnd \u003d lineToParse.indexOf(\"(from: \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JuhromeAlexander"},"content":"        String description \u003d lineToParse.substring(ndxDescriptionStart, ndxDescriptionEnd).trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JuhromeAlexander"},"content":"        int ndxFromStart \u003d lineToParse.indexOf(\"(from: \") + 7;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JuhromeAlexander"},"content":"        int ndxFromEnd \u003d lineToParse.indexOf(\" to: \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JuhromeAlexander"},"content":"        String from \u003d lineToParse.substring(ndxFromStart, ndxFromEnd).trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JuhromeAlexander"},"content":"        int ndxToStart \u003d lineToParse.indexOf(\"to: \") + 4;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JuhromeAlexander"},"content":"        int ndxToEnd \u003d lineToParse.lastIndexOf(\u0027)\u0027);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JuhromeAlexander"},"content":"        String to \u003d lineToParse.substring(ndxToStart, ndxToEnd);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JuhromeAlexander"},"content":"        // DateTimeFormatters for Saved Events in the Task File","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JuhromeAlexander"},"content":"        DateTimeFormatter storedFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JuhromeAlexander"},"content":"        DateTimeFormatter eventConstructorFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JuhromeAlexander"},"content":"        LocalDateTime fromDateTime \u003d LocalDateTime.parse(from, storedFormat);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JuhromeAlexander"},"content":"        LocalDateTime toDateTime \u003d LocalDateTime.parse(to, storedFormat);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JuhromeAlexander"},"content":"        String formattedFrom \u003d fromDateTime.format(eventConstructorFormat);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JuhromeAlexander"},"content":"        String formattedTo \u003d toDateTime.format(eventConstructorFormat);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JuhromeAlexander"},"content":"        Event eventTask \u003d new Event(description, formattedFrom, formattedTo);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JuhromeAlexander"},"content":"        if (lineToParse.contains(\"[X]\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JuhromeAlexander"},"content":"            eventTask.setDone(true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JuhromeAlexander"},"content":"        storage.addTask(eventTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":119}},{"path":"src/main/java/donezo/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"//Code Adapted from Partial Solution Provided on the A-Inheritance Extension","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents a Deadline task which extends the Task class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":" * This class includes an additional datetime field representing the deadline for the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":" * The deadline is stored as a LocalDateTime instance.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"    static final DateTimeFormatter INPUT_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"    static final DateTimeFormatter OUTPUT_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"     * Constructs a new Deadline object with the specified description and deadline date/time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"     * The deadline date/time is parsed from a string using the specified input time formatter.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param by          The deadline date and time as a string, formatted as \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"        this.by \u003d LocalDateTime.parse(by, INPUT_TIME_FORMATTER);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"     * Retrieves the deadline date and time associated with the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return The deadline date and time as a {@code LocalDateTime} object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"        return this.by;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"     * Returns the string representation of the Deadline task,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JuhromeAlexander"},"content":"     * which includes its type identifier \"[D]\", the details of the task from the parent class,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JuhromeAlexander"},"content":"     * and the formatted deadline date and time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return A string representation of the Deadline task, comprising its type,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JuhromeAlexander"},"content":"     *         description, status, and formatted deadline date/time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JuhromeAlexander"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JuhromeAlexander"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JuhromeAlexander"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getBy().format(OUTPUT_TIME_FORMATTER) + \")\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":51}},{"path":"src/main/java/donezo/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents an Event type of task that extends the Task class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":" * This class includes additional fields for the start (from) and end time (to)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":" * of the event. These times are stored as LocalDateTime instances and are","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":" * parsed from and formatted to strings using predefined date/time formatters.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"    protected static final DateTimeFormatter INPUT_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"    protected static final DateTimeFormatter OUTPUT_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"     * Constructs a new Event object with the specified description, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"     * The start and end times are parsed from strings using predefined date/time formatters.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"     * If the end time does not include a date, it defaults to the same date as the start time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param from        The start date and time of the event as a string formatted as \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param to          The end date and time of the event as a string formatted as \"d/M/yyyy HHmm\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"     *                    If no date is provided, it defaults to the same date as the start time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"        this.from \u003d LocalDateTime.parse(from, INPUT_TIME_FORMATTER);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"        ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"        if (!to.contains(\"/\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"            String fromDate \u003d this.from.toLocalDate().toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"            this.to \u003d LocalDateTime.parse(fromDate + \" \" + to, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"            this.to \u003d LocalDateTime.parse(to, INPUT_TIME_FORMATTER);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JuhromeAlexander"},"content":"     * Retrieves the start date and time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return The start date and time as a {@code LocalDateTime} object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JuhromeAlexander"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JuhromeAlexander"},"content":"        return this.from;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JuhromeAlexander"},"content":"     * Retrieves the end date and time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return The end date and time as a {@code LocalDateTime} object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JuhromeAlexander"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JuhromeAlexander"},"content":"        return this.to;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JuhromeAlexander"},"content":"     * Returns the string representation of the Event task. This representation includes","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JuhromeAlexander"},"content":"     * the task type identifier \"[E]\", the status and description from the parent class,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JuhromeAlexander"},"content":"     * and the formatted start (\"from\") and end (\"to\") date and time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return A string representation of the Event task, which consists of its type,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JuhromeAlexander"},"content":"     *         status, description, and formatted start and end date/times.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JuhromeAlexander"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JuhromeAlexander"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JuhromeAlexander"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getFrom().format(OUTPUT_TIME_FORMATTER)","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JuhromeAlexander"},"content":"                + \" to: \" + getTo().format(OUTPUT_TIME_FORMATTER) + \")\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":73}},{"path":"src/main/java/donezo/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"//Code Adapted from Partial Solution Provided on the A-Classes Extension","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":" * This class serves as a base class for different types of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"public class Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"    protected String description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"     * Retrieves the status icon representing whether the task is completed or not.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"     * A completed task is represented by an \"X\" and an incomplete task by a blank space.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return A string representing the task\u0027s completion status: \"X\" if done, or \" \" if not done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return A string containing the task\u0027s description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"        return description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JuhromeAlexander"},"content":"     * Retrieves the completion status of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JuhromeAlexander"},"content":"    public boolean getDoneStatus() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JuhromeAlexander"},"content":"        return isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JuhromeAlexander"},"content":"     * Updates the completion status of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param doneStatus The new completion status for the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JuhromeAlexander"},"content":"     *                   {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JuhromeAlexander"},"content":"    public void setDone(boolean doneStatus) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JuhromeAlexander"},"content":"        isDone \u003d doneStatus;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JuhromeAlexander"},"content":"     * Returns a string representation of the task, which includes its completion status","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JuhromeAlexander"},"content":"     * (represented by a status icon) and its description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return A string representation of the task in the format \"[status icon] description\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JuhromeAlexander"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JuhromeAlexander"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JuhromeAlexander"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":71}},{"path":"src/main/java/donezo/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":" * Represents an Todo type of task that extends the Task class.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"    ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"     * Constructs a new Todo object with the specified description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"     * This constructor initializes a Todo task and marks it as not done,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"     * inheriting functionality from the Task class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"     * This representation includes the task type identifier \"[T]\" followed","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"     * by the string output of the parent Task\u0027s toString method, which includes","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"     * the task\u0027s status and description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"     * @return A string representation of the Todo task, comprising its type indicator","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"     *         and its inherited details from the Task superclass.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":32}},{"path":"src/test/java/donezo/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"    @TempDir","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"    Path tempDirectory;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"    public void writeToFile_singleEventLine_success() throws IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"        Path tempFile \u003d tempDirectory.resolve(\"testFile.txt\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"        String expectedContent \u003d \"[E][ ] test event (from: 4 Dec 2005, 6:00 pm to: 4 Dec 2005, 7:00 pm)\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"        Storage storage \u003d new Storage(\"testFile.txt\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"        storage.writeToFile(tempFile.toString(), expectedContent);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"        String actualContent \u003d Files.readString(tempFile).trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"        assertEquals(expectedContent, actualContent);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"    public void writeToFile_directoryPath_exceptionThrown() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"        Path tempDirectoryPath \u003d tempDirectory;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"        String lineToAdd \u003d \"Should Throw Exception\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"        Storage storage \u003d new Storage(\"testFile.txt\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JuhromeAlexander"},"content":"        assertThrows(IOException.class, () -\u003e storage.writeToFile(tempDirectoryPath.toString(), lineToAdd));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":39}},{"path":"src/test/java/donezo/parser/ParserStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"package donezo.parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.exceptions.DonezoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JuhromeAlexander"},"content":"import donezo.tasks.Todo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JuhromeAlexander"},"content":"public class ParserStorageTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JuhromeAlexander"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"    public void parseTodo_validMarkedTodo_success() throws DonezoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JuhromeAlexander"},"content":"        Storage storage \u003d new Storage(\"dummyFile.txt\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JuhromeAlexander"},"content":"        String input \u003d \"[T][X] testTodo IntelliJ\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JuhromeAlexander"},"content":"        ParserStorage.parseToDo(input, storage);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JuhromeAlexander"},"content":"        TaskList taskList \u003d storage.getTaskList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JuhromeAlexander"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JuhromeAlexander"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JuhromeAlexander"},"content":"        assertInstanceOf(Todo.class, tasks.get(0));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JuhromeAlexander"},"content":"        Todo todo \u003d (Todo) tasks.get(0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JuhromeAlexander"},"content":"        assertEquals(\"testTodo IntelliJ\", todo.getDescription());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JuhromeAlexander"},"content":"        assertTrue(todo.getDoneStatus());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JuhromeAlexander"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JuhromeAlexander"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JuhromeAlexander"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JuhromeAlexander"},"content":"todo test 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JuhromeAlexander"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JuhromeAlexander"},"content":"deadline assignment 1 /by Fri 4pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JuhromeAlexander"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JuhromeAlexander"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JuhromeAlexander"},"content":"mark 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JuhromeAlexander"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JuhromeAlexander"},"content":"unmark 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JuhromeAlexander"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JuhromeAlexander"},"content":"delete 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JuhromeAlexander"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JuhromeAlexander"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JuhromeAlexander"},"content":"java -classpath ..\\bin Donezo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"JuhromeAlexander":1,"-":20}}]
