[{"path":"src/main/java/juno/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.task.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" * The {@code AddCommand} class is responsible for adding a {@link Task} to the {@link TaskList}, saving the updated","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":" * task list to the {@link Storage}, and displaying the corresponding confirmation message through the {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"    private final Task task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"     * Constructs an {@code AddCommand} with the specified task to be added.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"     * @param task the task to be added to the task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"     * Executes the command by adding the task to the provided {@link TaskList}, saving the updated task","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"     * list to {@link Storage}, and showing the updated task count through the {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the list of tasks to which the task will be added.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"     * @param storage the storage system to save the updated task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"     * @param ui the user interface to display the confirmation message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException if an error occurs while adding the task or saving the task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"        taskList.addToTaskList(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"        ui.showAdd(task, taskList.getTaskCount());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":42}},{"path":"src/main/java/juno/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":" * Represents an abstract command that can be executed within Juno.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" * The {@code Command} class serves as a blueprint for specific commands that interact with a {@link TaskList},","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" * {@link Storage}, and {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    public static final String EXAMPLE_PREFIX \u003d \" \".repeat(7) + \"For example, \";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"     * Executes the specific command, interacting with the given {@link TaskList}, {@link Storage}, and {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the list of tasks to be modified by the command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"     * @param storage the storage system to save data during command execution.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"     * @param ui the user interface to display relevant information to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException if an error occurs during the execution of the command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"    public abstract void execute(TaskList taskList, Storage storage, Ui ui) throws JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":26}},{"path":"src/main/java/juno/commands/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import juno.task.Deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import juno.task.Event;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.task.Todo;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":" * A utility class that contains descriptions for various commands in  Juno.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" * The {@code CommandList} class serves as a centralized location for the descriptions of available commands.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" * It provides an array of command descriptions that can be used in the help system.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"public class CommandList {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"    public static final String LINE_PREFIX \u003d \" # \";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    public static final String EMPTY_DIVIDER \u003d \"\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"    public static final String[] COMMAND_DESCRIPTION_LIST \u003d {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"        LINE_PREFIX + HelpCommand.COMMAND_DESCRIPTION,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"        EMPTY_DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"        LINE_PREFIX + Todo.COMMAND_DESCRIPTION,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"        EMPTY_DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"        LINE_PREFIX + Deadline.COMMAND_DESCRIPTION,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"        EMPTY_DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"        LINE_PREFIX + Event.COMMAND_DESCRIPTION,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"        EMPTY_DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"        LINE_PREFIX + ShowTasksCommand.COMMAND_DESCRIPTION,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"        EMPTY_DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"        LINE_PREFIX + ShowTasksWithDateCommand.COMMAND_DESCRIPTION,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"        EMPTY_DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"        LINE_PREFIX + FindCommand.COMMAND_DESCRIPTION,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"        EMPTY_DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"        LINE_PREFIX + MarkCommand.COMMAND_DESCRIPTION,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"        EMPTY_DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"        LINE_PREFIX + UnmarkCommand.COMMAND_DESCRIPTION,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"        EMPTY_DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"        LINE_PREFIX + DeleteCommand.COMMAND_DESCRIPTION,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"        EMPTY_DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"        LINE_PREFIX + ExitCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"    };","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":40}},{"path":"src/main/java/juno/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.DELETE_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"import juno.task.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":" * Represents a command to delete a specified task from the task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":" * The {@code DeleteCommand} class is responsible for removing a task from the {@link TaskList} based on its","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":" * index and then renumbering the remaining tasks to ensure correct indexing. If the task index is invalid, a","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":" * {@link JunoException} is thrown. After successfully deleting the task, the updated task list is saved to","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":" * {@link Storage}, and a confirmation message is shown through the {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \" : delete specified task.\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"            + \" \".repeat(COMMAND_WORD.length()) + EXAMPLE_PREFIX + COMMAND_WORD + \" 3\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"    private final int taskNum;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code DeleteCommand} to delete the specified task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"     * @param taskNum the index of the task to be deleted.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"     * Deletes the task at the specified index from the {@link TaskList}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"     * If the task exists in the list, it will be removed and the remaining tasks will be renumbered.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"     * Otherwise, a {@link JunoException} will be thrown.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the task list from which the task will be deleted.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"     * @return the deleted task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException if the task does not exist in the list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"    public Task deleteTask(TaskList taskList) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"        Task deletedTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"        if (taskList.getTaskList().containsKey(this.taskNum)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"            deletedTask \u003d taskList.getTaskList().remove(this.taskNum);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"            this.renumberTasks(taskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(DELETE_ERROR, true, this.taskNum);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"        return deletedTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"     * Renumbers the tasks in the {@link TaskList} after a task has been deleted.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"     * The task list is renumbered starting from 1, and the task count is updated accordingly.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the task list to be renumbered.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"    public void renumberTasks(TaskList taskList) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"        Map\u003cInteger, Task\u003e newTaskList \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"        int newTaskCount \u003d 0;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"        for (Map.Entry\u003cInteger, Task\u003e entry : taskList.getTaskList().entrySet()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"            newTaskList.put(++newTaskCount, entry.getValue());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"        taskList.setTaskList(newTaskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"        taskList.updateTaskCount();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"     * Executes the delete command by deleting the specified task from the {@link TaskList},","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"     * saving the updated task list to the {@link Storage}, and displaying the result through the {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the list of tasks to be modified.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"     * @param storage the storage system to save the updated task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"     * @param ui the user interface to display the deletion confirmation.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException if an error occurs while deleting the task or saving the task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneha1120"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneha1120"},"content":"        Task deletedTask \u003d this.deleteTask(taskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneha1120"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneha1120"},"content":"        ui.showDelete(deletedTask, taskList.getTaskCount());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":93}},{"path":"src/main/java/juno/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":" * Represents a command to exit the chatbot.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" * The {@code ExitCommand} class is responsible for handling the user request to exit the chatbot. When this command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" * is executed, it triggers the appropriate exit message to be displayed through the {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \" : exits the chatbot.\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"            + \" \".repeat(COMMAND_WORD.length()) + EXAMPLE_PREFIX + COMMAND_WORD;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"     * Checks if the provided command is an instance of {@link ExitCommand}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"     * @param command the command to be checked.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"     * @return {@code true} if the command is an {@code ExitCommand}, otherwise {@code false}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"     * Executes the exit command by displaying the exit message through the {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the current task list (unused in this command).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"     * @param storage the storage system (unused in this command).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"     * @param ui the user interface to display the exit message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"        ui.showExitMessage();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":39}},{"path":"src/main/java/juno/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.LIST_WITH_KEYWORD_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.NO_KEYWORD_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"import juno.task.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":" * The {@code FindCommand} class handles the execution of the \"find\" command,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":" * which allows users to search for tasks containing a specific keyword in their names.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":" * It retrieves a list of tasks that match the specified keyword and displays them to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \" : shows list of tasks with specified keyword.\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"            + \" \".repeat(COMMAND_WORD.length()) + EXAMPLE_PREFIX + COMMAND_WORD + \" study CS2103T\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"    private final String keyword;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code FindCommand} with the specified keyword.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"     * @param keyword The keyword to search for in task names.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"     * Retrieves the list of tasks from the {@code taskList} that contain the specified keyword.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"     * If no tasks match the keyword or if the keyword is empty, a {@code JunoException} will be thrown.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"     * @param taskList The list of tasks to search through.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"     * @return A {@link TaskList} containing the tasks that match the keyword.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException If no tasks match the keyword or if the keyword is empty.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"    public TaskList getTasksWithKeyword(TaskList taskList) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"        Map\u003cInteger, Task\u003e taskListOriginal \u003d taskList.getTaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"        Map\u003cInteger, Task\u003e taskListWithKeyword \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"        for (Task task : taskListOriginal.values()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"            if (task.getTaskName().toLowerCase().contains(this.keyword.toLowerCase())) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"                taskListWithKeyword.put(++taskCount, task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"        if (taskListWithKeyword.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(LIST_WITH_KEYWORD_ERROR);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(NO_KEYWORD_ERROR);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"        return new TaskList(taskListWithKeyword);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"     * Executes the find command, displaying the tasks that contain the specified keyword.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"     * @param taskList The list of tasks to search through.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"     * @param storage The storage object for reading and writing task data.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"     * @param ui The UI object for displaying the result to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException If there is an error during the find operation.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"        TaskList taskListWithKeyword \u003d this.getTasksWithKeyword(taskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"        ui.showFind(taskListWithKeyword, this.keyword);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":81}},{"path":"src/main/java/juno/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":" * Represents a command to show a list of available commands in the chatbot.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" * The {@code HelpCommand} class is responsible for displaying a list of all available commands to the user when","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" * the user requests help. It triggers the {@link Ui} to show the help message containing all available commands.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_WORD \u003d \"juno\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \" : shows list of available commands.\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"            + \" \".repeat(COMMAND_WORD.length()) + EXAMPLE_PREFIX + COMMAND_WORD;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"     * Executes the help command by displaying the list of available commands through the {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the current task list (unused in this command).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"     * @param storage the storage system (unused in this command).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"     * @param ui the user interface to display the help message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"        ui.showHelp();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":29}},{"path":"src/main/java/juno/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.MARK_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import juno.task.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" * Represents a command to mark a specified task as done.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":" * The {@code MarkCommand} class is responsible for changing the status of a task to \"done\" based on its index in the","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":" * {@link TaskList}. If the task does not exist or is already marked as done, a {@link JunoException} will be thrown.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":" * After marking the task, the task list is saved to {@link Storage} and the updated task is displayed through the","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":" * {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \" : marks specified task as done.\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"            + \" \".repeat(COMMAND_WORD.length()) + EXAMPLE_PREFIX + COMMAND_WORD + \" 3\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"    private final int taskNum;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code MarkCommand} to mark the specified task as done.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"     * @param taskNum the index of the task to be marked as done.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"     * Executes the mark command by marking the specified task as done.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"     * If the task does not exist or is already marked as done, a {@link JunoException} will be thrown. Otherwise,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"     * the task will be marked as done, the task list will be saved to {@link Storage}, and the updated task will","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"     * be displayed through the {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the list of tasks to be modified.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"     * @param storage the storage system to save the updated task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"     * @param ui the user interface to display the task status update.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException if the task does not exist or is already marked as done.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"        Task curr \u003d taskList.getTaskList().get(taskNum);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"        if (curr \u003d\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(MARK_ERROR, false, taskNum);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"        } else if (curr.isDone()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(MARK_ERROR, true, taskNum);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"        curr.mark();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"        ui.showMark(curr);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":58}},{"path":"src/main/java/juno/commands/ShowTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":" * Represents a command to show a list of all tasks in the task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" * The {@code ShowTasksCommand} class is responsible for displaying all the tasks in the {@link TaskList}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" * It triggers the {@link Ui} to show the entire task list to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"public class ShowTasksCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_WORD \u003d \"show tasks\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \" : shows list of added tasks.\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"            + \" \".repeat(COMMAND_WORD.length()) + EXAMPLE_PREFIX + COMMAND_WORD;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"     * Executes the show tasks command by displaying all tasks in the {@link TaskList} through the {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the list of tasks to be shown.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"     * @param storage the storage system (unused in this command).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"     * @param ui the user interface to display the task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"        ui.showTasks(taskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":29}},{"path":"src/main/java/juno/commands/ShowTasksWithDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.LIST_WITH_DATE_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"import juno.task.Deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"import juno.task.Event;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"import juno.task.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":" * Represents a command to show a list of tasks on a specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":" * The {@code ShowTasksWithDateCommand} class is responsible for filtering tasks based on the specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":" * It checks both {@link Deadline} and {@link Event} tasks in the {@link TaskList} and retrieves those that","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":" * match the given date. If no tasks are found for the date, a {@link JunoException} is thrown.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":" * After retrieving the tasks for the specified date, the task list is displayed through the {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"public class ShowTasksWithDateCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_WORD \u003d \"show tasks on\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \" : shows list of tasks on specified date.\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"            + \" \".repeat(COMMAND_WORD.length()) + EXAMPLE_PREFIX + COMMAND_WORD + \" 01/01/1000\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"    private final LocalDate date;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code ShowTasksWithDateCommand} for the specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"     * @param date the date to filter tasks by.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"    public ShowTasksWithDateCommand(LocalDate date) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"     * Retrieves the tasks on the specified date from the {@link TaskList}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"     * The method checks for both {@link Deadline} and {@link Event} tasks that either have the specified date","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"     * as their deadline or occur on the specified date. If no tasks are found, a {@link JunoException} is thrown.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the task list to search through.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"     * @return a {@link TaskList} containing the tasks on the specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException if no tasks are found on the specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"    public TaskList getTasksOnDate(TaskList taskList) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"        Map\u003cInteger, Task\u003e taskListOriginal \u003d taskList.getTaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"        Map\u003cInteger, Task\u003e taskListOnDate \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"        for (Task task : taskListOriginal.values()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"            if (task instanceof Deadline deadline) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"                if (deadline.getByDate().equals(this.date)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"                    taskListOnDate.put(++taskCount, task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"            } else if (task instanceof Event event) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"                if (event.getFromDate().equals(this.date) || event.getToDate().equals(this.date)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"                    taskListOnDate.put(++taskCount, task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"        if (taskListOnDate.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(LIST_WITH_DATE_ERROR);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"        return new TaskList(taskListOnDate);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"     * Executes the show tasks on date command by filtering and displaying the tasks for the specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the list of tasks to be searched through.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"     * @param storage the storage system (unused in this command).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"     * @param ui the user interface to display the filtered task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException if no tasks are found for the specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"        TaskList taskListOnDate \u003d this.getTasksOnDate(taskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"        ui.showTasksWithDate(taskListOnDate, this.date);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":87}},{"path":"src/main/java/juno/commands/TestCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":" * Represents a test command that serves as a placeholder for test comments.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" * The {@code TestCommand} class does not perform any operation when executed. It is intended to be used as a","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" * placeholder or for test comments. It contains no logic in the {@link #execute} method, effectively performing","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" * no action.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"public class TestCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_WORD \u003d \"#\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_LINE \u003d \"##########################################################\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"    public static final String EMPTY_LINE \u003d \"\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"     * Executes the test command. This method performs no operation as it serves as a placeholder for test comments.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the current task list (unused in this command).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"     * @param storage the storage system (unused in this command).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"     * @param ui the user interface (unused in this command).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":29}},{"path":"src/main/java/juno/commands/TryAgainCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":" * Represents a command to display a \"try again\" message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" * The {@code TryAgainCommand} class is responsible for prompting the user with a \"try again\" message when","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" * the command is executed. It triggers the {@link Ui} to display a relevant message to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"public class TryAgainCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"     * Executes the try again command by displaying a \"try again\" message through the {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the current task list (unused in this command).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"     * @param storage the storage system (unused in this command).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"     * @param ui the user interface to display the \"try again\" message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"        ui.showTryAgainMessage();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":25}},{"path":"src/main/java/juno/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.UNMARK_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import juno.task.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" * Represents a command to unmark a specified task as not done.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":" * The {@code UnmarkCommand} class is responsible for changing the status of a task to \"not done\" based on its index in","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":" * the {@link TaskList}. If the task does not exist or is already unmarked, a {@link JunoException} will be thrown.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":" * After unmarking the task, the task list is saved to {@link Storage} and the updated task is displayed through the","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":" * {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \" : unmarks specified task.\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"            + \" \".repeat(COMMAND_WORD.length()) + EXAMPLE_PREFIX + COMMAND_WORD + \" 3\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"    private final int taskNum;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code UnmarkCommand} to unmark the specified task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"     * @param taskNum the index of the task to be unmarked.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"     * Executes the unmark command by unmarking the specified task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"     * If the task does not exist or is not marked as done, a {@link JunoException} will be thrown. Otherwise,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"     * the task will be unmarked, the task list will be saved to {@link Storage}, and the updated task will","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"     * be displayed through the {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"     * @param taskList the list of tasks to be modified.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"     * @param storage the storage system to save the updated task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"     * @param ui the user interface to display the task status update.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException if the task does not exist or is not marked as done.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"        Task curr \u003d taskList.getTaskList().get(taskNum);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"        if (curr \u003d\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(UNMARK_ERROR, true, taskNum);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"        } else if (!curr.isDone()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(UNMARK_ERROR, false, taskNum);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"        curr.unmark();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"        ui.showUnmark(curr);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":58}},{"path":"src/main/java/juno/enums/ErrorType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.enums;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":" * Represents the different types of errors that can occur in the system.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":" * The {@code ErrorType} enum defines various error types that the system may encounter:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"public enum ErrorType {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"    CREATE_FILE_ERROR, DATE_ERROR, DEADLINE_ERROR, DELETE_ERROR,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"    EVENT_ERROR, INVALID_FORMAT_ERROR, INVALID_TYPE_ERROR, LIST_ERROR,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"    LIST_WITH_DATE_ERROR, LIST_WITH_KEYWORD_ERROR, LOAD_ERROR, MARK_ERROR,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    READ_FILE_ERROR, TASK_ERROR, TODO_ERROR, UNMARK_ERROR, NO_KEYWORD_ERROR","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":14}},{"path":"src/main/java/juno/enums/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.enums;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":" * Represents the different types of tasks in the system.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":" * The {@code TaskType} enum defines three types of tasks:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":" *     \u003cli\u003e{@link #TODO} - A task without a date or time associated with it.\u003c/li\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":" *     \u003cli\u003e{@link #DEADLINE} - A task with a specific due date and time.\u003c/li\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" *     \u003cli\u003e{@link #EVENT} - A task that has a start and end date and time.\u003c/li\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"public enum TaskType {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"juneha1120":15}},{"path":"src/main/java/juno/exceptions/JunoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.exceptions;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import juno.enums.ErrorType;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":" * Represents a custom exception class for the Juno chatbot.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":" * The {@code JunoException} class extends {@link Exception} and provides specific error messages based on the type of","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":" * error encountered in the chatbot\u0027s operation. These error messages are determined by the {@link ErrorType} provided","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" * when throwing the exception.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"public class JunoException extends Exception {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code JunoException} with the specified error type.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"     * @param type the error type that defines the message for the exception.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"    public JunoException(ErrorType type) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"        super(getErrorMessage(type));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code JunoException} with the specified error type and a flag for including description.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"     * @param type the error type that defines the message for the exception.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"     * @param containsDesc a flag indicating whether the description should be included in the message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    public JunoException(ErrorType type, boolean containsDesc) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"        super(getErrorMessage(type, containsDesc));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code JunoException} with the specified error type, task completion status, and task number.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"     * @param type the error type that defines the message for the exception.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"     * @param isDone the completion status of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"     * @param taskNum the task number related to the error.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"    public JunoException(ErrorType type, boolean isDone, int taskNum) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"        super(getErrorMessage(type, isDone, taskNum));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code JunoException} with the specified error type and line of input.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"     * @param type the error type that defines the message for the exception.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"     * @param line the line of input that caused the error.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"    public JunoException(ErrorType type, String line) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"        super(getErrorMessage(type, line));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"     * Default constructor for {@code JunoException}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"    public JunoException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"     * Retrieves the error message for the given error type.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"     * @param type the error type to retrieve the corresponding error message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"     * @return the error message associated with the specified error type.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"    public static String getErrorMessage(ErrorType type) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"        return switch (type) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"        case TODO_ERROR -\u003e \"Could you provide the details for your todo?\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"        case LIST_ERROR -\u003e \"Looks like you have no tasks in your list now!\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"        case TASK_ERROR -\u003e \"I don\u0027t seem to know about that task.\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"        case DATE_ERROR -\u003e \"Please follow this format : show tasks on \u003cd/M/yyyy\u003e.\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"        case CREATE_FILE_ERROR -\u003e \"I can\u0027t seem to create save files.\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"        case READ_FILE_ERROR -\u003e \"I can\u0027t seem to read saved files.\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"        case LIST_WITH_DATE_ERROR -\u003e \"Looks like you have no tasks on the date!\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"        case LIST_WITH_KEYWORD_ERROR -\u003e \"Looks like you have no matching tasks.\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"        case NO_KEYWORD_ERROR -\u003e \"Please specify the keyword you want to search.\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"        default -\u003e \"\"; };","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"     * Retrieves the error message for the given error type and description flag.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"     * @param type the error type to retrieve the corresponding error message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"     * @param containsDesc flag to indicate whether description is included in the message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"     * @return the error message associated with the specified error type and description flag.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"    public static String getErrorMessage(ErrorType type, boolean containsDesc) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneha1120"},"content":"        return switch (type) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneha1120"},"content":"        case DEADLINE_ERROR -\u003e !containsDesc ? \"Could you provide the details for your deadline?\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneha1120"},"content":"                : \"Please follow this format : \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneha1120"},"content":"                + \"\\n  deadline \u003cdescription\u003e /by \u003cd/M/yyyy (HHmm)\u003e.\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juneha1120"},"content":"        case EVENT_ERROR -\u003e !containsDesc ? \"Could you provide the details for your event?\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juneha1120"},"content":"                : \"Please follow this format : \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juneha1120"},"content":"                + \"\\n  event \u003cdescription\u003e /from \u003cd/M/yyyy (HHmm)\u003e /to \u003cd/M/yyyy (HHmm)\u003e.\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juneha1120"},"content":"        default -\u003e \"\"; };","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juneha1120"},"content":"     * Retrieves the error message for the given error type, task completion status, and task number.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juneha1120"},"content":"     * @param type the error type to retrieve the corresponding error message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juneha1120"},"content":"     * @param isDone the completion status of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juneha1120"},"content":"     * @param taskNum the task number related to the error.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juneha1120"},"content":"     * @return the error message associated with the specified error type, task status, and task number.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juneha1120"},"content":"    public static String getErrorMessage(ErrorType type, boolean isDone, int taskNum) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juneha1120"},"content":"        return switch (type) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"juneha1120"},"content":"        case MARK_ERROR -\u003e isDone ? \"The task is already marked as done!\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"juneha1120"},"content":"                : \"I don\u0027t seem to find the task : \" + taskNum;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"juneha1120"},"content":"        case UNMARK_ERROR -\u003e !isDone ? \"The task is not marked yet!\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juneha1120"},"content":"                : \"I don\u0027t seem to find the task : \" + taskNum;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"juneha1120"},"content":"        case DELETE_ERROR -\u003e \"I don\u0027t seem to find the task : \" + taskNum;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"juneha1120"},"content":"        default -\u003e \"\"; };","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"juneha1120"},"content":"     * Retrieves the error message for the given error type and input line.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"juneha1120"},"content":"     * @param type the error type to retrieve the corresponding error message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"juneha1120"},"content":"     * @param line the line of input that caused the error.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"juneha1120"},"content":"     * @return the error message associated with the specified error type and input line.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"juneha1120"},"content":"    public static String getErrorMessage(ErrorType type, String line) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"juneha1120"},"content":"        return switch (type) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"juneha1120"},"content":"        case DELETE_ERROR -\u003e \"I don\u0027t seem to find this task : \" + line;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"juneha1120"},"content":"        case LOAD_ERROR -\u003e \"I couldn\u0027t understand this line : \" + line;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"juneha1120"},"content":"        case INVALID_FORMAT_ERROR -\u003e \"Oops! the format is invalid for this line : \" + line","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"juneha1120"},"content":"                + \"\\n I will skip it for now and move on!\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"juneha1120"},"content":"        case INVALID_TYPE_ERROR -\u003e \"I don\u0027t seem to understand the task type here : \" + line","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"juneha1120"},"content":"                + \"\\n I will skip it for now and move on!\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"juneha1120"},"content":"        case MARK_ERROR, UNMARK_ERROR -\u003e \"I don\u0027t seem to find the task : \" + line;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"juneha1120"},"content":"        default -\u003e \"\"; };","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":134}},{"path":"src/main/java/juno/exceptions/JunoTestException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.exceptions;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":" * Represents a custom exception class for Juno tests that extends {@link JunoException}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":" * This exception class is used specifically for testing scenarios in the Juno chatbot and inherits from the","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":" * {@link JunoException} class to provide error messages and handling for such cases.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"public class JunoTestException extends JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"     * Default constructor for {@code JunoTestException}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"     * Calls the constructor of the parent {@link JunoException} class.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    public JunoTestException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"        super();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":18}},{"path":"src/main/java/juno/main/Juno.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.main;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import juno.commands.Command;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import juno.commands.ExitCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoTestException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import juno.parser.Parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":" * The {@code Juno} class is the main entry point of the task management application.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":" * It handles user interactions, parses commands, and manages the task list. It also interacts","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":" * with the {@link Storage} class to load and save tasks, and uses {@link Parser} to interpret user inputs.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":" * The class is responsible for displaying messages via the {@link Ui} class and processing commands","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":" * such as adding, deleting, or marking tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"public class Juno {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    private final Parser parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code Juno} instance with the specified file path.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"     * Initializes the necessary components: {@link Parser}, {@link TaskList}, {@link Storage}, and {@link Ui}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"     * @param filePath The file path for loading and saving tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"    public Juno(String filePath) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"     * The main entry point for the {@code Juno} application. Initializes the application and calls","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"     * the {@link #run()} method to begin processing user commands.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"     * @param args Command-line arguments (not used in this implementation).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"        new Juno(\"./data/juno.txt\").run();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"     * Starts the {@code Juno} application. Displays the greeting message and loads the existing task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"     * It then enters a loop where it continuously accepts user commands until the exit command is issued.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"    public void run() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"        this.ui.showGreetingMessage();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"            this.tasks \u003d this.storage.loadTasks();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"            ui.showLoadingMessage(this.tasks);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"        while (!isExit) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"                String fullCommand \u003d this.ui.readCommand();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"                Command c \u003d this.parser.parse(fullCommand);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"                this.ui.showDivider();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"                c.execute(this.tasks, this.storage, this.ui);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"                isExit \u003d ExitCommand.isExit(c);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"                this.ui.showDivider();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"            } catch (JunoTestException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"                // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"            } catch (JunoException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"                this.ui.showError(e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"                this.ui.showDivider();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":79}},{"path":"src/main/java/juno/main/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.main;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":" * This class contains constant message strings used throughout the Juno chatbot application.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":" * These messages are used to display various status updates, errors, and prompts to the user during","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":" * the interaction with the chatbot. Each constant represents a different user-facing message that the","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":" * chatbot can display in different scenarios.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"public class Messages {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_HELLO \u003d \"Hello! I\u0027m Juno. What can I do for you?\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_LOAD \u003d \"I\u0027m retrieving your saved task list from last time...\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_BYE \u003d \"Bye.. Hope to see you again soon!\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_CALL \u003d \"Call my name if you need help.\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_HELP \u003d \"You called? Here\u0027s what I can do.\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_TRY_AGAIN \u003d \"I\u0027m sorry. Could you try again?\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_ADD_START \u003d \"Got it. I\u0027ve added this task :\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_SHOW_TASKS_START \u003d \"Here\u0027s what you have :\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_FIND_START \u003d \"Here are the matching tasks in your list :\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_NO_TASKS \u003d \"Looks like you have nothing in the list!\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_MARK_START \u003d \"Nice! I\u0027ve marked this task as done :\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_UNMARK_START \u003d \"Ok, I\u0027ve marked this task as not done yet :\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"    public static final String MESSAGE_DELETE_START \u003d \"Noted. I\u0027ve removed this task :\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":24}},{"path":"src/main/java/juno/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.DATE_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.DEADLINE_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.DELETE_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.EVENT_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.MARK_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.TASK_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.TODO_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.UNMARK_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.TaskType.DEADLINE;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.TaskType.EVENT;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.TaskType.TODO;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"import juno.commands.AddCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"import juno.commands.Command;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"import juno.commands.DeleteCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"import juno.commands.ExitCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"import juno.commands.FindCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"import juno.commands.HelpCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"import juno.commands.MarkCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"import juno.commands.ShowTasksCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"import juno.commands.ShowTasksWithDateCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"import juno.commands.TestCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"import juno.commands.TryAgainCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"import juno.commands.UnmarkCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"import juno.enums.TaskType;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoTestException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"import juno.task.Deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"import juno.task.Event;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"import juno.task.Todo;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":" * The {@code Parser} class is responsible for interpreting the user\u0027s input commands and converting them","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":" * into executable {@link Command} objects. It supports various task-related commands such as adding,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":" * marking, and deleting tasks. It also handles parsing commands with date or time-related arguments.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"public class Parser {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"     * Parses a full user command into a corresponding {@link Command} object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"     * It splits the command and its arguments, processes the command type,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"     * and prepares the appropriate action.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"     * @param fullCommand The full user command entered.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"     * @return A corresponding {@link Command} object to be executed.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException If there is an error in parsing the command or its arguments.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"    public Command parse(String fullCommand) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"        String[] command \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"        if (command.length \u003c 2) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"            command \u003d new String[]{command[0], \"\"};","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"        String commandWord \u003d command[0];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"        String arguments \u003d command[1];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"        // Handle special \"show\" command with specific date arguments","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"        if (commandWord.equals(\"show\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"            if (arguments.contains(\"on\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"                commandWord \u003d ShowTasksWithDateCommand.COMMAND_WORD;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"                arguments \u003d arguments.split(\"on\", 2)[1];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"                commandWord \u003d ShowTasksCommand.COMMAND_WORD;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"        // Return corresponding Command based on the command word","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"        return switch (commandWord) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"        case HelpCommand.COMMAND_WORD -\u003e new HelpCommand();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"        case Todo.COMMAND_WORD -\u003e prepareAddCommand(TODO, arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"        case Deadline.COMMAND_WORD -\u003e prepareAddCommand(DEADLINE, arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"        case Event.COMMAND_WORD -\u003e prepareAddCommand(EVENT, arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"        case ShowTasksCommand.COMMAND_WORD -\u003e new ShowTasksCommand();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"        case ShowTasksWithDateCommand.COMMAND_WORD -\u003e prepareShowWithDateCommand(arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"        case FindCommand.COMMAND_WORD -\u003e new FindCommand(arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"        case MarkCommand.COMMAND_WORD -\u003e prepareMarkCommand(arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"        case UnmarkCommand.COMMAND_WORD -\u003e prepareUnmarkCommand(arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"        case DeleteCommand.COMMAND_WORD -\u003e prepareDeleteCommand(arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"        case ExitCommand.COMMAND_WORD -\u003e new ExitCommand();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"        case TestCommand.COMMAND_WORD, TestCommand.COMMAND_LINE, TestCommand.EMPTY_LINE -\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"                throw new JunoTestException();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneha1120"},"content":"        default -\u003e new TryAgainCommand(); };","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juneha1120"},"content":"     * Checks if the given argument contains time information.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juneha1120"},"content":"     * This is used to differentiate between date-only and date-time arguments.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juneha1120"},"content":"     * @param argument The argument to check.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juneha1120"},"content":"     * @return {@code true} if the argument contains time information, {@code false} otherwise.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juneha1120"},"content":"    protected boolean isTimeArgument(String argument) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juneha1120"},"content":"        return argument.trim().contains(\" \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juneha1120"},"content":"     * Prepares an {@link AddCommand} based on the task type and the provided arguments.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juneha1120"},"content":"     * It creates the appropriate task type ({@link Todo}, {@link Deadline}, or {@link Event})","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juneha1120"},"content":"     * and constructs an {@link AddCommand} to be executed.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juneha1120"},"content":"     * @param taskType The type of task to add (e.g., TODO, DEADLINE, or EVENT).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"juneha1120"},"content":"     * @param arguments The arguments associated with the task (e.g., description, date/time).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"juneha1120"},"content":"     * @return The {@link AddCommand} to be executed.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException If there is an error in parsing the arguments or creating the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"juneha1120"},"content":"    protected Command prepareAddCommand(TaskType taskType, String arguments) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"juneha1120"},"content":"        switch (taskType) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"juneha1120"},"content":"        case TODO:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"juneha1120"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"juneha1120"},"content":"                throw new JunoException(TODO_ERROR);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"juneha1120"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"juneha1120"},"content":"                return new AddCommand(new Todo(arguments));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"juneha1120"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"juneha1120"},"content":"        case DEADLINE:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"juneha1120"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"juneha1120"},"content":"                throw new JunoException(DEADLINE_ERROR, false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"juneha1120"},"content":"            } else if (!arguments.contains(\"/by\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"juneha1120"},"content":"                throw new JunoException(DEADLINE_ERROR, true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"juneha1120"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"juneha1120"},"content":"                String[] argumentSplit \u003d arguments.split(\"/by\", 2);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"juneha1120"},"content":"                String taskName \u003d argumentSplit[0].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"juneha1120"},"content":"                String taskBy \u003d argumentSplit[1].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"juneha1120"},"content":"                DateTimeFormatter byFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"juneha1120"},"content":"                if (this.isTimeArgument(taskBy)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"juneha1120"},"content":"                    byFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy H:mm\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"juneha1120"},"content":"                    try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"juneha1120"},"content":"                        LocalDateTime by \u003d LocalDateTime.parse(taskBy, byFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"juneha1120"},"content":"                        return new AddCommand(new Deadline(taskName, by));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"juneha1120"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"juneha1120"},"content":"                        throw new JunoException(DEADLINE_ERROR, true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"juneha1120"},"content":"                    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"juneha1120"},"content":"                } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"juneha1120"},"content":"                    byFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"juneha1120"},"content":"                    try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"juneha1120"},"content":"                        LocalDate by \u003d LocalDate.parse(taskBy, byFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"juneha1120"},"content":"                        return new AddCommand(new Deadline(taskName, by));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"juneha1120"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"juneha1120"},"content":"                        throw new JunoException(DEADLINE_ERROR, true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"juneha1120"},"content":"                    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"juneha1120"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"juneha1120"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"juneha1120"},"content":"        case EVENT:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"juneha1120"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"juneha1120"},"content":"                throw new JunoException(EVENT_ERROR, false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"juneha1120"},"content":"            } else if (!arguments.contains(\"/from\") || !arguments.contains(\"/to\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"juneha1120"},"content":"                throw new JunoException(EVENT_ERROR, true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"juneha1120"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"juneha1120"},"content":"                String[] argumentSplit \u003d arguments.split(\"/from\", 2);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"juneha1120"},"content":"                String[] fromTo \u003d argumentSplit[1].split(\"/to\", 2);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"juneha1120"},"content":"                String taskName \u003d argumentSplit[0].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"juneha1120"},"content":"                String taskFrom \u003d fromTo[0].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"juneha1120"},"content":"                String taskTo \u003d fromTo[1].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"juneha1120"},"content":"                DateTimeFormatter fromFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"juneha1120"},"content":"                DateTimeFormatter toFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"juneha1120"},"content":"                if (this.isTimeArgument(taskFrom)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"juneha1120"},"content":"                    fromFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy H:mm\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"juneha1120"},"content":"                    if (this.isTimeArgument(taskTo)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"juneha1120"},"content":"                        toFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy H:mm\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"juneha1120"},"content":"                        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"juneha1120"},"content":"                            LocalDateTime from \u003d LocalDateTime.parse(taskFrom, fromFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"juneha1120"},"content":"                            LocalDateTime to \u003d LocalDateTime.parse(taskTo, toFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"juneha1120"},"content":"                            return new AddCommand(new Event(taskName, from, to));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"juneha1120"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"juneha1120"},"content":"                            throw new JunoException(EVENT_ERROR, true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"juneha1120"},"content":"                        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"juneha1120"},"content":"                    } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"juneha1120"},"content":"                        toFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"juneha1120"},"content":"                        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"juneha1120"},"content":"                            LocalDateTime from \u003d LocalDateTime.parse(taskFrom, fromFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"juneha1120"},"content":"                            LocalDate to \u003d LocalDate.parse(taskTo, toFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"juneha1120"},"content":"                            return new AddCommand(new Event(taskName, from, to));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"juneha1120"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"juneha1120"},"content":"                            throw new JunoException(EVENT_ERROR, true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"juneha1120"},"content":"                        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"juneha1120"},"content":"                    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"juneha1120"},"content":"                } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"juneha1120"},"content":"                    fromFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"juneha1120"},"content":"                    if (this.isTimeArgument(taskTo)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"juneha1120"},"content":"                        toFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy H:mm\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"juneha1120"},"content":"                        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"juneha1120"},"content":"                            LocalDate from \u003d LocalDate.parse(taskFrom, fromFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"juneha1120"},"content":"                            LocalDateTime to \u003d LocalDateTime.parse(taskTo, toFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"juneha1120"},"content":"                            return new AddCommand(new Event(taskName, from, to));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"juneha1120"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"juneha1120"},"content":"                            throw new JunoException(EVENT_ERROR, true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"juneha1120"},"content":"                        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"juneha1120"},"content":"                    } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"juneha1120"},"content":"                        toFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"juneha1120"},"content":"                        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"juneha1120"},"content":"                            LocalDate from \u003d LocalDate.parse(taskFrom, fromFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"juneha1120"},"content":"                            LocalDate to \u003d LocalDate.parse(taskTo, toFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"juneha1120"},"content":"                            return new AddCommand(new Event(taskName, from, to));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"juneha1120"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"juneha1120"},"content":"                            throw new JunoException(EVENT_ERROR, true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"juneha1120"},"content":"                        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"juneha1120"},"content":"                    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"juneha1120"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"juneha1120"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"juneha1120"},"content":"        default:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(TASK_ERROR);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"juneha1120"},"content":"     * Prepares a {@link ShowTasksWithDateCommand} with a date argument parsed from the user input.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"juneha1120"},"content":"     * @param arguments The arguments provided by the user, expected to be a date string in the format \"d/M/yyyy\".","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"juneha1120"},"content":"     * @return A {@link ShowTasksWithDateCommand} object for displaying tasks on the specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException If the date format is invalid.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"juneha1120"},"content":"    protected Command prepareShowWithDateCommand(String arguments) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"juneha1120"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"juneha1120"},"content":"            LocalDate date \u003d LocalDate.parse(arguments.trim(), inputFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"juneha1120"},"content":"            return new ShowTasksWithDateCommand(date);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"juneha1120"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(DATE_ERROR);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"juneha1120"},"content":"     * Prepares a {@link MarkCommand} to mark a task as done, based on the provided task number.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"juneha1120"},"content":"     * @param arguments The arguments provided by the user, expected to be a valid task number.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"juneha1120"},"content":"     * @return A {@link MarkCommand} object for marking the task as done.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException If the task number is invalid or not a valid integer.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"juneha1120"},"content":"    protected Command prepareMarkCommand(String arguments) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"juneha1120"},"content":"        int taskNum;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"juneha1120"},"content":"            taskNum \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"juneha1120"},"content":"            return new MarkCommand(taskNum);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"juneha1120"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(MARK_ERROR, arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"juneha1120"},"content":"     * Prepares an {@link UnmarkCommand} to unmark a task as not done, based on the provided task number.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"juneha1120"},"content":"     * @param arguments The arguments provided by the user, expected to be a valid task number.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"juneha1120"},"content":"     * @return An {@link UnmarkCommand} object for unmarking the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException If the task number is invalid or not a valid integer.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"juneha1120"},"content":"    protected Command prepareUnmarkCommand(String arguments) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"juneha1120"},"content":"        int taskNum;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"juneha1120"},"content":"            taskNum \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"juneha1120"},"content":"            return new UnmarkCommand(taskNum);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"juneha1120"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(UNMARK_ERROR, arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"juneha1120"},"content":"     * Prepares a {@link DeleteCommand} to delete a task, based on the provided task number.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"juneha1120"},"content":"     * @param arguments The arguments provided by the user, expected to be a valid task number.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"juneha1120"},"content":"     * @return A {@link DeleteCommand} object for deleting the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException If the task number is invalid or not a valid integer.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"juneha1120"},"content":"    protected Command prepareDeleteCommand(String arguments) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"juneha1120"},"content":"        int taskNum;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"juneha1120"},"content":"            taskNum \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"juneha1120"},"content":"            return new DeleteCommand(taskNum);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"juneha1120"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(DELETE_ERROR, arguments);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":277}},{"path":"src/main/java/juno/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.CREATE_FILE_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.INVALID_FORMAT_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.INVALID_TYPE_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import static juno.enums.ErrorType.READ_FILE_ERROR;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"import java.util.List;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"import juno.task.Deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"import juno.task.Event;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"import juno.task.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"import juno.task.Todo;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":" * The {@code Storage} class is responsible for managing task data storage. It provides methods","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":" * for saving tasks to a file and loading tasks from a file. It ensures that tasks are properly","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":" * serialized and deserialized into a format that can be written to or read from the file system.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"public class Storage {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"    public static final String EXAMPLE \u003d \"./data/juno.txt\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code Storage} object that manages the file at the specified file path.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"     * @param filePath The path to the file where tasks will be stored.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"     * Converts a line of text from the file into a {@link Task} object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"     * The line must be in the format \"type | status | description | ...\".","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"     * This method handles different types of tasks including {@link Todo}, {@link Deadline}, and {@link Event}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"     * @param line The line of text from the file to be parsed.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"     * @return A {@link Task} object created from the parsed line.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException If the line is in an invalid format or the task type is unknown.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"    public static Task fromFileFormat(String line) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"        if (line.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"            return null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"        } else if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(INVALID_FORMAT_ERROR, line);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"        switch (type) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"        case \"T\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"        case \"D\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"            String by \u003d parts[3];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"            if (by.contains(\"T\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"                return new Deadline(description, isDone, LocalDateTime.parse(by));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"                return new Deadline(description, isDone, LocalDate.parse(by));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"        case \"E\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"            String from \u003d parts[3];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"            String to \u003d parts[4];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"            if (from.contains(\"T\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"                return new Event(description, isDone, LocalDateTime.parse(from),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"                        LocalDateTime.parse(to));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"                return new Event(description, isDone, LocalDate.parse(from),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"                        LocalDate.parse(to));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"        default:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(INVALID_TYPE_ERROR, line);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneha1120"},"content":"     * Saves the tasks from a {@link TaskList} to a file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneha1120"},"content":"     * The tasks are serialized into a format that can be saved to the file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juneha1120"},"content":"     * Each task is written as a line in the format \"type | status | description | ...\".","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juneha1120"},"content":"     * @param taskList The {@link TaskList} containing the tasks to be saved.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException If an error occurs while creating the file or writing to it.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juneha1120"},"content":"    public void saveTasks(TaskList taskList) throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juneha1120"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juneha1120"},"content":"        for (Map.Entry\u003cInteger, Task\u003e entry : taskList.getTaskList().entrySet()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juneha1120"},"content":"            data.append(entry.getValue().toFileFormat()).append(\"\\n\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juneha1120"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juneha1120"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juneha1120"},"content":"            Files.write(path, data.toString().getBytes());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juneha1120"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(CREATE_FILE_ERROR);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"juneha1120"},"content":"     * Loads tasks from a file and returns them as a {@link TaskList}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"juneha1120"},"content":"     * Each line in the file is parsed into a {@link Task} object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"juneha1120"},"content":"     * If the file doesn\u0027t exist, a new file is created.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"juneha1120"},"content":"     * @return A {@link TaskList} containing the tasks loaded from the file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"juneha1120"},"content":"     * @throws JunoException If an error occurs while reading the file or if the file format is invalid.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"juneha1120"},"content":"    public TaskList loadTasks() throws JunoException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"juneha1120"},"content":"        Map\u003cInteger, Task\u003e loadedTaskList \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"juneha1120"},"content":"        int loadedTaskCount \u003d 0;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"juneha1120"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"juneha1120"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"juneha1120"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"juneha1120"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"juneha1120"},"content":"                Files.createFile(path);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"juneha1120"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"juneha1120"},"content":"                throw new JunoException(CREATE_FILE_ERROR);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"juneha1120"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"juneha1120"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"juneha1120"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"juneha1120"},"content":"                Task task \u003d fromFileFormat(line);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"juneha1120"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"juneha1120"},"content":"                    loadedTaskList.put(++loadedTaskCount, task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"juneha1120"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"juneha1120"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"juneha1120"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"juneha1120"},"content":"            throw new JunoException(READ_FILE_ERROR);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"juneha1120"},"content":"        return new TaskList(loadedTaskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":149}},{"path":"src/main/java/juno/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static juno.commands.Command.EXAMPLE_PREFIX;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" * Represents a {@code Deadline} task that has a specified due date/time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" * This class extends the {@link Task} class and encapsulates details about a task","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" * that must be completed by a certain date or time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"            + \" : adds task due specified date/time to task list.\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"            + \" \".repeat(COMMAND_WORD.length()) + EXAMPLE_PREFIX + COMMAND_WORD + \" study CS2103T /by 01/01/1000 0100\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code Deadline} task with the specified task name, completion status, and due","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"     * {@code LocalDateTime}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"     * @param isDone The completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"     * @param by The {@code LocalDateTime} by which the task is due.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"    public Deadline(String taskName, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"        this.byDate \u003d by.toLocalDate();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code Deadline} task with the specified task name, completion status, and due {@code LocalDate}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"     * @param isDone The completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"     * @param byDate The {@code LocalDate} by which the task is due.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"    public Deadline(String taskName, boolean isDone, LocalDate byDate) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"        this.by \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code Deadline} task with the specified task name and due {@code LocalDateTime}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"     * The task is considered not done initially.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"     * @param by The {@code LocalDateTime} by which the task is due.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"    public Deadline(String taskName, LocalDateTime by) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"        super(taskName, false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"        this.byDate \u003d by.toLocalDate();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code Deadline} task with the specified task name and due {@code LocalDate}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"     * The task is considered not done initially.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"     * @param byDate The {@code LocalDate} by which the task is due.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"    public Deadline(String taskName, LocalDate byDate) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"        super(taskName, false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"        this.by \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"     * Returns the due {@code LocalDate} of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"     * @return The {@code LocalDate} by which the task is due.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"    public LocalDate getByDate() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"        return byDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"     * Converts the {@code Deadline} to a file-friendly format for saving. The format includes the event type (\"D\"),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"     * completion status, task name, and date/time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneha1120"},"content":"     * @return A string representing the {@code Deadline} task in a format suitable for saving to a file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juneha1120"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juneha1120"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + this.getTaskName() + \" | \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juneha1120"},"content":"            + (this.by \u003d\u003d null ? this.byDate : this.by);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juneha1120"},"content":"     * Returns a string representation of the {@code Deadline} task, including its status and due date/time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juneha1120"},"content":"     * @return A string representing the {@code Deadline} task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juneha1120"},"content":"    public String toString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juneha1120"},"content":"        return \"[D]\" + super.toString() + \" (by \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juneha1120"},"content":"            + (this.by \u003d\u003d null ? this.byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juneha1120"},"content":"                : this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy H:mma\"))) + \")\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":108}},{"path":"src/main/java/juno/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static juno.commands.Command.EXAMPLE_PREFIX;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" * Represents a {@code Event} task that has a specified start date/time and end date/time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" * This class extends the {@link Task} class and encapsulates details about a task","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":" * with the specified start date/time and end date/time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"            + \" : adds task from and to specified date/time to task list.\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"            + \" \".repeat(COMMAND_WORD.length()) + EXAMPLE_PREFIX + COMMAND_WORD","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"            + \" study CS2103T /from 01/01/1000 0100\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"            + \"\\n                                             /to 02/01/1000 0200\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"     * Constructs an {@code Event} with the specified task name, completion status, start date/time, and end date/time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"     * @param isDone The completion status of the event (true if completed, false otherwise).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"     * @param from The start date and time of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"     * @param to The end date and time of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"    public Event(String taskName, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"        this.fromDate \u003d from.toLocalDate();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"        this.toDate \u003d to.toLocalDate();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"     * Constructs an {@code Event} with the specified task name, completion status, start date, and end date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"     * @param isDone The completion status of the event (true if completed, false otherwise).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"     * @param fromDate The start date of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"     * @param toDate The end date of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"    public Event(String taskName, boolean isDone, LocalDate fromDate, LocalDate toDate) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"        this.from \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"        this.to \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"     * Constructs an {@code Event} with the specified task name, start date/time, and end date/time. The event is marked","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"     * as not done by default.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"     * @param from The start date and time of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"     * @param to The end date and time of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"    public Event(String taskName, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"        super(taskName, false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"        this.fromDate \u003d from.toLocalDate();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"        this.toDate \u003d to.toLocalDate();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"     * Constructs an {@code Event} with the specified task name, start date/time, and end date. The event is marked as","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"     * not done by default.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"     * @param from The start date and time of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"     * @param toDate The end date of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"    public Event(String taskName, LocalDateTime from, LocalDate toDate) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"        super(taskName, false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"        this.fromDate \u003d from.toLocalDate();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"        this.to \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneha1120"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juneha1120"},"content":"     * Constructs an {@code Event} with the specified task name, start date, and end date/time. The event is marked as","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juneha1120"},"content":"     * not done by default.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juneha1120"},"content":"     * @param fromDate The start date of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juneha1120"},"content":"     * @param to The end date and time of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juneha1120"},"content":"    public Event(String taskName, LocalDate fromDate, LocalDateTime to) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juneha1120"},"content":"        super(taskName, false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juneha1120"},"content":"        this.from \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juneha1120"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juneha1120"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juneha1120"},"content":"        this.toDate \u003d to.toLocalDate();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"juneha1120"},"content":"     * Constructs an {@code Event} with the specified task name, start date, and end date. The event is marked as not","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"juneha1120"},"content":"     * done by default.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"juneha1120"},"content":"     * @param fromDate The start date of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"juneha1120"},"content":"     * @param toDate The end date of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"juneha1120"},"content":"    public Event(String taskName, LocalDate fromDate, LocalDate toDate) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"juneha1120"},"content":"        super(taskName, false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"juneha1120"},"content":"        this.from \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"juneha1120"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"juneha1120"},"content":"        this.to \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"juneha1120"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"juneha1120"},"content":"     * Returns the start date of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"juneha1120"},"content":"     * @return The start date of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"juneha1120"},"content":"    public LocalDate getFromDate() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"juneha1120"},"content":"        return fromDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"juneha1120"},"content":"     * Returns the end date of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"juneha1120"},"content":"     * @return The end date of the event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"juneha1120"},"content":"    public LocalDate getToDate() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"juneha1120"},"content":"        return toDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"juneha1120"},"content":"     * Converts the {@code Event} to a file-friendly format for saving. The format includes the event type (\"E\"),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"juneha1120"},"content":"     * completion status, task name, start date/time, and end date/time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"juneha1120"},"content":"     * @return A string representing the {@code Event} task in a format suitable for saving to a file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"juneha1120"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"juneha1120"},"content":"        return \"E | \" + (isDone() ? \"1\" : \"0\") + \" | \" + this.getTaskName() + \" | \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"juneha1120"},"content":"            + (this.from \u003d\u003d null ? this.fromDate : this.from) + \" | \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"juneha1120"},"content":"            + (this.to \u003d\u003d null ? this.toDate : this.to);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"juneha1120"},"content":"     * Returns a string representation of the {@code Event} task, including its status and start and end date/time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"juneha1120"},"content":"     * @return A string representing the {@code Event} task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"juneha1120"},"content":"    public String toString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"juneha1120"},"content":"        return \"[E]\" + super.toString() + \" (from \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"juneha1120"},"content":"            + (this.from \u003d\u003d null ? this.fromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"juneha1120"},"content":"                : this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy H:mma\")))","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"juneha1120"},"content":"            + \" to \" + (this.to \u003d\u003d null ? this.toDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"juneha1120"},"content":"                : this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy H:mma\"))) + \")\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":167}},{"path":"src/main/java/juno/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":" * Represents a generic task with a name and completion status.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":" * This class provides basic task functionality that can be extended by more specific task types","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":" * like {@link Deadline}, {@link Event}, and {@link Todo}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"public class Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"    protected String taskName;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code Task} with the specified name and sets its completion status to {@code false}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"    public Task(String taskName) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code Task} with the specified name and completion status.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"     * @param isDone The completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"     * Returns the name of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"     * @return The name of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"    public String getTaskName() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"        return this.taskName;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"     * Returns whether the task is marked as completed.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"    public void mark() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"     * Unmarks the task, setting it as not completed.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"     * Returns the status icon representing the task\u0027s completion status.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"     * The icon is \"X\" if the task is completed, otherwise a space character is returned.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"     * @return The status icon representing the completion status.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"     * Converts the task to a file-friendly format for saving.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"     * This is an abstract method intended to be overridden by subclasses like {@link Deadline},","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"     * {@link Event}, and {@link Todo} to provide specific file formats.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"     * @return A string representing the task in a format suitable for saving to a file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"        return \"\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"     * Returns a string representation of the task, including its completion status and name.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneha1120"},"content":"     * The format is \"[status icon] task name\", where status icon is \"X\" if completed, or \" \" if not.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneha1120"},"content":"     * @return A string representing the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juneha1120"},"content":"    public String toString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juneha1120"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getTaskName();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":96}},{"path":"src/main/java/juno/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import java.util.List;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":" * Represents a list of {@link Task}s, where each task is identified by a unique task number.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":" * Provides functionality to manage tasks, such as adding tasks, retrieving task lists, and updating task counts.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"public class TaskList {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"    private Map\u003cInteger, Task\u003e taskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"    private int taskCount;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"     * Initializes an empty task list using a {@link LinkedHashMap} to maintain the insertion order.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"        this.taskList \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code TaskList} with the specified initial task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"     * @param taskList A map containing tasks, where the key is the task number, and the value is the {@link Task}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"    public TaskList(Map\u003cInteger, Task\u003e taskList) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"        this.taskCount \u003d taskList.size();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"     * Adds a task to the task list. The task is assigned the next available task number.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"     * Updates the task count after adding the new task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"     * @param task The {@link Task} to be added to the task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"    public void addToTaskList(Task task) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"        this.taskList.put(this.getTaskCount() + 1, task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"        updateTaskCount();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"     * Retrieves the current task list as a map, where the key is the task number, and the value is the {@link Task}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"     * @return A map representing the task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"    public Map\u003cInteger, Task\u003e getTaskList() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"        return this.taskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"     * Sets a new task list by replacing the current task list with the specified map.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"     * @param taskList A map containing the new task list to set.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"    public void setTaskList(Map\u003cInteger, Task\u003e taskList) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"     * Retrieves the current number of tasks in the task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"        return this.taskCount;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"     * Updates the task count to reflect the current size of the task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"     * This method is invoked after adding or removing tasks to ensure the count remains accurate.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"    public void updateTaskCount() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"        this.taskCount \u003d this.taskList.size();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"     * Converts the task list into an array of strings, each string representing a task with its task number.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"     * @return An array of strings, where each string represents a task in the list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"    public String[] getStringTaskList() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"        this.taskList.forEach((taskNum, task) -\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneha1120"},"content":"                list.add(\" \" + taskNum + \". \" + task));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneha1120"},"content":"        return list.toArray(new String[0]);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":91}},{"path":"src/main/java/juno/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static juno.commands.Command.EXAMPLE_PREFIX;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":" * Represents a {@link Task} that does not have any specific date/time associated with it.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":" * This class extends the {@link Task} class and encapsulates details about a task","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":" * without any additional date or time information.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD + \" : adds task without any date/time to task list.\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"            + \" \".repeat(COMMAND_WORD.length()) + EXAMPLE_PREFIX + COMMAND_WORD + \" study CS2103T\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code Todo} task with the specified task name. The task is marked as not done by default.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the todo task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"        super(taskName);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code Todo} task with the specified task name and completion status.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"     * @param taskName The name of the todo task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"     * @param isDone The completion status of the todo task (true if completed, false otherwise).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"        super(taskName, isDone);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"     * Converts the {@code Todo} to a file-friendly format for saving. The format includes the task type (\"T\"),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"     * completion status, and task name.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"     * @return A string representing the todo task in a format suitable for saving to a file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"        return \"T | \" + (isDone() ? \"1\" : \"0\") + \" | \" + this.getTaskName();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"     * Returns a string representation of the {@code Todo} task, including its status.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"     * @return A string representing the {@code Todo} task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"    public String toString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":54}},{"path":"src/main/java/juno/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static juno.commands.CommandList.COMMAND_DESCRIPTION_LIST;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_ADD_START;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_BYE;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_CALL;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_DELETE_START;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_FIND_START;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_HELLO;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_HELP;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_LOAD;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_MARK_START;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_NO_TASKS;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_SHOW_TASKS_START;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_TRY_AGAIN;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"import static juno.main.Messages.MESSAGE_UNMARK_START;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"import juno.task.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":" * The {@code Ui} class handles user interactions for the Juno application.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":" * It provides methods for displaying messages, task lists, and other relevant","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":" * information to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":" * It also provides functionality for reading user input and controlling the flow","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":" * of the user interface.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"public class Ui {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"    public static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"    public static final String EMPTY_DIVIDER \u003d \"\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"    public static final String LINE_PREFIX \u003d \" \";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"    public static final String[] JUNO_LOGO \u003d {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"        \"      _\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"        \"     | |_   _ _____  ____\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"        \"  _  | | | | |  _  \\\\/ _  \\\\\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"        \" | |_| | |_| | | | | |_| |\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"        \"  \\\\____|\\\\____|_| |_|_____/\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"    };","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"     * Constructs a {@code Ui} object that handles user input and output.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"    public Ui() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"     * Checks if the input line should be ignored (i.e., is empty or whitespace).","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"     * @param rawInputLine The user input to check.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"     * @return {@code true} if the input line should be ignored, {@code false} otherwise.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"    public boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"        return rawInputLine.trim().isEmpty();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"     * The input is trimmed and empty lines are ignored.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"     * @return The full command entered by the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"        String fullInputLine \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"        while (this.shouldIgnore(fullInputLine)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"            fullInputLine \u003d scanner.nextLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"        return fullInputLine;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"     * Displays the provided messages to the user, with the appropriate formatting.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"     * @param messages The messages to display.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"    public void showToUser(String... messages) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"            if (message.equals(DIVIDER)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneha1120"},"content":"                System.out.println(message);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneha1120"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneha1120"},"content":"                System.out.println(LINE_PREFIX + message);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneha1120"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juneha1120"},"content":"     * Displays a divider line to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juneha1120"},"content":"    public void showDivider() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(DIVIDER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juneha1120"},"content":"     * Displays a greeting message along with the Juno logo.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juneha1120"},"content":"    public void showGreetingMessage() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juneha1120"},"content":"                DIVIDER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"juneha1120"},"content":"                JUNO_LOGO);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juneha1120"},"content":"                EMPTY_DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"juneha1120"},"content":"                MESSAGE_HELLO,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"juneha1120"},"content":"                EMPTY_DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"juneha1120"},"content":"                MESSAGE_CALL,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"juneha1120"},"content":"                DIVIDER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"juneha1120"},"content":"     * Displays the loading message and the current task list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"juneha1120"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"juneha1120"},"content":"    public void showLoadingMessage(TaskList taskList) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"juneha1120"},"content":"                DIVIDER,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"juneha1120"},"content":"                MESSAGE_LOAD,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"juneha1120"},"content":"                EMPTY_DIVIDER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"juneha1120"},"content":"        this.showTasks(taskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"juneha1120"},"content":"                DIVIDER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"juneha1120"},"content":"     * Displays the help message with a description of available commands.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"juneha1120"},"content":"    public void showHelp() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"juneha1120"},"content":"                MESSAGE_HELP,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"juneha1120"},"content":"                EMPTY_DIVIDER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(COMMAND_DESCRIPTION_LIST);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"juneha1120"},"content":"     * Displays a message indicating that a task has been added to the list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"juneha1120"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"juneha1120"},"content":"     * @param taskCount The total number of tasks after addition.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"juneha1120"},"content":"    public void showAdd(Task task, int taskCount) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"juneha1120"},"content":"                MESSAGE_ADD_START,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"juneha1120"},"content":"                LINE_PREFIX + task.toString(),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"juneha1120"},"content":"                \"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"juneha1120"},"content":"     * Displays the list of all tasks to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"juneha1120"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"juneha1120"},"content":"    public void showTasks(TaskList taskList) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"juneha1120"},"content":"        if (taskList.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"juneha1120"},"content":"            this.showToUser(MESSAGE_NO_TASKS);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"juneha1120"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"juneha1120"},"content":"            this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"juneha1120"},"content":"                    MESSAGE_SHOW_TASKS_START);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"juneha1120"},"content":"            this.showToUser(taskList.getStringTaskList());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"juneha1120"},"content":"            this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"juneha1120"},"content":"                    \"You have \" + taskList.getTaskCount() + \" tasks in the list.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"juneha1120"},"content":"     * Displays the list of tasks that are scheduled for a specific date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"juneha1120"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"juneha1120"},"content":"     * @param date The specific date to filter tasks by.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"juneha1120"},"content":"    public void showTasksWithDate(TaskList taskList, LocalDate date) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"juneha1120"},"content":"                MESSAGE_SHOW_TASKS_START);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(taskList.getStringTaskList());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(\"You have \" + taskList.getTaskCount() + \" tasks on \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"juneha1120"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"juneha1120"},"content":"     * Displays the list of tasks that contains a specific keyword","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"juneha1120"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"juneha1120"},"content":"     * @param keyword The specific keyword to filter tasks by.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"juneha1120"},"content":"    public void showFind(TaskList taskList, String keyword) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"juneha1120"},"content":"                MESSAGE_FIND_START);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(taskList.getStringTaskList());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"juneha1120"},"content":"                \"You have \" + taskList.getTaskCount() + \" tasks with keyword : \" + keyword);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"juneha1120"},"content":"     * Displays a message indicating that a task has been marked as completed.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"juneha1120"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"juneha1120"},"content":"    public void showMark(Task task) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"juneha1120"},"content":"                MESSAGE_MARK_START,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"juneha1120"},"content":"                LINE_PREFIX + task.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"juneha1120"},"content":"     * Displays a message indicating that a task has been unmarked.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"juneha1120"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"juneha1120"},"content":"    public void showUnmark(Task task) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"juneha1120"},"content":"                MESSAGE_UNMARK_START,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"juneha1120"},"content":"                LINE_PREFIX + task.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"juneha1120"},"content":"     * Displays a message indicating that a task has been deleted from the list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"juneha1120"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"juneha1120"},"content":"     * @param taskCount The total number of tasks after deletion.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"juneha1120"},"content":"    public void showDelete(Task task, int taskCount) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"juneha1120"},"content":"                MESSAGE_DELETE_START,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"juneha1120"},"content":"                LINE_PREFIX + task.toString(),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"juneha1120"},"content":"                \"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"juneha1120"},"content":"     * Displays the exit message to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"juneha1120"},"content":"    public void showExitMessage() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"juneha1120"},"content":"                MESSAGE_BYE,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"juneha1120"},"content":"                EMPTY_DIVIDER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"juneha1120"},"content":"                JUNO_LOGO);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"juneha1120"},"content":"     * Displays a message asking the user to try again in case of an error.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"juneha1120"},"content":"    public void showTryAgainMessage() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"juneha1120"},"content":"                MESSAGE_TRY_AGAIN);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"juneha1120"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"juneha1120"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"juneha1120"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"juneha1120"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"juneha1120"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"juneha1120"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"juneha1120"},"content":"        this.showToUser(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"juneha1120"},"content":"                message);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":265}},{"path":"src/test/java/juno/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import juno.task.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"public class AddCommandTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"    public void execute_nullTask_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"            Task invalidTask \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"            new AddCommand(invalidTask).execute(new TaskList(), new Storage(Storage.EXAMPLE), new Ui());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException | JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":21}},{"path":"src/test/java/juno/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import java.util.List;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"import juno.task.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"import juno.task.Todo;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"    public void deleteTask_emptyTaskList_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"            TaskList emptyTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"            new DeleteCommand(1).deleteTask(emptyTaskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    public void deleteTask_invalidTaskNum_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"            TaskList exampleTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"            exampleTaskList.addToTaskList(new Todo(\"Task 1\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"            int invalidTaskNum \u003d -1;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"            new DeleteCommand(invalidTaskNum).deleteTask(exampleTaskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"    public void renumberTasks_preservesOrder() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"        taskList.getTaskList().put(10, new Todo(\"Task A\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"        taskList.getTaskList().put(20, new Todo(\"Task B\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"        taskList.getTaskList().put(30, new Todo(\"Task C\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"        new DeleteCommand(1).renumberTasks(taskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"        List\u003cString\u003e taskDescriptions \u003d taskList.getTaskList().values()","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"                .stream()","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"                .map(Task::getTaskName)","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"                .toList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"        assertEquals(List.of(\"Task A\", \"Task B\", \"Task C\"), taskDescriptions);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"    public void execute_invalidTaskNum_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"            TaskList exampleTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"            exampleTaskList.addToTaskList(new Todo(\"Task 1\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"            int invalidTaskNum \u003d -1;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"            new DeleteCommand(invalidTaskNum).execute(exampleTaskList, new Storage(Storage.EXAMPLE), new Ui());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":67}},{"path":"src/test/java/juno/commands/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import juno.task.Todo;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"public class ExitCommandTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    public void isExit_exitCommand_returnsTrue() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"        Command exitCommand \u003d new ExitCommand();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"        assertTrue(ExitCommand.isExit(exitCommand));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"    public void isExit_nonExitCommand_returnsFalse() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"        Command nonExitCommand \u003d new AddCommand(new Todo(\"Task 1\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"        assertFalse(ExitCommand.isExit(nonExitCommand));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":22}},{"path":"src/test/java/juno/commands/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"import juno.task.Deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"public class FindCommandTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"    public void getTasksWithKeyword_emptyTaskList_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"            TaskList emptyTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"            String exampleKeyword \u003d \"study\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"            new FindCommand(exampleKeyword).getTasksWithKeyword(emptyTaskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"    public void getTasksWithKeyword_emptyKeyword_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"            TaskList exampleTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleDate \u003d LocalDate.parse(\"1/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"            exampleTaskList.addToTaskList(new Deadline(\"Task 1\", exampleDate));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"            new FindCommand(\"\").getTasksWithKeyword(exampleTaskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"        } catch (DateTimeParseException | JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"    public void execute_emptyKeyword_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"            TaskList exampleTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleDate \u003d LocalDate.parse(\"1/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"            exampleTaskList.addToTaskList(new Deadline(\"Task 1\", exampleDate));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"            new FindCommand(\"\").execute(exampleTaskList, new Storage(Storage.EXAMPLE), new Ui());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"        } catch (DateTimeParseException | JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":47}},{"path":"src/test/java/juno/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import juno.task.Todo;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"public class MarkCommandTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"    public void execute_invalidTaskNum_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"            TaskList exampleTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"            exampleTaskList.addToTaskList(new Todo(\"Task 1\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"            int invalidTaskNum \u003d -1;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"            new MarkCommand(invalidTaskNum).execute(exampleTaskList, new Storage(Storage.EXAMPLE), new Ui());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":23}},{"path":"src/test/java/juno/commands/ShowTasksCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"public class ShowTasksCommandTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"    public void execute_nullTaskList_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"            TaskList nullTaskList \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"            new ShowTasksCommand().execute(nullTaskList, new Storage(Storage.EXAMPLE), new Ui());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":19}},{"path":"src/test/java/juno/commands/ShowTasksWithDateCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"import juno.task.Deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"public class ShowTasksWithDateCommandTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"    public void getTasksOnDate_emptyTaskList_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"            TaskList emptyTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleDate \u003d LocalDate.parse(\"1/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"            new ShowTasksWithDateCommand(exampleDate).getTasksOnDate(emptyTaskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    public void getTasksOnDate_invalidDate_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"            TaskList exampleTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleDate \u003d LocalDate.parse(\"1/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"            exampleTaskList.addToTaskList(new Deadline(\"Task 1\", exampleDate));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"            LocalDate invalidDate \u003d LocalDate.parse(\"1/13/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"            new ShowTasksWithDateCommand(invalidDate).getTasksOnDate(exampleTaskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"        } catch (DateTimeParseException | JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"    public void execute_invalidDate_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"            TaskList exampleTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleDate \u003d LocalDate.parse(\"1/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"            exampleTaskList.addToTaskList(new Deadline(\"Task 1\", exampleDate));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"            LocalDate invalidDate \u003d LocalDate.parse(\"1/13/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"            new ShowTasksWithDateCommand(invalidDate).execute(exampleTaskList, new Storage(Storage.EXAMPLE), new Ui());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"        } catch (DateTimeParseException | JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":52}},{"path":"src/test/java/juno/commands/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import juno.storage.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import juno.task.Todo;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.ui.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"    public void execute_invalidTaskNum_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"            TaskList exampleTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"            exampleTaskList.addToTaskList(new Todo(\"Task 1\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"            int invalidTaskNum \u003d -1;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"            new UnmarkCommand(invalidTaskNum).execute(exampleTaskList, new Storage(Storage.EXAMPLE), new Ui());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":23}},{"path":"src/test/java/juno/main/JunoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.main;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"public class JunoTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"    public void run_invalidFilePath_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"            String invalidFilePath \u003d \"111111111\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"            Juno invalidJuno \u003d new Juno(invalidFilePath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"            invalidJuno.run();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":16}},{"path":"src/test/java/juno/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import juno.commands.TryAgainCommand;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import juno.enums.TaskType;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"    public void parse_nullString_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"            String nullString \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"            new Parser().parse(nullString);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException | NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"    public void parse_nonExistingStringCommand_returnsTryAgainCommand() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"        String nonExistingStringCommand \u003d \"nonExistingStringCommand\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"            assertInstanceOf(TryAgainCommand.class, new Parser().parse(nonExistingStringCommand));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"    public void isTimeArgument_nullString_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"            String nullString \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"            new Parser().isTimeArgument(nullString);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"    public void prepareAddCommand_nullTaskType_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"            String exampleString \u003d \"Task 1\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"            new Parser().prepareAddCommand(null, exampleString);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException | NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"    public void prepareAddCommand_emptyString_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"            new Parser().prepareAddCommand(TaskType.TODO, \"\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"    public void prepareShowWithDateCommand_invalidString_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"            String invalidString \u003d \"invalid\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"            new Parser().prepareShowWithDateCommand(invalidString);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"    public void prepareMarkCommand_invalidString_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"            String invalidString \u003d \"invalid\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"            new Parser().prepareMarkCommand(invalidString);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"    public void prepareUnmarkCommand_invalidString_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"            String invalidString \u003d \"invalid\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"            new Parser().prepareUnmarkCommand(invalidString);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juneha1120"},"content":"    public void prepareDeleteCommand_invalidString_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juneha1120"},"content":"            String invalidString \u003d \"invalid\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juneha1120"},"content":"            new Parser().prepareDeleteCommand(invalidString);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":100}},{"path":"src/test/java/juno/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import juno.exceptions.JunoException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"import juno.task.Todo;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"    public void fromFileFormat_invalidString_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"            String invalidString \u003d \"invalid\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"            Storage.fromFileFormat(invalidString);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"    public void saveTasks_nullTaskList_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"            TaskList nullTaskList \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"            new Storage(Storage.EXAMPLE).saveTasks(nullTaskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException | NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"    public void saveTasks_invalidFilePath_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"            TaskList exampleTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"            exampleTaskList.addToTaskList(new Todo(\"Task 1\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"            String invalidFilePath \u003d \"111111111\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"            new Storage(invalidFilePath).saveTasks(exampleTaskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException | NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"    public void loadTasks_invalidFilePath_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"            String invalidFilePath \u003d \"111111111\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"            new Storage(invalidFilePath).loadTasks();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"        } catch (JunoException | NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":51}},{"path":"src/test/java/juno/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    public void deadline_nullTaskName_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleBy \u003d LocalDate.parse(\"1/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"            new Deadline(null, exampleBy);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    public void deadline_nullBy_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"            new Deadline(\"Deadline 1\", (LocalDateTime) null);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"    public void deadline_invalidBy_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"            LocalDate invalidBy \u003d LocalDate.parse(\"1/13/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"            new Deadline(\"Deadline 1\", invalidBy);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":39}},{"path":"src/test/java/juno/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"public class EventTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    public void event_nullTaskName_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleFrom \u003d LocalDate.parse(\"1/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleTo \u003d LocalDate.parse(\"2/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"            new Event(null, exampleFrom, exampleTo);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    public void event_nullFrom_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleTo \u003d LocalDate.parse(\"2/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"            new Event(\"Deadline 1\", (LocalDateTime) null, exampleTo);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"    public void event_invalidFrom_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"            LocalDate invalidFrom \u003d LocalDate.parse(\"1/13/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleTo \u003d LocalDate.parse(\"2/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"            new Event(\"Deadline 1\", invalidFrom, exampleTo);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"    public void event_nullTo_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleFrom \u003d LocalDate.parse(\"2/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"            new Event(\"Deadline 1\", exampleFrom, (LocalDateTime) null);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"    public void event_invalidTo_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleFrom \u003d LocalDate.parse(\"1/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"            LocalDate invalidTo \u003d LocalDate.parse(\"1/13/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"            new Event(\"Deadline 1\", exampleFrom, invalidTo);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":62}},{"path":"src/test/java/juno/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"    public void taskList_nullTaskList_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"            Map\u003cInteger, Task\u003e nullTaskList \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"            new TaskList(nullTaskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"    public void addToTaskList_nullTask_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"            Task nullTask \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"            new TaskList().addToTaskList(nullTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"    public void setTaskList_nullTaskList_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"            Map\u003cInteger, Task\u003e nullTaskList \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"            new TaskList().setTaskList(nullTaskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"    public void getStringTaskList_nullTaskList_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"            Map\u003cInteger, Task\u003e nullTaskList \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"            new TaskList(nullTaskList).getStringTaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":47}},{"path":"src/test/java/juno/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"public class TaskTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"    public void task_nullTaskName_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"            new Task(null);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":14}},{"path":"src/test/java/juno/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"public class TodoTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"    public void todo_nullTaskName_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"            new Todo(null);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":14}},{"path":"src/test/java/juno/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"package juno.ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"import juno.task.Deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"public class UiTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"    public void shouldIgnore_nullString_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"            new Ui().shouldIgnore(null);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"    public void showToUser_nullStrings_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"            new Ui().showToUser(null, null);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"    public void showLoadingMessage_nullTaskList_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"            new Ui().showLoadingMessage(null);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"    public void showAdd_nullTask_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"            new Ui().showAdd(null, 1);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"    public void showTasks_nullTaskList_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"            new Ui().showTasks(null);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"    public void showTasksWithDate_nullTaskList_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"            LocalDate exampleDate \u003d LocalDate.parse(\"1/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"            new Ui().showTasksWithDate(null, exampleDate);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"    public void showTasksWithDate_nullDate_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"        TaskList exampleTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"        LocalDate exampleDate \u003d LocalDate.parse(\"1/1/1000\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"        exampleTaskList.addToTaskList(new Deadline(\"Task 1\", exampleDate));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"            new Ui().showTasksWithDate(exampleTaskList, null);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"    public void showMark_nullTask_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"            new Ui().showMark(null);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneha1120"},"content":"    public void showUnmark_nullTask_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneha1120"},"content":"            new Ui().showUnmark(null);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juneha1120"},"content":"    public void showDelete_nullTask_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juneha1120"},"content":"            new Ui().showDelete(null, 1);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juneha1120"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juneha1120"},"content":"    public void showError_nullString_throwsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"juneha1120"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"juneha1120"},"content":"            new Ui().showError(null);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"juneha1120"},"content":"        } catch (NullPointerException ignored) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juneha1120"},"content":"            // Ignored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"juneha1120"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"juneha1120"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"juneha1120"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"juneha1120":114}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juneha1120"},"content":"# testing invalid command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juneha1120"},"content":"    # should recognise invalid command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juneha1120"},"content":"    bbye","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juneha1120"},"content":"# testing help command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juneha1120"},"content":"    # should show all available commands","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juneha1120"},"content":"    juno","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"# testing show tasks command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"    # should show empty task list","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"    show tasks","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juneha1120"},"content":"# testing add todo task command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juneha1120"},"content":"    # should add a todo named read book","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juneha1120"},"content":"    todo read book","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juneha1120"},"content":"# testing add deadline task command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juneha1120"},"content":"    # should catch invalid format","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juneha1120"},"content":"    deadline read book","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juneha1120"},"content":"    # should catch invalid format","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juneha1120"},"content":"    deadline read book /by Monday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juneha1120"},"content":"    # should add a deadline by Jan 1 1000","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juneha1120"},"content":"    deadline read book /by 1/1/1000","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juneha1120"},"content":"    # should add a deadline by Jan 1 1000 01:00am","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juneha1120"},"content":"    deadline read book /by 1/1/1000 01:00","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juneha1120"},"content":"# testing add event task command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juneha1120"},"content":"    # should catch invalid format","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juneha1120"},"content":"    event read book /from","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juneha1120"},"content":"    # should catch invalid format","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juneha1120"},"content":"    event read book /from 1pm /to 1pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juneha1120"},"content":"    # should add an event from Jan 1 1000 to Jan 2 1000","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juneha1120"},"content":"    event read book /from 1/1/1000 /to 2/1/1000","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juneha1120"},"content":"    # should add an event from Jan 1 1000 01:00am to Jan 2 1000 11:00pm","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juneha1120"},"content":"    event read book /from 1/1/1000 01:00 /to 2/1/1000 23:00","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juneha1120"},"content":"# testing show tasks command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juneha1120"},"content":"    # should show list of 5 tasks","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juneha1120"},"content":"    show tasks","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juneha1120"},"content":"# testing show tasks with date command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juneha1120"},"content":"    # should catch invalid format","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juneha1120"},"content":"    show tasks on","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juneha1120"},"content":"    # should show list of 4 tasks on Jan 1 1000","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juneha1120"},"content":"    show tasks on 1/1/1000","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juneha1120"},"content":"# testing find command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juneha1120"},"content":"    # should catch no keyword error","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juneha1120"},"content":"    find","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juneha1120"},"content":"    # should catch no such task error","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juneha1120"},"content":"    find play","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juneha1120"},"content":"    # should show list of 5 tasks with read","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juneha1120"},"content":"    find read","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juneha1120"},"content":"# testing mark command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juneha1120"},"content":"    # should mark and show marked task","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juneha1120"},"content":"    mark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juneha1120"},"content":"    # should catch marking again error","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juneha1120"},"content":"    mark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juneha1120"},"content":"    # should catch no such task error","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juneha1120"},"content":"    mark 5","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juneha1120"},"content":"# testing unmark command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juneha1120"},"content":"    # should unmark and show unmarked task","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juneha1120"},"content":"    unmark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juneha1120"},"content":"    # should catch unmarking again error","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juneha1120"},"content":"    unmark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juneha1120"},"content":"    # should catch no such task error","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juneha1120"},"content":"    unmark 5","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juneha1120"},"content":"# testing delete command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"juneha1120"},"content":"    # should delete and show deleted task","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"juneha1120"},"content":"    delete 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"juneha1120"},"content":"    # should catch no such task error","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juneha1120"},"content":"    delete","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"juneha1120"},"content":"# testing show tasks command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"juneha1120"},"content":"    # should show list of 4 tasks","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"juneha1120"},"content":"    show tasks","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"juneha1120"},"content":"# testing exit command","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"juneha1120"},"content":"##########################################################","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"juneha1120"},"content":"    # should exit properly","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"juneha1120"},"content":"    bye","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"juneha1120":125}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juneha1120"},"content":"# delete saved files from previous run","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juneha1120"},"content":"if [ -e \"./data/juno.txt\" ]","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juneha1120"},"content":"then","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juneha1120"},"content":"    rm data/juno.txt","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juneha1120"},"content":"fi","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juneha1120"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juneha1120"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/juno/main/Juno.java","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juneha1120"},"content":"java -classpath ../bin juno.main.Juno \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"juneha1120":8,"-":36}}]
