[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"# Hirono: Your Personal Task Manager","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"\u003e \"The art of progress is to preserve order amid change and to preserve change amid order.\" ‚Äì Alfred North Whitehead üß†","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"Hirono is a **text-based task management application** designed to help you **stay organized and productive**.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"## üìå About Hirono","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"Hirono is a **command-line and GUI-based task management application** that helps you manage your daily tasks efficiently.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"### Why use Hirono?","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"- ‚úÖ **Easy to use** ‚Äì Simple text-based commands for quick task management.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"- ‚ö° **Fast \u0026 Efficient** ‚Äì Lightweight and responsive.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"- üîß **Customizable** ‚Äì Supports different task types (*ToDo, Deadlines, Events*).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"---","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"## üöÄ Features","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"### üìù **Task Management**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"- Add, delete, mark, and unmark tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"- Support for **\"ToDo\"**, **\"Deadline\"**, and **\"Event\"** tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"### üìÖ **Event Scheduling**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"- Keep track of deadlines and events.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"- Manage time efficiently with **precise scheduling**.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"### üîç **Search \u0026 Filter**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"- Quickly **find tasks** by keywords or dates.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"- Filter tasks that are due today.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"---","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"## üí° Getting Started","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"### 1Ô∏è‚É£ **Running the Application**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"To run the application, use:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"```sh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"java -jar hirono.jar","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"### 2Ô∏è‚É£ **Adding Tasks**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"To add new tasks to your list, use:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"```sh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"# Todo Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"Example: todo read book","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"# Deadline Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"deadline \u003cdescription\u003e /by \u003cdate-time\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"Example: deadline finish report /by 2023-12-01 2359","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"# Event Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"event \u003cdescription\u003e /from \u003cstart-time\u003e /to \u003cend-time\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"Example: event team meeting /from 2023-12-01 1400 /to 2023-12-01 1600","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"### 3Ô∏è‚É£ **Managing Tasks**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"To manage your existing tasks, use:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"```sh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"# Mark and Unmark Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"mark \u003ctask-number\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"Example: mark 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"unmark \u003ctask-number\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"Example: unmark 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"# Delete Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"delete \u003ctask-number\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"Example: delete 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"# Edit Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"edit \u003ctask-number\u003e: \u003ctask-type\u003e \u003cnew-description\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"Examples:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"edit 1: todo study mathematics","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"edit 2: deadline complete assignment /by 2023-12-15 2359","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"edit 3: event project meeting /from 2023-12-10 1000 /to 2023-12-10 1200","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"### 4Ô∏è‚É£ **Viewing Tasks**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"To view and search your tasks, use:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"```sh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"# List all tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"# View tasks by date","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"date YYYY-MM-DD","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"Example: date 2023-12-01","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"# Find tasks by keyword","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"Example: find book","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"### 5Ô∏è‚É£ **Date Time Format**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"Use these formats for deadlines and events:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"```sh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"# Format","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"Date: YYYY-MM-DD","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"Time: HHMM (24-hour)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"# Examples","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"2023-12-01 2359    # December 1st, 11:59 PM","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"2023-12-25 0900    # December 25th, 9:00 AM","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"### 6Ô∏è‚É£ **Requirements**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"System requirements to run Hirono:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"```sh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"# Minimum Requirements","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"Java 11 or higher","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"50MB free disk space","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"Command-line interface or GUI terminal","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":96}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"    mainClass.set(\"hirono.Launcher\")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"    archiveBaseName \u003d \"hirono\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"    mergeServiceFiles()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"checkstyle {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"-":39,"Jsjk112344":24}},{"path":"data/hirono.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"T | 1 | hello","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"E | 0 | meet cool people | 2024-06-11 1700 | 2024-06-11 1800","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"D | 0 | test | 2026-01-22 0800","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"T | 0 | find job","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"E | 0 | team meeting | 2025-02-17 1700 | 2025-02-17 1800","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"# Hirono: Your Personal Task Manager","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"\u003e \"The art of progress is to preserve order amid change and to preserve change amid order.\" ‚Äì Alfred North Whitehead üß†","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"Hirono is a **text-based task management application** designed to help you **stay organized and productive**.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"## üìå About Hirono","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"Hirono is a **command-line and GUI-based task management application** that helps you manage your daily tasks efficiently.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"### Why use Hirono?","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"- ‚úÖ **Easy to use** ‚Äì Simple text-based commands for quick task management.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"- ‚ö° **Fast \u0026 Efficient** ‚Äì Lightweight and responsive.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"- üîß **Customizable** ‚Äì Supports different task types (*ToDo, Deadlines, Events*).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"---","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"## üöÄ Features","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"### üìù **Task Management**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"- Add, delete, mark, and unmark tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"- Support for **\"ToDo\"**, **\"Deadline\"**, and **\"Event\"** tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"### üìÖ **Event Scheduling**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"- Keep track of deadlines and events.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"- Manage time efficiently with **precise scheduling**.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"### üîç **Search \u0026 Filter**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"- Quickly **find tasks** by keywords or dates.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"- Filter tasks that are due today.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"---","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"## üí° Getting Started","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"### 1Ô∏è‚É£ **Running the Application**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"To run the application, use:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"```sh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"java -jar hirono.jar","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"### 2Ô∏è‚É£ **Adding Tasks**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"To add new tasks to your list, use:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"```sh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"# Todo Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"Example: todo read book","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"# Deadline Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"deadline \u003cdescription\u003e /by \u003cdate-time\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"Example: deadline finish report /by 2023-12-01 2359","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"# Event Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"event \u003cdescription\u003e /from \u003cstart-time\u003e /to \u003cend-time\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"Example: event team meeting /from 2023-12-01 1400 /to 2023-12-01 1600","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"### 3Ô∏è‚É£ **Managing Tasks**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"To manage your existing tasks, use:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"```sh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"# Mark and Unmark Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"mark \u003ctask-number\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"Example: mark 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"unmark \u003ctask-number\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"Example: unmark 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"# Delete Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"delete \u003ctask-number\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"Example: delete 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"# Edit Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"edit \u003ctask-number\u003e: \u003ctask-type\u003e \u003cnew-description\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"Examples:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"edit 1: todo study mathematics","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"edit 2: deadline complete assignment /by 2023-12-15 2359","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"edit 3: event project meeting /from 2023-12-10 1000 /to 2023-12-10 1200","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"### 4Ô∏è‚É£ **Viewing Tasks**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"To view and search your tasks, use:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"```sh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"# List all tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"# View tasks by date","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"date YYYY-MM-DD","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"Example: date 2023-12-01","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"# Find tasks by keyword","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"Example: find book","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"### 5Ô∏è‚É£ **Date Time Format**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"Use these formats for deadlines and events:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"```sh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"# Format","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"Date: YYYY-MM-DD","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"Time: HHMM (24-hour)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"# Examples","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"2023-12-01 2359    # December 1st, 11:59 PM","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"2023-12-25 0900    # December 25th, 9:00 AM","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"### 6Ô∏è‚É£ **Requirements**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"System requirements to run Hirono:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"```sh","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"# Minimum Requirements","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"Java 11 or higher","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"50MB free disk space","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"Command-line interface or GUI terminal","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"-":11,"Jsjk112344":85}},{"path":"src/main/java/hirono/Hirono.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.Command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.parser.Parser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import hirono.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":" * The main class for the Hirono application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":" * This class serves as the entry point for the program,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":" * orchestrating the UI, task management, command parsing, and storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"public class Hirono {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    private final Parser parser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"     * Constructs a new instance of the Hirono application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"     * Initializes the UI, storage, parser, and task list components.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException If there is an error reading from the storage file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    public Hirono() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"        this.storage \u003d new Storage(\"./data/hirono.txt\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        // Load tasks from storage or initialize an empty task list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"            this.taskList \u003d storage.loadTasks();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"            ui.showMessage(\"Tasks loaded successfully!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"        } catch (IOException | HironoException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"            ui.showMessage(\"Error loading tasks. Starting with an empty task list.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"     * Starts the main loop for the Hirono application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"     * Continuously processes user commands until an exit command is issued.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException     If there is an error reading from or writing to the storage file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If an error occurs during command execution.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"    public void run() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        // Show welcome message","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"        // Main command loop for CLI","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"        while (true) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"            try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"                String response \u003d processInput(input);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"                // Display response","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"                ui.showMessage(response);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"                // Exit the loop if the command is an exit command","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"                if (response.equals(\"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"                    break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"            } catch (IOException | HironoException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"            ui.showDivider();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"     * Processes the user input and returns the response from Hirono.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"     * @return The response string from Hirono.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"            return processInput(input);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"        } catch (IOException | HironoException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"     * Processes the user input by parsing and executing the command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"     * @return The response string from Hirono.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException     If there is an error during file operations.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the input is invalid.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"    private String processInput(String input) throws IOException, HironoException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"        Command command \u003d parser.parse(input);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"        // Return the latest message from the UI","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"        return ui.getLatestMessage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":105}},{"path":"src/main/java/hirono/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":" * A launcher class to workaround module-related JavaFX issues in Java 11+.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"public class Launcher {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":12}},{"path":"src/main/java/hirono/MainApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"public class MainApp extends Application {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    private Hirono hirono;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    public void start(Stage stage) throws IOException, HironoException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"        hirono \u003d new Hirono();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainApp.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"            stage.setTitle(\"Hirono - Your Personal Task Manager\"); ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"            stage.setResizable(true); // Enable resizing","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setHirono(hirono); // inject the Hirono instance","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"            stage.show();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":36}},{"path":"src/main/java/hirono/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.ui.component.DialogBox;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"    private Hirono hirono;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    private Image hironoImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/hirono.png\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"    /** Injects the hirono instance */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"    public void setHirono(Hirono h) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"        hirono \u003d h;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing hirono\u0027s reply and then appends them to","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        String response \u003d hirono.getResponse(input);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"        ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        // Check if response is an error (adjust condition based on your actual error format)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"        boolean isError \u003d response.toLowerCase().contains(\"error\") || response.toLowerCase().contains(\"invalid\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"        // Create a dialog box for Hirono\u0027s response","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"        DialogBox hironoDialog \u003d DialogBox.getHironoDialog(response, hironoImage);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"        ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"        // Apply error styling if it\u0027s an error message","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"        if (isError) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"            hironoDialog.getStyleClass().add(\"error-message\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"        // Add user input and Hirono response to dialog container","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"                hironoDialog","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"        );","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"        ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"            closeWindow();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"    private void closeWindow() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"        // Get the current stage and close it","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"        Stage stage \u003d (Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"        stage.close();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":83}},{"path":"src/main/java/hirono/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Deadline;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Event;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.ToDo;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"import hirono.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"* Represents a command to add items to the list","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"*/","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    private final String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    private final String type;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     * Constructs an addcommand object","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     * @param description the parsed description of the task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     * @param type the type of task to add","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    public AddCommand(String description, String type) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"        Task newTask \u003d createTask();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        String message \u003d addTask(taskList, newTask);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"     * Creates a new task based on the type and description.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"     * @return The newly created task","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the task type is invalid","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"    public Task createTask() throws HironoException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        return switch (type) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        case \"todo\" -\u003e new ToDo(description);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"        case \"deadline\" -\u003e new Deadline(description);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        case \"event\" -\u003e new Event(description);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"        default -\u003e throw new HironoException(\"Invalid task type.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        };","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"     * Adds a task to the task list and generates a confirmation message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list to add to","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"     * @param task The task to add","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"     * @return A confirmation message","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"    private String addTask(TaskList taskList, Task task) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"        int taskId \u003d taskList.addTaskAndGetId(task);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"                task.toString(),","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"                taskId);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":67}},{"path":"src/main/java/hirono/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"* Represents the parent of all command classes","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"*/","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"     * Executes the command with the given context.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui       The UI to interact with the user.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage  The storage to save/load tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If an error occurs during command execution.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, HironoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"     * Determines if the command is an exit command.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"     * @return true if it is an exit command, false otherwise.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"        return false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":33}},{"path":"src/main/java/hirono/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import java.util.List;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"import hirono.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Deadline;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Event;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"import hirono.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":" * Represents a command to list the events or deadlines on a specific date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    private final String input;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    public DateCommand(String input) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"     * Executes the DateCommand by listing the events and deadlines on the specific date,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list to which the new task will be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui       The UI for interacting with the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage  The storage to save the updated task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If an error occurs during the listing of the tasks (e.g., invalid input).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"        String message \u003d getEventsOnDate(taskList.getTasks());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     * Lists events and deadlines occurring on a specific date.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"     * @param tasks The HashMap of tasks to search through","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"     * @return A list of events and deadlines on the specified date.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the date is invalid or incorrectly formatted.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"    public String getEventsOnDate(HashMap\u003cInteger, Task\u003e tasks) throws HironoException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The date command requires a date in yyyy-MM-dd format.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"        LocalDate date;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"            date \u003d LocalDate.parse(parts[1].trim(), formatter);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"Invalid date format. Please use yyyy-MM-dd (e.g., 2019-12-02).\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"        List\u003cTask\u003e eventsOnDate \u003d tasks.values().stream()","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"                .filter(task -\u003e (task instanceof Event \u0026\u0026 ((Event) task).isOnDate(date))","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"                        || (task instanceof Deadline \u0026\u0026 ((Deadline) task).isOnDate(date)))","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"                .toList();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"        if (eventsOnDate.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"            return \"No events or deadlines found on \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"                + date;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"        return \"Here are the events and deadlines on \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"            + date","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"            + \":\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"            + IntStream.range(0, eventsOnDate.size())","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"                        .mapToObj(i -\u003e (i + 1) + \". \" + eventsOnDate.get(i).toString())","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"                        .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":83}},{"path":"src/main/java/hirono/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.io.File;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import java.util.List;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"import java.util.TreeMap;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"import hirono.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"import hirono.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":" * Represents a command to delete a specific item from the list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    private final int taskId;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    public DeleteCommand(int taskId) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"        storage.deleteTask(taskId); // Keep using storage\u0027s deleteTask for consistency","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"        String message \u003d deleteTask(taskList.getTasks());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"     * Deletes a task from storage file.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"     * @param filePath The path to the storage file","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskNumber The number of the task to delete","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the file doesn\u0027t exist or task number is invalid","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException If an error occurs during file operations","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"    public static void deleteFromStorage(String filePath, int taskNumber) throws HironoException, IOException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"Task file does not exist.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        // Read all lines into memory","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"            String line;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"                lines.add(line);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"        // Validate the task number","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e lines.size()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"Invalid task number. Task does not exist.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"        // Remove the task and update the file","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"        lines.remove(taskNumber - 1);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"            for (String updatedLine : lines) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"                writer.write(updatedLine);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"     * Deletes a task from storage file.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"     * @param tasks The map of tasks to index","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"     * @return a string containing the message when a user removes a task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"    */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"    public String deleteTask(HashMap\u003cInteger, Task\u003e tasks) throws HironoException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"        if (!tasks.containsKey(taskId)) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The item you are attempting to delete is out of the range of the list.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"        Task deletedTask \u003d tasks.get(taskId);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"        tasks.remove(taskId);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"        reorderTasks(tasks);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"                deletedTask.toString(),","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"                tasks.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"    private void reorderTasks(HashMap\u003cInteger, Task\u003e tasks) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"        TreeMap\u003cInteger, Task\u003e sortedTasks \u003d new TreeMap\u003c\u003e(tasks);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"        tasks.clear();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"        int newId \u003d 1;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"        for (Task task : sortedTasks.values()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"            tasks.put(newId++, task);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":103}},{"path":"src/main/java/hirono/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.storage.Storage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Deadline;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Event;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.ToDo;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"import hirono.ui.Ui;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":" * Represents a command to edit an existing task in the list.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    private final String input;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    public EditCommand(String input) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, HironoException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        String message \u003d editTask(taskList.getTasks());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"     * Edits a task based on the input command.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"     * @param tasks The HashMap containing all tasks","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"     * @return A message confirming the task has been edited","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the input format is invalid or task types don\u0027t match","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"    public String editTask(HashMap\u003cInteger, Task\u003e tasks) throws HironoException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"        // Parse task ID and new task info","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d input.split(\":\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"Invalid edit format. Please use: edit \u003ctask ID\u003e: \u003cnew task info\u003e\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"            int taskId \u003d Integer.parseInt(parts[0].trim().split(\"\\\\s+\")[1]);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"            Task existingTask \u003d tasks.get(taskId);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"            if (existingTask \u003d\u003d null) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"                throw new HironoException(\"Task ID not found!\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"            String newTaskInfo \u003d parts[1].trim();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"            String[] taskParts \u003d newTaskInfo.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"            if (taskParts.length \u003c 2) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"                throw new HironoException(\"Invalid task format. Please provide task type and description.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"            String newType \u003d taskParts[0].toLowerCase();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"            if (!isMatchingTaskType(existingTask, newType)) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"                throw new HironoException(\"Cannot change task type. Original task was: \"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"                    + getTaskTypeName(existingTask));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"            Task newTask \u003d createTask(newType, newTaskInfo);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"            // Preserve done status","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"            if (existingTask.isDone()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"                newTask.markAsDone();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"            // Update task in list","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"            tasks.put(taskId, newTask);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"            return String.format(\"Got it. I\u0027ve edited the task to:\\n%d. %s\",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"                taskId,","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"                newTask.toString());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"Invalid task ID. Please provide a valid number.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"     * Checks if the new task type matches the existing task type.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"     * @param existingTask the current task in the list","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"     * @param newType the type specified in the edit command","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"     * @return ture if the types match, false otherwise","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"    private boolean isMatchingTaskType(Task existingTask, String newType) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"        return (existingTask instanceof ToDo \u0026\u0026 newType.equals(\"todo\"))","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"            || (existingTask instanceof Deadline \u0026\u0026 newType.equals(\"deadline\"))","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"            || (existingTask instanceof Event \u0026\u0026 newType.equals(\"event\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"     * Gets the type name of a task as a string.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"    private String getTaskTypeName(Task task) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"            return \"todo\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jsjk112344"},"content":"            return \"deadline\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jsjk112344"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jsjk112344"},"content":"            return \"event\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jsjk112344"},"content":"        return \"unknown\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jsjk112344"},"content":"     * Creates a new task based on type and the full task info string.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jsjk112344"},"content":"    private Task createTask(String type, String fullTaskInfo) throws HironoException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jsjk112344"},"content":"        return switch (type) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jsjk112344"},"content":"        case \"todo\" -\u003e new ToDo(fullTaskInfo);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jsjk112344"},"content":"        case \"deadline\" -\u003e new Deadline(fullTaskInfo);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jsjk112344"},"content":"        case \"event\" -\u003e new Event(fullTaskInfo);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jsjk112344"},"content":"        default -\u003e throw new HironoException(\"Invalid task type.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jsjk112344"},"content":"        };","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":126}},{"path":"src/main/java/hirono/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":" * Represents the command to exit the application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":" * When executed, it displays a goodbye message to the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"     * Executes the ExitCommand by showing a goodbye message.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list being managed. (Unused in this command)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui       The UI for interacting with the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage  The storage used for saving tasks. (Unused in this command)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"     * Indicates that this command will terminate the application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"     * @return true, as this is an exit command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"        return true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":34}},{"path":"src/main/java/hirono/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.util.List;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import hirono.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"import hirono.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":" * Represents a command to find tasks containing a specific search term.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    private final String input;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"     * Executes the FindCommand by searching for tasks containing the specified term.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list to search through.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui       The UI for interacting with the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage  The storage to save the updated task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If an error occurs during the search (e.g., invalid input).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws HironoException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        String message \u003d findTasks(taskList.getTasks());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"     * Finds tasks that match the specified search term.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"     * @param tasks The HashMap of tasks to search through.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"     * @return A formatted string containing the matching tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the search term is missing or invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"    public String findTasks(HashMap\u003cInteger, Task\u003e tasks) throws HironoException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The find command requires a search term. Please use: find [search term]\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        String searchTerm \u003d parts[1].trim().toLowerCase();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.values().stream()","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(searchTerm))","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"                .toList();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"            return \"No tasks found matching \\\"\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"                + searchTerm","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"                + \"\\\".\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"        return \"Here are the matching tasks:\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"            + IntStream.range(0, matchingTasks.size())","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + matchingTasks.get(i).toString())","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"                    .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"// In TaskList.java, replace the existing findTasks method with:","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":70}},{"path":"src/main/java/hirono/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":" * Represents the command to list all tasks in the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":" * When executed, it displays all tasks to the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"     * Executes the ListCommand by listing all tasks in the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list containing the tasks to be displayed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui       The UI for interacting with the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage  The storage used for saving tasks. (Unused in this command)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"        String message \u003d taskList.listTasks();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":25}},{"path":"src/main/java/hirono/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"// In MarkCommand.java","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"package hirono.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import hirono.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":" * Marks a task as completed","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    private final int taskId;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    public MarkCommand(int taskId) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     * Marks a specific task as done,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"     * if the item is already done, there will not be any change in behaviour","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list containing the tasks","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui The UI for displaying messages","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage The storage for saving tasks","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException If there\u0027s an error saving to storage","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the task ID is invalid","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        String message \u003d markTask(taskList.getTasks());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"     * Marks a task as done and returns a confirmation message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"     * @param tasks The HashMap containing all tasks","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     * @return A message confirming the task has been marked as done","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"    public String markTask(HashMap\u003cInteger, Task\u003e tasks) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        Task task \u003d tasks.get(taskId);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"            return \"Task ID not found!\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%d. %s\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"                taskId,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"                task.toString());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":56}},{"path":"src/main/java/hirono/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import hirono.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":" * Unmarks a task as completed","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    private final int taskId;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    public UnmarkCommand(int taskId) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     * Unmarks a specific task as done,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     * if the item is not yet done, there will not be any change in behaviour","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list containing the tasks","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui The UI for displaying messages","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage The storage for saving tasks","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException If there\u0027s an error saving to storage","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the task ID is invalid","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"        String message \u003d unmarkTask(taskList.getTasks());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"     * Unmarks a task as not done and returns a confirmation message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"     * @param tasks The HashMap containing all tasks","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"     * @return A message confirming the task has been unmarked","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"    public String unmarkTask(HashMap\u003cInteger, Task\u003e tasks) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"        Task task \u003d tasks.get(taskId);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"            return \"Task ID not found!\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"        task.unmark();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n%d. %s\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"                taskId,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"                task.toString());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":55}},{"path":"src/main/java/hirono/exception/HironoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.exception;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":" * Represents an exception specific to the Hirono application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":" * This exception is thrown when an error occurs during user input processing","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":" * or command execution within the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"public class HironoException extends Exception {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"     * Constructs a new HironoException with the specified error message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"     * @param message The detail message describing the nature of the error.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    public HironoException(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"        super(message); // Pass the error message to the superclass constructor","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":18}},{"path":"src/main/java/hirono/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.parser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.AddCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.Command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.DateCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.DeleteCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.EditCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.ExitCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.FindCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.ListCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.MarkCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.UnmarkCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":" * parses inputs based on the type of command","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"public class Parser {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     * @param input","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     * @return Command","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    public Command parse(String input) throws HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"            return new ListCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"            int taskId \u003d parseTaskId(input, \"delete\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"            return new DeleteCommand(taskId);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"            int taskId \u003d parseTaskId(input, \"mark\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"            return new MarkCommand(taskId);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"            int taskId \u003d parseTaskId(input, \"unmark\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"            return new UnmarkCommand(taskId);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"            return new AddCommand(input, \"todo\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"            return new AddCommand(input, \"deadline\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"            return new AddCommand(input, \"event\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"date\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"            return new DateCommand(input);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"            return new FindCommand(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"edit\")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"            return new EditCommand(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"    private int parseTaskId(String input, String command) throws HironoException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The \" + command + \" command requires a task ID.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"        return Integer.parseInt(parts[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":65}},{"path":"src/main/java/hirono/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.io.File;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.DeleteCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Event;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.ToDo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":" * Handles the saving and loading of tasks to and from a file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":" * This class is responsible for managing the persistence of tasks, ensuring","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":" * the task list is stored in and retrieved from the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"public class Storage {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"     * Constructs a Storage object for managing the specified file path.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"     * @param filePath The file path where tasks will be stored and retrieved.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"        ensureFileExists();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"    public String getFilePath() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"        return filePath;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"     * Ensures the storage file and its parent directory exist.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"     * Creates the file and directory if they do not exist.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"    private void ensureFileExists() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"                File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"                if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"                    parentDir.mkdirs(); // Create parent directory if it doesn\u0027t exist","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"                file.createNewFile(); // Create the file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"            System.out.println(\"Error creating the file: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"     * Saves the current task list to the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list to save.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException If an error occurs during saving to the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"    public void saveTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"            for (Map.Entry\u003cInteger, Task\u003e entry : taskList.getTasks().entrySet()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"                Task task \u003d entry.getValue();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"                writer.write(task.toFileFormat() + System.lineSeparator());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"     * Deletes a task from the storage file by its task number.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"     * This method is maintained for testing purposes and delegates to DeleteCommand.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskNumber The number of the task to delete (1-based index).","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the file does not exist or the task number is invalid.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException If an error occurs during file I/O operations.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"    public void deleteTask(Integer taskNumber) throws HironoException, IOException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"        DeleteCommand.deleteFromStorage(filePath, taskNumber);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"     * Loads tasks from the storage file and returns them as a TaskList.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"     * @return The TaskList containing the tasks loaded from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException      If an error occurs during reading from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the task format in the file is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"    public TaskList loadTasks() throws HironoException, IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"        // Ensure the file exists","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"            File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"            if (parentDir !\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"                parentDir.mkdirs();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"            file.createNewFile();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jsjk112344"},"content":"            // Parse each line and add the task to the TaskList","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jsjk112344"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jsjk112344"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jsjk112344"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jsjk112344"},"content":"                String type \u003d parts[0].trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jsjk112344"},"content":"                boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jsjk112344"},"content":"                String description \u003d parts[2].trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jsjk112344"},"content":"                switch (type) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jsjk112344"},"content":"                case \"T\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jsjk112344"},"content":"                    ToDo todo \u003d new ToDo(\"todo \" + description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jsjk112344"},"content":"                    if (isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jsjk112344"},"content":"                        todo.markAsDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jsjk112344"},"content":"                    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jsjk112344"},"content":"                    taskList.addLoadedTask(todo);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jsjk112344"},"content":"                    break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jsjk112344"},"content":"                case \"D\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jsjk112344"},"content":"                    Deadline deadline \u003d new Deadline(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jsjk112344"},"content":"                        \"deadline \" + description + \" /by \" + parts[3].trim()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jsjk112344"},"content":"                    );","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jsjk112344"},"content":"                    if (isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jsjk112344"},"content":"                        deadline.markAsDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jsjk112344"},"content":"                    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jsjk112344"},"content":"                    taskList.addLoadedTask(deadline);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jsjk112344"},"content":"                    break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jsjk112344"},"content":"                case \"E\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jsjk112344"},"content":"                    Event event \u003d new Event(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jsjk112344"},"content":"                        \"event \" + description + \" /from \" + parts[3].trim() + \" /to \" + parts[4].trim()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jsjk112344"},"content":"                    );","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jsjk112344"},"content":"                    if (isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jsjk112344"},"content":"                        event.markAsDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jsjk112344"},"content":"                    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jsjk112344"},"content":"                    taskList.addLoadedTask(event);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jsjk112344"},"content":"                    break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jsjk112344"},"content":"                default:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jsjk112344"},"content":"                    throw new HironoException(\"Invalid task type in file.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jsjk112344"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jsjk112344"},"content":"        return taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":152}},{"path":"src/main/java/hirono/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":" * Represents a deadline task that includes a description and a deadline date and time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    private LocalDateTime deadlineTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     * Constructs a Deadline object with a specified description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The task description in the format:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     *                    \"deadline [task name] /by [yyyy-MM-dd HHmm]\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the description format is invalid or the date/time cannot be parsed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    public Deadline(String description) throws HironoException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"        super(description, \"D\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d parseDescription(description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"            this.deadlineTime \u003d parseDateTime(parts[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"Invalid date and time format. Use yyyy-MM-dd HHmm (e.g., 2023-12-31 2359).\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"     * Parses the task description into the task name and deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The task description in the format:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"     *                    \"deadline [task name] /by [yyyy-MM-dd HHmm]\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"     * @return A string array containing the task name and deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the description format is invalid or missing the `/by` clause.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"    private String[] parseDescription(String description) throws HironoException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"        if (!isValidDeadline(description)) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The deadline command is not in the correct \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"                + \"format: deadline [task name] /by [yyyy-MM-dd HHmm]\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d description.split(\"/by\", 2);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The deadline command must include a /by clause.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        return parts;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"     * Checks if the task description is in the valid deadline format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The task description to validate.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"     * @return {@code true} if the description matches the deadline format, {@code false} otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"    private boolean isValidDeadline(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"        String deadlineRegex \u003d \"^deadline\\\\s+.+\\\\s+/by\\\\s+.+$\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"        return description.matches(deadlineRegex);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"     * Parses the deadline date and time from the input string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"     * @param dateTime The deadline in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"     * @return A {@link LocalDateTime} object representing the parsed deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"    private LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"        return LocalDateTime.parse(dateTime.trim(), formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"     * Checks if the deadline occurs on a specific date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"     * @param date The date to check.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"     * @return {@code true} if the deadline is on the given date, {@code false} otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"        LocalDate deadlineDate \u003d deadlineTime.toLocalDate();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"        return (date.equals(deadlineDate));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"     * Converts the deadline task to a file-compatible format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"     * @return A string representation of the deadline task for saving to a file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"D | %d | %s | %s\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"                             isDone() ? 1 : 0,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"                             getDescriptionWithoutDeadline(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"                             deadlineTime.format(formatter));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"     * Gets the task description without the \"/by\" clause.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"     * @return The description of the task without the \"/by\" clause.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jsjk112344"},"content":"    private String getDescriptionWithoutDeadline() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jsjk112344"},"content":"        return getDescription().split(\"/by\")[0].replace(\"deadline\", \"\").trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jsjk112344"},"content":"     * Formats the task description for display purposes.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jsjk112344"},"content":"     * @param input The original task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jsjk112344"},"content":"     * @return A formatted string including the task name and deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jsjk112344"},"content":"    public String handleDescription(String input) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jsjk112344"},"content":"        DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jsjk112344"},"content":"        String deadlineFormatted \u003d deadlineTime.format(displayFormatter);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jsjk112344"},"content":"        // Manually append \"am\" or \"pm\" in lowercase","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jsjk112344"},"content":"        String timeSuffix \u003d deadlineTime.getHour() \u003c 12 ? \"am\" : \"pm\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jsjk112344"},"content":"        return getDescriptionWithoutDeadline() + \" (by: \" + deadlineFormatted + timeSuffix + \")\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jsjk112344"},"content":"     * Converts the deadline task to a string representation for display.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jsjk112344"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jsjk112344"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jsjk112344"},"content":"        return \"[D]\" + super.getStatusIcon() + \" \" + handleDescription(getDescription());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":138}},{"path":"src/main/java/hirono/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":" * Represents an event task that includes a description, a start time (/from), and an end time (/to).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    private LocalDateTime fromTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    private LocalDateTime toTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    private String description;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     * Constructs an Event object with a specified description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The task description in the format:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     *                    \"event [event name] /from [yyyy-MM-dd HHmm] /to [yyyy-MM-dd HHmm]\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the description format is invalid, the date/time cannot be parsed,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     *                         or the /from time is after the /to time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    public Event(String description) throws HironoException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        super(description, \"E\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d parseDescription(description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"            this.fromTime \u003d parseDateTime(parts[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"            this.toTime \u003d parseDateTime(parts[2]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"            if (fromTime.isAfter(toTime)) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"                throw new HironoException(\"The /from time cannot be after the /to time.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"Invalid date and time format. Use yyyy-MM-dd HHmm (e.g., 2023-12-31 2359).\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     * Parses the task description into the event name, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The task description in the format:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"     *                    \"event [event name] /from [yyyy-MM-dd HHmm] /to [yyyy-MM-dd HHmm]\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"     * @return A string array containing the event name, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the description format is invalid or missing the /from and /to clauses.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"    private String[] parseDescription(String description) throws HironoException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        if (!isValidEvent(description)) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The event command is not in the correct format:\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"                + \"event [event name] /from [yyyy-MM-dd HHmm] /to [yyyy-MM-dd HHmm]\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d description.split(\"/from|/to\", 3);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The event command must include both /from and /to clauses.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"        return parts;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"     * Checks if the event occurs on a specific date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"     * @param date The date to check.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"     * @return {@code true} if the event occurs on the given date, {@code false} otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"        assert date !\u003d null : \"Date must not be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"        LocalDate fromDate \u003d fromTime.toLocalDate();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"        LocalDate toDate \u003d toTime.toLocalDate();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"        return (date.equals(fromDate) || date.equals(toDate))","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"            || (date.isAfter(fromDate) \u0026\u0026 date.isBefore(toDate));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"     * Checks if the task description is in the valid event format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The task description to validate.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"     * @return {@code true} if the description matches the event format, {@code false} otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"    private boolean isValidEvent(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"        assert description !\u003d null : \"Description must not be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"        String eventRegex \u003d \"^event\\\\s+.+\\\\s+/from\\\\s+.+\\\\s+/to\\\\s+.+$\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"        return description.matches(eventRegex);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"     * Parses the event\u0027s start or end time from the input string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"     * @param dateTime The date and time in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"     * @return A {@link LocalDateTime} object representing the parsed date and time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"    private LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"        assert dateTime !\u003d null \u0026\u0026 !dateTime.isEmpty() : \"DateTime string must not be null or empty\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"        return LocalDateTime.parse(dateTime.trim(), formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"     * Converts the event task to a file-compatible format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"     * @return A string representation of the event task for saving to a file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jsjk112344"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"E | %d | %s | %s | %s\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jsjk112344"},"content":"                             isDone() ? 1 : 0,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jsjk112344"},"content":"                             getDescriptionWithoutEvent(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jsjk112344"},"content":"                             fromTime.format(formatter),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jsjk112344"},"content":"                             toTime.format(formatter));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jsjk112344"},"content":"     * Gets the task description without the \"/from\" and \"/to\" clauses.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jsjk112344"},"content":"     * @return The description of the task without the \"/from\" and \"/to\" clauses.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jsjk112344"},"content":"    private String getDescriptionWithoutEvent() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jsjk112344"},"content":"        return getDescription().split(\"/from\")[0].replace(\"event\", \"\").trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jsjk112344"},"content":"     * Formats the task description for display purposes.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jsjk112344"},"content":"     * @param input The original task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jsjk112344"},"content":"     * @return A formatted string including the task name, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jsjk112344"},"content":"    public String handleDescription(String input) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jsjk112344"},"content":"        DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jsjk112344"},"content":"        String fromTimeFormatted \u003d fromTime.format(displayFormatter);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jsjk112344"},"content":"        String toTimeFormatted \u003d toTime.format(displayFormatter);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jsjk112344"},"content":"        // Manually append \"am\" or \"pm\" in lowercase","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jsjk112344"},"content":"        String fromTimeSuffix \u003d fromTime.getHour() \u003c 12 ? \"am\" : \"pm\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jsjk112344"},"content":"        String toTimeSuffix \u003d toTime.getHour() \u003c 12 ? \"am\" : \"pm\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jsjk112344"},"content":"        return getDescriptionWithoutEvent()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jsjk112344"},"content":"            + \" (from: \" + fromTimeFormatted + fromTimeSuffix","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jsjk112344"},"content":"            + \" to: \" + toTimeFormatted + toTimeSuffix + \")\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jsjk112344"},"content":"     * Converts the event task to a string representation for display.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jsjk112344"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Jsjk112344"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Jsjk112344"},"content":"        return \"[E]\" + super.getStatusIcon() + \" \" + handleDescription(getDescription());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":154}},{"path":"src/main/java/hirono/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":" * Represents a general task with a description, type, and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":" * This is an abstract class to be extended by specific task types such as ToDo, Deadline, or Event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"    private String description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"    private String type;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"     * Constructs a Task with the given description and type.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"     * @param type        The type of the task (e.g., ToDo, Deadline, Event).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"     * @return True if the task is done, otherwise false.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"     * Unmarks the task, indicating it is not done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"     * An \"X\" indicates the task is done, and a blank space indicates it is not done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"     * Returns the type icon for the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"     * The type icon is represented in square brackets (e.g., [T] for ToDo).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"     * @return The type icon of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"        return \"[\" + type + \"]\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"        return description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"     * Processes the task description for display purposes.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"     * This method must be implemented by subclasses.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"     * @param input The raw input description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"     * @return The formatted description for display.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"    public abstract String handleDescription(String input);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"     * Converts the task to its file format representation for saving to storage.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"     * The format includes type, completion status, and description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"     * @return The file format string of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"%s | %d | %s\", getTypeIcon().substring(1, 2), isDone ? 1 : 0, getDescription());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"     * Returns the string representation of the task, including its type, status, and description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"        return getTypeIcon() + getStatusIcon() + \" \" + handleDescription(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":104}},{"path":"src/main/java/hirono/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.AddCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.DateCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.DeleteCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.EditCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.FindCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.MarkCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.UnmarkCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":" * Manages the list of tasks, providing functionality to add, delete, find,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":" * list, and manipulate tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"public class TaskList {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    private HashMap\u003cInteger, Task\u003e tasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    private int taskCounter \u003d 1;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"     * @param type        The type of the task (todo, deadline, event).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"     * @return A confirmation message that the task has been added.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the task type is invalid.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    public String addTask(String description, String type) throws HironoException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"        AddCommand addCommand \u003d new AddCommand(description, type);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"        Task task \u003d addCommand.createTask();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        int taskId \u003d addTaskAndGetId(task);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"                task.toString(),","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"                taskId);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"     * Adds a task to the list and returns the new task count.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     * @param task The task to add","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"     * @return The current number of tasks in the list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"    public int addTaskAndGetId(Task task) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        // Find the first available slot in the sequence","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"        int newId \u003d 1;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        while (tasks.containsKey(newId)) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"            newId++;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"        tasks.put(newId, task);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        assert tasks.containsKey(taskCounter) : \"Task should be successfully added to the list\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"        taskCounter \u003d Math.max(taskCounter, newId + 1);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"        return newId;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"     * Adds a task that has been loaded from storage without incrementing the task counter.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"    public void addLoadedTask(Task task) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"        tasks.put(taskCounter, task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"        taskCounter++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskId The ID of the task to delete.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"     * @return A confirmation message that the task has been removed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the task ID is invalid or out of range.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"    public String deleteTask(Integer taskId) throws HironoException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(taskId);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"        return deleteCommand.deleteTask(tasks);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"     * Retrieves all tasks in the list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"     * @return A HashMap containing all tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"    public HashMap\u003cInteger, Task\u003e getTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"        return this.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskId The ID of the task to mark as done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"    public String markTask(int taskId) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"        MarkCommand markCommand \u003d new MarkCommand(taskId);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"        return markCommand.markTask(tasks);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"     * Unmarks a task as not done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskId The ID of the task to unmark.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"    public String unmarkTask(int taskId) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jsjk112344"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(taskId);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jsjk112344"},"content":"        return unmarkCommand.unmarkTask(tasks);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jsjk112344"},"content":"     * Lists all tasks in the list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jsjk112344"},"content":"    public String listTasks() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jsjk112344"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jsjk112344"},"content":"        output.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jsjk112344"},"content":"        for (Map.Entry\u003cInteger, Task\u003e entry : tasks.entrySet()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jsjk112344"},"content":"            output.append(entry.getKey() + \". \" + entry.getValue() + \"\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jsjk112344"},"content":"        return output.toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jsjk112344"},"content":"     * Finds tasks that match the specified search term.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jsjk112344"},"content":"     * @param input The user input containing the search term.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jsjk112344"},"content":"     * @return A list of matching tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the search term is missing or invalid.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jsjk112344"},"content":"    public String findTasks(String input) throws HironoException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jsjk112344"},"content":"        FindCommand findCommand \u003d new FindCommand(input);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jsjk112344"},"content":"        return findCommand.findTasks(tasks);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jsjk112344"},"content":"     * Lists events and deadlines occurring on a specific date.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jsjk112344"},"content":"     * @param input The user input containing the date in yyyy-MM-dd format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jsjk112344"},"content":"     * @return A list of events and deadlines on the specified date.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the date is invalid or incorrectly formatted.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jsjk112344"},"content":"    public String getEventsOnDate(String input) throws HironoException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jsjk112344"},"content":"        DateCommand dateCommand \u003d new DateCommand(input);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jsjk112344"},"content":"        return dateCommand.getEventsOnDate(tasks);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jsjk112344"},"content":"     * Lists events and deadlines occurring on a specific date.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jsjk112344"},"content":"     * @param input The user input containing the date in yyyy-MM-dd format.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Jsjk112344"},"content":"     * @return an output message when a user edits a task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the date is invalid or incorrectly formatted.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jsjk112344"},"content":"    public String editTask(String input) throws HironoException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Jsjk112344"},"content":"        EditCommand editCommand \u003d new EditCommand(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Jsjk112344"},"content":"        return editCommand.editTask(tasks);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":161}},{"path":"src/main/java/hirono/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":" * Describes a basic task to do","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"    public ToDo(String description) throws HironoException{","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"        super(description, \"T\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"        if (!isValidToDo(description)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The todo command is not in the correct format:\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"                + \"todo \u003cdescription\u003e\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    private boolean isValidToDo(String description) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"        String todoRegex \u003d \"^todo\\\\s+.+$\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"        return description.matches(todoRegex);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     * @return String","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        String processedDescription \u003d handleDescription(getDescription());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"%s | %d | %s\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"                            getTypeIcon().substring(1, 2),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"                            isDone() ? 1 : 0,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"                            processedDescription);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"    public String handleDescription(String input) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"        // Remove the first word (\"todo\") from the input","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"        String[] splitted \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"        return splitted.length \u003e 1 ? splitted[1] : \"\"; // Return the remaining description","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"        return \"[T]\" + super.getStatusIcon() + \" \" + handleDescription(getDescription());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":45}},{"path":"src/main/java/hirono/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":" * Handles all user interactions, including displaying messages, reading commands,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":" * and showing system messages such as errors and dividers.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"public class Ui {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"    private final BufferedReader reader;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"    private final PrintWriter writer;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    private final String line \u003d \"\\n--------------------------------------------------\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    private String latestMessage \u003d \"\"; // To store the latest message for GUI.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     * Constructs a Ui object for managing user interactions.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     * Initializes the reader and writer for input and output.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    public Ui() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"        this.reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"        this.writer \u003d new PrintWriter(System.out, true);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"     * Displays the welcome message and the logo for the application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    public String showWelcome() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"        String logo \u003d","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"                  \"                            .-\u0027\u0027\u0027-.                   .-\u0027\u0027\u0027-.     \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"                + \"                           \u0027   _    \\\\                \u0027   _    \\\\   \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"                + \"   .        .--.         /   /` \u0027.   \\\\    _..._    /   /` \u0027.   \\\\  \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"                + \" .\u0027|        |__|        .   |     \\\\  \u0027  .\u0027     \u0027. .   |     \\\\  \u0027  \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"                + \"\u003c  |        .--..-,.--. |   \u0027      |  \u0027.   .-.   .|   \u0027      |  \u0027 \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"                + \" | |        |  ||  .-. |\\\\    \\\\     / / |  \u0027   \u0027  |\\\\    \\\\     / /  \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"                + \" | | .\u0027\u0027\u0027-. |  || |  | | `.   ` ..\u0027 /  |  |   |  | `.   ` ..\u0027 /   \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"                + \" | |/.\u0027\u0027\u0027. \\\\|  || |  | |    \u0027-...-\u0027`   |  |   |  |    \u0027-...-\u0027`    \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"                + \" |  /    | ||  || |  \u0027-                |  |   |  |                \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"                + \" | |     | ||__|| |                    |  |   |  |                \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"                + \" | |     | |    | |                    |  |   |  |                \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"                + \" | \u0027.    | \u0027.   |_|                    |  |   |  |                \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"                + \" \u0027---\u0027   \u0027---\u0027                         \u0027--\u0027   \u0027--\u0027                \\n\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        output.append(\"Hello from\\n\" + logo + line + \"\\nHello! I\u0027m Hirono\\nWhat can I do for you?\\n\" + line);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        return output.toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"     * @return The user command as a String.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException If an input/output error occurs while reading the command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"        return reader.readLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"     * Displays a message to the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"        writer.println(message);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"        latestMessage \u003d message; // Update latest message for GUI.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"        showMessage(\"Error: \" + errorMessage);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"     * Displays a divider line to separate different sections in the output.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"    public void showDivider() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"        showMessage(line);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"     * Displays the goodbye message when the user exits the application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"        showMessage(line + \"\\nBye. Hope to see you again soon!\\n\" + line);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"     * Gets the latest message for GUI interactions.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"     * @return The latest message as a String.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"    public String getLatestMessage() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"        return latestMessage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":101}},{"path":"src/main/java/hirono/ui/component/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.ui.component;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.MainWindow;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"    private void flip() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"    public static DialogBox getHironoDialog(String text, Image img) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"        db.flip();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"        return db;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":61}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"         stylesheets\u003d\"@../css/styles.css\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"\u003cAnchorPane prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"            minHeight\u003d\"400.0\" minWidth\u003d\"300.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"            fx:controller\u003d\"hirono.MainWindow\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"            stylesheets\u003d\"@../css/styles.css\"\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"        \u003c!-- ScrollPane should expand dynamically --\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"                    vbarPolicy\u003d\"ALWAYS\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"                    fitToHeight\u003d\"true\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"                    AnchorPane.bottomAnchor\u003d\"50.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"                      spacing\u003d\"10.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"                      prefWidth\u003d\"388.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"                      AnchorPane.topAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"                      AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"                      AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"                      AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"        \u003c!-- User input should stay at the bottom --\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"                   AnchorPane.bottomAnchor\u003d\"5.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"                   AnchorPane.leftAnchor\u003d\"5.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"                   AnchorPane.rightAnchor\u003d\"85.0\"/\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        \u003c!-- Send button should stay next to input field --\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"                AnchorPane.bottomAnchor\u003d\"5.0\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"                AnchorPane.rightAnchor\u003d\"5.0\"/\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":58}},{"path":"src/test/java/hirono/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.AddCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import hirono.command.Command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import hirono.parser.Parser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    public void testParseValidCommand() throws HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"        Command command \u003d parser.parse(\"todo read book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    public void testParseInvalidCommand() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"        Exception exception \u003d assertThrows(HironoException.class, () -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"            parser.parse(\"invalid command\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"        });","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means.\", exception.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":31}},{"path":"src/test/java/hirono/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import java.util.TimeZone;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"import hirono.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":" * Tests the Storage class for saving, loading, and deleting tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    private static final String TEST_FILE_PATH \u003d \"./data/test-hirono.txt\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    private TimeZone originalTimeZone;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"     * Sets up the test environment before each test case.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"     * Initializes the Storage and TaskList objects.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"        originalTimeZone \u003d TimeZone.getDefault();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        // Set timezone to UTC for consistency","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        TimeZone.setDefault(TimeZone.getTimeZone(\"UTC\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"     * Cleans up the test environment after each test case.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"     * Deletes the test file if it exists.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"    @AfterEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"    public void tearDown() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        File testFile \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        if (testFile.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"            testFile.delete(); // Delete test file after each test to avoid conflicts","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"        TimeZone.setDefault(originalTimeZone);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"     * Tests the saveTasks and loadTasks methods for correctness.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException     If an I/O error occurs.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If an error occurs during task operations.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"    public void testSaveAndLoadTasks() throws IOException, HironoException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"        // Add tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"deadline submit report /by 2023-11-02 1800\", \"deadline\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"            \"event team meeting /from 2023-11-02 1400 /to 2023-11-02 1600\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"            \"event\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"        );","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"        // Save tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"        // Load tasks into a new TaskList","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"        TaskList loadedTaskList \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(3, loadedTaskList.getTasks().size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"        // Check if tasks are correctly restored","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"            \"[T][ ] read book\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"            loadedTaskList.getTasks().get(1).toString()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"        );","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"            \"[D][ ] submit report (by: 2 Nov 2023, 6:00pm)\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"            loadedTaskList.getTasks().get(2).toString()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"        );","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"            \"[E][ ] team meeting (from: 2 Nov 2023, 2:00pm to: 2 Nov 2023, 4:00pm)\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"            loadedTaskList.getTasks().get(3).toString()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"        );","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"     * Tests loading tasks from an empty file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException     If an I/O error occurs.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If an error occurs during task operations.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"    public void testLoadFromEmptyFile() throws IOException, HironoException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"        // Create an empty test file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"        File testFile \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"        testFile.createNewFile();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"        // Attempt to load tasks from an empty file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"        TaskList loadedTaskList \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(0, loadedTaskList.getTasks().size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jsjk112344"},"content":"     * Tests the deleteTask method for removing a task from storage.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jsjk112344"},"content":"     * @throws Exception If an error occurs during task deletion.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jsjk112344"},"content":"    public void testDeleteTaskFromStorage() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jsjk112344"},"content":"        // Add and save tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"deadline submit report /by 2023-11-02 1800\", \"deadline\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jsjk112344"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jsjk112344"},"content":"        // Delete task 1 from storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jsjk112344"},"content":"        storage.deleteTask(1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jsjk112344"},"content":"        // Load and check if task 1 was removed","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jsjk112344"},"content":"        TaskList loadedTaskList \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(1, loadedTaskList.getTasks().size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jsjk112344"},"content":"            \"[D][ ] submit report (by: 2 Nov 2023, 6:00pm)\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jsjk112344"},"content":"            loadedTaskList.getTasks().get(1).toString()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jsjk112344"},"content":"        );","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":132}},{"path":"src/test/java/hirono/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"import hirono.exception.HironoException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"import hirono.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"     * @throws Exception","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    public void testAddTask() throws Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"        String result \u003d taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"            + \"[T][ ] read book\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"            + \"Now you have 1 tasks in the list.\", result);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.addTask(\"deadline reply mom /by 2023-11-02 1800\", \"deadline\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"            + \"[D][ ] reply mom (by: 2 Nov 2023, 6:00pm)\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"            + \"Now you have 2 tasks in the list.\", result);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.addTask(\"event joshua\u0027s birthday party /from 2023-11-02 1800 /to 2023-11-02 2000\", \"event\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"            + \"[E][ ] joshua\u0027s birthday party (from: 2 Nov 2023, 6:00pm to: 2 Nov 2023, 8:00pm)\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"            + \"Now you have 3 tasks in the list.\", result);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(3, taskList.getTasks().size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"    public void testDeleteTask() throws Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        String result \u003d taskList.deleteTask(1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"            + \"[T][ ] read book\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"            + \"Now you have 0 tasks in the list.\", result);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"        assertTrue(taskList.getTasks().isEmpty());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"    public void testDeleteTaskEdgeCases() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"        // Deleting from an empty list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"            taskList.deleteTask(1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"        } catch (HironoException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"            assertEquals(\"The item you are attempting to delete is out of the range of the list.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"        // Deleting a non-existent task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"            taskList.deleteTask(2); // Task ID 2 does not exist","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"        } catch (HironoException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"            assertEquals(\"The item you are attempting to delete is out of the range of the list.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"    public void testGetEventsOnDate() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"        // Add tasks to the task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"event team meeting /from 2023-11-02 1400 /to 2023-11-02 1600\", \"event\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"deadline submit report /by 2023-11-02 1800\", \"deadline\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\"); // Not tied to a date","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"event birthday party /from 2023-12-02 1800 /to 2023-12-02 2100\", \"event\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"        // Test for a date with events and deadlines","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"        String result \u003d taskList.getEventsOnDate(\"date 2023-11-02\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Here are the events on 2023-11-02:\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"            + \"1. [E][ ] team meeting (from: 2 Nov 2023, 2:00pm to: 2 Nov 2023, 4:00pm)\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"            + \"2. [D][ ] submit report (by: 2 Nov 2023, 6:00pm)\", result);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"        // Test for a date with no events or deadlines","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.getEventsOnDate(\"date 2023-10-01\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"No events found on 2023-10-01\", result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"        // Test for another date with only an event","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.getEventsOnDate(\"date 2023-12-02\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Here are the events on 2023-12-02:\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"            + \"1. [E][ ] birthday party (from: 2 Dec 2023, 6:00pm to: 2 Dec 2023, 9:00pm)\", result);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"    public void testFindTasks() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"        // Add tasks to the task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"deadline submit report /by 2023-11-02 1800\", \"deadline\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"event team meeting /from 2023-11-02 1400 /to 2023-11-02 1600\", \"event\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo borrow book\", \"todo\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"event book launch /from 2023-11-05 1800 /to 2023-11-05 2000\", \"event\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jsjk112344"},"content":"        // Test finding tasks with a single word","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jsjk112344"},"content":"        String result \u003d taskList.findTasks(\"find book\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Here are the matching tasks:\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jsjk112344"},"content":"            + \"1. [T][ ] read book\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jsjk112344"},"content":"            + \"2. [T][ ] borrow book\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jsjk112344"},"content":"            + \"3. [E][ ] book launch (from: 5 Nov 2023, 6:00pm to: 5 Nov 2023, 8:00pm)\", result);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jsjk112344"},"content":"        // Test finding tasks with a phrase","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.findTasks(\"find team meeting\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Here are the matching tasks:\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jsjk112344"},"content":"            + \"1. [E][ ] team meeting (from: 2 Nov 2023, 2:00pm to: 2 Nov 2023, 4:00pm)\", result);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jsjk112344"},"content":"        // Test finding tasks with no matches","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.findTasks(\"find nonexistent task\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"No tasks found matching \\\"nonexistent task\\\".\", result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jsjk112344"},"content":"    public void testListTasksEmpty() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jsjk112344"},"content":"        // Call listTasks on an empty task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jsjk112344"},"content":"        // Capture the output","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jsjk112344"},"content":"        String result \u003d taskList.listTasks();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jsjk112344"},"content":"        // Expected output","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jsjk112344"},"content":"        String expected \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jsjk112344"},"content":"        // Assert the output matches the expected result","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jsjk112344"},"content":"    public void testEditTask() throws Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jsjk112344"},"content":"        // Add some initial tasks","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"deadline submit report /by 2023-11-02 1800\", \"deadline\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"event team meeting /from 2023-11-02 1400 /to 2023-11-02 1600\", \"event\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jsjk112344"},"content":"        // Test editing a todo task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jsjk112344"},"content":"        String result \u003d taskList.editTask(\"edit 1: todo finish homework\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Got it. I\u0027ve edited the task to:\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Jsjk112344"},"content":"            + \"1. [T][ ] finish homework\", result);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jsjk112344"},"content":"        // Test editing a deadline task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.editTask(\"edit 2: deadline complete assignment /by 2023-12-01 2359\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Got it. I\u0027ve edited the task to:\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Jsjk112344"},"content":"            + \"2. [D][ ] complete assignment (by: 1 Dec 2023, 11:59pm)\", result);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Jsjk112344"},"content":"        // Test editing an event task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.editTask(\"edit 3: event project meeting /from 2023-12-05 1000 /to 2023-12-05 1200\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Got it. I\u0027ve edited the task to:\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Jsjk112344"},"content":"            + \"3. [E][ ] project meeting (from: 5 Dec 2023, 10:00am to: 5 Dec 2023, 12:00pm)\", result);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Jsjk112344"},"content":"        // Test preserving done status","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Jsjk112344"},"content":"        taskList.markTask(1); // Mark the first task as done","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.editTask(\"edit 1: todo study math\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Got it. I\u0027ve edited the task to:\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Jsjk112344"},"content":"            + \"1. [T][X] study math\", result);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Jsjk112344"},"content":"    public void testEditTaskEdgeCases() throws Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Jsjk112344"},"content":"        // Add a test task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Jsjk112344"},"content":"        // Test invalid task ID","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Jsjk112344"},"content":"            taskList.editTask(\"edit 999: todo new task\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Jsjk112344"},"content":"            assertTrue(false, \"Expected HironoException for invalid task ID\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Jsjk112344"},"content":"        } catch (HironoException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Jsjk112344"},"content":"            assertEquals(\"Task ID not found!\", e.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Jsjk112344"},"content":"        // Test invalid edit format (missing colon)","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Jsjk112344"},"content":"            taskList.editTask(\"edit 1 todo new task\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Jsjk112344"},"content":"            assertTrue(false, \"Expected HironoException for invalid format\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Jsjk112344"},"content":"        } catch (HironoException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Jsjk112344"},"content":"            assertEquals(\"Invalid edit format. Please use: edit \u003ctask ID\u003e: \u003cnew task info\u003e\", e.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Jsjk112344"},"content":"        // Test type mismatch (trying to change todo to deadline)","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Jsjk112344"},"content":"            taskList.editTask(\"edit 1: deadline submit report /by 2023-12-01\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Jsjk112344"},"content":"            assertTrue(false, \"Expected HironoException for type mismatch\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Jsjk112344"},"content":"        } catch (HironoException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Jsjk112344"},"content":"            assertEquals(\"Cannot change task type. Original task was: todo\", e.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Jsjk112344"},"content":"        // Test missing task description","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Jsjk112344"},"content":"            taskList.editTask(\"edit 1: todo\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Jsjk112344"},"content":"            assertTrue(false, \"Expected HironoException for missing description\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Jsjk112344"},"content":"        } catch (HironoException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Jsjk112344"},"content":"            assertEquals(\"Invalid task format. Please provide task type and description.\", e.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":211}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"todo read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"deadline return book /by 2023-06-06 1800","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"event project meeting /from 2023-08-06 1400 /to 2023-08-06 1600","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"todo join sports club","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"todo borrow book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"delete 6","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"deadline return book /by 2023-06-11 1800","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"mark 3","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"mark 4","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"date 2023-06-06","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"unmark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"delete 5","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"delete 3","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"date 2023-06-06","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"date 2023-08-06","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"REM check if input.txt exists","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"if not exist input.txt (","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"    echo ********** ERROR: input.txt not found **********","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"    exit /b 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":")","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"REM check if EXPECTED.TXT exists","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"if not exist EXPECTED.TXT (","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    echo ********** ERROR: EXPECTED.TXT not found **********","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    exit /b 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":")","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"java -classpath ..\\bin Hirono \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"    echo ********** TEST FAILED **********","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"    exit /b 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":") ELSE (","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"    echo ********** TEST PASSED **********","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":")","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"-":20,"Jsjk112344":19}}]
