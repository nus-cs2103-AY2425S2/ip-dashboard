[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    mainClass.set(\"hirono.Hirono\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"    archiveBaseName \u003d \"hirono\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"Jsjk112344":2}},{"path":"data/hirono.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"T | 0 | read book","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"D | 0 | return book | 2023-06-06 1800","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"T | 1 | join sports club","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"D | 0 | return book | 2023-06-11 1800","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":4}},{"path":"src/main/java/data/hirono.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"T | 0 | read book","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"D | 0 | return book | 2023-06-06 1800","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"D | 0 | return book | 2023-06-11 1800","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":3}},{"path":"src/main/java/hirono/Hirono.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.commands.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.io.*;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":" * The main class for the Hirono application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":" * This class serves as the entry point for the program, ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":" * orchestrating the UI, task management, command parsing, and storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"public class Hirono {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"     * The main method that runs the Hirono application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"     * It initializes the UI, task list, storage, and parser components,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"     * and continuously processes user commands until an exit command is issued.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException     If there is an error reading from or writing to the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If an error occurs during command execution.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    public static void main(String[] args) throws IOException, HironoException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"        // Initialize components","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"        Storage storage \u003d new Storage(\"./data/hirono.txt\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        // Show welcome message","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"        // Load tasks from storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"            taskList \u003d storage.loadTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"            ui.showMessage(\"Tasks loaded successfully!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"            ui.showMessage(\"Error loading tasks. Starting with an empty task list.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"        // Main command loop","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"        String input \u003d ui.readCommand();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"        while (true) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"            try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"                // Parse and execute the command","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"                Command command \u003d parser.parse(input);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"                // Exit the loop if the command is an exit command","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"                if (command.isExit()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"                    break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"            } catch (HironoException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"                // Show error message for invalid commands or execution issues","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"            // Display divider and read next command","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"            ui.showDivider();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"            input \u003d ui.readCommand();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":63}},{"path":"src/main/java/hirono/HironoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":" * Represents an exception specific to the Hirono application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":" * This exception is thrown when an error occurs during user input processing","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":" * or command execution within the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"public class HironoException extends Exception {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"     * Constructs a new HironoException with the specified error message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"     * @param message The detail message describing the nature of the error.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    public HironoException(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"        super(message); // Pass the error message to the superclass constructor","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":18}},{"path":"src/main/java/hirono/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.commands.Command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.commands.ListCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.commands.DeleteCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.commands.MarkCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.commands.UnmarkCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.commands.AddCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import hirono.commands.DateCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import hirono.commands.ExitCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import hirono.commands.FindCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"public class Parser {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"     * @param input","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"     * @return Command","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    public Command parse(String input) throws HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"            return new ListCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"            int taskId \u003d parseTaskId(input, \"delete\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"            return new DeleteCommand(taskId);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"            int taskId \u003d parseTaskId(input, \"mark\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"            return new MarkCommand(taskId);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"            int taskId \u003d parseTaskId(input, \"unmark\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"            return new UnmarkCommand(taskId);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"            return new AddCommand(input, \"todo\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"            return new AddCommand(input, \"deadline\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"            return new AddCommand(input, \"event\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"date\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"            return new DateCommand(input);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"            return new FindCommand(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"    private int parseTaskId(String input, String command) throws HironoException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The \" + command + \" command requires a task ID.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"        return Integer.parseInt(parts[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":58}},{"path":"src/main/java/hirono/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.io.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":" * Handles the saving and loading of tasks to and from a file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":" * This class is responsible for managing the persistence of tasks, ensuring","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":" * the task list is stored in and retrieved from the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"public class Storage {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     * Constructs a Storage object for managing the specified file path.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     * @param filePath The file path where tasks will be stored and retrieved.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"        ensureFileExists();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"     * Ensures the storage file and its parent directory exist.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"     * Creates the file and directory if they do not exist.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    private void ensureFileExists() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"                File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"                if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"                    parentDir.mkdirs(); // Create parent directory if it doesn\u0027t exist","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"                file.createNewFile(); // Create the file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"            System.out.println(\"Error creating the file: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"     * Deletes a task from the storage file by its task number.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskNumber The number of the task to delete (1-based index).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the file does not exist or the task number is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException      If an error occurs during file I/O operations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"    public void deleteTask(Integer taskNumber) throws HironoException, IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"        // Step 1: Check if the file exists, throw an exception if it doesn\u0027t","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"Task file does not exist.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"        // Step 2: Read all lines into memory","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"            String line;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"                lines.add(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"        // Validate the task number","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e lines.size()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"Invalid task number. Task does not exist.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"        // Remove the task and update the file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"        lines.remove(taskNumber - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"            for (String updatedLine : lines) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"                writer.write(updatedLine);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"     * Saves the current task list to the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list to save.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException If an error occurs during saving to the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"    public void saveTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"        for (Map.Entry\u003cInteger, Task\u003e entry : taskList.getTasks().entrySet()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"            Task task \u003d entry.getValue();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"            writer.write(task.toFileFormat() + System.lineSeparator());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"        writer.close();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"     * Loads tasks from the storage file and returns them as a TaskList.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"     * @return The TaskList containing the tasks loaded from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException      If an error occurs during reading from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the task format in the file is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jsjk112344"},"content":"    public TaskList loadTasks() throws HironoException, IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jsjk112344"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jsjk112344"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jsjk112344"},"content":"        // Ensure the file exists","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jsjk112344"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jsjk112344"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jsjk112344"},"content":"            file.createNewFile();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jsjk112344"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jsjk112344"},"content":"        // Parse each line and add the task to the TaskList","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jsjk112344"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jsjk112344"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jsjk112344"},"content":"            String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jsjk112344"},"content":"            String type \u003d parts[0].trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jsjk112344"},"content":"            boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jsjk112344"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jsjk112344"},"content":"            switch (type) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jsjk112344"},"content":"            case \"T\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jsjk112344"},"content":"                ToDo todo \u003d new ToDo(\"todo \" + description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jsjk112344"},"content":"                if (isDone) todo.markAsDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jsjk112344"},"content":"                taskList.addLoadedTask(todo);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jsjk112344"},"content":"                break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jsjk112344"},"content":"            case \"D\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jsjk112344"},"content":"                Deadline deadline \u003d new Deadline(\"deadline \" + description + \" /by \" + parts[3].trim());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jsjk112344"},"content":"                if (isDone) deadline.markAsDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jsjk112344"},"content":"                taskList.addLoadedTask(deadline);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jsjk112344"},"content":"                break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jsjk112344"},"content":"            case \"E\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jsjk112344"},"content":"                Event event \u003d new Event(\"event \" + description + \" /from \" + parts[3].trim() + \" /to \" + parts[4].trim());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jsjk112344"},"content":"                if (isDone) event.markAsDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jsjk112344"},"content":"                taskList.addLoadedTask(event);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jsjk112344"},"content":"                break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jsjk112344"},"content":"        scanner.close();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jsjk112344"},"content":"        return taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":149}},{"path":"src/main/java/hirono/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"public class Ui {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"    private final BufferedReader reader;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"    private final PrintWriter writer;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"    private final String line \u003d \"\\n--------------------------------------------------\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"    public Ui() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"        this.reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"        this.writer \u003d new PrintWriter(System.out, true);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"        String logo \u003d","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"                  \"                            .-\u0027\u0027\u0027-.                   .-\u0027\u0027\u0027-.     \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"                + \"                           \u0027   _    \\\\                \u0027   _    \\\\   \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"                + \"   .        .--.         /   /` \u0027.   \\\\    _..._    /   /` \u0027.   \\\\  \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"                + \" .\u0027|        |__|        .   |     \\\\  \u0027  .\u0027     \u0027. .   |     \\\\  \u0027  \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"                + \"\u003c  |        .--..-,.--. |   \u0027      |  \u0027.   .-.   .|   \u0027      |  \u0027 \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"                + \" | |        |  ||  .-. |\\\\    \\\\     / / |  \u0027   \u0027  |\\\\    \\\\     / /  \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"                + \" | | .\u0027\u0027\u0027-. |  || |  | | `.   ` ..\u0027 /  |  |   |  | `.   ` ..\u0027 /   \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"                + \" | |/.\u0027\u0027\u0027. \\\\|  || |  | |    \u0027-...-\u0027`   |  |   |  |    \u0027-...-\u0027`    \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"                + \" |  /    | ||  || |  \u0027-                |  |   |  |                \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"                + \" | |     | ||__|| |                    |  |   |  |                \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"                + \" | |     | |    | |                    |  |   |  |                \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"                + \" | \u0027.    | \u0027.   |_|                    |  |   |  |                \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"                + \" \u0027---\u0027   \u0027---\u0027                         \u0027--\u0027   \u0027--\u0027                \\n\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        writer.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        writer.println(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"        writer.println(\"Hello! I\u0027m Hirono\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"        writer.println(\"What can I do for you?\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"        writer.println(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     * @return String","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        return reader.readLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        writer.println(message);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"        writer.println(\"Error: \" + errorMessage);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"    public void showDivider() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"        writer.println(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"        writer.println(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"        writer.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"        writer.println(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":67}},{"path":"src/main/java/hirono/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.HironoException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"    private final String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"    private final String type;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"    public AddCommand(String description, String type) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"        String message \u003d taskList.addTask(description, type);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":26}},{"path":"src/main/java/hirono/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"import hirono.HironoException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"     * Executes the command with the given context.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui       The UI to interact with the user.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage  The storage to save/load tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If an error occurs during command execution.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, HironoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     * Determines if the command is an exit command.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     * @return true if it is an exit command, false otherwise.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"        return false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":28}},{"path":"src/main/java/hirono/commands/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.HironoException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":" * Represents a command to list the events or deadlines on a specific date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"    private final String input;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"    public DateCommand(String input) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"     /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"     * Executes the DateCommand by listing the events and deadlines on the specific date,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list to which the new task will be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui       The UI for interacting with the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage  The storage to save the updated task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If an error occurs during the listing of the tasks (e.g., invalid input).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        String message \u003d taskList.getEventsOnDate(input);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":33}},{"path":"src/main/java/hirono/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"import hirono.HironoException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":" * Represents a command to delete a specific item from the list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"    private final int taskId;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"    public DeleteCommand(int taskId) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     * Executes a delete command on the task specific by its task id","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        storage.deleteTask(taskId);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"        String message \u003d taskList.deleteTask(taskId);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":34}},{"path":"src/main/java/hirono/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"        return true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":27}},{"path":"src/main/java/hirono/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.HironoException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":" * Represents a command to list the events or deadlines on a specific date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"    private final String input;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"     /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     * Executes the DateCommand by listing the events and deadlines on the specific date,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList The task list to which the new task will be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui       The UI for interacting with the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage  The storage to save the updated task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If an error occurs during the listing of the tasks (e.g., invalid input).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws HironoException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"        String message \u003d taskList.findTasks(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":32}},{"path":"src/main/java/hirono/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"     * Lists out all the items in the saved list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"        // ui.showMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"        taskList.listTasks();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":19}},{"path":"src/main/java/hirono/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"import hirono.HironoException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"    private final int taskId;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"    public MarkCommand(int taskId) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"     * Marks a specific task as done, ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"     * if the item is already done, there will not be any change in behaviour","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        taskList.markTask(taskId);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(\"Task \" + taskId + \" marked as done.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":32}},{"path":"src/main/java/hirono/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"import hirono.HironoException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"    private final int taskId;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"    public UnmarkCommand(int taskId) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"     * Unmarks a specific task as done, ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"     * if the item is not yet done, there will not be any change in behaviour","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     * @param taskList","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     * @param ui","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     * @param storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        taskList.unmarkTask(taskId);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"        ui.showMessage(\"Task \" + taskId + \" marked as not done.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":33}},{"path":"src/main/java/hirono/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":" * Represents a deadline task that includes a description and a deadline date and time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"    private LocalDateTime deadlineTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"     * Constructs a Deadline object with a specified description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The task description in the format: ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     *                    \"deadline [task name] /by [yyyy-MM-dd HHmm]\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the description format is invalid or the date/time cannot be parsed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    public Deadline(String description) throws HironoException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"        super(description, \"D\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d parseDescription(description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"            this.deadlineTime \u003d parseDateTime(parts[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"Invalid date and time format. Use yyyy-MM-dd HHmm (e.g., 2023-12-31 2359).\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"     * Parses the task description into the task name and deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The task description in the format: ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"     *                    \"deadline [task name] /by [yyyy-MM-dd HHmm]\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"     * @return A string array containing the task name and deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the description format is invalid or missing the `/by` clause.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"    private String[] parseDescription(String description) throws HironoException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"        if (!isValidDeadline(description)) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The deadline command is not in the correct format: deadline [task name] /by [yyyy-MM-dd HHmm]\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d description.split(\"/by\", 2);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The deadline command must include a /by clause.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"        return parts;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"     * Checks if the task description is in the valid deadline format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The task description to validate.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"     * @return {@code true} if the description matches the deadline format, {@code false} otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"    private boolean isValidDeadline(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"        String deadlineRegex \u003d \"^deadline\\\\s+.+\\\\s+/by\\\\s+.+$\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"        return description.matches(deadlineRegex);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"     * Parses the deadline date and time from the input string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"     * @param dateTime The deadline in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"     * @return A {@link LocalDateTime} object representing the parsed deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"    private LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"        return LocalDateTime.parse(dateTime.trim(), formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"     * Checks if the deadline occurs on a specific date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"     * @param date The date to check.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"     * @return {@code true} if the deadline is on the given date, {@code false} otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"        LocalDate deadlineDate \u003d deadlineTime.toLocalDate();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"        return (date.equals(deadlineDate));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"     * Converts the deadline task to a file-compatible format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"     * @return A string representation of the deadline task for saving to a file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"D | %d | %s | %s\", ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"                             isDone() ? 1 : 0, ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"                             getDescriptionWithoutDeadline(), ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"                             deadlineTime.format(formatter));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"     * Gets the task description without the \"/by\" clause.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"     * @return The description of the task without the \"/by\" clause.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"    private String getDescriptionWithoutDeadline() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"        return getDescription().split(\"/by\")[0].replace(\"deadline\", \"\").trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jsjk112344"},"content":"     * Formats the task description for display purposes.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jsjk112344"},"content":"     * @param input The original task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jsjk112344"},"content":"     * @return A formatted string including the task name and deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jsjk112344"},"content":"    public String handleDescription(String input) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jsjk112344"},"content":"        DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mma\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jsjk112344"},"content":"        return getDescriptionWithoutDeadline() + \" (by: \" + deadlineTime.format(displayFormatter) + \")\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jsjk112344"},"content":"     * Converts the deadline task to a string representation for display.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jsjk112344"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jsjk112344"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jsjk112344"},"content":"        return \"[D]\" + super.getStatusIcon() + \" \" + handleDescription(getDescription());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":130}},{"path":"src/main/java/hirono/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":" * Represents an event task that includes a description, a start time (/from), and an end time (/to).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"    private LocalDateTime fromTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    private LocalDateTime toTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"     * Constructs an Event object with a specified description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The task description in the format: ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     *                    \"event [event name] /from [yyyy-MM-dd HHmm] /to [yyyy-MM-dd HHmm]\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the description format is invalid, the date/time cannot be parsed, ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     *                         or the /from time is after the /to time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    public Event(String description) throws HironoException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"        super(description, \"E\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d parseDescription(description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"            this.fromTime \u003d parseDateTime(parts[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"            this.toTime \u003d parseDateTime(parts[2]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"            if (fromTime.isAfter(toTime)) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"                throw new HironoException(\"The /from time cannot be after the /to time.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"Invalid date and time format. Use yyyy-MM-dd HHmm (e.g., 2023-12-31 2359).\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"     * Parses the task description into the event name, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The task description in the format: ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"     *                    \"event [event name] /from [yyyy-MM-dd HHmm] /to [yyyy-MM-dd HHmm]\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"     * @return A string array containing the event name, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException If the description format is invalid or missing the /from and /to clauses.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"    private String[] parseDescription(String description) throws HironoException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        if (!isValidEvent(description)) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The event command is not in the correct format: event [event name] /from [yyyy-MM-dd HHmm] /to [yyyy-MM-dd HHmm]\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d description.split(\"/from|/to\", 3);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The event command must include both /from and /to clauses.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"        return parts;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"     * Checks if the event occurs on a specific date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"     * @param date The date to check.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"     * @return {@code true} if the event occurs on the given date, {@code false} otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"        LocalDate fromDate \u003d fromTime.toLocalDate();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"        LocalDate toDate \u003d toTime.toLocalDate();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"        return (date.equals(fromDate) || date.equals(toDate)) || ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"               (date.isAfter(fromDate) \u0026\u0026 date.isBefore(toDate));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"     * Checks if the task description is in the valid event format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"     * @param description The task description to validate.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"     * @return {@code true} if the description matches the event format, {@code false} otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"    private boolean isValidEvent(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"        String eventRegex \u003d \"^event\\\\s+.+\\\\s+/from\\\\s+.+\\\\s+/to\\\\s+.+$\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"        return description.matches(eventRegex);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"     * Parses the event\u0027s start or end time from the input string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"     * @param dateTime The date and time in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"     * @return A {@link LocalDateTime} object representing the parsed date and time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"    private LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"        return LocalDateTime.parse(dateTime.trim(), formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"     * Converts the event task to a file-compatible format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"     * @return A string representation of the event task for saving to a file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"E | %d | %s | %s | %s\", ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"                             isDone() ? 1 : 0, ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"                             getDescriptionWithoutEvent(), ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"                             fromTime.format(formatter), ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"                             toTime.format(formatter));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jsjk112344"},"content":"     * Gets the task description without the \"/from\" and \"/to\" clauses.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jsjk112344"},"content":"     * @return The description of the task without the \"/from\" and \"/to\" clauses.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jsjk112344"},"content":"    private String getDescriptionWithoutEvent() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jsjk112344"},"content":"        return getDescription().split(\"/from\")[0].replace(\"event\", \"\").trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jsjk112344"},"content":"     * Formats the task description for display purposes.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jsjk112344"},"content":"     * @param input The original task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jsjk112344"},"content":"     * @return A formatted string including the task name, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jsjk112344"},"content":"    public String handleDescription(String input) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jsjk112344"},"content":"        DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mma\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jsjk112344"},"content":"        return getDescriptionWithoutEvent() + ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jsjk112344"},"content":"               \" (from: \" + fromTime.format(displayFormatter) + ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jsjk112344"},"content":"               \" to: \" + toTime.format(displayFormatter) + \")\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jsjk112344"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jsjk112344"},"content":"     * Converts the event task to a string representation for display.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jsjk112344"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jsjk112344"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jsjk112344"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jsjk112344"},"content":"        return \"[E]\" + super.getStatusIcon() + \" \" + handleDescription(getDescription());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":141}},{"path":"src/main/java/hirono/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"    private String description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"    private String type; ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"        this.isDone \u003d false; ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     * @return boolean","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        return \"[\" + type + \"]\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"        return description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"    public abstract String handleDescription(String input);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"%s | %d | %s\", getTypeIcon().substring(1, 2), isDone ? 1 : 0, getDescription());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        return getTypeIcon() + getStatusIcon() + \" \" + handleDescription(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":51}},{"path":"src/main/java/hirono/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import hirono.HironoException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"public class TaskList {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"    private HashMap\u003cInteger, Task\u003e tasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    private int taskCounter \u003d 1;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"     * @param description","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"     * @param type","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"     * @return String","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    public String addTask(String description, String type) throws HironoException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"        Task task;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        switch (type) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"            case \"todo\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"                task \u003d new ToDo(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"                break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"            case \"deadline\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"                task \u003d new Deadline(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"                break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"            case \"event\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"                task \u003d new Event(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"                break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"            default:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"                throw new HironoException(\"Invalid task type.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"        tasks.put(taskCounter, task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"        output.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"        output.append(tasks.get(taskCounter).toString() + \"\\n\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"        output.append(\"Now you have \" + taskCounter + \" tasks in the list.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"        taskCounter++;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"        return output.toString();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"    // Adds a task loaded from the file without incrementing the counter","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"    public void addLoadedTask(Task task) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        tasks.put(taskCounter, task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"        taskCounter++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"    public String deleteTask(Integer taskId) throws HironoException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"        if (!tasks.containsKey(taskId)) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The item you are attempting to delete is out of the range of the list.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"        output.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"        output.append(tasks.get(taskId) + \"\\n\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"        tasks.remove(taskId); ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"        reorderTasks(); ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"        output.append(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"        return output.toString();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"    public HashMap\u003cInteger, Task\u003e getTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"        return this.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"    // Marks a task as done","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"    public void markTask(int taskId) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"        Task task \u003d tasks.get(taskId);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"            task.markAsDone();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"            System.out.println(taskId + \". \" + task.toString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"            System.out.println(\"Task ID not found!\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"    public void unmarkTask(int taskId) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"        Task task \u003d tasks.get(taskId);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"            task.unmark();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"            System.out.println(taskId + \". \" + task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"            System.out.println(\"Task ID not found!\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"    public void listTasks() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"        for (Map.Entry\u003cInteger, Task\u003e entry : tasks.entrySet()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"            System.out.println(entry.getKey() + \". \" + entry.getValue());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"    public String findTasks(String input) throws HironoException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"        // Split the input by space and validate format","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The find command requires a search term. Please use: find [search term]\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jsjk112344"},"content":"        String searchTerm \u003d parts[1].trim().toLowerCase(); // Extract and normalize the search term","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jsjk112344"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jsjk112344"},"content":"        // Search through all tasks for matches","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jsjk112344"},"content":"        for (Task task : tasks.values()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jsjk112344"},"content":"            if (task.getDescription().toLowerCase().contains(searchTerm)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jsjk112344"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jsjk112344"},"content":"        // Build and return the result","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jsjk112344"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jsjk112344"},"content":"            return \"No tasks found matching \\\"\" + searchTerm + \"\\\".\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jsjk112344"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jsjk112344"},"content":"            StringBuilder result \u003d new StringBuilder(\"Here are the matching tasks:\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jsjk112344"},"content":"            int counter \u003d 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jsjk112344"},"content":"            for (Task task : matchingTasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jsjk112344"},"content":"                result.append(counter).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jsjk112344"},"content":"                counter++;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jsjk112344"},"content":"            return result.toString().trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jsjk112344"},"content":"   ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jsjk112344"},"content":"    public String getEventsOnDate(String input) throws HironoException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jsjk112344"},"content":"        // Split the input by space and validate format","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jsjk112344"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jsjk112344"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"The date command requires a date in yyyy-MM-dd format.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jsjk112344"},"content":"        LocalDate date;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jsjk112344"},"content":"            // Parse the date","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jsjk112344"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jsjk112344"},"content":"            date \u003d LocalDate.parse(parts[1].trim(), formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jsjk112344"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jsjk112344"},"content":"            throw new HironoException(\"Invalid date format. Please use yyyy-MM-dd (e.g., 2019-12-02).\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jsjk112344"},"content":"        // Filter events and deadlines on the specified date","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Jsjk112344"},"content":"        List\u003cTask\u003e eventsOnDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Jsjk112344"},"content":"        for (Task task : tasks.values()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Jsjk112344"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jsjk112344"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Jsjk112344"},"content":"                if (event.isOnDate(date)) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Jsjk112344"},"content":"                    eventsOnDate.add(event);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Jsjk112344"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Jsjk112344"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Jsjk112344"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Jsjk112344"},"content":"                if (deadline.isOnDate(date)) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Jsjk112344"},"content":"                    eventsOnDate.add(deadline);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Jsjk112344"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Jsjk112344"},"content":"        // Build and return the result","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Jsjk112344"},"content":"        if (eventsOnDate.isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Jsjk112344"},"content":"            return \"No events or deadlines found on \" + date;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Jsjk112344"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Jsjk112344"},"content":"            StringBuilder result \u003d new StringBuilder(\"Here are the events and deadlines on \" + date + \":\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Jsjk112344"},"content":"            int counter \u003d 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Jsjk112344"},"content":"            for (Task task : eventsOnDate) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Jsjk112344"},"content":"                result.append(counter).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Jsjk112344"},"content":"                counter++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Jsjk112344"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Jsjk112344"},"content":"            return result.toString().trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Jsjk112344"},"content":"    private void reorderTasks() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Jsjk112344"},"content":"        HashMap\u003cInteger, Task\u003e reorderedTasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Jsjk112344"},"content":"        int newTaskId \u003d 1;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Jsjk112344"},"content":"        for (Map.Entry\u003cInteger, Task\u003e entry : tasks.entrySet()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Jsjk112344"},"content":"            reorderedTasks.put(newTaskId, entry.getValue());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Jsjk112344"},"content":"            newTaskId++;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Jsjk112344"},"content":"        tasks \u003d reorderedTasks; ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":191}},{"path":"src/main/java/hirono/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"        super(description, \"T\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"     * @return String","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"        String processedDescription \u003d handleDescription(getDescription());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"        return String.format(\"%s | %d | %s\", ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"                            getTypeIcon().substring(1, 2), ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"                            isDone() ? 1 : 0, ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"                            processedDescription);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    public String handleDescription(String input) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"        // Remove the first word (\"todo\") from the input","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"        String[] splitted \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"        return splitted.length \u003e 1 ? splitted[1] : \"\"; // Return the remaining description","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"        return \"[T]\" + super.getStatusIcon() + \" \" + handleDescription(getDescription());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":33}},{"path":"src/test/java/hirono/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.commands.AddCommand;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import hirono.commands.Command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    public void testParseValidCommand() throws HironoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"        Command command \u003d parser.parse(\"todo read book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"    public void testParseInvalidCommand() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"        Exception exception \u003d assertThrows(HironoException.class, () -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"            parser.parse(\"invalid command\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        });","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means.\", exception.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":30}},{"path":"src/test/java/hirono/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import hirono.HironoException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"import org.junit.jupiter.api.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"    private static final String TEST_FILE_PATH \u003d \"./data/test-hirono.txt\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"    @AfterEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"    public void tearDown() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"        File testFile \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"        if (testFile.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"            testFile.delete();  // Delete test file after each test to avoid conflicts","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"     * @throws IOException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"     * @throws HironoException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"    public void testSaveAndLoadTasks() throws IOException, HironoException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"        // Add tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"deadline submit report /by 2023-11-02 1800\", \"deadline\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"event team meeting /from 2023-11-02 1400 /to 2023-11-02 1600\", \"event\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"        // Save tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"        // Load tasks into a new TaskList","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"        TaskList loadedTaskList \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(3, loadedTaskList.getTasks().size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        // Check if tasks are correctly restored","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"[T][ ] read book\", loadedTaskList.getTasks().get(1).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"[D][ ] submit report (by: 2 Nov 2023, 6:00pm)\", loadedTaskList.getTasks().get(2).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"[E][ ] team meeting (from: 2 Nov 2023, 2:00pm to: 2 Nov 2023, 4:00pm)\", loadedTaskList.getTasks().get(3).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"    public void testLoadFromEmptyFile() throws IOException, HironoException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"        // Create an empty test file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"        File testFile \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"        testFile.createNewFile();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"        // Attempt to load tasks from an empty file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"        TaskList loadedTaskList \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(0, loadedTaskList.getTasks().size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"    public void testDeleteTaskFromStorage() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"        // Add and save tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"deadline submit report /by 2023-11-02 1800\", \"deadline\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"        // Delete task 1 from storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"        storage.deleteTask(1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"        // Load and check if task 1 was removed","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"        TaskList loadedTaskList \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(1, loadedTaskList.getTasks().size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"[D][ ] submit report (by: 2 Nov 2023, 6:00pm)\", loadedTaskList.getTasks().get(1).toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":87}},{"path":"src/test/java/hirono/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"package hirono.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"import hirono.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"import hirono.HironoException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"    /** ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"     * @throws Exception","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"    public void testAddTask() throws Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"        String result \u003d taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"                     \"[T][ ] read book\\n\" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"                     \"Now you have 1 tasks in the list.\", result);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.addTask(\"deadline reply mom /by 2023-11-02 1800\", \"deadline\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"             ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"                     \"[D][ ] reply mom (by: 2 Nov 2023, 6:00pm)\\n\" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"                     \"Now you have 2 tasks in the list.\", result);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.addTask(\"event joshua\u0027s birthday party /from 2023-11-02 1800 /to 2023-11-02 2000\", \"event\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"             ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"                     \"[E][ ] joshua\u0027s birthday party (from: 2 Nov 2023, 6:00pm to: 2 Nov 2023, 8:00pm)\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"                     \"Now you have 3 tasks in the list.\", result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(3, taskList.getTasks().size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jsjk112344"},"content":"    public void testDeleteTask() throws Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jsjk112344"},"content":"        String result \u003d taskList.deleteTask(1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jsjk112344"},"content":"                     \"[T][ ] read book\\n\" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jsjk112344"},"content":"                     \"Now you have 0 tasks in the list.\", result);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"        assertTrue(taskList.getTasks().isEmpty());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jsjk112344"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"    public void testDeleteTaskEdgeCases() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"        // Deleting from an empty list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jsjk112344"},"content":"            taskList.deleteTask(1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jsjk112344"},"content":"        } catch (HironoException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jsjk112344"},"content":"            assertEquals(\"The item you are attempting to delete is out of the range of the list.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"        // Deleting a non-existent task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jsjk112344"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jsjk112344"},"content":"            taskList.deleteTask(2); // Task ID 2 does not exist","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jsjk112344"},"content":"        } catch (HironoException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jsjk112344"},"content":"            assertEquals(\"The item you are attempting to delete is out of the range of the list.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jsjk112344"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jsjk112344"},"content":"    public void testGetEventsOnDate() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"        // Add tasks to the task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"event team meeting /from 2023-11-02 1400 /to 2023-11-02 1600\", \"event\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"deadline submit report /by 2023-11-02 1800\", \"deadline\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\"); // Not tied to a date","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"event birthday party /from 2023-12-02 1800 /to 2023-12-02 2100\", \"event\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jsjk112344"},"content":"        // Test for a date with events and deadlines","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jsjk112344"},"content":"        String result \u003d taskList.getEventsOnDate(\"date 2023-11-02\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Here are the events on 2023-11-02:\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jsjk112344"},"content":"                     \"1. [E][ ] team meeting (from: 2 Nov 2023, 2:00pm to: 2 Nov 2023, 4:00pm)\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jsjk112344"},"content":"                     \"2. [D][ ] submit report (by: 2 Nov 2023, 6:00pm)\", result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jsjk112344"},"content":"        // Test for a date with no events or deadlines","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.getEventsOnDate(\"date 2023-10-01\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"No events found on 2023-10-01\", result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jsjk112344"},"content":"        // Test for another date with only an event","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.getEventsOnDate(\"date 2023-12-02\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Here are the events on 2023-12-02:\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"                     \"1. [E][ ] birthday party (from: 2 Dec 2023, 6:00pm to: 2 Dec 2023, 9:00pm)\", result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jsjk112344"},"content":"    public void testFindTasks() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jsjk112344"},"content":"        // Add tasks to the task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo read book\", \"todo\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"deadline submit report /by 2023-11-02 1800\", \"deadline\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"event team meeting /from 2023-11-02 1400 /to 2023-11-02 1600\", \"event\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"todo borrow book\", \"todo\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jsjk112344"},"content":"        taskList.addTask(\"event book launch /from 2023-11-05 1800 /to 2023-11-05 2000\", \"event\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jsjk112344"},"content":"        // Test finding tasks with a single word","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jsjk112344"},"content":"        String result \u003d taskList.findTasks(\"find book\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Here are the matching tasks:\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jsjk112344"},"content":"                    \"1. [T][ ] read book\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jsjk112344"},"content":"                    \"2. [T][ ] borrow book\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jsjk112344"},"content":"                    \"3. [E][ ] book launch (from: 5 Nov 2023, 6:00pm to: 5 Nov 2023, 8:00pm)\", result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jsjk112344"},"content":"        // Test finding tasks with a phrase","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.findTasks(\"find team meeting\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"Here are the matching tasks:\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jsjk112344"},"content":"                    \"1. [E][ ] team meeting (from: 2 Nov 2023, 2:00pm to: 2 Nov 2023, 4:00pm)\", result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jsjk112344"},"content":"        // Test finding tasks with no matches","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jsjk112344"},"content":"        result \u003d taskList.findTasks(\"find nonexistent task\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(\"No tasks found matching \\\"nonexistent task\\\".\", result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jsjk112344"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jsjk112344"},"content":"    public void testListTasksEmpty() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jsjk112344"},"content":"        // Call listTasks on an empty task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jsjk112344"},"content":"        taskList.listTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jsjk112344"},"content":"        // Capture the output","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jsjk112344"},"content":"        String result \u003d outputStream.toString().trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jsjk112344"},"content":"        // Expected output","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jsjk112344"},"content":"        String expected \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jsjk112344"},"content":"        // Assert the output matches the expected result","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jsjk112344"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jsjk112344"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jsjk112344"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":144}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"todo read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"deadline return book /by 2023-06-06 1800","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"event project meeting /from 2023-08-06 1400 /to 2023-08-06 1600","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"todo join sports club","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"todo borrow book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"delete 6","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"deadline return book /by 2023-06-11 1800","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"mark 3","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"mark 4","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"date 2023-06-06","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"unmark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"delete 5","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"delete 3","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"date 2023-06-06","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"date 2023-08-06","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"REM check if input.txt exists","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"if not exist input.txt (","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"    echo ********** ERROR: input.txt not found **********","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"    exit /b 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":")","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"REM check if EXPECTED.TXT exists","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"if not exist EXPECTED.TXT (","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    echo ********** ERROR: EXPECTED.TXT not found **********","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"    exit /b 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":")","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"java -classpath ..\\bin Hirono \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"    echo ********** TEST FAILED **********","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"    exit /b 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":") ELSE (","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"    echo ********** TEST PASSED **********","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":")","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"-":20,"Jsjk112344":19}}]
