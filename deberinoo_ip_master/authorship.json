[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"# Juno ₊˚⊹♡","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"![alt text](https://www.vpesports.com/wp-content/uploads/2024/08/Overwatch-2-Unveils-Deeper-Narrative-Dive-Into-Junos-Past.png)","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"This project is based on the Duke project template, which is named after the Java mascot Duke. However, as part of my individual project for CS2103, I have renamed it to Juno, inspired by the Overwatch character. Below are the instructions to set up and run the project.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"1. After that, locate the `src/main/java/Juno.java` file, right-click it, and choose `Run Juno.main()` (if the code editor is showing compile errors, try restarting the IDE). ","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"deberinoo":5,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"checkstyle {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"    mainClass.set(\"juno.gui.Launcher\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"    archiveBaseName \u003d \"juno\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"deberinoo":22,"-":39}},{"path":"src/main/java/juno/Juno.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import juno.command.Command;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"import juno.error.JunoException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"import juno.utility.Parser;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"import juno.utility.Storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"import juno.utility.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":" * The main class for the Juno task management application.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":" * Handles initialization, user interaction, and task management.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"public class Juno {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"./data/juno.txt\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"     * Initializes Juno with the specified file path for task storage.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"     * @param filePath The path to the file for storing tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"    public Juno(String filePath) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"        TaskList loadedTasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"        ","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"            loadedTasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"        } catch (JunoException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"            loadedTasks \u003d new TaskList();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"        ","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"        this.tasks \u003d loadedTasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"     * Processes user input and returns a response.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"     * @return A response based on the executed command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"            return Ui.showWelcome();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"            String reply \u003d c.execute(tasks);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"            if (c.isExit()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deberinoo"},"content":"                return Ui.showGoodbye();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deberinoo"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deberinoo"},"content":"            return reply;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deberinoo"},"content":"        } catch (JunoException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deberinoo"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deberinoo"},"content":"     * Starts the Juno application and handles user interaction.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deberinoo"},"content":"    public void run() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deberinoo"},"content":"        Ui.showWelcome();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deberinoo"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deberinoo"},"content":"    ","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deberinoo"},"content":"        while (isRunning) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deberinoo"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deberinoo"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deberinoo"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deberinoo"},"content":"                command.execute(tasks);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deberinoo"},"content":"                isRunning \u003d command.isExit();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deberinoo"},"content":"                ","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deberinoo"},"content":"            } catch (JunoException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deberinoo"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deberinoo"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deberinoo"},"content":"    ","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"deberinoo"},"content":"        Ui.showGoodbye();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"deberinoo"},"content":"     /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"deberinoo"},"content":"     * The entry point of the Juno application.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"deberinoo"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"deberinoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"deberinoo"},"content":"        new Juno(DEFAULT_FILE_PATH).run();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"deberinoo":95}},{"path":"src/main/java/juno/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.command;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"import juno.error.JunoException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"import juno.task.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"import juno.task.Event;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"import juno.task.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"import juno.task.ToDo;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"import juno.utility.Parser;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":" * Handles adding new tasks (ToDo, Deadline, Event) to the task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"    ","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"     * Constructs an AddCommand with the given command type, argument, and options.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"     * @param command  The type of task to add (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"     * @param argument The main description of the task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"     * @param options  Additional parameters such as \"/by\" for deadlines and \"/from\" \u0026 \"/to\" for events.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"    public AddCommand(String command, String argument, HashMap\u003cString, String\u003e options) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"        super(command, argument, options);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"     * Executes the command by adding a task to the task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"     * @param tasks The task list to which the new task will be added.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"     * @return A response message confirming the task addition.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"        Task newTask;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"            switch (command) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"            case \"deadline\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"                newTask \u003d createDeadline();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"                break;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"            case \"event\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"                newTask \u003d createEvent();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"                break;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"            default:","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"                newTask \u003d new ToDo(argument);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"        } catch (JunoException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"            return \"Juno Error: \" + e.getMessage();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"        // Assert that the task is not null","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"        assert newTask !\u003d null : \"Task should not be null after creation\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deberinoo"},"content":"        int initialTaskCount \u003d tasks.size();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deberinoo"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deberinoo"},"content":"        // Assert that the task list size has increased by one","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deberinoo"},"content":"        assert tasks.size() \u003d\u003d initialTaskCount + 1 : \"Task list size should increase by one after adding a task\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deberinoo"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\\n  \" + newTask + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deberinoo"},"content":"        return response;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deberinoo"},"content":"     * Creates a Deadline task using the provided options.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deberinoo"},"content":"     * @return A new Deadline task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deberinoo"},"content":"     * @throws JunoException If the \"/by\" option is missing or invalid.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deberinoo"},"content":"    private Task createDeadline() throws JunoException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deberinoo"},"content":"        String deadlineBy \u003d options.get(\"by\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deberinoo"},"content":"        if (deadlineBy \u003d\u003d null) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deberinoo"},"content":"            throw new JunoException(\"Deadline option \u0027/by\u0027 has not been provided.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deberinoo"},"content":"        LocalDate byDate \u003d Parser.parseDate(deadlineBy);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deberinoo"},"content":"        // Assert that the parsed date is not null","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deberinoo"},"content":"        assert byDate !\u003d null : \"Parsed date should not be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"deberinoo"},"content":"        return new Deadline(argument, byDate);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"deberinoo"},"content":"     * Creates an Event task using the provided options.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"deberinoo"},"content":"     * @return A new Event task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"deberinoo"},"content":"     * @throws JunoException If either \"/from\" or \"/to\" options are missing or invalid.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"deberinoo"},"content":"    private Task createEvent() throws JunoException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"deberinoo"},"content":"        String from \u003d options.get(\"from\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"deberinoo"},"content":"        String to \u003d options.get(\"to\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"deberinoo"},"content":"        if (from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"deberinoo"},"content":"            throw new JunoException(\"Event requires both \u0027/from\u0027 and \u0027/to\u0027 options.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"deberinoo"},"content":"        LocalDate fromDate \u003d Parser.parseDate(from);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"deberinoo"},"content":"        LocalDate toDate \u003d Parser.parseDate(to);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"deberinoo"},"content":"        // Assert that the parsed dates are not null","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"deberinoo"},"content":"        assert fromDate !\u003d null : \"Parsed \u0027from\u0027 date should not be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"deberinoo"},"content":"        assert toDate !\u003d null : \"Parsed \u0027to\u0027 date should not be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"deberinoo"},"content":"        return new Event(argument, fromDate, toDate);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"deberinoo":107}},{"path":"src/main/java/juno/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":" * Represents a general command that can be executed in the task manager system.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":" * Commands include specific actions like adding tasks, marking them as done, etc.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"public class Command {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"    protected final String command;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"    protected final String argument;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"    protected final HashMap\u003cString, String\u003e options;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"     * Constructs a Command with the given parameters.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"     * @param command The type of command (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"     * @param argument The main description or argument for the command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"     * @param options Additional options such as dates for deadline/event tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"    public Command(String command, String argument, HashMap\u003cString, String\u003e options) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"        this.command \u003d command;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"        this.options \u003d options;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"     * Retrieves the command type.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"     * @return The type of the command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"    public String getCommand() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"        return command;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"     /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"     * Retrieves the argument for the command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"     * @return The argument passed with the command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"    public String getArgument() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"        return argument;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"     * Executes the command on the given task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"     * Default implementation returns a default error message.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"     * @param tasks The task list to operate on.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"     * @return A response message after attempting to execute the command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deberinoo"},"content":"        return \"Sorry, I did not understand that command.\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deberinoo"},"content":"     * Determines if the command is an exit command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deberinoo"},"content":"     * The exit command is \"bye\".","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deberinoo"},"content":"     * @return True if the command is \"bye\", otherwise false.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deberinoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deberinoo"},"content":"        return command.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"deberinoo":68}},{"path":"src/main/java/juno/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":" * This command removes a task based on the provided index.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"     * Constructs a DeleteCommand with the given parameters.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"     * @param command The type of command (e.g., \"delete\").","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"     * @param argument The task index to be deleted, passed as a string.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"     * @param options Additional options, if any.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"    public DeleteCommand(String command, String argument, HashMap\u003cString, String\u003e options) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"        super(command, argument, options);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"     * Executes the delete command on the given task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"     * The task at the specified index is removed.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"     * @param tasks The task list to operate on.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"     * @return A message indicating the result of the deletion.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"        int deleteIndex \u003d Integer.parseInt(argument);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"        if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"            return \"The specified task is out of range. Please try again.\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"            assert deleteIndex \u003c tasks.size() \u0026\u0026 deleteIndex \u003e\u003d 0 : \"The specified task is out of range\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"            ","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"            String result \u003d \"Noted. I\u0027ve removed this task:\\n  \" + tasks.getTask(deleteIndex - 1).toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"            tasks.deleteTask(deleteIndex - 1);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"            result +\u003d \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"            return result;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"deberinoo":48}},{"path":"src/main/java/juno/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":" * Represents a command to find tasks in the task list that match a search term.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":" * This command searches for tasks containing the given argument and returns the matching tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"    ","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"     * Constructs a FindCommand with the given parameters.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"     * @param command The type of command (e.g., \"find\").","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"     * @param argument The search term to find matching tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"     * @param options Additional options, if any.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"    public FindCommand(String command, String argument, HashMap\u003cString, String\u003e options) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"        super(command, argument, options);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"     * Executes the find command on the given task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"     * The tasks that contain the search term in their description are returned.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"     * @param tasks The task list to search through.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"     * @return A message indicating the result of the search, with matching tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"        assert argument !\u003d null \u0026\u0026 !argument.isEmpty() : \"Search term cannot be null or empty\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"        ","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"            return \"No matching tasks found.\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"            StringBuilder result \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"            tasks.getTasks().stream()","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"                            .filter(task -\u003e task.toString().contains(argument)) // Assuming we\u0027re filtering tasks by description","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"                            .forEach(task -\u003e result.append(tasks.getTasks().indexOf(task) + 1)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"                                                    .append(\". \")","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"                                                    .append(task)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"                                                    .append(\"\\n\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"            return result.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"     * Determines whether this command is an exit command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"     * ","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"     * @return false, as the find command does not exit the program.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deberinoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deberinoo"},"content":"        return false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"deberinoo":59}},{"path":"src/main/java/juno/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.command;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"    private static final String COMMANDS \u003d \"\"\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"            Here are a list of commands I support:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"            list - shows your current todo list","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"            todo \u003ctask name\u003e - adds a todo task","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"            deadline \u003ctask name\u003e /by \u003cdeadline\u003e - adds a deadline task","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"            event \u003ctask name\u003e /from \u003cevent start\u003e /to \u003cevent end\u003e - adds an event task","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"            mark \u003ctask number\u003e - marks task at its index","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"            unmark \u003ctask number\u003e - unmarks task at its index","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"            delete \u003ctask number\u003e - deletes task at its index","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"            find \u003ckeyword\u003e - find tasks containing the keyword","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"            list /tag \u003ctag\u003e - list tasks by tag","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"            help - shows this help message","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"            \"\"\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"    public HelpCommand(String command, String argument, HashMap\u003cString, String\u003e options) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"        super(command, argument, options);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"        return COMMANDS;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"        return false; // Help command doesn\u0027t exit the program","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"deberinoo":35}},{"path":"src/main/java/juno/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"import java.util.List;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"import juno.task.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":" * This command returns a message with all tasks currently in the task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"     * Constructs a ListCommand with the given parameters.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"     * @param command The type of command (e.g., \"list\").","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"     * @param argument The argument for the command (not used in this case).","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"     * @param options Additional options, if any.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"    public ListCommand(String command, String argument, HashMap\u003cString, String\u003e options) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"        super(command, argument, options);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"     * Executes the list command on the given task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"     * Returns a list of all tasks currently in the task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"     * @param tasks The task list to display.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"     * @return A message containing all tasks in the list, or a message indicating that the list is empty.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"        List\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"            return \"Juno: Your task list is empty. Add a new task to get started!\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"            StringBuilder result \u003d new StringBuilder(\"Juno: Here are your current missions:\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"            ","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"            assert taskList.size() \u003e\u003d 0 : \"Task list size cannot be negative\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"            ","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"            taskList.stream()","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"                    .map(task -\u003e taskList.indexOf(task) + 1 + \". \" + task)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"                    .forEach(taskString -\u003e result.append(taskString).append(\"\\n\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"            return result.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"deberinoo":50}},{"path":"src/main/java/juno/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"import juno.task.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":" * Represents a command to mark or unmark a task in the task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":" * This command allows the user to mark a task as completed or unmark it as incomplete.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"     * Constructs a MarkCommand with the given parameters.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"     * @param command The type of command (either \"mark\" or \"unmark\").","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"     * @param argument The task index (1-based index) to be marked or unmarked.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"     * @param options Additional options, if any.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"    public MarkCommand(String command, String argument, HashMap\u003cString, String\u003e options) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"        super(command, argument, options);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"     * Executes the mark or unmark command on the given task list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"     * Marks a task as completed or unmarks it based on the command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"     * @param tasks The task list on which the task will be marked/unmarked.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"     * @return A message indicating whether the task was marked or unmarked successfully.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"        assert argument !\u003d null \u0026\u0026 !argument.isEmpty() : \"Argument cannot be null or empty\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"            int markIndex \u003d Integer.parseInt(argument) - 1; // Convert input to zero-based index","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"            assert tasks.size() \u003e\u003d 0 : \"Task list size cannot be negative\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"            if (markIndex \u003c 0 || markIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"                return \"Juno: Error! The specified task is out of range. Please try again.\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"            assert markIndex \u003e\u003d 0 \u0026\u0026 markIndex \u003c tasks.size() : \"The specified task index is out of range\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"            Task markEntry \u003d tasks.getTask(markIndex);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"                markEntry.markAsDone();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"                return \"Juno: Nice! I\u0027ve marked this task as done:\\n  \" + markEntry;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"                markEntry.unmarkAsDone();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"                return \"Juno: OK, I\u0027ve marked this task as not done yet:\\n  \" + markEntry;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"            } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deberinoo"},"content":"                return \"Juno: Error! The command is not recognized.\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deberinoo"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deberinoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deberinoo"},"content":"            return \"Juno: Error! Invalid task index: \" + argument;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"deberinoo":63}},{"path":"src/main/java/juno/error/JunoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.error;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"public class JunoException extends Exception {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"    public JunoException(String message) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"        super(message);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"deberinoo":7}},{"path":"src/main/java/juno/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.gui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"    private void flip() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"    public static DialogBox getJunoDialog(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deberinoo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deberinoo"},"content":"        db.flip();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deberinoo"},"content":"        return db;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"deberinoo":60}},{"path":"src/main/java/juno/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.gui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"public class Launcher {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"deberinoo":12}},{"path":"src/main/java/juno/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.gui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"import juno.Juno;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"    private Juno juno \u003d new Juno(\"./data/juno.txt\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJuno(juno);  // inject the Duke instance","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"            stage.show();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"deberinoo":29}},{"path":"src/main/java/juno/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.gui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"import juno.Juno;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"    private Juno juno;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"    private Image junoImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/juno.jpg\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"    public void setJuno(Juno j) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"        juno \u003d j;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"        String response \u003d juno.getResponse(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"                DialogBox.getJunoDialog(response, junoImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"deberinoo":54}},{"path":"src/main/java/juno/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"    protected LocalDate by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"     * @param by The due date.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"     * Returns the deadline date.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"     * @return The due date of the task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"        return this.by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"     /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"     * Formats the task for file storage.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"     * @return A string representation in file format.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(formatter);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"    ","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"     /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"     * @return Formatted string with deadline information.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"     * Returns a string representation without the deadline date.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deberinoo"},"content":"     * @return Formatted string without deadline information.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deberinoo"},"content":"    public String toStringWithoutDate() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deberinoo"},"content":"        return \"[D]\" + super.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"deberinoo":62}},{"path":"src/main/java/juno/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":" * Represents an event task with a start and end date.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"    protected LocalDate from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"    protected LocalDate to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"     * Constructs an Event task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"     * @param description The event description.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"     * @param from The start date of the event.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"     * @param to The end date of the event.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"    public Event(String description, LocalDate from, LocalDate  to) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"    ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"     * Returns the event\u0027s start date.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"     * @return The start date.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"        return this.from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"     * Returns the event\u0027s end date.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"     * @return The end date.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"        return this.to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"     * Formats the event task for file storage.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"     * @return A string representation in file format.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from.format(formatter) + \" | \" + to.format(formatter);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deberinoo"},"content":"     /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deberinoo"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deberinoo"},"content":"     * @return Formatted string with event duration.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deberinoo"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deberinoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deberinoo"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deberinoo"},"content":"     * Returns a string representation without the event dates.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deberinoo"},"content":"     * @return Formatted string without date information.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deberinoo"},"content":"    public String toStringWithoutDate() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deberinoo"},"content":"        return \"[E]\" + super.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"deberinoo":75}},{"path":"src/main/java/juno/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":" * Represents a generic task with a description, completion status, and type.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"    protected String description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"    protected TaskType taskType;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"     * Constructs a Task with a description and type.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"     * @param taskType The type of task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"     * Converts the task to a file-friendly format.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"     * @return A formatted string representation of the task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"     * Returns the task description.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"     * @return The task description.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"        return description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"     /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"     * @return \"X\" if the task is done, otherwise \" \".","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"        return (isDone ? \"X\" : \" \"); // \"X\" if done, \" \" if not done","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deberinoo"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deberinoo"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deberinoo"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deberinoo"},"content":"     * Returns the task type.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deberinoo"},"content":"     * @return The type of the task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deberinoo"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deberinoo"},"content":"        return taskType;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deberinoo"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deberinoo"},"content":"     * @return Formatted string with status and description.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deberinoo"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deberinoo"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"deberinoo":80}},{"path":"src/main/java/juno/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"import java.util.stream.Collectors; ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":" * Represents a list of tasks that can be managed in the system. This class allows tasks to be added, removed,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":" * marked/unmarked as done, and listed. It also provides methods to retrieve individual tasks and check the list\u0027s state.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"public class TaskList {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"     * Constructs a new empty TaskList.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"     * Constructs a TaskList with a specified list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"     * ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"     * ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"     * Deletes a task from the task list based on the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"     * ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"            tasks.remove(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"     * Marks a task as done based on the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"     * ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deberinoo"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deberinoo"},"content":"            tasks.get(index).markAsDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deberinoo"},"content":"     * Unmarks a task as done based on the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deberinoo"},"content":"     * ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deberinoo"},"content":"     * @param index The index of the task to unmark as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deberinoo"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deberinoo"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deberinoo"},"content":"            tasks.get(index).unmarkAsDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deberinoo"},"content":"     /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deberinoo"},"content":"     * Lists all the tasks in the task list. If the list is empty, it prints a message indicating that no tasks are available.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deberinoo"},"content":"    public void listTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deberinoo"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deberinoo"},"content":"            System.out.println(\"Juno: No tasks available.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deberinoo"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deberinoo"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deberinoo"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deberinoo"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"deberinoo"},"content":"     /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"deberinoo"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"deberinoo"},"content":"     * ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"deberinoo"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"deberinoo"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"deberinoo"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"deberinoo"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"deberinoo"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"deberinoo"},"content":"     * Searches the task list for tasks whose descriptions contain the specified keyword.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"deberinoo"},"content":"     * The search is case-insensitive, meaning both lowercase and uppercase characters are treated the same.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"deberinoo"},"content":"     * ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"deberinoo"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"deberinoo"},"content":"     * @return A list of tasks whose descriptions contain the keyword.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"deberinoo"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"deberinoo"},"content":"        return tasks.stream()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"deberinoo"},"content":"                    .filter(task -\u003e task.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"deberinoo"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"deberinoo"},"content":"     * Retrieves the entire list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"deberinoo"},"content":"     * ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"deberinoo"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"deberinoo"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"deberinoo"},"content":"        return tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"deberinoo"},"content":"     /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"deberinoo"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"deberinoo"},"content":"     * ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"deberinoo"},"content":"     * @return True if the list is empty, false otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"deberinoo"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"deberinoo"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"deberinoo"},"content":"    ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"deberinoo"},"content":"     /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"deberinoo"},"content":"     * Retrieves the number of tasks in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"deberinoo"},"content":"     * ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"deberinoo"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"deberinoo"},"content":"    public int size() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"deberinoo"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"deberinoo":135}},{"path":"src/main/java/juno/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":" * Represents the different types of tasks available.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"public enum TaskType {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"    TODO,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"    EVENT;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"     /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"     * Returns the task type as a lowercase string.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"     * @return The task type in lowercase (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"        return this.name().toLowerCase(); // Formats as \"todo\", \"deadline\", \"event\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"deberinoo":20}},{"path":"src/main/java/juno/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":" * Represents a simple to-do task without a specific deadline or duration.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"     * Constructs a ToDo task with a description.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"     /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"     * Converts the ToDo task to a file-friendly format.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"     * @return A formatted string representation for storage.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"     * @return Formatted string with task type and status.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"deberinoo":37}},{"path":"src/main/java/juno/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.utility;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"import juno.command.AddCommand;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"import juno.command.Command;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"import juno.command.DeleteCommand;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"import juno.command.FindCommand;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"import juno.command.HelpCommand;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"import juno.command.ListCommand;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"import juno.command.MarkCommand;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"import juno.error.JunoException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"import juno.task.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"import juno.task.Event;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"import juno.task.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"import juno.task.ToDo;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":" * Parses user input and task data into commands and tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"public class Parser {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"     * Parses user input into a Command object.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"     * @param commandString The user input string.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"     * @return Corresponding Command object.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"     * @throws JunoException If the command is invalid.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"    public static Command parse(String commandString) throws JunoException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"        // Split the input into main command and options using \"/\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"        String[] parts \u003d commandString.split(\"/\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"        // Main Command (first part before any \"/\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"        String[] main \u003d parts[0].split(\" \", 2);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"        String command \u003d main[0]; // The main command (e.g., \"deadline\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"        String argument \u003d \"\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"        if (main.length \u003e 1) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"            argument \u003d main[1].trim(); // The argument for the command (e.g., \"submit report\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"        // Options (from parts after the \"/\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"        HashMap\u003cString, String\u003e options \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"            String option \u003d parts[i].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"            if (!option.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"                String[] optionParts \u003d option.split(\" \", 2);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"                if (optionParts.length \u003d\u003d 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"                    // Option with a value (e.g., \"/by 2025-03-01\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deberinoo"},"content":"                    options.put(optionParts[0].trim(), optionParts[1].trim());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deberinoo"},"content":"                } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deberinoo"},"content":"                    // Option without a value (e.g., \"/priority\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deberinoo"},"content":"                    options.put(optionParts[0].trim(), \"\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deberinoo"},"content":"                }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deberinoo"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deberinoo"},"content":"        // Return the appropriate Command object based on the parsed input","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deberinoo"},"content":"        switch (command) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deberinoo"},"content":"            case \"list\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deberinoo"},"content":"                return new ListCommand(command, argument, options);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deberinoo"},"content":"            case \"mark\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deberinoo"},"content":"            case \"unmark\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deberinoo"},"content":"                return new MarkCommand(command, argument, options);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deberinoo"},"content":"            case \"todo\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deberinoo"},"content":"            case \"deadline\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deberinoo"},"content":"            case \"event\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deberinoo"},"content":"                return new AddCommand(command, argument, options);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deberinoo"},"content":"            case \"delete\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deberinoo"},"content":"                return new DeleteCommand(command, argument, options);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deberinoo"},"content":"            case \"find\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deberinoo"},"content":"                return new FindCommand(command, argument, options);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deberinoo"},"content":"                case \"help\":","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deberinoo"},"content":"                return new HelpCommand(command, argument, options);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deberinoo"},"content":"            default:","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deberinoo"},"content":"                throw new JunoException(\"I don\u0027t understand your command. Can you try again?\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"deberinoo"},"content":"    ","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"deberinoo"},"content":"     * Parses a task data line into a Task object.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"deberinoo"},"content":"     * @param line The task data line.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"deberinoo"},"content":"     * @return Corresponding Task object.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"deberinoo"},"content":"     * @throws JunoException If the task type is invalid.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"deberinoo"},"content":"    public static Task parseTask(String line) throws JunoException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"deberinoo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"deberinoo"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"deberinoo"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"deberinoo"},"content":"        switch (type) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"deberinoo"},"content":"            case \"T\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"deberinoo"},"content":"                return new ToDo(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"deberinoo"},"content":"            case \"D\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"deberinoo"},"content":"                LocalDate deadline \u003d parseDate(parts[3]);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"deberinoo"},"content":"                return new Deadline(description, deadline);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"deberinoo"},"content":"            case \"E\":","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"deberinoo"},"content":"                LocalDate eventStart \u003d parseDate(parts[3]);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"deberinoo"},"content":"                LocalDate eventEnd \u003d parseDate(parts[4]);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"deberinoo"},"content":"                return new Event(description, eventStart, eventEnd);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"deberinoo"},"content":"            default:","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"deberinoo"},"content":"                throw new IllegalArgumentException(\"Invalid task type in saved data.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"deberinoo"},"content":"     * Parses a date string into a LocalDate object.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"deberinoo"},"content":"     * @param dateString The date string.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"deberinoo"},"content":"     * @return Parsed LocalDate object.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"deberinoo"},"content":"     * @throws JunoException If the date format is invalid.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"deberinoo"},"content":"    public static LocalDate parseDate(String dateString) throws JunoException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"deberinoo"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"deberinoo"},"content":"            dateString \u003d dateString.trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"deberinoo"},"content":"            ","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"deberinoo"},"content":"            // Create the formatter with multiple patterns","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"deberinoo"},"content":"            DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"deberinoo"},"content":"                    .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-M-d\"))","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"deberinoo"},"content":"                    .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"deberinoo"},"content":"                    .appendOptional(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"deberinoo"},"content":"                    .appendOptional(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"deberinoo"},"content":"                    .parseDefaulting(ChronoField.ERA, 1)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"deberinoo"},"content":"                    .toFormatter()","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"deberinoo"},"content":"                    .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"deberinoo"},"content":"            // Parse the date using the formatter","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"deberinoo"},"content":"            LocalDate date \u003d LocalDate.parse(dateString, formatter);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"deberinoo"},"content":"            return date;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"deberinoo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"deberinoo"},"content":"            throw new JunoException(\"Invalid date format: \" + dateString + \"\\nPlease provide the date in one of the following formats:\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"deberinoo"},"content":"                    + \"yyyy-MM-dd (e.g., 2021-10-15)\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"deberinoo"},"content":"                    + \"dd-MM-yyyy (e.g., 15-10-2021)\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"deberinoo"},"content":"                    + \"MMM dd yyyy (e.g., Oct 15 2021)\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"deberinoo":145}},{"path":"src/main/java/juno/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.utility;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"import juno.error.JunoException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"import juno.task.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"import juno.task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":" * Handles loading and saving tasks to a file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"public class Storage {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"     * Creates a Storage object with the specified file path.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"     * @param filePath The path to the file for storing tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"     * @throws JunoException If the file cannot be read.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"    public List\u003cTask\u003e load() throws JunoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"        ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"            return tasks; // No existing tasks file, return empty list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deberinoo"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deberinoo"},"content":"            String line;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deberinoo"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deberinoo"},"content":"                tasks.add(Parser.parseTask(line));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deberinoo"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deberinoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deberinoo"},"content":"            throw new JunoException(\"Failed to read saved tasks.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deberinoo"},"content":"        return tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deberinoo"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deberinoo"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deberinoo"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deberinoo"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deberinoo"},"content":"     * @throws JunoException If the tasks cannot be saved.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deberinoo"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deberinoo"},"content":"    public void save(TaskList tasks) throws JunoException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deberinoo"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deberinoo"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deberinoo"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deberinoo"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deberinoo"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deberinoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deberinoo"},"content":"            throw new JunoException(\"Failed to save tasks.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"deberinoo":73}},{"path":"src/main/java/juno/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno.utility;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"public class Ui {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"    public Ui() {}","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"        try (Scanner scanner \u003d new Scanner(System.in)) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"            return scanner.nextLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"    public static String showWelcome() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"        return \"Juno: Hello! I\u0027m Juno, born on Mars and eager to help. What task shall we tackle today?\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"    public static String showGoodbye() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"        return \"Juno: Goodbye for now! Remember, even the smallest steps can lead to extraordinary destinations. See you soon!\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"deberinoo":22}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"deberinoo":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"            fx:controller\u003d\"juno.gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deberinoo"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deberinoo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deberinoo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deberinoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deberinoo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"deberinoo":44}},{"path":"src/test/java/juno/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"import juno.task.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"class DeadlineTaskTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"    void testGetDeadline() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"        LocalDate deadline \u003d LocalDate.of(2025, 1, 31);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"        Deadline deadlineTask \u003d new Deadline(\"Finish project\", deadline);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"        assertEquals(deadline, deadlineTask.getDeadline(), \"The deadline should be correctly set.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"    void testToStringWithoutDate() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"        LocalDate deadline \u003d LocalDate.of(2025, 1, 31);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"        Deadline deadlineTask \u003d new Deadline(\"Finish project\", deadline);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"        ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"        String expected \u003d \"[D][ ] Finish project\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"        assertEquals(expected, deadlineTask.toStringWithoutDate(), \"The toStringWithoutDate method should return the expected string.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"deberinoo":28}},{"path":"src/test/java/juno/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"package juno;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"import juno.task.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"import juno.task.Event;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"import juno.task.ToDo;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deberinoo"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deberinoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deberinoo"},"content":"class TaskTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deberinoo"},"content":"     @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deberinoo"},"content":"    public void testToDoToString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deberinoo"},"content":"        ToDo ToDo \u003d new ToDo(\"Test Todo\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"        String expected \u003d \"[T][ ] Test Todo\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deberinoo"},"content":"        assertEquals(expected, ToDo.toString());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deberinoo"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"    public void testDeadlineTaskToString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deberinoo"},"content":"        LocalDate deadline \u003d LocalDate.of(2025, 5, 25);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deberinoo"},"content":"        Deadline deadlineTask \u003d new Deadline(\"Test Deadline\", deadline);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deberinoo"},"content":"        String expected \u003d \"[D][ ] Test Deadline (by: May 25 2025)\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deberinoo"},"content":"        assertEquals(expected, deadlineTask.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deberinoo"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deberinoo"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deberinoo"},"content":"    public void testEventTaskToString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deberinoo"},"content":"        LocalDate fromDate \u003d LocalDate.of(2025, 5, 25);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deberinoo"},"content":"        LocalDate toDate \u003d LocalDate.of(2025, 5, 26);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deberinoo"},"content":"        Event eventTask \u003d new Event(\"Test Event\", fromDate, toDate);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deberinoo"},"content":"        String expected \u003d \"[E][ ] Test Event (from: May 25 2025 to: May 26 2025)\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deberinoo"},"content":"        assertEquals(expected, eventTask.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deberinoo"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deberinoo"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"deberinoo":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"deberinoo"},"content":"todo buy groceries","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deberinoo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deberinoo"},"content":"event meeting /from 1pm /to 3pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deberinoo"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deberinoo"},"content":"mark 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deberinoo"},"content":"unmark 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deberinoo"},"content":"bye","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"deberinoo":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deberinoo"},"content":"java -classpath ..\\bin Juno \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"deberinoo":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deberinoo"},"content":"java -classpath ../bin Juno \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"deberinoo":1,"-":37}}]
