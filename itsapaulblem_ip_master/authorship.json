[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    mainClass.set(\"Alden.Alden\")","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"    archiveFileName \u003d \u0027alden.jar\u0027","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":3,"-":40}},{"path":"src/main/java/Alden/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * A command that adds a deadline task to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This command parses the user input to extract the description and deadline date,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * creates a new Deadline task, and adds it to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    private String userInput; // The user input containing the description and deadline","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs an AddDeadlineCommand with the user input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param userInput The input from the user that contains the task description and deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    public AddDeadlineCommand(String userInput) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the command to add a deadline task to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     * The input is expected to contain a description followed by a /by clause with the deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * If the input is invalid (missing /by or description), an exception is thrown.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks   The task list to which the new deadline task will be added.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui      The user interface to show messages to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the user input is malformed or doesn\u0027t contain a valid deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"        String[] parts \u003d this.userInput.split(\"/by\", 2); // Split the input by the \"/by\" keyword","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"            // If there is no \"/by\" clause, throw an exception","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"The deadline task must have a description and a /by clause.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"            String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"            String by \u003d parts[1].trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"            Task newTask \u003d new Deadline(description, by);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"            ui.showTaskAdded(newTask, tasks.size());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":44}},{"path":"src/main/java/Alden/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * A command that adds an event task to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This command parses the user input to extract the description, start time, and end time,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * creates a new Event task, and adds it to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    private String userInput; // The user input containing the description, start time, and end time","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs an AddEventCommand with the user input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param userInput The input from the user that contains the task description, start time, and end time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    public AddEventCommand(String userInput) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the command to add an event task to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     * The input is expected to contain a description followed by /from and /to clauses for the event\u0027s start and end times.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * If the input is invalid (missing /from, /to, or description), an exception is thrown.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks   The task list to which the new event task will be added.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui      The user interface to show messages to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the user input is malformed or doesn\u0027t contain a valid event with description, /from, and /to.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"        String[] parts \u003d userInput.split(\"/from|/to\", 3);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"The event task must have a description, /from clause, and /to clause.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        // Extract description (everything before /from), from time (between /from and /to), and to time (after /to)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"        String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"        String from \u003d parts[1].trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"        String to \u003d parts[2].trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"        // Create a new Event task with the extracted information","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"        Task newTask \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"        // Add the new task to the task list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"        // Display a message confirming the task was added","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"        ui.showTaskAdded(newTask, tasks.size());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"        // Save the updated task list to storage","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":55}},{"path":"src/main/java/Alden/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * A command that adds a Todo task to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This command processes the user input to extract the description of the Todo task,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * creates a new Todo task, and adds it to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    private final String userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs an AddTodoCommand with the user input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param userInput The input from the user that contains the task description.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    public AddTodoCommand(String userInput) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the command to add a Todo task to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     * The input is expected to contain a description for the Todo task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * If the description is empty or too short, an exception is thrown.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks   The task list to which the new Todo task will be added.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui      The user interface to show messages to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the user input is empty or malformed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"        if (userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"        String description \u003d userInput.substring(5).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        ui.showTaskAdded(newTask, tasks.size());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":41}},{"path":"src/main/java/Alden/Alden.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * The main entry point of the Alden task management program.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" * This class is responsible for initializing the task list, loading data from storage,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":" * and managing the user interaction loop.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"public class Alden {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    private static final String FILE_PATH \u003d \"./data/Alden.txt\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"    private static TaskList tasks \u003d new TaskList(); // The list of tasks","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"    private static Storage storage \u003d new Storage(FILE_PATH); // The storage handler for tasks","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"    private static Ui ui \u003d new Ui(); // The user interface to interact with the user","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     * The main method that starts the Alden program.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"     * It initializes the program, loads the tasks from storage, and starts the user input loop.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     * The program continues running until the user types \"bye\".","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     * @param args Command line arguments (not used in this program)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"        // Load tasks from the storage file","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"        storage.load(tasks);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"        // Display the welcome message","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        // Main input loop","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"        while (isRunning) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"                // Read user input","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"                String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"                // Check if the user wants to exit","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"                if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"                    isRunning \u003d false; // Exit the loop","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"                    ui.showGoodbye(); // Display goodbye message","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"                } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"                    // Parse the user input into a command and execute it","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"                    Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"                    command.execute(tasks, ui, storage); // Execute the command","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"            } catch (AldenException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"                // Display error message if there is an exception","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"        // Close the scanner to free resources","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"        scanner.close();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":58}},{"path":"src/main/java/Alden/AldenException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Custom exception class for handling specific errors in the Alden application.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This exception is thrown when there are errors related to task management or command execution.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"public class AldenException extends Exception {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a new AldenException with the specified detail message.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * @param message The detail message that explains the cause of the exception.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"    public AldenException(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"        super(message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":17}},{"path":"src/main/java/Alden/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * An abstract class representing a command in the Alden application.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This class defines the structure for all commands that can be executed in the system.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * Subclasses must implement the {@link #execute(TaskList, Ui, Storage)} method to define","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" * the specific behavior of each command.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the command, performing an action based on the user\u0027s input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     * Subclasses must override this method to provide specific functionality for each command.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks   The task list to interact with when executing the command.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui      The user interface for displaying results or errors to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage handler used to save or retrieve the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If an error occurs during the execution of the command.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":21}},{"path":"src/main/java/Alden/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":" * Represents a task with a deadline. This class extends the {@link Task} class and adds functionality","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":" * to handle a specific deadline date and time associated with the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"    private LocalDateTime dateTime; // The deadline date and time for the task","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a new Deadline task with the specified description and deadline time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     * The deadline time is parsed from the given string using {@link #parseDateTime(String)}.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"     * @param by The deadline time as a string, which can be a specific date or special keywords (e.g., \"today\", \"tomorrow\").","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"        this.dateTime \u003d parseDateTime(by);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * Parses the deadline string to determine the date and time of the deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * It handles specific keywords like \"today\" and \"tomorrow\", and also parses custom date-time strings.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"     * @param by A string representing the deadline time. Can be a specific date (yyyy/MM/dd) or a date-time (yyyy/MM/dd HHmm).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"     * @return A {@link LocalDateTime} object representing the parsed deadline date and time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"    private LocalDateTime parseDateTime(String by) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"        // Handle special keywords","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        if (by.equalsIgnoreCase(\"today\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"            return LocalDateTime.now();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        } else if (by.equalsIgnoreCase(\"tomorrow\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"            return LocalDateTime.now().plus(1, ChronoUnit.DAYS);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"            // First try parsing as date-time format","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"            if (by.contains(\" \")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"                DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"                return LocalDateTime.parse(by, dateTimeFormatter);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"            } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"                // If only date is provided, set time to midnight (00:00)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"                LocalDate date \u003d LocalDate.parse(by, dateFormatter);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"            System.out.println(\"Error: Invalid date format. Use yyyy/MM/dd or yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"            return LocalDateTime.now(); // Default to current time if parsing fails","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"     * Returns a string representation of the task in a format suitable for saving to a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"     * The format includes the task type (D), status, description, and the formatted deadline time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representation of the task for file storage.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + dateTime.format(formatter);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"     * Returns a string representation of the task to be displayed in the user interface.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"     * The format includes the task type (D), status, description, and the formatted deadline time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representation of the task for display purposes.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" +","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"                dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\")) + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":82}},{"path":"src/main/java/Alden/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents the command to delete a task from the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This class extends the {@link Command} class and provides functionality","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * to remove a task based on the task number provided by the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    private String userInput; // User input containing the task number to delete","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a DeleteTaskCommand with the given user input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param userInput The user input containing the task number to be deleted.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    public DeleteTaskCommand(String userInput) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the delete task command by removing the specified task from the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     * It parses the task number from the user input and checks for validity before removing","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * the task from the list. If the task number is invalid, an exception is thrown.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     * After removal, the updated task list is saved.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The list of tasks where the task will be deleted.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui The user interface to display messages to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage system to save the updated task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the task number is invalid.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1; // Parse task number from user input","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Invalid task number.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        Task removedTask \u003d tasks.removeTask(taskNumber); // Remove the task from the list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        ui.showTaskRemoved(removedTask, tasks.size()); // Display task removal message","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"        storage.save(tasks.getTasks()); // Save the updated task list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":41}},{"path":"src/main/java/Alden/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":" * The event is stored with its description and a time range (from and to).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":" * This class extends the {@link Task} class and provides functionality","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":" * to parse, display, and save event-related information.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"    private LocalDateTime from; // Start time of the event","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    private LocalDateTime to;   // End time of the event","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs an Event object with the given description and date-time range.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * @param to The end date/time of the event.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"        this.from \u003d parseDateTime(from);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"        this.to \u003d parseDateTime(to);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"     * Parses the given date-time string and returns a {@link LocalDateTime} object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"     * The method tries to parse the date-time using both date and time. If only a date is provided,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"     * it defaults to the start of the day (00:00).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"     * @param dateTimeString The date-time string to be parsed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"     * @return A {@link LocalDateTime} representing the parsed date and time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"            // Try to parse with both date and time","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"            if (dateTimeString.contains(\" \")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"                DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"                return LocalDateTime.parse(dateTimeString, dateTimeFormatter);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"            } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"                // If only date is provided, set time to start of day (00:00)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"                LocalDate date \u003d LocalDate.parse(dateTimeString, dateFormatter);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"            System.out.println(\"Error: Invalid date format. Use yyyy/MM/dd or yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"            return LocalDateTime.now(); // Default to current time if parsing fails","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"     * This includes the task type, status icon, description, and the start and end times of the event.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representing the event task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + description +","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"                \" (from: \" + from.format(formatter) +","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"                \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"     * Returns a string representation of the event task in a format suitable for saving to a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"     * This includes the task type, status, description, start time, and end time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representing the event task in a file-friendly format.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description +","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"                \" | \" + from.format(formatter) +","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"                \" | \" + to.format(formatter);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":84}},{"path":"src/main/java/Alden/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents the command to exit the application.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This command handles displaying the exit message when the user decides to terminate the program.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the exit command by displaying the exit message.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"     * This method does not modify the task list or storage, as it is only responsible for handling the termination process.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The current task list (not used in this command).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui The UI object used to display messages.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage object used to save tasks (not used in this command).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"        ui.showExitMessage(); // Show exit message to the user","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":21}},{"path":"src/main/java/Alden/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"    private final String keyword;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":18}},{"path":"src/main/java/Alden/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents the command to list all tasks in the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This command handles displaying the current tasks to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the list tasks command by displaying all tasks in the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"     * This method invokes the UI to print all tasks, regardless of their completion status.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The current task list to be displayed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui The UI object used to display the tasks.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage object used to save tasks (not modified in this command).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If an error occurs during the task listing process.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"        ui.printTaskList(tasks); // Display the current task list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":22}},{"path":"src/main/java/Alden/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents the command to mark a task as done or not done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This command handles updating the task\u0027s completion status based on user input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"    private String userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a MarkTaskCommand instance.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param userInput The user input that contains the task number to mark.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @param isDone A boolean indicating whether to mark the task as done (true) or not done (false).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"    public MarkTaskCommand(String userInput, boolean isDone) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the command to mark a task as done or not done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     * The method updates the task\u0027s status based on the provided user input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The task list to update.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui The UI object used to display the task status change.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage object used to save the updated task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the task number is invalid or if any other error occurs.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Invalid task number.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"            task.markAsDone();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"            ui.showTaskMarkedAsDone(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"            ui.showTaskUnmarked(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"        storage.save(tasks.getTasks()); // Save the updated task list to storage","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":47}},{"path":"src/main/java/Alden/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * The Parser class is responsible for interpreting the user\u0027s input command","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * and returning the corresponding {@link Command} object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * It parses the command string and generates the appropriate command instance","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" * based on the command type.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"public class Parser {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Parses the given command string and returns the corresponding command object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param fullCommand The full user input command as a string.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @return The {@link Command} object corresponding to the parsed command.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the command is invalid or unrecognized.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    public static Command parse(String fullCommand) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"        if (fullCommand.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"            return new AddTodoCommand(fullCommand); // Create a new AddTodoCommand","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"            return new AddDeadlineCommand(fullCommand); // Create a new AddDeadlineCommand","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"event\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"            return new AddEventCommand(fullCommand); // Create a new AddEventCommand","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"            return new MarkTaskCommand(fullCommand, true); // Create a new MarkTaskCommand to mark as done","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"unmarked\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"            return new MarkTaskCommand(fullCommand, false); // Create a new MarkTaskCommand to unmark as done","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"            return new DeleteTaskCommand(fullCommand); // Create a new DeleteTaskCommand","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"            return new ListTasksCommand(); // Create a new ListTasksCommand","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"find\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"            return new FindTaskCommand(fullCommand);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Keyword cannot be empty for find command.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Invalid command: \" + fullCommand); // Throw exception if the command is invalid","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":43}},{"path":"src/main/java/Alden/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.io.*;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":" * The Storage class is responsible for saving and loading tasks from a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":" * It handles reading and writing task data to the file specified by the file path.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"public class Storage {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"    private String filePath;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     * @param filePath The path to the file where tasks will be saved or loaded.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     * Loads tasks from the file specified in the file path and adds them to the provided TaskList.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     * If the file does not exist, a new file will be created.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The TaskList object to which tasks will be added after loading.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"    public void load(TaskList tasks) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"                file.getParentFile().mkdirs(); // Create directories if they do not exist","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"                file.createNewFile(); // Create a new file if it doesn\u0027t exist","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"                return;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"                String line \u003d fileScanner.nextLine().trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"                if (line.isEmpty()) continue;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"                String taskType \u003d parts[0];","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"                boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"                Task task \u003d null;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"                // Create task based on task type in the file","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"                switch (taskType) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"                    case \"T\":","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"                        if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"                            task \u003d new Todo(parts[2]);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"                        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"                        break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"                    case \"D\":","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"                        if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"                            task \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"                        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"                        break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"                    case \"E\":","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"                        if (parts.length \u003e\u003d 5) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"                            task \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"                        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"                        break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"                // Mark task as done if indicated in the file","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"                if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"                    task.markAsDone();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"                // Add task to TaskList if it was successfully created","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"            fileScanner.close();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"     * Saves the tasks in the provided TaskList to the file specified by the file path.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The list of tasks to save to the file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsapaulblem"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsapaulblem"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsapaulblem"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsapaulblem"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsapaulblem"},"content":"                writer.write(task.toFileFormat() + System.lineSeparator()); // Write each task\u0027s file format to the file","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsapaulblem"},"content":"            writer.close();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsapaulblem"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsapaulblem"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":98}},{"path":"src/main/java/Alden/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This is the base class for different types of tasks (e.g., Todo, Deadline, Event).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"    protected String description; // Description of the task","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    protected boolean isDone; // Status of whether the task is completed","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     * The task is initially not marked as done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"            throw new IllegalArgumentException(\"Task description cannot be empty or null.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"        this.description \u003d description.trim(); // Trim whitespace","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"     * Returns a string representation of the task\u0027s completion status.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"     * @return \"X\" if the task is done, \" \" if the task is not done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"        return (isDone ? \"X\" : \" \"); // Marked done or not done","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"     * Returns the task\u0027s data in a format suitable for saving to a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"     * This method should be implemented by subclasses to return their specific file format.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representation of the task in file format.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"    public String getDescription(){","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"        return this.description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"     * Returns a string representation of the task in a human-readable format.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"     * This includes the task\u0027s completion status and description.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description; // Consistent with getStatusIcon","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"        if (this \u003d\u003d obj) return true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) return false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"        Task task \u003d (Task) obj;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"        return isDone \u003d\u003d task.isDone \u0026\u0026 description.equals(task.description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"    public int hashCode() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"        int result \u003d description.hashCode();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"        result \u003d 31 * result + (isDone ? 1 : 0);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"        return result;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":86}},{"path":"src/main/java/Alden/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" * Represents a list of tasks. This class provides methods to add, remove, and retrieve tasks.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":" * It also provides methods to get the size of the list and check if it is empty.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"public class TaskList {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(); // List of tasks","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * Removes a task from the list at the specified index.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * @return The task that was removed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"    public int size() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"     * @return True if the list contains no tasks, otherwise false.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"        return tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"        String lowerCaseKeyword \u003d keyword.toLowerCase(); // Convert keyword to lowercase for case-insensitive search","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"            if (task.getDescription() !\u003d null) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"                String lowerCaseDescription \u003d task.getDescription().toLowerCase(); // Convert description to lowercase","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"                if (lowerCaseDescription.contains(lowerCaseKeyword)) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"        return matchingTasks; // Return the list of matching tasks","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":83}},{"path":"src/main/java/Alden/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents a Todo task. A Todo is a simple task that has a description and a completion status.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     * The format is: \"[T][X] description\" where \"X\" is the task\u0027s status icon.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representation of the Todo task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * Returns the Todo task in a format suitable for saving to a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     * The format is: \"T | status | description\".","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representing the Todo task in a file-compatible format.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":38}},{"path":"src/main/java/Alden/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents the user interface that interacts with the user by displaying messages.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"import java.util.ArrayList; // Import the ArrayList class","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"public class Ui {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Displays a welcome message when the program starts.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\" Hello! I\u0027m Alden\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     * Displays a goodbye message when the user exits the program.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"     * Displays an error message.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\" Error: \" + message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"     * Displays a message when a task is added to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"     * @param size The new size of the task list after the task is added.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"    public void showTaskAdded(Task task, int size) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\" Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"     * Displays a message when a task is marked as done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"    public void showTaskMarkedAsDone(Task task) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"     * Displays a message when a task is unmarked (marked as not done).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"     * Displays a message when a task is removed from the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"     * @param size The new size of the task list after the task is removed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsapaulblem"},"content":"    public void showTaskRemoved(Task task, int size) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\" Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsapaulblem"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The task list to be displayed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsapaulblem"},"content":"    public void printTaskList(TaskList tasks) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsapaulblem"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsapaulblem"},"content":"            System.out.println(\" Your task list is empty.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsapaulblem"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsapaulblem"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsapaulblem"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsapaulblem"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsapaulblem"},"content":"     * Displays an exit message when the program ends.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsapaulblem"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsapaulblem"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsapaulblem"},"content":"            System.out.println(\" No matching tasks found.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsapaulblem"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsapaulblem"},"content":"            System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsapaulblem"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsapaulblem"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsapaulblem"},"content":"    public void showExitMessage() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsapaulblem"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":133}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"    public void createDeadline_normalDateTime_success() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Report\", \"2024/01/01 1430\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"        String expected \u003d \"[D][ ] Submit Report (by: Jan 01 2024 2:30 PM)\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"    public void createDeadline_dateOnly_setsToMidnight() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Report\", \"2024/01/01\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"        String expected \u003d \"[D][ ] Submit Report (by: Jan 01 2024 12:00 AM)\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"    public void createDeadline_today_setsToCurrentDate() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Report\", \"today\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"        assertTrue(deadline.toString().contains(now.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    public void toFileFormat_normalDeadline_correctFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Report\", \"2024/01/01 1430\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        String expected \u003d \"D | 0 | Submit Report | 2024/01/01 1430\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        assertEquals(expected, deadline.toFileFormat());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":36}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package Alden;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"    public class EventTest {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"        @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"        public void createEvent_normalDateTime_success() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"            Event event \u003d new Event(\"Team Meeting\", \"2024/01/01 1400\", \"2024/01/01 1500\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"            String expected \u003d \"[E][ ] Team Meeting (from: Jan 01 2024 2:00 PM to: Jan 01 2024 3:00 PM)\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"            assertEquals(expected, event.toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"        @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"        public void createEvent_dateOnly_setsToMidnight() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"            Event event \u003d new Event(\"Team Meeting\", \"2024/01/01\", \"2024/01/02\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"            String expected \u003d \"[E][ ] Team Meeting (from: Jan 01 2024 12:00 AM to: Jan 02 2024 12:00 AM)\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"            assertEquals(expected, event.toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"        @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"        public void toFileFormat_normalEvent_correctFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"            Event event \u003d new Event(\"Team Meeting\", \"2024/01/01 1400\", \"2024/01/01 1500\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"            String expected \u003d \"E | 0 | Team Meeting | 2024/01/01 1400 | 2024/01/01 1500\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"            assertEquals(expected, event.toFileFormat());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"        @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"        public void createEvent_invalidDateFormat_defaultsToCurrentTime() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"            Event event \u003d new Event(\"Team Meeting\", \"invalid_date\", \"invalid_date\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"            // The exact time will vary, but the string should contain the current date","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"            assertTrue(event.toString().contains(LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"todo read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"deadline return book /by June 6th","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"delete 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":7}}]
