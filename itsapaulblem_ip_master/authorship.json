[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"javafx {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"    version \u003d \u002717\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    modules \u003d [\u0027javafx.controls\u0027]","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"checkstyle {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"    configFile \u003d file(\u0027config/checkstyle/checkstyle.xml\u0027)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"    archiveFileName \u003d \u0027alden.jar\u0027","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":19,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"# Alden User Guide","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"Introducing Alden. The bot to remind you on everything.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"![Ui](https://github.com/user-attachments/assets/4c1266d2-2fdc-4038-aa23-b7b89b1c3a06)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"To add a deadline, use the `deadline` command followed by the task description and the due date in \"yyyy/MM/dd HHmm\" format","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"Example: `deadline Watch Movie /by 2025/02/11 1300`","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"Expected outcome: Adds a deadline task with the description \"Watch Movie\" and the due date \"2025/02/11 1300\".","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":" [D][] Watch Movie (by: Feb 11 2025 1:00 PM)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"## Adding todos","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"To add a todo, use the `todo` command followed by the task description. ","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"Example: \u0027todo Watch Netflix`","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"Expected outcome: Adds a todo task with the description \"Watch Netflix\". ","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"  [T][] Watch Netflix","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"## Adding events","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"To add an event, use the `event` command followed by the event description, start date, and end date in \"yyyy/MM/dd HHmm\" format","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"Example: `event Disney+ Screening /from 2025/02/14 1300 /to 2025/02/15 1500`","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"Expected outcome: Adds a deadline task with the description \"Watch Movie\" and the due date \"2025/02/11 1300\".","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":" [E][] Disney+ Screening (from: Feb 14 2025 1:00 PM to: Feb 15 2025 3:00PM)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"## Listing tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"To list all tasks, use the `list` command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"Example: `list`","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"Expected outcome: Shows all tasks in the task list","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"1. [D][] Watch Movie (by: Feb 11 2025 1:00 PM)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"2. [T][] Watch Netflix","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"3. [E][] Disney+ Screening (from: Feb 14 2025 1:00 PM to: Feb 15 2025 3:00PM)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"## Marking tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"To mark a task as done, use the `mark` command followed by the task number","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"Example: `mark 1`","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"Expected outcome: Marks the first task in the list as done.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"    [D][X] Watch Movie (by: Feb 11 2025 1:00 PM)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"## Unmarking tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"To unmark a task as done, use the `unmark` command followed by the task number","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"Example: `unmark 1`","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"Expected outcome: Unmarks the first task in the list from done to not done.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsapaulblem"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsapaulblem"},"content":"    [D][] Watch Movie (by: Feb 11 2025 1:00 PM)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsapaulblem"},"content":"## Deleting tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsapaulblem"},"content":"To delete a task as done, use the `delete` command followed by the task number","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsapaulblem"},"content":"Example: `delete 1`","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsapaulblem"},"content":"Expected outcome: Deletes the first task in the list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsapaulblem"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsapaulblem"},"content":"  [D][] Watch Movie (by: Feb 11 2025 1:00 PM)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsapaulblem"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsapaulblem"},"content":"### Finding tasks ","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsapaulblem"},"content":"To find tasks based on certain keywords, use the `find` command followed by the task description. ","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsapaulblem"},"content":"Example: `find Watch`","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsapaulblem"},"content":"Expected outcome: Lists all tasks with matching descriptions from the task list","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsapaulblem"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsapaulblem"},"content":"1. [T][] Watch Netflix (from Feb 11 2025 1:00 PM to Feb 13 2025 3:00 PM)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsapaulblem"},"content":" ","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsapaulblem"},"content":"## Sorting tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsapaulblem"},"content":"To sort the list of tasks based of their chronological order, use the `sort date` or `sort chronological` command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsapaulblem"},"content":"Example: `sort date`","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsapaulblem"},"content":"Expected outcome: Sort the tasks in the task list based on their chronological dates.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsapaulblem"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsapaulblem"},"content":"1. [T][] Watch Netflix (from Feb 11 2025 1:00 PM to Feb 13 2025 3:00 PM)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsapaulblem"},"content":"2. [E][] Disney+ Screening (from: Feb 14 2025 1:00 PM to: Feb 15 2025 3:00 PM)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsapaulblem"},"content":"```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsapaulblem"},"content":"## Stopping the application","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsapaulblem"},"content":"To stop the application, use the `bye` command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsapaulblem"},"content":"Example: `bye`","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsapaulblem"},"content":"Expected outcome: Stops the application.","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":111,"-":25}},{"path":"src/main/java/alden/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * A command that adds a deadline task to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This command parses the user input to extract the description and deadline date,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * creates a new Deadline task, and adds it to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    private final String userInput; // The user input containing the description and deadline","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs an AddDeadlineCommand with the user input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param userInput The input from the user that contains the task description and deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    public AddDeadlineCommand(String userInput) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        assert userInput !\u003d null : \"User input cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"        assert userInput.startsWith(\"deadline\") : \"Command must start with \u0027deadline\u0027\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the command to add a deadline task to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     * The input is expected to contain a description followed by a /by clause with the deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * If the input is invalid (missing /by or description), an exception is thrown.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks   The task list to which the new deadline task will be added.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui      The user interface to show messages to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the user input is malformed or doesn\u0027t contain a valid deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        String[] parts \u003d this.userInput.split(\"/by\", 2); // Split the input by the \"/by\" keyword","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"            // If there is no \"/by\" clause, throw an exception","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"The deadline task must have a description and a /by clause.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"            String description \u003d parts[0].substring(9).trim(); // Extract description, starting after \"deadline\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"            assert !description.isEmpty() : \"Task description cannot be empty\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"            String by \u003d parts[1].trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"            assert !by.isEmpty() : \"Deadline cannot be empty\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"            Task newTask \u003d new Deadline(description, by);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"            assert !tasks.isEmpty() : \"Task list should not be empty after adding task\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"            assert tasks.get(tasks.size() - 1) \u003d\u003d newTask : \"Last task should be the newly added task\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"            ui.showTaskAdded(newTask, tasks.size());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":58}},{"path":"src/main/java/alden/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * A command that adds an event task to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This command parses the user input to extract the description, start time, and end time,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * creates a new Event task, and adds it to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    private final String userInput; // The user input containing the description, start time, and end time","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs an AddEventCommand with the user input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param userInput The input from the user that contains the task description, start time, and end time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    public AddEventCommand(String userInput) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"        assert userInput !\u003d null : \"User input cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        assert userInput.startsWith(\"event\") : \"Command must start with event\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the command to add an event task to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     * The input is expected to contain a description followed","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     * by /from and /to clauses for the event\u0027s start and end times.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * If the input is invalid (missing /from, /to, or description), an exception is thrown.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks   The task list to which the new event task will be added.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui      The user interface to show messages to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the user input is malformed or doesn\u0027t contain a valid event with description,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"     *     /from, and /to.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"        // Split the user input by the \"/from\" and \"/to\" markers to extract description, start, and end times","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"        String[] parts \u003d userInput.split(\"/from|/to\", 3);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"        // Get the event task from the split parts of the input","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"        Task newTask \u003d getTask(parts);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"        // Add the event task to the task list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"        // Display a message confirming the task was added","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"        ui.showTaskAdded(newTask, tasks.size());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"        // Save the updated task list to storage","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"     * Extracts the task details from the user input and creates a new Event task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"     * @param parts The parts of the input, split by /from and /to.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"     * @return The newly created Event task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the parts are missing required information (description, /from, /to).","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"    private static Task getTask(String[] parts) throws AldenException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"        // Ensure that there are at least three parts: description, from time, and to time","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"                    \"The event task must have a description, /from clause, and /to clause.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"        // Extract description (everything before /from), from time (between /from and /to), and to time (after /to)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"        String description \u003d parts[0].substring(6).trim(); // Assuming the description starts after \"event\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Event description cannot be empty\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"        String from \u003d parts[1].trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"        String to \u003d parts[2].trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"        if (from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Event times cannot be empty\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"        // Create and return the new Event task with the extracted details","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":86}},{"path":"src/main/java/alden/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * A command that adds a Todo task to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This command processes the user input to extract the description of the Todo task,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * creates a new Todo task, and adds it to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    private final String userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs an AddTodoCommand with the user input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param userInput The input from the user that contains the task description.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    public AddTodoCommand(String userInput) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the command to add a Todo task to the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * The input is expected to contain a description for the Todo task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     * If the description is empty or too short, an exception is thrown.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks   The task list to which the new Todo task will be added.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui      The user interface to show messages to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the user input is empty or malformed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        if (userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        String description \u003d userInput.substring(5).trim(); // Remove \"todo\" from the input","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"        // Display confirmation of the task being added","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"        ui.showTaskAdded(newTask, tasks.size());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"        // Save the updated task list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":47}},{"path":"src/main/java/alden/Alden.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * The main entry point of the Alden task management program.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" * This class is responsible for initializing the task list, loading data from storage,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":" * and managing the user interaction loop.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"public class Alden {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    private static final String FILE_PATH \u003d \"./data/Alden.txt\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"    private static final TaskList tasks \u003d new TaskList(); // The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"    private static final Storage storage \u003d new Storage(FILE_PATH); // The storage handler for tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"    private static final Ui ui \u003d new Ui(); // The user interface to interact with the user","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     * The main method that starts the Alden program.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"     * It initializes the program, loads the tasks from storage, and starts the user input loop.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     * The program continues running until the user types \"bye\".","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     * @param args Command line arguments (not used in this program)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"        // Load tasks from the storage file","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"        storage.load(tasks);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"        // Display the welcome message","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        // Main input loop","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        while (isRunning) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"                String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"                if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"                    ui.showGoodbye();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"                } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"                    // Parse the user input into a command and execute it","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"                    Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"                    command.execute(tasks, ui, storage);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"            } catch (AldenException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"                // Display error message if there is an exception","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"        scanner.close();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":53}},{"path":"src/main/java/alden/AldenException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Custom exception class for handling specific errors in the Alden application.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This exception is thrown when there are errors related to task management or command execution.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"public class AldenException extends Exception {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a new AldenException with the specified detail message.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * @param message The detail message that explains the cause of the exception.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"    public AldenException(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"        super(message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":17}},{"path":"src/main/java/alden/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * An abstract class representing a command in the Alden application.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This class defines the structure for all commands that can be executed in the system.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * Subclasses must implement the {@link #execute(TaskList, Ui, Storage)} method to define","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" * the specific behavior of each command.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the command, performing an action based on the user\u0027s input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     * Subclasses must override this method to provide specific functionality for each command.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks   The task list to interact with when executing the command.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui      The user interface for displaying results or errors to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage handler used to save or retrieve the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If an error occurs during the execution of the command.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":21}},{"path":"src/main/java/alden/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":" * Represents a task with a deadline. This class extends the {@link Task} class and adds functionality","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":" * to handle a specific deadline date and time associated with the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"    private final LocalDateTime dateTime; // The deadline date and time for the task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a new Deadline task with the specified description and deadline time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     * The deadline time is parsed from the given string using {@link #parseDateTime(String)}.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     * @param by The deadline time as a string,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"     *     which can be a specific date or special keywords (e.g., \"today\", \"tomorrow\").","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"    public Deadline(String description, String by) throws AldenException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"        assert by !\u003d null \u0026\u0026 !by.trim().isEmpty() : \"Deadline time cannot be null or empty\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"        this.dateTime \u003d parseDateTime(by);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"        assert this.dateTime !\u003d null : \"Parsed datetime cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"        assert !this.dateTime.isBefore(LocalDateTime.now().minusMinutes(1))","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"                :","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"                \"Deadline should not be in the past\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"     * Parses the deadline string to determine the date and time of the deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"     * It handles specific keywords like \"today\" and \"tomorrow\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"     * and also parses custom date-time strings.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"     * @param by A string representing the deadline time.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"     *     Can be a specific date (yyyy/MM/dd) or a date-time (yyyy/MM/dd HHmm).","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"     * @return A {@link LocalDateTime} object representing the parsed deadline date and time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"    private LocalDateTime parseDateTime(String by) throws AldenException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"        // Handle special keywords with optional time","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"        if (by.equalsIgnoreCase(\"today\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"            return LocalDateTime.now();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"        } else if (by.equalsIgnoreCase(\"tomorrow\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"            return LocalDateTime.now().plusDays(1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"            // First try parsing as date-time format (yyyy/MM/dd HHmm)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"            if (by.contains(\" \")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"                DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"                return LocalDateTime.parse(by, dateTimeFormatter);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"            } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"                // If only date is provided, set time to midnight (00:00)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"                LocalDate date \u003d LocalDate.parse(by, dateFormatter);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Error: Invalid date format. Use yyyy/MM/dd or yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"     * Returns a string representation of the task in a format suitable for saving to a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"     * The format includes the task type (D), status, description, and the formatted deadline time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representation of the task for file storage.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"        String format \u003d \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"                +","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"                dateTime.format(formatter);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"        assert format.split(\" \\\\| \").length \u003d\u003d 4 : \"File format must have exactly 4 parts\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"        return format;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"     * Returns a string representation of the task to be displayed in the user interface.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"     * The format includes the task type (D), status, description, and the formatted deadline time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representation of the task for display purposes.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsapaulblem"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsapaulblem"},"content":"        return \"[D][\" + getStatusIcon()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsapaulblem"},"content":"                + \"] \" + description + \" (by: \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsapaulblem"},"content":"                +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsapaulblem"},"content":"                dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\")) + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsapaulblem"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsapaulblem"},"content":"        return this.dateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":98}},{"path":"src/main/java/alden/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents the command to delete a task from the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This class extends the {@link Command} class and provides functionality","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * to remove a task based on the task number provided by the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    private final String userInput;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a DeleteTaskCommand with the given user input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param userInput The user input containing the task number to be deleted.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    public DeleteTaskCommand(String userInput) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the delete task command by removing the specified task from the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     * It parses the task number from the user input and checks for validity before removing","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * the task from the list. If the task number is invalid, an exception is thrown.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     * After removal, the updated task list is saved.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The list of tasks where the task will be deleted.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui The user interface to display messages to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage system to save the updated task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the task number is invalid.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1; // Parse task number from user input","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Invalid task number.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        Task removedTask \u003d tasks.removeTask(taskNumber); // Remove the task from the list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        ui.showTaskRemoved(removedTask, tasks.size()); // Display task removal message","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"        storage.save(tasks.getTasks()); // Save the updated task list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":41}},{"path":"src/main/java/alden/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":" * Represents a dialog box in the chat interface, containing text and an image.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"    private Label text;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a new DialogBox with the given text and image, for Alden.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     * @param s The text content of the dialog box.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     * @param i The image to display in the dialog box.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"    public DialogBox(String s, Image i) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"        this(s, i, false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a new DialogBox with the given text, image, and user indicator.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"     * @param s      The text content of the dialog box.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"     * @param i      The image to display in the dialog box.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"     * @param isUser True if the dialog box is for the user, false for Alden.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"    public DialogBox(String s, Image i, boolean isUser) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        text \u003d new Label(s);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        text.setWrapText(true); // Allows text to wrap within the dialog box","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        displayPicture \u003d new ImageView(i);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"        displayPicture.setFitWidth(50.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"        displayPicture.setFitHeight(50.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"        displayPicture.setPreserveRatio(true);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"        this.setPadding(new Insets(5));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"        this.setSpacing(10);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"        if (isUser) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"            this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"            this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"            this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"            this.getChildren().addAll(displayPicture, text);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":54}},{"path":"src/main/java/alden/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":" * The event is stored with its description and a time range (from and to).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":" * This class extends the {@link Task} class and provides functionality","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":" * to parse, display, and save event-related information.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"    private final LocalDateTime from; // Start time of the event","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    private final LocalDateTime to; // End time of the event","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs an Event object with the given description and date-time range.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * @param to The end date/time of the event.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"    public Event(String description, String from, String to) throws AldenException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"        assert from !\u003d null \u0026\u0026 !from.trim().isEmpty() : \"Start time cannot be null or empty\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"        assert to !\u003d null \u0026\u0026 !to.trim().isEmpty() : \"End time cannot be null or empty\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"        this.from \u003d parseDateTime(from);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"        this.to \u003d parseDateTime(to);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        assert this.from !\u003d null \u0026\u0026 this.to !\u003d null : \"Parsed date times cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        assert !this.to.isBefore(this.from) : \"End time cannot be before start time\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"     * Parses the given date-time string and returns a {@link LocalDateTime} object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"     * The method tries to parse the date-time using both date and time. If only a date is provided,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"     * it defaults to the start of the day (00:00).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"     * @param dateTimeString The date-time string to be parsed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"     * @return A {@link LocalDateTime} representing the parsed date and time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) throws AldenException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"            // Try to parse with both date and time","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"            if (dateTimeString.contains(\" \")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"                DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"                return LocalDateTime.parse(dateTimeString, dateTimeFormatter);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"            } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"                // If only date is provided, set time to start of day (00:00)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"                LocalDate date \u003d LocalDate.parse(dateTimeString, dateFormatter);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Error: Invalid date format. Use yyyy/MM/dd or yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"     * This includes the task type, status icon, description, and the start and end times of the event.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representing the event task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"        return \"[E][\" + getStatusIcon() + \"] \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"                + description + \" (from: \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"                + from.format(formatter)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"                + \" to: \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"                + to.format(formatter) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"     * Returns a string representation of the event task in a format suitable for saving to a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"     * This includes the task type, status, description, start time, and end time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representing the event task in a file-friendly format.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsapaulblem"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsapaulblem"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsapaulblem"},"content":"        String format \u003d \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsapaulblem"},"content":"                +","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsapaulblem"},"content":"                from.format(formatter) + \" | \" + to.format(formatter);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsapaulblem"},"content":"        assert format.split(\" \\\\| \").length \u003d\u003d 5 : \"File format must have exactly 5 parts\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsapaulblem"},"content":"        return format;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsapaulblem"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsapaulblem"},"content":"        return this.from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsapaulblem"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsapaulblem"},"content":"        return this.to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":100}},{"path":"src/main/java/alden/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents the command to exit the application.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This command handles displaying the exit message when the user decides to terminate the program.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the exit command by displaying the exit message.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"     * This method does not modify the task list or storage,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * as it is only responsible for handling the termination process.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The current task list (not used in this command).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui The UI object used to display messages.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage object used to save tasks (not used in this command).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"        ui.showExitMessage(); // Show exit message to the user","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":22}},{"path":"src/main/java/alden/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * Represents a command to find tasks in the task list that match a given keyword.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" * This command searches for tasks whose descriptions contain the keyword and displays them.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"    private final String keyword;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a FindTaskCommand with the given user input.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * Extracts the keyword from the full command.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     * @param fullCommand The full command input by the user.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    public FindTaskCommand(String fullCommand) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"        this.keyword \u003d fullCommand.substring(4).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the find task command by searching for tasks that contain the keyword.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     * The matching tasks are then displayed to the user.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui      The user interface to interact with the user.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage system (not used in this command).","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If an error occurs during execution.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":36}},{"path":"src/main/java/alden/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * The `Launcher` class is a simple entry point for launching the Alden application.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * It avoids potential issues with some JavaFX setups by using a separate class","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * with a `main` method that calls the `Main.main` method.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"public class Launcher {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"     * The main method of the `Launcher` class.  It simply calls the `main` method","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * of the `Main` class to start the Alden application.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param args Command line arguments passed to the application.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     *             These arguments are forwarded to the `Main.main` method.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        Main.main(args);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":20}},{"path":"src/main/java/alden/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents the command to list all tasks in the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This command handles displaying the current tasks to the user.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the list tasks command by displaying all tasks in the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"     * This method invokes the UI to print all tasks, regardless of their completion status.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The current task list to be displayed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui The UI object used to display the tasks.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage object used to save tasks (not modified in this command).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If an error occurs during the task listing process.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"        ui.printTaskList(tasks); // Display the current task list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":22}},{"path":"src/main/java/alden/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":" * The main class for the Alden task management application.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":" * This class handles the initialization of the GUI and the main application loop.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"public class Main extends Application {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"    private static final String FILE_PATH \u003d \"./data/Alden.txt\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserLogo.jpg\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"    private final Image aldenImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeLogo.png\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"    private TextField inputField;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"     * Starts the Alden application by initializing the GUI and loading tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"     * @param stage The primary stage for this application.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"        inputField \u003d new TextField();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"        mainLayout.getChildren().addAll(scrollPane, inputField, sendButton);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"        stage.setScene(scene);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"        stage.setTitle(\"Alden Task Manager\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"        stage.show();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"        ui.setGuiMode(dialogContainer);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"        storage.load(tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"        sendButton.setOnAction(e -\u003e handleInput());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"        inputField.setOnAction(e -\u003e handleInput());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"        stage.setResizable(false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"        inputField.setPrefWidth(325.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"        AnchorPane.setLeftAnchor(inputField, 1.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"        AnchorPane.setBottomAnchor(inputField, 1.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsapaulblem"},"content":"     * Handles user input from the text field.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsapaulblem"},"content":"    private void handleInput() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsapaulblem"},"content":"        String input \u003d inputField.getText().trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsapaulblem"},"content":"        if (!input.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsapaulblem"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsapaulblem"},"content":"                addToDialogContainer(new DialogBox(input, userImage, true)); // User message","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsapaulblem"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsapaulblem"},"content":"                    ui.showGoodbye();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsapaulblem"},"content":"                    new java.util.Timer().schedule(","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsapaulblem"},"content":"                            new java.util.TimerTask() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsapaulblem"},"content":"                                @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsapaulblem"},"content":"                                public void run() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsapaulblem"},"content":"                                    javafx.application.Platform.runLater(() -\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsapaulblem"},"content":"                                            javafx.application.Platform.exit()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsapaulblem"},"content":"                                    );","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsapaulblem"},"content":"                                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsapaulblem"},"content":"                            },","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsapaulblem"},"content":"                            1500","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsapaulblem"},"content":"                    );","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsapaulblem"},"content":"                } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsapaulblem"},"content":"                    Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsapaulblem"},"content":"                    command.execute(tasks, ui, storage);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsapaulblem"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsapaulblem"},"content":"            } catch (AldenException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsapaulblem"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsapaulblem"},"content":"            inputField.clear();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsapaulblem"},"content":"     * Adds a dialog box to the dialog container and scrolls to the bottom.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsapaulblem"},"content":"     * @param dialogBox The dialog box to add.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsapaulblem"},"content":"    private void addToDialogContainer(DialogBox dialogBox) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsapaulblem"},"content":"        dialogContainer.getChildren().add(dialogBox);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsapaulblem"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsapaulblem"},"content":"     * Main method to launch the Alden application.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsapaulblem"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsapaulblem"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsapaulblem"},"content":"        launch(args);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":137}},{"path":"src/main/java/alden/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents the command to mark a task as done or not done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This command handles updating the task\u0027s completion status based on user input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"    private final String userInput;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    private final boolean isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a MarkTaskCommand instance.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     * @param userInput The user input that contains the task number to mark.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @param isDone A boolean indicating whether to mark the task as done (true) or not done (false).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"    public MarkTaskCommand(String userInput, boolean isDone) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the command to mark a task as done or not done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     * The method updates the task\u0027s status based on the provided user input.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The task list to update.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui The UI object used to display the task status change.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage object used to save the updated task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the task number is invalid or if any other error occurs.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Invalid task number.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"            task.markAsDone();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"            ui.showTaskMarkedAsDone(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"            ui.showTaskUnmarked(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"        storage.save(tasks.getTasks()); // Save the updated task list to storage","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":47}},{"path":"src/main/java/alden/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * The Parser class is responsible for interpreting the user\u0027s input command","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * and returning the corresponding {@link Command} object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" * It parses the command string and generates the appropriate command instance","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":" * based on the command type.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"public class Parser {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     * Parses the given command string and returns the corresponding command object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @param fullCommand The full user input command as a string.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     * @return The {@link Command} object corresponding to the parsed command.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the command is invalid or unrecognized.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"    public static Command parse(String fullCommand) throws AldenException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"        if (fullCommand.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"            return new AddTodoCommand(fullCommand); // Create a new AddTodoCommand","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"            return new AddDeadlineCommand(fullCommand); // Create a new AddDeadlineCommand","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"event\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"            return new AddEventCommand(fullCommand); // Create a new AddEventCommand","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"            return new MarkTaskCommand(fullCommand, true); // Create a new MarkTaskCommand to mark as done","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"unmarked\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"            return new MarkTaskCommand(fullCommand, false); // Create a new MarkTaskCommand to unmark as done","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"            return new DeleteTaskCommand(fullCommand); // Create a new DeleteTaskCommand","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"            return new ListTasksCommand(); // Create a new ListTasksCommand","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"find\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"            return new FindTaskCommand(fullCommand);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Keyword cannot be empty for find command.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"        } else if (fullCommand.startsWith(\"sort\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"            return new SortCommand(fullCommand);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Invalid command: \" + fullCommand); // Throw exception if the command is invalid","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":46}},{"path":"src/main/java/alden/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * A command that sorts the tasks in the task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * Supports sorting chronologically for deadline and event tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a SortCommand with the specified sort type.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * @param userInput The user input containing the sort command.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If the sort command is invalid.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"    public SortCommand(String userInput) throws AldenException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"        // Remove \"sort\" from the input and trim","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"        String sortType \u003d userInput.substring(4).trim().toLowerCase();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        // Validate sort type","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"        if (!sortType.equals(\"date\") \u0026\u0026 !sortType.equals(\"chronological\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"            throw new AldenException(\"Invalid sort type. Use \u0027sort date\u0027 or \u0027sort chronological\u0027.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"     * Executes the sort command on the task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks   The task list to be sorted.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     * @param ui      The user interface to show messages.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @param storage The storage handler to save the sorted list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * @throws AldenException If sorting fails.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AldenException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        // Create a list to hold sortable tasks","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        ArrayList\u003cTask\u003e sortableTasks \u003d new ArrayList\u003c\u003e(tasks.getTasks());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"        // Create a comparator for chronological sorting","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        Comparator\u003cTask\u003e chronologicalComparator \u003d (task1, task2) -\u003e {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"            // Only sort Deadline and Event tasks","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"            if (task1 instanceof Deadline \u0026\u0026 task2 instanceof Deadline) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"                return ((Deadline) task1).getDateTime().compareTo(((Deadline) task2).getDateTime());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"            } else if (task1 instanceof Event \u0026\u0026 task2 instanceof Event) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"                return ((Event) task1).getStartDateTime().compareTo(((Event) task2).getStartDateTime());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"            // If tasks are different types or not sortable, maintain original order","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"            return 0;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"        };","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"        sortableTasks.sort(chronologicalComparator);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"        // Clear and repopulate the task list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"        tasks.getTasks().clear();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"        for (Task task : sortableTasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"            tasks.addTask(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"        // Show the sorted list to the user","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"        ui.printTaskList(tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":56}},{"path":"src/main/java/alden/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.io.File;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":" * The Storage class is responsible for saving and loading tasks from a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":" * It handles reading and writing task data to the file specified by the file path.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"public class Storage {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     * @param filePath The path to the file where tasks will be saved or loaded.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"File path cannot be null or empty\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     * Loads tasks from the file specified in the file path and adds them to the provided TaskList.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * If the file does not exist, a new file will be created.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The TaskList object to which tasks will be added after loading.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"    public void load(TaskList tasks) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"                file.getParentFile().mkdirs(); // Create directories if they do not exist","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"                file.createNewFile(); // Create a new file if it doesn\u0027t exist","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"                return;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"                String line \u003d fileScanner.nextLine().trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"                if (line.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"                    continue;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"                assert parts.length \u003e\u003d 2 : \"File format must have at least type and status\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"                String taskType \u003d parts[0];","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"                boolean isDone \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"                Task task \u003d null;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"                try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"                    switch (taskType) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"                        case \"T\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"                            assert parts.length \u003e\u003d 3 : \"Todo task must have description\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"                            task \u003d new Todo(parts[2]);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"                            break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"                        case \"D\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"                            assert parts.length \u003e\u003d 4 : \"Deadline task must have description and date\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"                            task \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"                            break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"                        case \"E\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"                            assert parts.length \u003e\u003d 5 : \"Event task must have description and two dates\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"                            task \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"                            break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"                        default:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"                            System.out.println(\"Unknown task type in file: \" + taskType);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"                            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"                    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"                        if (isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"                            task.markAsDone();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"                        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"                        tasks.addTask(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"                } catch (AldenException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"                    System.out.println(\"Error creating task from file: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"            fileScanner.close();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsapaulblem"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsapaulblem"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsapaulblem"},"content":"     * Saves the tasks in the provided TaskList to the file specified by the file path.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The list of tasks to save to the file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsapaulblem"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsapaulblem"},"content":"        assert tasks !\u003d null : \"Tasks list cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsapaulblem"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsapaulblem"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsapaulblem"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsapaulblem"},"content":"                assert task !\u003d null : \"Individual task cannot be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsapaulblem"},"content":"                String fileFormat \u003d task.toFileFormat();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsapaulblem"},"content":"                assert fileFormat !\u003d null \u0026\u0026 !fileFormat.isEmpty() : \"Task file format cannot be null or empty\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsapaulblem"},"content":"                writer.write(fileFormat + System.lineSeparator());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsapaulblem"},"content":"            writer.close();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsapaulblem"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsapaulblem"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":110}},{"path":"src/main/java/alden/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" * This is the base class for different types of tasks (e.g., Todo, Deadline, Event).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"    protected String description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     * The task is initially not marked as done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"            throw new IllegalArgumentException(\"Task description cannot be empty or null.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"        this.description \u003d description.trim(); // Trim whitespace","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"     * Returns a string representation of the task\u0027s completion status.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"     * @return \"X\" if the task is done, \" \" if the task is not done.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"        return (isDone ? \"X\" : \" \"); // Marked done or not done","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"     * Returns the task\u0027s data in a format suitable for saving to a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"     * This method should be implemented by subclasses to return their specific file format.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representation of the task in file format.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"        return this.description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"     * Returns a string representation of the task in a human-readable format.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"     * This includes the task\u0027s completion status and description.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"            return true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"            return false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"        Task task \u003d (Task) obj;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsapaulblem"},"content":"        return isDone \u003d\u003d task.isDone \u0026\u0026 description.equals(task.description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsapaulblem"},"content":"    public int hashCode() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsapaulblem"},"content":"        int result \u003d description.hashCode();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsapaulblem"},"content":"        result \u003d 31 * result + (isDone ? 1 : 0);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsapaulblem"},"content":"        return result;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":94}},{"path":"src/main/java/alden/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":" * Represents a list of tasks. This class provides methods to add, remove, and retrieve tasks.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":" * It also provides methods to get the size of the list and check if it is empty.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"public class TaskList {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(); // List of tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        assert task !\u003d null : \"Cannot add null task\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"        int sizeBefore \u003d tasks.size();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"        assert tasks.size() \u003d\u003d sizeBefore + 1 : \"Task list size should increase by 1\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"        assert tasks.get(tasks.size() - 1).equals(task) : \"Added task must be in list\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"     * Removes a task from the list at the specified index.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     * @return The task that was removed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index must be within bounds\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"        Task taskToRemove \u003d tasks.get(index);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        Task removed \u003d tasks.remove(index);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"        assert removed.equals(taskToRemove) : \"Removed task should match requested task\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        assert tasks.size() \u003e\u003d 0 : \"Task list size cannot be negative\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        // Check that the removed task is no longer in the list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"            assert !t.equals(removed) : \"Removed task should not be in list\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"        return removed;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index must be within bounds\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"    public int size() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"        assert tasks.size() \u003e\u003d 0 : \"Task list size cannot be negative\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"     * @return True if the list contains no tasks, otherwise false.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"        return tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsapaulblem"},"content":"     * Finds and returns a list of tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsapaulblem"},"content":"     * The search is case-insensitive.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsapaulblem"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsapaulblem"},"content":"     * @return An ArrayList of tasks that match the given keyword.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsapaulblem"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsapaulblem"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.trim().isEmpty() : \"Search keyword cannot be null or empty\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsapaulblem"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsapaulblem"},"content":"        String lowerCaseKeyword \u003d keyword.toLowerCase(); // Convert keyword to lowercase for case-insensitive search","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsapaulblem"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsapaulblem"},"content":"            if (task.getDescription() !\u003d null) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsapaulblem"},"content":"                String lowerCaseDescription \u003d task.getDescription().toLowerCase(); // Convert description to lowercase","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsapaulblem"},"content":"                if (lowerCaseDescription.contains(lowerCaseKeyword)) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsapaulblem"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsapaulblem"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsapaulblem"},"content":"        return matchingTasks; // Return the list of matching tasks","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":106}},{"path":"src/main/java/alden/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":" * Represents a Todo task. A Todo is a simple task that has a description and a completion status.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"     * The format is: \"[T][X] description\" where \"X\" is the task\u0027s status icon.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representation of the Todo task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"     * Returns the Todo task in a format suitable for saving to a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"     * The format is: \"T | status | description\".","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"     * @return A string representing the Todo task in a file-compatible format.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":41}},{"path":"src/main/java/alden/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":" * The `Ui` class handles the user interface interactions for the Alden application.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":" * It manages displaying messages to the user, both in GUI and (optionally) console modes.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"public class Ui {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"    private boolean isGuiMode \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"    private final StringBuilder currentBotResponse \u003d new StringBuilder(); // Accumulate bot\u0027s response","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"     * Sets the UI to GUI mode, using the provided VBox as the dialog container.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"     * @param container The VBox to use as the dialog container for GUI mode.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"    public void setGuiMode(VBox container) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"        this.dialogContainer \u003d container;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"        this.isGuiMode \u003d true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"     * Appends a message to the output, either to the GUI dialog container or the console.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"     * @param isUser  True if the message is from the user, false if it\u0027s from Alden.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"    private void appendToOutput(String message, boolean isUser) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"        if (isGuiMode) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"            if (isUser) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"                Image image \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserLogo.jpg\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"                addToDialogContainer(new DialogBox(message, image, true));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"            } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"                currentBotResponse.append(message).append(\"\\n\"); // Add to buffer","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsapaulblem"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsapaulblem"},"content":"            System.out.println(message); // Console output","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsapaulblem"},"content":"     * Adds a DialogBox to the GUI dialog container.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsapaulblem"},"content":"     * @param dialogBox The DialogBox to add.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsapaulblem"},"content":"    private void addToDialogContainer(DialogBox dialogBox) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsapaulblem"},"content":"        dialogContainer.getChildren().add(dialogBox);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsapaulblem"},"content":"     * Displays the accumulated bot response in the GUI dialog container.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsapaulblem"},"content":"    private void flushBotResponse() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsapaulblem"},"content":"        if (currentBotResponse.length() \u003e 0) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsapaulblem"},"content":"            Image image \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeLogo.png\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsapaulblem"},"content":"            addToDialogContainer(new DialogBox(currentBotResponse.toString(), image, false));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsapaulblem"},"content":"            currentBotResponse.setLength(0); // Clear buffer","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsapaulblem"},"content":"     * Displays the welcome message.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsapaulblem"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\" Hello! I\u0027m Alden\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\" What can I do for you?\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsapaulblem"},"content":"        flushBotResponse(); // Display welcome message","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsapaulblem"},"content":"     * Displays the goodbye message.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsapaulblem"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\" Bye. Hope to see you again soon!\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsapaulblem"},"content":"        flushBotResponse();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsapaulblem"},"content":"     * Displays an error message.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsapaulblem"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsapaulblem"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\" Error: \" + message, false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsapaulblem"},"content":"        flushBotResponse();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsapaulblem"},"content":"     * Displays the task added message.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsapaulblem"},"content":"     * @param task The added task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsapaulblem"},"content":"     * @param size The current number of tasks in the list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsapaulblem"},"content":"    public void showTaskAdded(Task task, int size) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\" Got it. I\u0027ve added this task:\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\"   \" + task, false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\" Now you have \" + size + \" tasks in the list.\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsapaulblem"},"content":"        flushBotResponse();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsapaulblem"},"content":"     * Displays the task marked as done message.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsapaulblem"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsapaulblem"},"content":"    public void showTaskMarkedAsDone(Task task) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\" Nice! I\u0027ve marked this task as done:\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\"   \" + task, false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsapaulblem"},"content":"        flushBotResponse();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsapaulblem"},"content":"     * Displays the task marked as not done message.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsapaulblem"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsapaulblem"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\" OK, I\u0027ve marked this task as not done yet:\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\"   \" + task, false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsapaulblem"},"content":"        flushBotResponse();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsapaulblem"},"content":"     * Displays the task removed message.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsapaulblem"},"content":"     * @param task The removed task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsapaulblem"},"content":"     * @param size The current number of tasks in the list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsapaulblem"},"content":"    public void showTaskRemoved(Task task, int size) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\" Noted. I\u0027ve removed this task:\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\"   \" + task, false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsapaulblem"},"content":"        appendToOutput(\" Now you have \" + size + \" tasks in the list.\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsapaulblem"},"content":"        flushBotResponse();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsapaulblem"},"content":"     * Displays the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsapaulblem"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsapaulblem"},"content":"    public void printTaskList(TaskList tasks) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsapaulblem"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsapaulblem"},"content":"            appendToOutput(\" Your task list is empty.\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsapaulblem"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsapaulblem"},"content":"            appendToOutput(\" Here are the tasks in your list:\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsapaulblem"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsapaulblem"},"content":"                appendToOutput(\" \" + (i + 1) + \".\" + tasks.get(i), false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsapaulblem"},"content":"        flushBotResponse();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsapaulblem"},"content":"     * Displays the matching tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsapaulblem"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsapaulblem"},"content":"     * @param matchingTasks The list of matching tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsapaulblem"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsapaulblem"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsapaulblem"},"content":"            appendToOutput(\" No matching tasks found.\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsapaulblem"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsapaulblem"},"content":"            appendToOutput(\" Here are the matching tasks in your list:\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsapaulblem"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsapaulblem"},"content":"                appendToOutput(\" \" + (i + 1) + \".\" + matchingTasks.get(i), false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsapaulblem"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsapaulblem"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsapaulblem"},"content":"        flushBotResponse();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsapaulblem"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsapaulblem"},"content":"     * Displays the exit message (same as goodbye).","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsapaulblem"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsapaulblem"},"content":"    public void showExitMessage() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsapaulblem"},"content":"        showGoodbye();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":181}},{"path":"src/test/java/alden/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"    public void createDeadline_normalDateTime_success() throws AldenException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Report\", \"2025/12/31 1430\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"        String expected \u003d \"[D][ ] Submit Report (by: Dec 31 2025 2:30 PM)\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    public void createDeadline_dateOnly_setsToMidnight() throws AldenException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Report\", \"2025/12/31\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"        String expected \u003d \"[D][ ] Submit Report (by: Dec 31 2025 12:00 AM)\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"    public void createDeadline_today_setsToCurrentDate() throws AldenException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Report\", \"today\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsapaulblem"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsapaulblem"},"content":"        assertTrue(deadline.toString().contains(now.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsapaulblem"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsapaulblem"},"content":"    public void toFileFormat_normalDeadline_correctFormat() throws AldenException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsapaulblem"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Report\", \"2025/12/31 1430\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsapaulblem"},"content":"        String expected \u003d \"D | 0 | Submit Report | 2025/12/31 1430\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsapaulblem"},"content":"        assertEquals(expected, deadline.toFileFormat());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":39}},{"path":"src/test/java/alden/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"package alden;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"public class EventTest {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsapaulblem"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsapaulblem"},"content":"    public void createEvent_normalDateTime_success() throws AldenException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsapaulblem"},"content":"        Event event \u003d new Event(\"Team Meeting\", \"2024/01/01 1400\", \"2024/01/01 1500\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsapaulblem"},"content":"        String expected \u003d \"[E][ ] Team Meeting (from: Jan 01 2024 2:00 PM to: Jan 01 2024 3:00 PM)\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsapaulblem"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsapaulblem"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsapaulblem"},"content":"    public void createEvent_dateOnly_setsToMidnight() throws AldenException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsapaulblem"},"content":"        Event event \u003d new Event(\"Team Meeting\", \"2024/01/01\", \"2024/01/02\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsapaulblem"},"content":"        String expected \u003d \"[E][ ] Team Meeting (from: Jan 01 2024 12:00 AM to: Jan 02 2024 12:00 AM)\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsapaulblem"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsapaulblem"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsapaulblem"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsapaulblem"},"content":"    public void toFileFormat_normalEvent_correctFormat() throws AldenException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsapaulblem"},"content":"        Event event \u003d new Event(\"Team Meeting\", \"2024/01/01 1400\", \"2024/01/01 1500\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsapaulblem"},"content":"        String expected \u003d \"E | 0 | Team Meeting | 2024/01/01 1400 | 2024/01/01 1500\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsapaulblem"},"content":"        assertEquals(expected, event.toFileFormat());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsapaulblem"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsapaulblem"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"itsapaulblem"},"content":"todo read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsapaulblem"},"content":"deadline return book /by June 6th","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsapaulblem"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsapaulblem"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsapaulblem"},"content":"delete 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsapaulblem"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsapaulblem"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"itsapaulblem":7}}]
