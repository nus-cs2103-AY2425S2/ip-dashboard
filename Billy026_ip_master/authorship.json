[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-04T08:08:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    testImplementation group: \u0027org.mockito\u0027, name: \u0027mockito-core\u0027, version: \u00275.8.0\u0027","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"    testImplementation group: \u0027org.mockito\u0027, name: \u0027mockito-junit-jupiter\u0027, version: \u00275.8.0\u0027","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-23T16:00:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-23T21:31:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"checkstyle {","lastModifiedDate":"2025-02-04T08:08:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-04T08:08:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-04T08:08:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-04T08:08:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"    mainClass.set(\"bob.launcher.BobLauncher\")","lastModifiedDate":"2025-02-23T16:00:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"    archiveBaseName \u003d \"bob\"","lastModifiedDate":"2025-02-23T16:00:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"    mergeServiceFiles()","lastModifiedDate":"2025-02-23T16:00:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"    manifest {","lastModifiedDate":"2025-02-23T16:00:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"        attributes \u0027Main-Class\u0027: \u0027bob.launcher.BobLauncher\u0027","lastModifiedDate":"2025-02-23T16:00:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-23T16:00:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"sourceSets {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"    main {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"        java.srcDirs \u003d [\"src/main/java\"]","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"        resources.srcDirs \u003d [\"src/main/resources\"]","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false}],"authorContributionMap":{"Billy026":34,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"# Bob User Guide","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"![Ui png](https://github.com/user-attachments/assets/17bb39e5-fc8f-4bb0-b550-95c1b2625d15)","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"Bob, your friendly neighbourhood task manager, is a greenfield task management project!","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"He is designed to help you store and retrieve to do tasks, deadlines and events.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"## Adding to do tasks","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"Creates a to do task. A to do task only has a task name, with no deadlines.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-02-21T19:55:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"Format: todo TASK_NAME","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"Example: `todo read books`","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"Sure. I\u0027ve added this task:","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"[ ] | T | read books","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"## Adding deadline tasks","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"Creates a deadline task. A deadline task has a task name and one deadline.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-02-21T19:55:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"Format: deadline TASK_NAME /by DUE_DATE [TIME]","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"Example: `deadline assignment /by 1/1/2025 10:30`","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"Sure. I\u0027ve added this task:","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"[ ] | D | assignment | by: 01/01/2025 10:30","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"## Adding event tasks","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"Creates an event task. An event task has a task name, a start date and an end date.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-02-21T19:55:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"Format: event TASK_NAME /from START_DATE [TIME] /to END_DATE [TIME]","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"Example: `event meeting /from 1/1/2025 20:00 /to 1/1/2025 21:00`","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"Sure. I\u0027ve added this task:","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"[ ] | E | meeting | from: 01/01/2025 20:00 | to: 01/01/2025 21:00","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"## Deleting tasks","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"Deletes a task by its index.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-02-21T19:55:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"Format: delete TASK_INDEX","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"Example: `delete 1`","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"Alright. I\u0027ve removed this task:","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"[ ] | T | read books","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"## Finding tasks","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"Lists down all tasks containing TASK_NAME.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-02-21T19:55:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"Format: find TASK_NAME","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"Example: `find meeting`","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"1. [ ] | E | meeting | from: 01/01/2025 20:00 | to: 01/01/2025 21:00","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"## Getting tasks by their due date","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"Lists down all tasks with the specified due date.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-02-21T19:55:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"If inputted due date does not have time, time will not be accounted for when getting matching tasks.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-02-21T19:55:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"Format: getDueDate DUE_DATE [TIME]","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"Example: `getDueDate 01/01/2025`","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"Here\u0027s the tasks due at that date:","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"[ ] | D | assignment | by: 01/01/2025 10:30","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"[ ] | E | meeting | from: 01/01/2025 20:00 | to: 01/01/2025 21:00","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"## Listing all tasks","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"Lists all existing tasks.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-02-21T19:55:46","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"Format: list","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"Example: `list`","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"1. [ ] | D | assignment | by: 01/01/2025 10:30","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"2. [ ] | E | meeting | from: 01/01/2025 20:00 | to: 01/01/2025 21:00","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"## Marking tasks","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"Marks a task at the given index as completed.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-02-21T19:55:46","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"Format: mark TASK_INDEX","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"Example: `mark 1`","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"[X] | D | assignment | by: 01/01/2025 10:30","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"## Unmarking tasks","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"Marks a task at the given index as incomplete.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-02-21T19:55:46","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"Format: unmark TASK_INDEX","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"Example: `unmark 1`","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"Oh, I guess it\u0027s not done yet:","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"[ ] | D | assignment | by: 01/01/2025 10:30","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"```","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"## Help","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"Lists down all the above commands.","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-02-21T19:55:46","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"Format: help","lastModifiedDate":"2025-02-21T19:53:37","isFullCredit":false}],"authorContributionMap":{"Billy026":121,"-":16}},{"path":"src/main/java/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-20T20:43:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20T20:43:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import managers.UiManager;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":" * Main class.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"public class Bob {","lastModifiedDate":"2025-01-20T20:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-20T20:48:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20T20:48:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"        UiManager uiManager \u003d new UiManager();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"        uiManager.executeUi(sc);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20T20:48:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"        // Clean up","lastModifiedDate":"2025-01-20T20:48:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        sc.close();","lastModifiedDate":"2025-01-20T20:48:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20T20:48:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"Billy026":16,"-":2}},{"path":"src/main/java/Bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package Bob;","lastModifiedDate":"2025-01-30T21:07:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import Bob.managers.UiManager;","lastModifiedDate":"2025-01-30T21:07:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:07:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":" * Main class.","lastModifiedDate":"2025-01-30T21:07:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:07:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"public class Bob {","lastModifiedDate":"2025-01-30T21:07:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-30T21:07:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"        UiManager uiManager \u003d new UiManager();","lastModifiedDate":"2025-01-30T21:07:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"        uiManager.executeUi();","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:07:58","isFullCredit":false}],"authorContributionMap":{"Billy026":13}},{"path":"src/main/java/Bob/GUI/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.gui;","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2025-02-21T10:29:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    @FXML","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    @FXML","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of DialogBox.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     * @param text text to display.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"     * @param image speaker\u0027s image to display.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    private DialogBox(String text, Image image) {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"        displayPicture.setImage(image);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"    private void flip() {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"     * Returns a dialog block with the user speaking.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"     * @param text text to display.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"     * @param img user\u0027s image.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"     * @return DialogBox with user\u0027s image and command.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-21T10:29:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"        db.dialog.setTextAlignment(TextAlignment.RIGHT);","lastModifiedDate":"2025-02-21T10:29:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        return db;","lastModifiedDate":"2025-02-21T10:29:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"     * Returns a dialog block with Bob speaking.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"     * @param text text to display.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"     * @param img Bob\u0027s image.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"     * @return DialogBox with Bob\u0027s image and command.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"    public static DialogBox getBobDialog(String text, Image img) {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"        db.flip();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"        return db;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false}],"authorContributionMap":{"Billy026":83}},{"path":"src/main/java/Bob/GUI/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.gui;","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import bob.managers.UiManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":" * Represents a container for which dialog boxes will appear in.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":" * Automatically scrolls downwards when new dialog box exceeds window height.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"public class MainWindow {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    @FXML","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    @FXML","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    @FXML","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    @FXML","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    private UiManager uiManager;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/man.png\"));","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"    private Image bobImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bob my boy.png\"));","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"     * Sets scrollPane height and output greeting on initialisation.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"    @FXML","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        String greeting \u003d \"\\n\" + \"Hi, I\u0027m Bob!\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"                + \"...\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"                + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"                + \"Can I do something for you?\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"                DialogBox.getBobDialog(greeting, bobImage)","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"     * Displays output on set up of Bob.","lastModifiedDate":"2025-02-21T15:15:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"     * @param uiManager manages the user interface.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"    public void setBob(UiManager uiManager) {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"        this.uiManager \u003d uiManager;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"        String savedList \u003d \"\\n\" + uiManager.getSavedListMessage();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"        String todayTasks \u003d \"\\n\" + uiManager.getIncomingDeadlines();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"                DialogBox.getBobDialog(savedList, bobImage),","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"                DialogBox.getBobDialog(todayTasks, bobImage)","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"     * Displays output of user inputs as dialog boxes.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"    @FXML","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"        if (checkForExit(input)) {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"            return;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"        displayResponse(input);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"     * Checks whether user input indicates to exit the program.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"     * @param input user input.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"     * @return whether the program should exit.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"    @FXML","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"    private boolean checkForExit(String input) {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"            displayExitDialog(input);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"            delayExit();","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"            return true;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"            return false;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"     * Creates two dialog boxes: one echoing user input and another displaying the output of","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"     * the user input.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"     * Clears user input.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"     * @param input user input.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"    @FXML","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"    private void displayResponse(String input) {","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"        String response \u003d \"\\n\" + this.uiManager.executeUserCommand(input);","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"            DialogBox.getUserDialog(\"\\n\" + input, userImage),","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"            DialogBox.getBobDialog(response, bobImage)","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"     * Displays output on exit of program as a dialog box.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"     * @param input user input.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"    @FXML","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"    private void displayExitDialog(String input) {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"            DialogBox.getBobDialog(\"\\nOk! Bye. See you soon.\", bobImage)","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"     * Delays exit for 2 seconds so that user can read output on exit.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"    @FXML","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"    private void delayExit() {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"        delay.setOnFinished((event) -\u003e {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"            Platform.exit();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"            System.exit(0);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"        });","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"        delay.play();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false}],"authorContributionMap":{"Billy026":138}},{"path":"src/main/java/Bob/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":" * Valid command inputted by the user.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    protected String[] inputs;","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of Command.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * @param inputs user command separated by spaces.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    public Command(String[] inputs) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"     * Executes the intended behaviour of the command.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"     * @param taskManager the list of tasks and their operations.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     * @return output of command.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException when some part of the command is invalid.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    public abstract String exec(TaskManager taskManager) throws InvalidCommandException;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false}],"authorContributionMap":{"Billy026":29}},{"path":"src/main/java/Bob/commands/CreateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidDateFormatException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import bob.managers.DateManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":" * User command to create a task.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":" * Type of task is determined by inputted taskType {T, D, E}.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"public class CreateCommand extends Command {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    private static final String bySeparator \u003d \"/by\";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"    private static final String fromSeparator \u003d \"/from\";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    private static final String toSeparator \u003d \"/to\";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    private static final String deadlineShortForm \u003d \"D\";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    private static final String eventShortForm \u003d \"E\";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    private String taskType;","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    private String errorMessage;","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     * Primary constructor for CreateCommand.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     * @param inputs user command separated by spaces.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     * @param errorMessage specialised error message for each taskType.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"    public CreateCommand(String[] inputs, String taskType, String errorMessage) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"        super(inputs);","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"     * Creates a task based on the task type and input.","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"     * @param taskManager the list of tasks and their operations.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"     * @return newly added task.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException if not enough values are given for the task type.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"    public String exec(TaskManager taskManager) throws InvalidCommandException {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"            String[] taskValues \u003d formatInput();","lastModifiedDate":"2025-02-12T15:39:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"            Task task \u003d taskManager.addTask(taskType, taskValues);","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"            assert task !\u003d null : \"task should not be null.\";","lastModifiedDate":"2025-02-10T16:23:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"            return \"Sure. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"                    + task.toString() + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"                    + \"Now you have \" + taskManager.getSize() + \" task\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"                    + ((taskManager.getSize() \u003d\u003d 1) ? \"\" : \"s\") + \" in the list.\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(errorMessage);","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"     * Converts user input into relevant parts for createTask().","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"     * @return array of task values.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException when no date(s) given.","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException when invalid date format given.","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"    private String[] formatInput() throws InvalidTaskOperationException, InvalidDateFormatException {","lastModifiedDate":"2025-02-12T15:39:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        String[] inputParts \u003d splitInput();","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"        checkForMissingDate(inputParts);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"        inputParts \u003d convertToCorrectFormat(inputParts);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"        DateManager.checkForValidEventDates(inputParts, taskType.equals(eventShortForm));","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"        return inputParts;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"     * Splits user input into task name, start date and end date.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"     * @return array of task name, start date and end date.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"    private String[] splitInput() throws InvalidTaskOperationException {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"        enum ChangeValue {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"            ATNAME,","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"            ATSTART,","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"            ATEND","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"        StringBuffer name \u003d new StringBuffer();","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"        StringBuffer start \u003d new StringBuffer();","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"        StringBuffer end \u003d new StringBuffer();","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"        ChangeValue changeValue \u003d ChangeValue.ATNAME;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"        boolean hasSpace \u003d false;","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"        for (int i \u003d 1; i \u003c this.inputs.length; i++) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"            if (this.inputs[i].equals(bySeparator)) {","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"                changeValue \u003d ChangeValue.ATSTART;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"                hasSpace \u003d false;","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"                continue;","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"            } else if (this.inputs[i].equals(fromSeparator)) {","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"                changeValue \u003d ChangeValue.ATSTART;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"                hasSpace \u003d false;","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"                continue;","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"            } else if (this.inputs[i].equals(toSeparator)) {","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"                changeValue \u003d ChangeValue.ATEND;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"                hasSpace \u003d false;","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"                continue;","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"            } else if (changeValue \u003d\u003d ChangeValue.ATNAME) {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"                name.append((hasSpace ? \" \" : \"\") + this.inputs[i]);","lastModifiedDate":"2025-02-12T17:19:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"            } else if (changeValue \u003d\u003d ChangeValue.ATSTART) {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"                start.append((hasSpace ? \" \" : \"\") + this.inputs[i]);","lastModifiedDate":"2025-02-12T17:19:12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"            } else if (changeValue \u003d\u003d ChangeValue.ATEND) {","lastModifiedDate":"2025-02-12T18:00:13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"                end.append((hasSpace ? \" \" : \"\") + this.inputs[i]);","lastModifiedDate":"2025-02-12T17:19:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"            } else {","lastModifiedDate":"2025-02-12T18:00:13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"                continue;","lastModifiedDate":"2025-02-12T18:00:13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"            if (!hasSpace) {","lastModifiedDate":"2025-02-12T15:39:10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"                hasSpace \u003d true;","lastModifiedDate":"2025-02-12T15:39:10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-12T15:39:10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"        if (name.toString().equals(\"\")) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(\"Please provide a task name.\");","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"        return new String[] {name.toString(), start.toString(), end.toString()};","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"     * Checks if no date is provided or date is in invalid format.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"     * @param inputParts array of task name, start date and end date.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException if no date is provided or invalid format.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"    private void checkForMissingDate(String[] inputParts) throws InvalidTaskOperationException {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"        boolean isDeadline \u003d this.taskType.equals(deadlineShortForm);","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"        boolean isEvent \u003d this.taskType.equals(eventShortForm);","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"        boolean isStartEmpty \u003d inputParts[1].equals(\"\");","lastModifiedDate":"2025-02-12T17:19:12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"        boolean areDatesEmpty \u003d inputParts[1].equals(\"\") || inputParts[2].equals(\"\");","lastModifiedDate":"2025-02-12T17:19:12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"        boolean isByUsed \u003d isByUsed();","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T17:19:12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"        if (isDeadline \u0026\u0026 isStartEmpty) {","lastModifiedDate":"2025-02-12T17:19:12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"                    \"You did not provide a date or time.\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"                    + \"    Please format your input as: deadline \u003ctask name\u003e /by \u003cdate with time\u003e.\");","lastModifiedDate":"2025-02-23T21:42:59","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"        } else if (isEvent \u0026\u0026 (areDatesEmpty || isByUsed)) {","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Billy026"},"content":"                    \"You did not provide either a start date or an end date.\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Billy026"},"content":"                    + \"    Please format your input as: event \u003ctask name\u003e /from \u003cdate with time\u003e \"","lastModifiedDate":"2025-02-23T21:42:59","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Billy026"},"content":"                    + \"/to \u003cdate with time\u003e.\");","lastModifiedDate":"2025-02-23T21:42:59","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Billy026"},"content":"     * Checks if /by is in user input.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Billy026"},"content":"     * @return /by is in user input.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Billy026"},"content":"    private boolean isByUsed() {","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Billy026"},"content":"        for (String input : inputs) {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Billy026"},"content":"            if (input.equals(bySeparator)) {","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Billy026"},"content":"                return true;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Billy026"},"content":"        return false;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Billy026"},"content":"     * Combines task name, start date and end date to a standardized format.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Billy026"},"content":"     * @param inputParts array of task name, start date and end date.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Billy026"},"content":"     * @return task name with start and end dates in standardized format.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if date format is invalid.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Billy026"},"content":"    private String[] convertToCorrectFormat(String[] inputParts) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Billy026"},"content":"        String start \u003d inputParts[1];","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Billy026"},"content":"        String end \u003d inputParts[2];","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Billy026"},"content":"        if (!start.equals(\"\")) {","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Billy026"},"content":"            start \u003d DateManager.normaliseDateFormat(start);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Billy026"},"content":"            if (!end.equals(\"\")) {","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Billy026"},"content":"                end \u003d DateManager.normaliseDateFormat(end);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Billy026"},"content":"        return new String[] {inputParts[0], start, end};","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false}],"authorContributionMap":{"Billy026":190}},{"path":"src/main/java/Bob/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import bob.managers.ConversionManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":" * User command to delete a task from the list of tasks.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * Primary constructor for DeleteCommand.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * @param inputs user command separated by spaces.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    public DeleteCommand(String[] inputs) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"        super(inputs);","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"     * Deletes the task with the given index from the list of tasks.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"     * @param taskManager the list of tasks and their operations.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     * @return deleted task.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException if task index is invalid.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    public String exec(TaskManager taskManager) throws InvalidCommandException {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        if (this.inputs.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(\"Please tell me which task to delete.\");","lastModifiedDate":"2025-02-05T22:08:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        int index \u003d ConversionManager.convertInputToIndex(","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"                this.inputs[1], \"Please give me a valid task number.\");","lastModifiedDate":"2025-02-05T22:08:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"        if (taskManager.getSize() \u003c index) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(\"There is no task with that number.\");","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"        // Delete task","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"        Task task \u003d taskManager.getTask(index - 1);","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"        assert task !\u003d null : \"task should not be null.\";","lastModifiedDate":"2025-02-10T16:23:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"        taskManager.deleteTask(index - 1);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        return \"Alright. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"                + \"Now you have \" + taskManager.getSize() + \" task\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"                + (taskManager.getSize() \u003d\u003d 1 || taskManager.getSize() \u003d\u003d 0 ? \"\" : \"s\") + \" in the list.\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false}],"authorContributionMap":{"Billy026":51}},{"path":"src/main/java/Bob/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.util.List;","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":" * User command to find tasks containing a string in their task names.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of FindCommand.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     * @param inputs user command separated by spaces.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    public FindCommand(String[] inputs) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"        super(inputs);","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     * Returns all tasks with inputted string in their task name.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     * @param taskManager the list of tasks and their operations.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * @return list of tasks with matching task names.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException when no string is entered.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    public String exec(TaskManager taskManager) throws InvalidCommandException {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        String stringToContain \u003d getStringToContain();","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"        List\u003cTask\u003e matchingTasks \u003d taskManager.getMatchingTasks(stringToContain);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"        return getOutput(stringToContain, matchingTasks);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"     * Concatenates the string to check for.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"     * @return string to check for.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException if there is no string input.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"    private String getStringToContain() throws InvalidCommandException {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"        if (this.inputs.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(\"Please give me a task name.\");","lastModifiedDate":"2025-02-05T22:08:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"        StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2025-02-12T17:52:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T17:52:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"        buffer.append(this.inputs[1]);","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"        for (int i \u003d 2; i \u003c this.inputs.length; i++) {","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"            buffer.append(\" \");","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"            buffer.append(this.inputs[i]);","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"        return buffer.toString();","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"     * Gets all matching tasks.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"     * @param stringToContain string to check for.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"     * @param matchingTasks list of matching tasks.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"     * @return output that contains all matching tasks.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"     *     if no matching task is found, indicates there are none.","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"    private String getOutput(String stringToContain, List\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"        if (!matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"            StringBuffer outputBuffer \u003d new StringBuffer();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"            outputBuffer.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"            for (int i \u003d 1; i \u003c\u003d matchingTasks.size(); i++) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"                outputBuffer.append(i + \". \" + matchingTasks.get(i - 1).toString() + \"\\n\");","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"            return outputBuffer.toString();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"            return \"I can\u0027t find any matching tasks.\\n\";","lastModifiedDate":"2025-02-05T22:08:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false}],"authorContributionMap":{"Billy026":80}},{"path":"src/main/java/Bob/commands/GetDueDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidDateFormatException;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import bob.managers.DateManager;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import javafx.util.Pair;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":" * User command to get all tasks with deadlines that are due in the given date.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"public class GetDueDateCommand extends Command {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"    private static final String longDateFormat \u003d \"dd MMMM yyyy HH:mm\";","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    private static final String shortDateFormat \u003d \"dd/MM/yyyy HH:mm\";","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    private static final String invalidCommandMessage \u003d \"Please provide a valid due date.\";","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of GetDueDateCommand.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"     * @param inputs user command separated by spaces.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    public GetDueDateCommand(String[] inputs) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"        super(inputs);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     * Gets all tasks with deadlines that are due in the given date.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"     * @param taskManager the list of tasks and their operations.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"     * @return list of due tasks.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException if invalid date is given.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"    public String exec(TaskManager taskManager) throws InvalidCommandException {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        String date \u003d getDueDate();","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"        Pair\u003cLocalDateTime, Boolean\u003e dueDate \u003d parseDueDate(date);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"        return taskManager.displaySameDeadlines(dueDate);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"     * Parses the due date from input.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"     * @return given due date.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"    private String getDueDate() {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"        StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"        boolean hasSpace \u003d false;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"        for (int i \u003d 1; i \u003c inputs.length; i++) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"            if (hasSpace) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"                buffer.append(\" \");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"            } else {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"                hasSpace \u003d true;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            buffer.append(inputs[i]);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"        return buffer.toString();","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"     * Converts inputted date into a LocalDate, as well as if time is specified.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"     * @param date date to convert.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"     * @return pair of converted LocalDate and if time is specified.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException if invalid date or time is given.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"    private Pair\u003cLocalDateTime, Boolean\u003e parseDueDate(String date) throws InvalidCommandException {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"        if (date.equals(\"\")) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(invalidCommandMessage);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"        boolean containsDate \u003d date.split(\"[ ,/\\\\-:]\").length \u003d\u003d 5;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"            String dueDate \u003d DateManager.normaliseDateFormat(date);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"            if (dueDate.contains(\"/\")) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"                return new Pair\u003c\u003e(LocalDateTime.parse(dueDate, DateTimeFormatter.ofPattern(shortDateFormat)),","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"                        containsDate);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"            } else {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"                return new Pair\u003c\u003e(LocalDateTime.parse(dueDate, DateTimeFormatter.ofPattern(longDateFormat)),","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"                        containsDate);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(invalidCommandMessage);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false}],"authorContributionMap":{"Billy026":94}},{"path":"src/main/java/Bob/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":" * User command to list all commands.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    private static int maxDashLength \u003d 56;","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * Primary constructor for HelpCommand.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * @param inputs user command separated by spaces.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    public HelpCommand(String[] inputs) {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"        super(inputs);","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"     * Gives the name, format and a description of all avaliable user commands.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    public String exec(TaskManager taskManager) throws InvalidCommandException {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"        StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        buffer.append(\"Sure, here is what you can do:\\n\\n\");","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        buffer.append(createFunctionParagraph(","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"            \"ToDo\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"            \"todo \u003ctask name\u003e\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"            \"Creates a to do task. A to do task only has a task name, with no deadlines.\"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        ));","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        buffer.append(createFunctionParagraph(","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"            \"Deadline\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"            \"deadline \u003ctask name\u003e /by \u003cdue date: e.g. dd/MM/yyyy hh:mm\u003e\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"            \"Creates a deadline task. A deadline task has a task name and one deadline.\"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"        ));","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"        buffer.append(createFunctionParagraph(","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"            \"Event\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"            \"event \u003ctask name\u003e /from \u003cstart date: e.g. dd/MM/yyyy hh:mm\u003e \"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"                     + \"/to \u003cend date: e.g. dd/MM/yyyy hh:mm\u003e\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"            \"Creates an event task. An event task has a task name, a start date and an end date.\"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"        ));","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"        buffer.append(createFunctionParagraph(","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"            \"Delete\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"            \"delete \u003ctask index\u003e\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"            \"Deletes a task by its index.\"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"        ));","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"        buffer.append(createFunctionParagraph(","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"            \"Find\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"            \"find \u003cname\u003e\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"            \"Lists down all tasks containing \u003cname\u003e.\"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"        ));","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        buffer.append(createFunctionParagraph(","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"            \"Get due date\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"            \"getDueDate \u003cdue date\u003e\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"            \"Lists down all tasks with the specified due date (if inputted due date does not\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"                    + \" have time, time will not be accounted for when getting matching tasks).\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        ));","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        buffer.append(createFunctionParagraph(","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"            \"List\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"            \"list\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"            \"Lists all existing tasks.\"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"        ));","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"        buffer.append(createFunctionParagraph(","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"            \"Mark\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"            \"mark \u003ctask index\u003e\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"            \"Marks a task at the given index as completed.\"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"        ));","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"        buffer.append(createFunctionParagraph(","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"            \"Unmark\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"            \"unmark \u003ctask index\u003e\",","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"            \"Marks a task at the given index as incomplete.\"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"        ));","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"        return buffer.toString();","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"     * Creates a paragraph with the title, format and description of the command.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"     * @param title name of command.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"     * @param format format of user input for command.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"     * @param description description of command.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"     * @return paragraph with the 3 details combined.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"    private String createFunctionParagraph(String title, String format, String description) {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"        String underline \u003d getUnderline(title, format);","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"        String formattedTitle \u003d title + \"\\n\" + underline;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"        String formattedFormat \u003d format + \"\\n\" + underline;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"        return formattedTitle + formattedFormat + description + \"\\n\" + \"\\n\";","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"     * Creates an underline that spans the length of the title or format, whichever is longer.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"     * @param title name of command.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"     * @param format format of user input for command.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"     * @return underline.","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"    private String getUnderline(String title, String format) {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"        int length \u003d Math.min(Math.max(title.length(), format.length()), maxDashLength);","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"        StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"            buffer.append(\"_\");","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"        buffer.append(\"\\n\");","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"        return buffer.toString();","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false}],"authorContributionMap":{"Billy026":123}},{"path":"src/main/java/Bob/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":" * User command to list all tasks in the list.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of ListCommand.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * @param inputs user command separated by spaces.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    public ListCommand(String[] inputs) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        super(inputs);","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"     * Lists all tasks currently in the list.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"     * If no tasks are found, indicates this to the user.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     * @param taskManager the list of tasks and their operations.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"     * @return list of tasks.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException not possible, as there are no possible invalid inputs here.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    public String exec(TaskManager taskManager) throws InvalidCommandException {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        if (taskManager.getSize() !\u003d 0) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"            StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"            buffer.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"            for (int i \u003d 1; i \u003c\u003d taskManager.getSize(); i++) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"                buffer.append(i + \". \" + taskManager.getTask(i - 1).toString() + \"\\n\");","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"            return buffer.toString();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"            return \"There are no tasks in your list.\\n\";","lastModifiedDate":"2025-02-05T22:08:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false}],"authorContributionMap":{"Billy026":42}},{"path":"src/main/java/Bob/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import bob.managers.ConversionManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":" * User command to mark or unmark a task.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    private boolean isMark;","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of MarkCommand.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     * @param inputs user command separated by spaces.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     * @param isMark whether the task should be marked or unmarked.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    public MarkCommand(String[] inputs, boolean isMark) {","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"        super(inputs);","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * Marks or unmarks the task as given by inputs.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     * @param taskManager the list of tasks and their operations.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     * @return marked/unmarked task.","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException if invalid task number given.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    public String exec(TaskManager taskManager) throws InvalidCommandException {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        if (this.inputs.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(\"Please tell me which task to delete.\");","lastModifiedDate":"2025-02-05T22:08:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"        int index \u003d ConversionManager.convertInputToIndex(this.inputs[1],","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"                \"Please tell me which task to \" + (this.isMark ? \"\" : \"un\") + \"mark.\");","lastModifiedDate":"2025-02-12T17:19:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"        if (taskManager.getSize() \u003c index) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(\"There is no task with that number.\");","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"        Task task \u003d taskManager.markTask(index - 1, this.isMark);","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        assert task !\u003d null : \"task should not be null.\";","lastModifiedDate":"2025-02-10T16:23:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"        if (this.isMark) {","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"                    + task.toString() + \"\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"            return \"Oh, I guess it\u0027s not done yet:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"                    + task.toString() + \"\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false}],"authorContributionMap":{"Billy026":56}},{"path":"src/main/java/Bob/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.exceptions;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":" * Exception for when the user enters an invalid command","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of InvalidCOmmandException.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"     * @param message specialised message.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"        super(message);","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false}],"authorContributionMap":{"Billy026":15}},{"path":"src/main/java/Bob/exceptions/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.exceptions;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":" * Exception for when dates are formatted incorrectly.","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"public class InvalidDateFormatException extends InvalidCommandException {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of InvalidDateFormatException.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"     * @param message specialised message.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    public InvalidDateFormatException(String message) {","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"        super(message);","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false}],"authorContributionMap":{"Billy026":15}},{"path":"src/main/java/Bob/exceptions/InvalidTaskOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.exceptions;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":" * Exception for when there is an invalid operation in one of the Task functions","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"public class InvalidTaskOperationException extends InvalidCommandException {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of InvalidTaskOperationException.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"     * @param message specialised message.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    public InvalidTaskOperationException(String message) {","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"        super(message);","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:02:48","isFullCredit":false}],"authorContributionMap":{"Billy026":15}},{"path":"src/main/java/Bob/launcher/BobLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.launcher;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":" * Represents the transition from Java main function to JavaFX start function.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"public class BobLauncher {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"     * Bypasses restrictions on start up with JavaFX.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false}],"authorContributionMap":{"Billy026":15}},{"path":"src/main/java/Bob/launcher/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.launcher;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import bob.gui.MainWindow;","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import bob.managers.UiManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":" * Represents the main application that should be opened.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    private final UiManager uiManager \u003d new UiManager();","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"     * Runs automatically when program is started.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"     * @param stage stage for which application is created on.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"            Scene scene \u003d new Scene(anchorPane);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBob(uiManager);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"            stage.show();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false}],"authorContributionMap":{"Billy026":37}},{"path":"src/main/java/Bob/managers/ConversionManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.managers;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidDateFormatException;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":" * Converts types from one to another.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"public abstract class ConversionManager {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     * Converts a string input to an index.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * @param str string to convert.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     * @param errorMessage error message if string is not an integer.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * @return integer value of string.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException if string is not an integer.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    public static int convertInputToIndex(String str, String errorMessage) throws InvalidCommandException {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"            int index \u003d Integer.parseInt(str);","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"            return index;","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(errorMessage);","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     * Converts the array of date strings into integers.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     * @param strArray array of strings.","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     * @return array of integers.","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException string cannot be converted into integer.","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    public static int[] convertToNumerics(String[] strArray, String message) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        int[] numericParts \u003d new int[strArray.length];","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"            for (int i \u003d 0; i \u003c strArray.length; i++) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"                numericParts[i] \u003d Integer.parseInt(strArray[i]);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(message);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"        return numericParts;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-03T17:28:40","isFullCredit":false}],"authorContributionMap":{"Billy026":46}},{"path":"src/main/java/Bob/managers/DateManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.managers;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import java.util.function.Function;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidDateFormatException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":" * Manages date operations.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"public class DateManager {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    private static final String spaceSeparator \u003d \" \";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    private static final String slashSeparator \u003d \"/\";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    private static final String colonSeparator \u003d \":\";","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    private static final String leadingZero \u003d \"0\";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    private static final String midnight \u003d \" 00:00\";","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    private static final String currCenturyLead \u003d \"20\";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    private static final String prevCenturyLead \u003d \"19\";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    private static final int minutesInHour \u003d 60;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    private static final int hoursInDay \u003d 24;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    private static final int daysInWeek \u003d 7;","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    private static final int monthsInYear \u003d 12;","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    private static final int yearLongForm \u003d 4;","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    private static final int yearShortForm \u003d 2;","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    private static final int daysInFebruary \u003d 29;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    private static final int daysInShorterMonth \u003d 30;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    private static final int daysInLongerMonth \u003d 31;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"    private static final String longDateFormat \u003d \"dd MMMM yyyy HH:mm\";","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"    private static final String shortDateFormat \u003d \"dd/MM/yyyy HH:mm\";","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"    private static final String invalidDateErrorMessage \u003d","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"            \"Invalid date format. Example format: dd/MM/yyyy or dd MMMM yyyy HH:mm (in 24 hour format).\";","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"     * Converts the format of a date string to a standardised format.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"     * @param dateString string to change format of.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"     * @return changed format.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if the string does not match any valid format.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"    public static String normaliseDateFormat(String dateString) throws InvalidDateFormatException {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"        String dayOfWeek \u003d checkForDayOfWeek(dateString);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"        if (dayOfWeek !\u003d \"\") {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"            return dayOfWeek;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"        String[] dateParts \u003d dateString.split(\"[ ,/\\\\-:]\");","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"        if (dateParts.length !\u003d 3 \u0026\u0026 dateParts.length !\u003d 5) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"        if (dateParts.length \u003d\u003d 3) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"            dateParts \u003d new String[] {dateParts[0], dateParts[1], dateParts[2], leadingZero, leadingZero};","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"        dateParts \u003d swapIfTimeInFront(dateParts);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"        dateParts \u003d swapIfYearInFront(dateParts);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"        String day \u003d normaliseDayFormat(dateParts);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        String month \u003d normaliseMonthFormat(dateParts);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"        String year \u003d normaliseYearFormat(dateParts);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"        String hour \u003d addLeadingZeroes(dateParts[3], hoursInDay);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"        String minute \u003d addLeadingZeroes(dateParts[4], minutesInHour);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"        return convertToCorrectFormat(day, month, year, hour, minute);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"     * Checks if the end date of an Event is after the start date.","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"     * @param inputParts array of task name, start date and end date.","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"     * @param isEvent if task is an Event","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException if end date is not after start date.","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"    public static void checkForValidEventDates(String[] inputParts, boolean isEvent)","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"            throws InvalidTaskOperationException {","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"        if (isEvent) {","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"            LocalDateTime start \u003d null;","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"            LocalDateTime end \u003d null;","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"            if (inputParts[1].contains(\"/\")) {","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"                start \u003d LocalDateTime.parse(inputParts[1], DateTimeFormatter.ofPattern(shortDateFormat));","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"            } else {","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"                start \u003d LocalDateTime.parse(inputParts[1], DateTimeFormatter.ofPattern(longDateFormat));","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"            if (inputParts[2].contains(\"/\")) {","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"                end \u003d LocalDateTime.parse(inputParts[2], DateTimeFormatter.ofPattern(shortDateFormat));","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"            } else {","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"                end \u003d LocalDateTime.parse(inputParts[2], DateTimeFormatter.ofPattern(longDateFormat));","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"            assert start !\u003d null;","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"            assert end !\u003d null;","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"            if (!end.isAfter(start)) {","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"                throw new InvalidTaskOperationException(","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"                        \"Your end time cannot be greater than your start time!\");","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"     * Checks and returns the correct date from a valid day of week.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"     * @param dateString string to change format of.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"     * @return correct date from a valid day of week.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"     *     If no valid day of week is found, return \"\".","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"    private static String checkForDayOfWeek(String dateString) {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"        HashMap\u003cString, Integer\u003e dayMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"mon\", 1);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"monday\", 1);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"tue\", 2);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"tuesday\", 2);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"wed\", 3);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"wednesday\", 3);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"thu\", 4);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"thursday\", 4);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"fri\", 5);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"friday\", 5);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"sat\", 6);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"saturday\", 6);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"sun\", 7);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"sunday\", 7);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"        assert dayMap.size() \u003d\u003d 14","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"                : \"There should be only 14 possible day formats (excluding capitalisation).\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-10T16:23:27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"        if (dayMap.containsKey(dateString.toLowerCase())) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"            int targetInt \u003d dayMap.get(dateString.toLowerCase());","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"            int currInt \u003d dayMap.get(LocalDate.now().getDayOfWeek().name().toLowerCase());","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"            // If target day of week is behind the current day of week","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"            if (targetInt \u003c currInt) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"                targetInt +\u003d daysInWeek;","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"            String[] dateParts \u003d LocalDate.now().plusDays(targetInt - currInt)","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Billy026"},"content":"                    .toString().split(\"[/ ,-]\");","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Billy026"},"content":"            String tempForSwitching \u003d dateParts[0];","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Billy026"},"content":"            dateParts[0] \u003d dateParts[2];","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Billy026"},"content":"            dateParts[2] \u003d tempForSwitching;","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Billy026"},"content":"            return dateParts[0] + slashSeparator + dateParts[1] + slashSeparator + dateParts[2] + midnight;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Billy026"},"content":"            return \"\";","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Billy026"},"content":"     * Checks if the first two strings best fit time or date, and swaps if it is time.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Billy026"},"content":"     * @param dateParts array of day, month, year, hour and minute.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Billy026"},"content":"     * @return array with day, month, year, hour, minute in that order.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if invalid date format given.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Billy026"},"content":"    private static String[] swapIfTimeInFront(String[] dateParts) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Billy026"},"content":"        String[] alphabeticParts \u003d searchForAlphabeticMonth(dateParts);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Billy026"},"content":"        if (alphabeticParts.length !\u003d 0) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Billy026"},"content":"            return alphabeticParts;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Billy026"},"content":"        boolean[] dateOrTimeFirst \u003d checkDateOrTimeFirst(dateParts);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Billy026"},"content":"        return swapParts(dateParts, dateOrTimeFirst);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Billy026"},"content":"     * Swaps the day and year indexes if year is at index 0.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Billy026"},"content":"     * @param dateParts array of day, month, year, hour and minute.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Billy026"},"content":"     * @return array of day, month, year, hour, minute in that order.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Billy026"},"content":"    private static String[] swapIfYearInFront(String[] dateParts) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Billy026"},"content":"        boolean isFirstLength4 \u003d dateParts[0].length() \u003d\u003d yearLongForm;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Billy026"},"content":"        boolean isMoreThanMaxDay \u003d Integer.parseInt(dateParts[0]) \u003e getMaximumDays(dateParts[1]);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Billy026"},"content":"        if (isFirstLength4 || isMoreThanMaxDay) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Billy026"},"content":"            return new String[] {dateParts[2], dateParts[1], dateParts[0], dateParts[3], dateParts[4]};","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Billy026"},"content":"            return dateParts;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Billy026"},"content":"     * Returns the day with a length of 2.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Billy026"},"content":"     * If the length of the day is 1, adds a leading zero.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Billy026"},"content":"     * @param dateParts array of day, month, year, hour, minute in that order.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Billy026"},"content":"     * @return day with a length of 2.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if the length of day is more than 2, or the day format is invalid.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Billy026"},"content":"    private static String normaliseDayFormat(String[] dateParts) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Billy026"},"content":"        if (dateParts[0].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Billy026"},"content":"            int day \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Billy026"},"content":"            if (day \u003c\u003d 0 || day \u003e getMaximumDays(dateParts[1])) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Billy026"},"content":"                throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Billy026"},"content":"            if (dateParts[0].length() \u003d\u003d 1) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Billy026"},"content":"                return leadingZero + dateParts[0];","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Billy026"},"content":"            } else if (dateParts[0].length() \u003d\u003d 2) {","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Billy026"},"content":"                return dateParts[0];","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Billy026"},"content":"            } else {","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Billy026"},"content":"                throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Billy026"},"content":"     * Returns the month from a valid format to the standardized format.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Billy026"},"content":"     * @param dateParts array of day, month, year, hour, minute in that order.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Billy026"},"content":"     * @return month in a standardized format.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if month is in an invalid format.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Billy026"},"content":"    private static String normaliseMonthFormat(String[] dateParts) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Billy026"},"content":"        if (dateParts[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Billy026"},"content":"            return convertNumericMonth(dateParts);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Billy026"},"content":"        } else if (dateParts[1].matches(\"[a-zA-Z]+\")) {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Billy026"},"content":"            return convertAlphabeticMonth(dateParts);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Billy026"},"content":"     * Returns year with a length of 4.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Billy026"},"content":"     * If the length of year is 2, converts year to a length of 4.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Billy026"},"content":"     * @param dateParts array of day, month, year, hour, minute in that order.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Billy026"},"content":"     * @return year with a length of 4.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if year is in an invalid format.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Billy026"},"content":"    private static String normaliseYearFormat(String[] dateParts) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Billy026"},"content":"        if (!dateParts[2].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Billy026"},"content":"        if (dateParts[2].length() \u003d\u003d yearLongForm) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Billy026"},"content":"            return dateParts[2];","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Billy026"},"content":"        } else if (dateParts[2].length() \u003d\u003d yearShortForm) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Billy026"},"content":"            if (Integer.parseInt(dateParts[2]) \u003c\u003d LocalDate.now().getYear() % 100) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Billy026"},"content":"                return currCenturyLead + dateParts[2];","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Billy026"},"content":"            } else {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Billy026"},"content":"                return prevCenturyLead + dateParts[2];","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Billy026"},"content":"     * Adds a leading zero to the string if it is length of 1.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Billy026"},"content":"     * @param str string to add leading zero to if needed.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Billy026"},"content":"     * @param max maximum value the string can be.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Billy026"},"content":"     * @return valid value with length of 2.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if str is not numeric or within valid range.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Billy026"},"content":"    private static String addLeadingZeroes(String str, int max) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Billy026"},"content":"        if (!str.matches(\"\\\\d+\") || Integer.parseInt(str) \u003e\u003d max) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Billy026"},"content":"        int length \u003d str.length();","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Billy026"},"content":"        if (length \u003d\u003d 1) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Billy026"},"content":"            return leadingZero + str;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Billy026"},"content":"        } else if (length \u003d\u003d 2) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Billy026"},"content":"            return str;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Billy026"},"content":"     * Sorts the array into the correct format based on if and where there is an alphabetic month.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Billy026"},"content":"     * @param dateParts array of day, month, year, hour, minute.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Billy026"},"content":"     * @return sorted array if alphabetic month found.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Billy026"},"content":"     *     If there is no alphabetic month, returns an empty array.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Billy026"},"content":"    private static String[] searchForAlphabeticMonth(String[] dateParts) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Billy026"},"content":"        int index \u003d -1;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Billy026"},"content":"        for (int i \u003d 0; i \u003c dateParts.length; i++) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Billy026"},"content":"            if (dateParts[i].matches(\"[a-zA-Z]+\")) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Billy026"},"content":"                index \u003d i;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Billy026"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Billy026"},"content":"            return dateParts;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Billy026"},"content":"        } else if (index \u003d\u003d 3) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Billy026"},"content":"            return new String[] {dateParts[2], dateParts[3], dateParts[4], dateParts[0], dateParts[1]};","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Billy026"},"content":"            return new String[0];","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Billy026"},"content":"     * Checks if the first two string values represent date or time.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Billy026"},"content":"     * @param dateParts array of day, month, year, hour, minute.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Billy026"},"content":"     * @return boolean of whether the values represent date or time.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if the array of strings are not numeric.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Billy026"},"content":"    private static boolean[] checkDateOrTimeFirst(String[] dateParts) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Billy026"},"content":"        int[] numericParts \u003d ConversionManager.convertToNumerics(dateParts, invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Billy026"},"content":"        Function\u003cInteger, Boolean\u003e checkIfValidMinute \u003d m -\u003e m \u003e\u003d 0 \u0026\u0026 m \u003c minutesInHour;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Billy026"},"content":"        Function\u003cInteger, Boolean\u003e checkIfValidHour \u003d h -\u003e h \u003e\u003d 0 \u0026\u0026 h \u003c hoursInDay;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Billy026"},"content":"        Function\u003cInteger, Boolean\u003e checkIfValidMonth \u003d m -\u003e m \u003e 0 \u0026\u0026 m \u003c\u003d monthsInYear;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Billy026"},"content":"        boolean isDateFirst \u003d checkIfValidMinute.apply(numericParts[4])","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Billy026"},"content":"                \u0026\u0026 checkIfValidHour.apply(numericParts[3]) \u0026\u0026 checkIfValidMonth.apply(numericParts[1]);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Billy026"},"content":"        boolean isTimeFirst \u003d checkIfValidMinute.apply(numericParts[1])","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Billy026"},"content":"                \u0026\u0026 checkIfValidHour.apply(numericParts[0]) \u0026\u0026 checkIfValidMonth.apply(numericParts[3]);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Billy026"},"content":"        return new boolean[] {isDateFirst, isTimeFirst};","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Billy026"},"content":"     * Swaps values in the string of array if time is before date.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Billy026"},"content":"     * @param dateParts array of day, month, year, hour, minute.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Billy026"},"content":"     * @param firsts boolean of whether the values represent date or time.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Billy026"},"content":"     * @return array of day, month, year, hour, minute in that order.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if the first two strings are neither date nor time.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Billy026"},"content":"    private static String[] swapParts(String[] dateParts, boolean[] firsts) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Billy026"},"content":"        BiFunction\u003cInteger, Integer, Boolean\u003e checkIfValidDay \u003d (d, m) -\u003e d \u003e 0 \u0026\u0026 d \u003c\u003d m;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Billy026"},"content":"        if (!firsts[0] \u0026\u0026 !firsts[1]) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Billy026"},"content":"        int index \u003d (firsts[0]) ? 1 : 3;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Billy026"},"content":"        int datePos1 \u003d (firsts[0]) ? Integer.parseInt(dateParts[0]) : Integer.parseInt(dateParts[2]);","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Billy026"},"content":"        int datePos2 \u003d (firsts[0]) ? Integer.parseInt(dateParts[2]) : Integer.parseInt(dateParts[4]);;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Billy026"},"content":"        boolean datePos1Valid \u003d checkIfValidDay.apply(datePos1, getMaximumDays(dateParts[index]));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Billy026"},"content":"        boolean datePos2Valid \u003d checkIfValidDay.apply(datePos2, getMaximumDays(dateParts[index]));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Billy026"},"content":"        if (!datePos1Valid \u0026\u0026 !datePos2Valid) {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Billy026"},"content":"        if (firsts[0]) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Billy026"},"content":"            return dateParts;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Billy026"},"content":"            assert firsts[1] \u003d\u003d true;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Billy026"},"content":"            return new String[] {dateParts[2], dateParts[3], dateParts[4], dateParts[0], dateParts[1]};","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Billy026"},"content":"     * Returns numeric month with a length of 2.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Billy026"},"content":"     * If the length of numeric month is 1, adds a leading zero.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Billy026"},"content":"     * @param dateParts array of day, month, year, hour, minute in that order.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Billy026"},"content":"     * @return month with a length of 2.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if month is before day.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Billy026"},"content":"    private static String convertNumericMonth(String[] dateParts) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Billy026"},"content":"        int month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Billy026"},"content":"        if (month \u003e monthsInYear) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Billy026"},"content":"                \"Sorry, we have not implemented MM/dd/yy format yet.\");","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Billy026"},"content":"        } else if (month \u003c\u003d 0) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Billy026"},"content":"        } else if (dateParts[1].length() \u003d\u003d 1) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Billy026"},"content":"            return leadingZero + dateParts[1];","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Billy026"},"content":"            return dateParts[1];","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Billy026"},"content":"     * Standardizes alphabetic month to a full alphabetic format.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Billy026"},"content":"     * @param dateParts array of day, month, year, hour, minute in that order.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Billy026"},"content":"     * @return month in a full alphabetic format.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if month is in an invalid format.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"Billy026"},"content":"    private static String convertAlphabeticMonth(String[] dateParts) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"Billy026"},"content":"        int monthIndex \u003d getMonthIndex(dateParts[1]);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"Billy026"},"content":"        return getAlphabeticMonth(monthIndex);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"Billy026"},"content":"     * Gets the index of the given month.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"Billy026"},"content":"     * @param month month to check for.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"Billy026"},"content":"     * @return index of month.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException invalid month format given.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"Billy026"},"content":"    private static int getMonthIndex(String month) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"Billy026"},"content":"        HashMap\u003cString, Integer\u003e monthMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"jan\", 1);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"january\", 1);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"feb\", 2);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"february\", 2);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"mar\", 3);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"march\", 3);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"apr\", 4);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"april\", 4);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"may\", 5);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"jun\", 6);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"june\", 6);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"jul\", 7);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"july\", 7);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"aug\", 8);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"august\", 8);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"sep\", 9);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"september\", 9);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"oct\", 10);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"october\", 10);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"nov\", 11);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"november\", 11);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"dec\", 12);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"Billy026"},"content":"        monthMap.put(\"december\", 12);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"Billy026"},"content":"        assert monthMap.size() \u003d\u003d 23","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"Billy026"},"content":"                : \"There should be only 23 possible month formats (excluding capitalisation).\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"Billy026"},"content":"        if (monthMap.containsKey(month.toLowerCase())) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"Billy026"},"content":"            return monthMap.get(month.toLowerCase());","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"Billy026"},"content":"     * Returns the MMMM format of a month based on the given index.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"Billy026"},"content":"     * @param monthIndex index of month to return.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"Billy026"},"content":"     * @return MMMM format of month.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"Billy026"},"content":"    private static String getAlphabeticMonth(int monthIndex) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"Billy026"},"content":"        HashMap\u003cInteger, String\u003e monthMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"Billy026"},"content":"        monthMap.put(1, \"January\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"Billy026"},"content":"        monthMap.put(2, \"February\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"Billy026"},"content":"        monthMap.put(3, \"March\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"Billy026"},"content":"        monthMap.put(4, \"April\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"Billy026"},"content":"        monthMap.put(5, \"May\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"Billy026"},"content":"        monthMap.put(6, \"June\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"Billy026"},"content":"        monthMap.put(7, \"July\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"Billy026"},"content":"        monthMap.put(8, \"August\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"Billy026"},"content":"        monthMap.put(9, \"September\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"Billy026"},"content":"        monthMap.put(10, \"October\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"Billy026"},"content":"        monthMap.put(11, \"November\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"Billy026"},"content":"        monthMap.put(12, \"December\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"Billy026"},"content":"        assert monthMap.size() \u003d\u003d 12","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"Billy026"},"content":"            : \"There should be only 12 possible month values.\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"Billy026"},"content":"        return monthMap.get(monthIndex);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"Billy026"},"content":"     * Gets the maximum number of days in the given month.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"Billy026"},"content":"     * @param month month to get the maximum number of days from.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"Billy026"},"content":"     * @return maximum number of days.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if month is not numeric.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"Billy026"},"content":"    private static int getMaximumDays(String month) throws InvalidDateFormatException {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"Billy026"},"content":"        final int february \u003d 2;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"Billy026"},"content":"        Integer numericMonth \u003d null;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"Billy026"},"content":"        if (month.matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"Billy026"},"content":"            try {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"Billy026"},"content":"                numericMonth \u003d Integer.parseInt(month);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"Billy026"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"Billy026"},"content":"                throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"Billy026"},"content":"        } else if (month.matches(\"[a-zA-Z]+\")) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"Billy026"},"content":"            numericMonth \u003d getMonthIndex(month);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(invalidDateErrorMessage);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"Billy026"},"content":"        assert numericMonth !\u003d null;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"Billy026"},"content":"        if (numericMonth \u003d\u003d february) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"Billy026"},"content":"            return daysInFebruary;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"Billy026"},"content":"        } else if (isMonth30Days(numericMonth)) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"Billy026"},"content":"            return daysInShorterMonth;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"Billy026"},"content":"            return daysInLongerMonth;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"Billy026"},"content":"     * Checks if the month has a maximum of 30 days.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"Billy026"},"content":"     * @param month month to check.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"Billy026"},"content":"     * @return whether the month has a maximum of 30 days.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"Billy026"},"content":"    private static boolean isMonth30Days(int month) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"Billy026"},"content":"        final int[] monthsWith20Days \u003d {4, 6, 9, 11};","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"Billy026"},"content":"        for (Integer m : monthsWith20Days) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"Billy026"},"content":"            if (month \u003d\u003d m) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"Billy026"},"content":"                return true;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"Billy026"},"content":"        return false;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"Billy026"},"content":"     * Combines day, month and year to a standardized format.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"Billy026"},"content":"     * Format is based on whether month is numeric or alphabetic.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"Billy026"},"content":"     * @param day day to combine.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"Billy026"},"content":"     * @param month month to combine.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"Billy026"},"content":"     *     Determines the standardized format.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"Billy026"},"content":"     * @param year year to combine.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"Billy026"},"content":"     * @param hour hour to combine.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"Billy026"},"content":"     * @param minute minute to combine.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"Billy026"},"content":"     * @return date and time in a standardized format.","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"Billy026"},"content":"    private static String convertToCorrectFormat(String day, String month, String year,","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"Billy026"},"content":"            String hour, String minute) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"Billy026"},"content":"        if (month.matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"Billy026"},"content":"            return day + slashSeparator + month + slashSeparator + year + spaceSeparator + hour","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"Billy026"},"content":"                    + colonSeparator + minute;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"Billy026"},"content":"            return day + spaceSeparator + month + spaceSeparator + year + spaceSeparator + hour","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"Billy026"},"content":"                    + colonSeparator + minute;","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"Billy026"},"content":"     * Checks if a deadline is due on the given date.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"Billy026"},"content":"     * @param deadline deadline to check.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"Billy026"},"content":"     * @param date due date.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"Billy026"},"content":"     * @param withTime whether time should be considered.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"Billy026"},"content":"     * @return whether deadline is due on the given date.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"Billy026"},"content":"    public static boolean isSameDay(String deadline, LocalDateTime date, boolean withTime) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"Billy026"},"content":"        if (deadline.contains(slashSeparator)) {","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"Billy026"},"content":"            LocalDateTime targetDate \u003d","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"Billy026"},"content":"                    LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(shortDateFormat));","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"Billy026"},"content":"            if (withTime) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"Billy026"},"content":"                return targetDate.equals(date);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"Billy026"},"content":"            } else {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"Billy026"},"content":"                return targetDate.toLocalDate().equals(date.toLocalDate());","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"Billy026"},"content":"        } else if (deadline.contains(spaceSeparator)) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"Billy026"},"content":"            LocalDateTime targetDate \u003d","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"Billy026"},"content":"                    LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(longDateFormat));","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"Billy026"},"content":"            if (withTime) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"Billy026"},"content":"                return targetDate.equals(date);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"Billy026"},"content":"            } else {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"Billy026"},"content":"                return targetDate.toLocalDate().equals(date.toLocalDate());","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"Billy026"},"content":"            return false;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-17T22:01:18","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false}],"authorContributionMap":{"Billy026":580}},{"path":"src/main/java/Bob/managers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package Bob.managers;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import Bob.commands.CreateCommand;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import Bob.commands.DeleteCommand;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import Bob.commands.FindCommand;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import Bob.commands.ListCommand;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import Bob.commands.MarkCommand;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import Bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":" * ","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":" * @param taskManager handles operations on the task list.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":" * @param Actions list of valid user commands.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"public class Parser {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    // List of valid user commands","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    private enum Actions {","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        TODO, DEADLINE, EVENT, DELETE, LIST, FIND, MARK, UNMARK","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of Parser.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     * @param filePath path of file to save to.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    public Parser(String filePath) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(filePath);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"     * Creates and executes the relevant user command.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"     * @param input user commanded separated by spaces.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException when an invalid command has been inputted.","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"    public void parseCommand(String[] input) throws InvalidCommandException {","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"        // Converts user input to a valid command","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"        Actions command \u003d this.convertToActions(input[0]);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"        switch (command) {","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"            case TODO:","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"                CreateCommand todoCommand \u003d new CreateCommand(input, \"T\", ","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"                    \"Please give a name to the ToDo task.\");","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"                todoCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"            case DEADLINE:","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"                CreateCommand deadlineCommand \u003d new CreateCommand(input, \"D\", ","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"                        \"You did not provide a date or time.\\n\" +","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"                        \"    Please format your input as: deadline \u003ctask name\u003e /by \u003cdate\u003e.\");","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"                deadlineCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"            case EVENT:","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"                CreateCommand eventCommand \u003d new CreateCommand(input, \"E\", ","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"                        \"You did not provide either a start date or an end date.\\n\" +","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"                        \"    Please format your input as: event \u003ctask name\u003e /from \u003cdate\u003e /to \u003cdate\u003e.\");","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"                eventCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"            case DELETE:","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"                DeleteCommand deleteCommand \u003d new DeleteCommand(input);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"                deleteCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"            case LIST:","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"                ListCommand listCommand \u003d new ListCommand(input);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"                listCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"            case FIND:","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"                FindCommand findCommand \u003d new FindCommand(input);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"                findCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"            case MARK:","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"                MarkCommand markCommand \u003d new MarkCommand(input, true);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"                markCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"            case UNMARK:","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"                MarkCommand unmarkCommand \u003d new MarkCommand(input, false);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"                unmarkCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"     * Propogates displayIncomingDeadlines to taskManager.","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"    public void displayIncomingDeadlines() {","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"        this.taskManager.displayIncomingDeadlines();","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"     * Converts the front of user input to a user command.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"     * @param str string to convert into user command.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"     * @return corresponding user command.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException when an invalid user command is inputted.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"    private Actions convertToActions(String str) throws InvalidCommandException{","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"        HashMap\u003cString, Actions\u003e actionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"todo\", Actions.TODO);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"deadline\", Actions.DEADLINE);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"event\", Actions.EVENT);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"delete\", Actions.DELETE);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"list\", Actions.LIST);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"find\", Actions.FIND);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"mark\", Actions.MARK);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"unmark\", Actions.UNMARK);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"        if (actionMap.containsKey(str)) {","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"            return actionMap.get(str);","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(\"I don\u0027t understand.\");","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false}],"authorContributionMap":{"Billy026":116}},{"path":"src/main/java/Bob/managers/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package Bob.managers;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import Bob.tasks.Task;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":" * Handles storing and loading of tasks into hard disk.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":" * ","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":" * @param filePath path of file to save to.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"public class Storage {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    // File path for saving tasks","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    private String filePath;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of Storage.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     * @param filePath path of file to save to.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"     * Saves a task to data file.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"     * @param newTask task to save.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"    public void saveTask(Task newTask) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"        file.getParentFile().mkdirs(); // Ensures parent directory exists","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"        try(BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, true))) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"            writer.write(newTask.toString());","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"            writer.newLine();","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"    There was a problem saving the task: \" + e.getMessage());","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"     * Loads tasks from data file into task list.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"     * @param saveToTaskList task adding function in TaskManager.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"    public void loadTasks(Consumer\u003cTask\u003e saveToTaskList) {","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"        ","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"        try(BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"            String line;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"                try {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"                    saveToTaskList.accept(Task.getFromSaveFormat(line));","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"                } catch (Exception e) { // Handle corrupted task","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"                    System.err.println(\"    There was a problem loading the task: \" + e.getMessage());","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    Saved task list found.\");","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    No saved task list found.\");","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"    There was a problem loading the file: \" + e.getMessage());","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"     * Rewrites the task list to the data file.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"    public void rewriteTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"        try(BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"                writer.write(task.toString());","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"    There was a problem saving the task: \" + e.getMessage());","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false}],"authorContributionMap":{"Billy026":92}},{"path":"src/main/java/Bob/managers/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.managers;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import java.util.function.Function;","lastModifiedDate":"2025-02-12T15:39:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import bob.tasks.Deadline;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import bob.tasks.Event;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import bob.tasks.TaskWithDeadline;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import bob.tasks.ToDo;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import javafx.util.Pair;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":" * Represents the storage and management of the list of tasks.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    private static final String todoShortFormat \u003d \"T\";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    private static final String deadlineShortFormat \u003d \"D\";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    private static final String eventShortFormat \u003d \"E\";","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of TaskManager.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     * @param filePath path of file to save to.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    public TaskManager(String filePath) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        this.storage.loadTasks((Task t) -\u003e this.tasks.add(t));","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"     * Returns size of the list of tasks.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"     * @return size of list of tasks.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"    public int getSize() {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"     * Adds a task based on taskType and params. Also saves task into hard disk.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"     * @param taskValues parameters of task.","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"     * @return created task.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException if invalid task types given.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"    public Task addTask(String taskType, String[] taskValues) throws InvalidTaskOperationException {","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"        if (taskType.equals(todoShortFormat)) {","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            task \u003d new ToDo(taskValues[0]);","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        } else if (taskType.equals(deadlineShortFormat)) {","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"            task \u003d new Deadline(taskValues[0], taskValues[1]);","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"        } else if (taskType.equals(eventShortFormat)) {","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"            task \u003d new Event(taskValues[0], taskValues[1], taskValues[2]);","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"                \"You gave the wrong task type. I can only recognise T, D or E.\");","lastModifiedDate":"2025-02-05T22:08:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"        assert task !\u003d null : \"Task should not be null.\";","lastModifiedDate":"2025-02-10T16:23:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-10T16:23:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"        checkForExistingTasks(task);","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"        this.storage.saveTask(task);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"        return task;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"     * Returns task at given index.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"     * @param index index of requested task.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"     * @return task at index.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"     * Removes task at given index from list of tasks.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"     * @param index index of task to remove.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"        this.storage.rewriteTaskList(this.tasks);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"     * Marks or unmarks a task.","lastModifiedDate":"2025-02-21T15:15:55","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"     * When mark is true, mark task. Else unmark task.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"     * @param index index of task to edit.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"     * @return edited task.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException if invalid index given.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"    public Task markTask(int index, boolean isCheck) throws InvalidTaskOperationException {","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"        Task task \u003d this.getTask(index);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"        assert task !\u003d null : \"Task should not be null.\";","lastModifiedDate":"2025-02-10T16:23:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"        if (isCheck) {","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"            task.markTask();","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"            task.unmarkTask();","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"        this.storage.rewriteTaskList(this.tasks);","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"        return task;","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"     * Returns a list of tasks containing stringToCheck in their names.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"     * @param stringToCheck string to check for.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"     * @return list of matching tasks.","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"    public List\u003cTask\u003e getMatchingTasks(String stringToCheck) {","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"        this.tasks.stream()","lastModifiedDate":"2025-02-12T12:10:01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"                  .filter((t) -\u003e t.contains(stringToCheck))","lastModifiedDate":"2025-02-12T12:10:01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"                  .forEach((t) -\u003e matchingTasks.add(t));","lastModifiedDate":"2025-02-12T12:10:01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"        return matchingTasks;","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"     * Displays all Deadlines and Events with deadlines due today.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"    public String displayIncomingDeadlines() {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"        Function\u003cTaskWithDeadline, Boolean\u003e isIncomingDeadline \u003d","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"                (d) -\u003e d.isTaskType(deadlineShortFormat) \u0026\u0026 d.isSameDay(LocalDateTime.now(), false);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"        Function\u003cTaskWithDeadline, Boolean\u003e isIncomingEvent \u003d","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"                (e) -\u003e e.isTaskType(eventShortFormat) \u0026\u0026 e.isSameDay(LocalDateTime.now(), false);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"        Pair\u003cList\u003cTaskWithDeadline\u003e, List\u003cTaskWithDeadline\u003e\u003e incomingLists \u003d","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"                getFilteredLists(isIncomingDeadline, isIncomingEvent);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Billy026"},"content":"        return concatenateTasks(incomingLists, \"Here\u0027s today\u0027s incoming tasks:\\n\",","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Billy026"},"content":"                \"You...don\u0027t have any incoming tasks today.\\n\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Billy026"},"content":"     * Displays all Deadlines and Events with deadlines the same as the given date.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Billy026"},"content":"     * @param pair pair of date to compare with and whether time should be considered.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Billy026"},"content":"     * @return output to be displayed.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Billy026"},"content":"    public String displaySameDeadlines(Pair\u003cLocalDateTime, Boolean\u003e pair) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Billy026"},"content":"        Function\u003cTaskWithDeadline, Boolean\u003e isSameDeadline \u003d","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Billy026"},"content":"                (d) -\u003e d.isTaskType(deadlineShortFormat) \u0026\u0026 d.isSameDay(pair.getKey(), pair.getValue());","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Billy026"},"content":"        Function\u003cTaskWithDeadline, Boolean\u003e isSameEvent \u003d","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Billy026"},"content":"                (e) -\u003e e.isTaskType(eventShortFormat) \u0026\u0026 e.isSameDay(pair.getKey(), pair.getValue());","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Billy026"},"content":"        Pair\u003cList\u003cTaskWithDeadline\u003e, List\u003cTaskWithDeadline\u003e\u003e lists \u003d","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Billy026"},"content":"                getFilteredLists(isSameDeadline, isSameEvent);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Billy026"},"content":"        return concatenateTasks(lists, \"Here\u0027s the tasks due at that date:\\n\",","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Billy026"},"content":"                \"You...don\u0027t have any tasks due that day!\");","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Billy026"},"content":"     * Returns output depending on whether the list of tasks is empty.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Billy026"},"content":"     * @return Output depending on whether the list of tasks is empty.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Billy026"},"content":"    public String getSavedListMessage() {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Billy026"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Billy026"},"content":"            return \"There\u0027s...no tasks right now.\";","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Billy026"},"content":"            return \"Huh, seems like you already have a saved task list.\";","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Billy026"},"content":"     * Gets the lists with matching due dates.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Billy026"},"content":"     * @param deadlineFunction function to filter deadlines by.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Billy026"},"content":"     * @param eventFunction function to filter events by.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Billy026"},"content":"     * @return list of matching deadlines and list of matching events.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Billy026"},"content":"    private Pair\u003cList\u003cTaskWithDeadline\u003e, List\u003cTaskWithDeadline\u003e\u003e getFilteredLists(","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Billy026"},"content":"            Function\u003cTaskWithDeadline, Boolean\u003e deadlineFunction,","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Billy026"},"content":"            Function\u003cTaskWithDeadline, Boolean\u003e eventFunction) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Billy026"},"content":"        List\u003cTaskWithDeadline\u003e deadlineList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Billy026"},"content":"        List\u003cTaskWithDeadline\u003e eventList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Billy026"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Billy026"},"content":"            if (task.isTaskType(todoShortFormat)) {","lastModifiedDate":"2025-02-12T17:45:48","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Billy026"},"content":"                continue;","lastModifiedDate":"2025-02-12T15:39:10","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T15:39:10","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Billy026"},"content":"            TaskWithDeadline filteredTask \u003d (TaskWithDeadline) task;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T15:39:10","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Billy026"},"content":"            if (deadlineFunction.apply(filteredTask)) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Billy026"},"content":"                deadlineList.add(filteredTask);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Billy026"},"content":"            } else if (eventFunction.apply(filteredTask)) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Billy026"},"content":"                eventList.add(filteredTask);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Billy026"},"content":"        return new Pair\u003cList\u003cTaskWithDeadline\u003e, List\u003cTaskWithDeadline\u003e\u003e(deadlineList, eventList);","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Billy026"},"content":"     * Concatenates all matching tasks to produce output message.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Billy026"},"content":"     * @param list pair of lists of matching tasks","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Billy026"},"content":"     * @param headingString first string to display if matching tasks found.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Billy026"},"content":"     * @param emptyString string to display if no matching tasks found.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Billy026"},"content":"     * @return output with all matching tasks.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Billy026"},"content":"     *     If there are no matching tasks, indicate that there are no matching tasks.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Billy026"},"content":"    private String concatenateTasks(Pair\u003cList\u003cTaskWithDeadline\u003e, List\u003cTaskWithDeadline\u003e\u003e list,","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Billy026"},"content":"            String headingString, String emptyString) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Billy026"},"content":"        List\u003cTaskWithDeadline\u003e deadlineList \u003d list.getKey();","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Billy026"},"content":"        List\u003cTaskWithDeadline\u003e eventList \u003d list.getValue();","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Billy026"},"content":"        if (!deadlineList.isEmpty() || !eventList.isEmpty()) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Billy026"},"content":"            StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Billy026"},"content":"            buffer.append(headingString);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Billy026"},"content":"            deadlineList.stream()","lastModifiedDate":"2025-02-12T12:10:01","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Billy026"},"content":"                        .forEach((t) -\u003e buffer.append(t.toString() + \"\\n\"));","lastModifiedDate":"2025-02-12T12:10:01","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Billy026"},"content":"            eventList.stream()","lastModifiedDate":"2025-02-12T12:10:01","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Billy026"},"content":"                     .forEach((t) -\u003e buffer.append(t.toString() + \"\\n\"));","lastModifiedDate":"2025-02-12T12:10:01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Billy026"},"content":"            return buffer.toString();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Billy026"},"content":"            return emptyString;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Billy026"},"content":"     * Checks if task already exists in the list of tasks.","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Billy026"},"content":"     * @param task task to check.","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException if task already exists.","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Billy026"},"content":"    private void checkForExistingTasks(Task task) throws InvalidTaskOperationException {","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Billy026"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Billy026"},"content":"            if (t.toString().substring(2).equals(task.toString().substring(2))) {","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Billy026"},"content":"                throw new InvalidTaskOperationException(\"Sorry, that task already exists.\");","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false}],"authorContributionMap":{"Billy026":256}},{"path":"src/main/java/Bob/managers/UiManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.managers;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-23T16:00:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-23T16:00:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import bob.parser.Parser;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":" * Manages all functions related to the UI.","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"public class UiManager {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    // File path to save in hard disk","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"    private static final String FILE_PATH \u003d Paths.get(\"data\", \"bob.txt\").toString();","lastModifiedDate":"2025-02-23T16:00:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    private final Parser parser \u003d new Parser(FILE_PATH);","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     * Propogates displayIncomingDeadlines to parser.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"     * @return string returned by displayIncomingDeadlines.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    public String getIncomingDeadlines() {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        return this.parser.displayIncomingDeadlines();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * Executes the user\u0027s command.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     * @param input user input.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     * @return string with the output of the user input.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"    public String executeUserCommand(String input) {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"            return this.parser.parseCommand(inputArray);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"            return e.getMessage() + \"\\n\";","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"     * Propogates getSavedListMessage to parser.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"     * @return output returned by getSavedListMessage.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"    public String getSavedListMessage() {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"        return this.parser.getSavedListMessage();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:06:52","isFullCredit":false}],"authorContributionMap":{"Billy026":49}},{"path":"src/main/java/Bob/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.parser;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import bob.commands.CreateCommand;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import bob.commands.DeleteCommand;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import bob.commands.FindCommand;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import bob.commands.GetDueDateCommand;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import bob.commands.HelpCommand;","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import bob.commands.ListCommand;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import bob.commands.MarkCommand;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"public class Parser {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    protected enum Actions {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"        TODO, DEADLINE, EVENT, DELETE, LIST, GETDUEDATE, FIND, MARK, UNMARK, HELP","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of Parser.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     * @param filePath path of file to save to.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    public Parser(String filePath) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(filePath);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"     * Creates and executes the relevant user command.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"     * @param input user commanded separated by spaces.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException when an invalid command has been inputted.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"    public String parseCommand(String[] input) throws InvalidCommandException {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"        Actions command \u003d this.convertToActions(input[0]);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"        switch (command) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"        case TODO:","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"            CreateCommand todoCommand \u003d new CreateCommand(input, \"T\",","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"                \"Please give a name to the ToDo task.\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"            return todoCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"        case DEADLINE:","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"            CreateCommand deadlineCommand \u003d new CreateCommand(input, \"D\",","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"                    \"You did not provide a date or time.\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"                    + \"    Please format your input as: deadline \u003ctask name\u003e /by \u003cdate\u003e.\");","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"            return deadlineCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"        case EVENT:","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"            CreateCommand eventCommand \u003d new CreateCommand(input, \"E\",","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"                    \"You did not provide either a start date or an end date.\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"                    + \"    Please format your input as: event \u003ctask name\u003e /from \u003cdate\u003e /to \u003cdate\u003e.\");","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"            return eventCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"        case DELETE:","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"            DeleteCommand deleteCommand \u003d new DeleteCommand(input);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"            return deleteCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"        case LIST:","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"            ListCommand listCommand \u003d new ListCommand(input);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"            return listCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"        case GETDUEDATE:","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"            GetDueDateCommand getDueDateCommand \u003d new GetDueDateCommand(input);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"            return getDueDateCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        case FIND:","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"            FindCommand findCommand \u003d new FindCommand(input);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"            return findCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"        case MARK:","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"            MarkCommand markCommand \u003d new MarkCommand(input, true);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"            return markCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"        case UNMARK:","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"            MarkCommand unmarkCommand \u003d new MarkCommand(input, false);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"            return unmarkCommand.exec(this.taskManager);","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"        case HELP:","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"            HelpCommand helpCommand \u003d new HelpCommand(input);","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"            return helpCommand.exec(taskManager);","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"        default:","lastModifiedDate":"2025-02-12T18:00:13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"            return \"\";","lastModifiedDate":"2025-02-12T18:00:13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"     * Propogates displayIncomingDeadlines to taskManager.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"     * @return output from taskManager\u0027s displayIncomingDeadlines.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"    public String displayIncomingDeadlines() {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"        return this.taskManager.displayIncomingDeadlines();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"     * Propogates getSavedListMessage to taskManager.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"     * @return output from taskManager\u0027s getSavedListMessage.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"    public String getSavedListMessage() {","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"        return this.taskManager.getSavedListMessage();","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"     * Converts the front of user input to a user command.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"     * @param str string to convert into user command.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"     * @return corresponding user command.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException when an invalid user command is inputted.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"    Actions convertToActions(String str) throws InvalidCommandException {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"        HashMap\u003cString, Actions\u003e actionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"todo\", Actions.TODO);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"deadline\", Actions.DEADLINE);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"event\", Actions.EVENT);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"delete\", Actions.DELETE);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"getDueDate\", Actions.GETDUEDATE);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"list\", Actions.LIST);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"find\", Actions.FIND);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"mark\", Actions.MARK);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"unmark\", Actions.UNMARK);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"        actionMap.put(\"help\", Actions.HELP);","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"        assert actionMap.size() \u003d\u003d 10 : \"There should be only 10 valid actions.\";","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-10T16:23:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"        if (actionMap.containsKey(str)) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"            return actionMap.get(str);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(\"I don\u0027t understand.\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false}],"authorContributionMap":{"Billy026":129}},{"path":"src/main/java/Bob/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.storage;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import java.util.List;","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":" * Handles storing and loading of tasks into hard disk.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"public class Storage {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    private String filePath;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"     * Primary constructor of Storage.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"     * @param filePath path of file to save to.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     * Saves a task to data file.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"     * @param newTask task to save.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    public void saveTask(Task newTask) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"        file.getParentFile().mkdirs(); // Ensures parent directory exists","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, true))) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"            writer.write(newTask.toString());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"            writer.newLine();","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"There was a problem saving the task: \" + e.getMessage());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"     * Loads tasks from data file into task list.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"     * @param saveToTaskList task adding function in TaskManager.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"    public void loadTasks(Consumer\u003cTask\u003e saveToTaskList) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"            String line;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"                try {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"                    saveToTaskList.accept(Task.getFromSaveFormat(line));","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"                } catch (Exception e) { // Handle corrupted task","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"                    System.err.println(\"There was a problem loading the task: \" + e.getMessage());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"There was a problem locating the file: \" + e.getMessage());","lastModifiedDate":"2025-02-12T17:54:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"There was a problem loading the file: \" + e.getMessage());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"     * Rewrites the task list to the data file.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"    public void rewriteTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"                writer.write(task.toString());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"There was a problem saving the task: \" + e.getMessage());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false}],"authorContributionMap":{"Billy026":88}},{"path":"src/main/java/Bob/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.tasks;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":" * Represents a task with only one due date.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"public class Deadline extends TaskWithDeadline {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"     * Constructor for newly added Deadlines.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     * @param by date to finish by.","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"    public Deadline(String taskName, String by) {","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"        super(taskName, \"D\", by);","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     * Constructor for Deadlines loaded from save file.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"     * @param by date to finish by.","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"     * @param isCompleted completion status of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    public Deadline(String taskName, String by, boolean isCompleted) {","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"        super(taskName, \"D\", by, isCompleted);","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        String[] parts \u003d super.toString().split(\",\");","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        return parts[0] + \" | by: \" + parts[1];","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false}],"authorContributionMap":{"Billy026":33}},{"path":"src/main/java/Bob/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.tasks;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":" * Represents a task with a start and end date.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"public class Event extends TaskWithDeadline {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    private String end;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"     * Constructor for newly added Events.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * @param start date event will start.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     * @param end date event will end.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"    public Event(String taskName, String start, String end) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"        super(taskName, \"E\", start);","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"     * Constructor for Events loaded from save file.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     * @param start date event will start.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * @param end date event will end.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     * @param isCompleted completion status of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    public Event(String taskName, String start, String end, boolean isCompleted) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        super(taskName, \"E\", start, isCompleted);","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        String[] parts \u003d super.toString().split(\",\");","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"        return parts[0] + \" | from: \" + parts[1] + \" | to: \" + this.end;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false}],"authorContributionMap":{"Billy026":39}},{"path":"src/main/java/Bob/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.tasks;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":" * Represents a task with a name and completion status.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"    private String taskName;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    private String taskType;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"    private boolean isCompleted;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     * Constructor for newly added tasks.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    public Task(String taskName, String taskType) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * Constructor for tasks loaded from save file.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     * @param isCompleted completion status of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    public Task(String taskName, String taskType, boolean isCompleted) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"     * Sets completion status to true.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException when task has already been completed.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"    public void markTask() throws InvalidTaskOperationException {","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(\"Task has already been completed.\");","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"            this.isCompleted \u003d true;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"     * Sets completion status to false.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException when task has not been completed.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"    public void unmarkTask() throws InvalidTaskOperationException {","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"        if (!this.isCompleted) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(\"Task has still not been completed.\");","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            this.isCompleted \u003d false;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"     * Converts a line from save file to a Task object.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"     * @param line line from save file.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"     * @return saved Task object.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"     * @throws IllegalArgumentException when save format is invalid.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"    public static Task getFromSaveFormat(String line) throws IllegalArgumentException {","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"            throw new IllegalArgumentException(\"Invalid save format: \" + line);","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"        boolean isCompleted \u003d parts[0].trim().equals(\"[X]\");","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"        String taskType \u003d parts[1].trim();","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"        String taskName \u003d parts[2].trim();","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"        switch (taskType) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"        case \"T\":","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"            return new ToDo(taskName, isCompleted);","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"        case \"D\":","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"            String by \u003d parts[3].trim().replaceFirst(\"by: \", \"\");","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"            return new Deadline(taskName, by, isCompleted);","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"        case \"E\":","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"            String start \u003d parts[3].trim().replaceFirst(\"from: \", \"\");","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"            String end \u003d parts[4].trim().replaceFirst(\"to: \", \"\");","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"            return new Event(taskName, start, end, isCompleted);","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"        default:","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"            throw new IllegalArgumentException(\"Invalid task type: \" + taskType);","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"     * Returns whether task is the declared task type.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"     * @param taskType declared task type.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"     * @return if task is the declared task type.","lastModifiedDate":"2025-02-03T19:53:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"    public boolean isTaskType(String taskType) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"        return this.taskType.equals(taskType);","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"     * Returns if inputted string is in task name.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"     * @param str string to check for.","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"     * @return if inputted string is in name.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"    public boolean contains(String str) {","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"        return this.taskName.contains(str);","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:59:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"        return \"[\" + ((isCompleted) ? \"X\" : \" \") + \"] | \" + this.taskType + \" | \" + this.taskName;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false}],"authorContributionMap":{"Billy026":120}},{"path":"src/main/java/Bob/tasks/TaskWithDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.tasks;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import bob.managers.DateManager;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":" * Represents a task with a due date.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"public abstract class TaskWithDeadline extends Task {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"    private String deadline;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     * Constructor for newly added tasks with a deadline.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     * @param deadline date to be completed by.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    public TaskWithDeadline(String taskName, String taskType, String deadline) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"        super(taskName, taskType);","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * Constructor for tasks with a deadline loaded from save file.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     * @param deadline date to be completed by.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     * @param isCompleted completion status of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    public TaskWithDeadline(String taskName, String taskType, String deadline, boolean isCompleted) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        super(taskName, taskType, isCompleted);","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"     * Propogates isSameDay to DateManager.","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"     * @param date date to compare with.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"     * @param withTime whether time should be considered.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"     * @return if task is due the same day as date.","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"    public boolean isSameDay(LocalDateTime date, boolean withTime) {","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        return DateManager.isSameDay(this.deadline, date, withTime);","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"        return super.toString() + \",\" + this.deadline;","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false}],"authorContributionMap":{"Billy026":53}},{"path":"src/main/java/Bob/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.tasks;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":" * Represents a task without a deadline.","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"     * Constructor for newly added ToDos.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"        super(taskName, \"T\");","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     * Constructor for ToDos loaded from save file.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     *","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"     * @param isCompleted completion status of task.","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    public ToDo(String taskName, boolean isCompleted) {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        super(taskName, \"T\", isCompleted);","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        return super.toString();","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T21:07:24","isFullCredit":false}],"authorContributionMap":{"Billy026":30}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package exceptions;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":" * Exception for when the user enters an invalid command","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"     * Default constructor","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    public InvalidCommandException() {}","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * Primary constructor","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * @param message Specialised message","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"        super(message);","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-21T21:36:40","isFullCredit":false}],"authorContributionMap":{"Billy026":20}},{"path":"src/main/java/exceptions/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package exceptions;","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":" * Exception for when dates are formatted incorrectly.","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"public class InvalidDateFormatException extends Exception {","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"     * Default constructor","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    public InvalidDateFormatException() {}","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * Primary constructor","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * @param message Specialised message","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    public InvalidDateFormatException(String message) {","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"        super(message);","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false}],"authorContributionMap":{"Billy026":20}},{"path":"src/main/java/exceptions/InvalidTaskOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package exceptions;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":" * Exception for when there is an invalid operation in one of the Task functions","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"public class InvalidTaskOperationException extends Exception {","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"     * Default constructor","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    public InvalidTaskOperationException() {}","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * Primary constructor","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * @param message Specialised message","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    public InvalidTaskOperationException(String message) {","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"        super(message);","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false}],"authorContributionMap":{"Billy026":20}},{"path":"src/main/java/managers/DateManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package managers;","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import exceptions.InvalidDateFormatException;","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":" * Manages date operations.","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"public class DateManager {","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * Converts the format of a date string to a standardised format.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     * @param dateString string to change format of.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     * @return changed format.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException if the string does not match any valid format.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    public static String normaliseDateFormat(String dateString) throws InvalidDateFormatException {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        // If day of week used","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        HashMap\u003cString, Integer\u003e dayMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"mon\", 1);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"monday\", 1);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"tue\", 2);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"tuesday\", 2);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"wed\", 3);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"wednesday\", 3);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"thu\", 4);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"thursday\", 4);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"fri\", 5);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"friday\", 5);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"sat\", 6);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"saturday\", 6);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"sun\", 7);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"sunday\", 7);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        if (dayMap.containsKey(dateString.toLowerCase())) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"            int targetInt \u003d dayMap.get(dateString.toLowerCase());","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"            int currInt \u003d dayMap.get(LocalDate.now().getDayOfWeek().name().toLowerCase());","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"            if (targetInt \u003c currInt) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"                targetInt +\u003d 7;","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"            String[] dateParts \u003d LocalDate.now().plusDays(targetInt - currInt)","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"                    .toString().split(\"[/ ,-]\");","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"            String temp \u003d dateParts[0];","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"            dateParts[0] \u003d dateParts[2];","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"            dateParts[2] \u003d temp;","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"            return dateParts[0] + \"/\" + dateParts[1] + \"/\" + dateParts[2];","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"        // If date format used","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"        String[] dateParts \u003d dateString.split(\"[/ ,-]\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"        if (dateParts.length !\u003d 3) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(\"Invalid date format. Example format: dd/MM/yyyy.\");","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"        // Swap day and year if year is in front","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"        if (dateParts[0].length() \u003d\u003d 4) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"            String temp \u003d dateParts[0];","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"            dateParts[0] \u003d dateParts[2];","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"            dateParts[2] \u003d temp;","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"        // Convert day to fit the format","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"        if (dateParts[0].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"            if (dateParts[0].length() \u003d\u003d 1) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"                dateParts[0] \u003d \"0\" + dateParts[0];","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(\"Invalid date format. Example format: dd/MM/yyyy.\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"        // Convert month to fit the format","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"        if (dateParts[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"            if (Integer.parseInt(dateParts[1]) \u003e 12) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"                throw new InvalidDateFormatException(","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"                    \"Sorry, we have not implemented MM/dd/yy format yet.\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"            if (dateParts[1].length() \u003d\u003d 1) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"                dateParts[1] \u003d \"0\" + dateParts[1];","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"        } else if (dateParts[1].matches(\"[a-zA-Z]+\")) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"            // Map to check for short form of month","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"            HashMap\u003cString, String\u003e monthMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"            monthMap.put(\"jan\", \"January\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"            monthMap.put(\"feb\", \"February\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"            monthMap.put(\"mar\", \"March\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"            monthMap.put(\"apr\", \"April\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"            monthMap.put(\"may\", \"May\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"            monthMap.put(\"jun\", \"June\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"            monthMap.put(\"jul\", \"July\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"            monthMap.put(\"aug\", \"August\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"            monthMap.put(\"sep\", \"September\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"            monthMap.put(\"oct\", \"October\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"            monthMap.put(\"nov\", \"November\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"            monthMap.put(\"dec\", \"December\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"            // Set to check for long form of month","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"            HashSet\u003cString\u003e monthSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"            monthSet.add(\"january\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"            monthSet.add(\"february\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"            monthSet.add(\"march\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"            monthSet.add(\"april\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"            monthSet.add(\"may\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"            monthSet.add(\"june\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"            monthSet.add(\"july\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"            monthSet.add(\"august\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"            monthSet.add(\"september\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"            monthSet.add(\"october\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"            monthSet.add(\"november\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"            monthSet.add(\"december\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"            if (dateParts[1].length() \u003d\u003d 3 \u0026\u0026 monthMap.containsKey(dateParts[1].toLowerCase())) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"                dateParts[1] \u003d capitaliseString(monthMap.get(dateParts[1].toLowerCase()));","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"            } else if (monthSet.contains(dateParts[1].toLowerCase())) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"                dateParts[1] \u003d capitaliseString(dateParts[1]);","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"            } else {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"                throw new InvalidDateFormatException(","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"                        \"Invalid date format. Example format: dd/MM/yyyy.\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(\"Invalid date format. Example format: dd/MM/yyyy.\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"        // Convert year to fit the format","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"        if (dateParts[2].matches(\"\\\\d+\") \u0026\u0026","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"                (dateParts[2].length() \u003d\u003d 2 || dateParts[2].length() \u003d\u003d 4)) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"            if (dateParts[2].length() \u003d\u003d 2) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"                if (Integer.parseInt(dateParts[2]) \u003c\u003d LocalDate.now().getYear() % 100) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"                    dateParts[2] \u003d \"20\" + dateParts[2];","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"                } else {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"                    dateParts[2] \u003d \"19\" + dateParts[2];","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"            throw new InvalidDateFormatException(\"Invalid date format. Example format: dd/MM/yyyy.\");","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"        // Return in short or long format depending on month format","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"        if (dateParts[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Billy026"},"content":"            return dateParts[0] + \"/\" + dateParts[1] + \"/\" + dateParts[2];","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Billy026"},"content":"            return dateParts[0] + \" \" + dateParts[1] + \" \" + dateParts[2];","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Billy026"},"content":"     * Checks if a deadline is due today.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Billy026"},"content":"     * @param deadline deadline to check.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Billy026"},"content":"     * @return whether deadline is due today.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Billy026"},"content":"    public static boolean isSameDay(String deadline) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Billy026"},"content":"        if (deadline.contains(\" \")) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Billy026"},"content":"            LocalDate targetDate \u003d","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Billy026"},"content":"                    LocalDate.parse(deadline, DateTimeFormatter.ofPattern(\"dd MMMM yyyy\"));","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Billy026"},"content":"            return targetDate.equals(LocalDate.now());","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Billy026"},"content":"        } else if (deadline.contains(\"/\")) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Billy026"},"content":"            LocalDate targetDate \u003d","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Billy026"},"content":"                    LocalDate.parse(deadline, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Billy026"},"content":"            return targetDate.equals(LocalDate.now());","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Billy026"},"content":"            return false;","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Billy026"},"content":"     * Capitalises the first letter of a string.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Billy026"},"content":"     * @param str string to capitalise.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Billy026"},"content":"     * @return capitalised string.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Billy026"},"content":"    private static String capitaliseString(String str) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Billy026"},"content":"        return str.substring(0, 1).toUpperCase() +","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Billy026"},"content":"                str.substring(1).toLowerCase();","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false}],"authorContributionMap":{"Billy026":184}},{"path":"src/main/java/managers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package managers;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import exceptions.InvalidDateFormatException;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":" * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":" * @param taskManager handles operations on the task list.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"public class Parser {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     * Primary constructor.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    public Parser() {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"     * Creates a task based on the task type and input.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     * @param input User input split by spaces.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException if invalid task type given.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    public void createTask(String taskType, String[] input) throws InvalidCommandException {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"            String[] values \u003d splitInput(input, taskType);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"            Task task \u003d this.taskManager.addTask(taskType, values);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"            System.out.println(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"                    \"    Sure. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"                    \"      \" + task.toString() + \"\\n\" +","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"                    \"    Now you have \" + this.taskManager.getSize() + \" task\" +","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"                    ((this.taskManager.getSize() \u003d\u003d 1) ? \"\" : \"s\") + \" in the list.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"     * Splits the input into relevant parts for createTask().","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"     * @param input user input.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"     * @return array of relevant Strings.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException when no date(s) given.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidDateFormatException when invalid date format given.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"    private String[] splitInput(String[] input, String taskType)","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"            throws InvalidTaskOperationException, InvalidDateFormatException {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"        // Builds the different parts of the output","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"        StringBuffer name \u003d new StringBuffer();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"        StringBuffer start \u003d new StringBuffer();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        StringBuffer end \u003d new StringBuffer();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"        // Values to determine new parts of output","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"        int change \u003d 0;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"        boolean hasSpace \u003d false;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        boolean isWrongEventSyntax \u003d false;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        // Convert input to relevant parts","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"            // Check for special syntaxes in input","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"            if (input[i].equals(\"/by\")) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"                change \u003d 1;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"                isWrongEventSyntax \u003d true;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"                hasSpace \u003d false;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"                continue;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"            } else if (input[i].equals(\"/from\")) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"                change \u003d 1;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"                hasSpace \u003d false;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"                continue;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"            if (input[i].equals(\"/to\")) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"                change \u003d 2;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"                hasSpace \u003d false;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"                continue;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"            ((change \u003d\u003d 0) ? name : (change \u003d\u003d 1) ? start : end).append(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"                    ((hasSpace) ? \" \" : \"\") + input[i]);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"            if (!hasSpace) hasSpace \u003d true;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"        String taskName \u003d name.toString();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"        String startDate \u003d start.toString();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"        String endDate \u003d end.toString();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"        // Check for missing date","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"        if (taskType.equals(\"D\") \u0026\u0026 startDate.equals(\"\")) { // Check if date provided","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"                    \"You did not provide a date or time.\\n\" +","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"                    \"    Please format your input as: deadline \u003ctask name\u003e /by \u003cdate\u003e.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"        } else if (taskType.equals(\"E\") \u0026\u0026","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"                (((startDate.equals(\"\") || endDate.equals(\"\"))) || // Check if dates are provided","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"                isWrongEventSyntax)) {   // Check if /by is used instead of /from and /to","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"                    \"You did not provide either a start date or an end date.\\n\" +","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"                    \"    Please format your input as: event \u003ctask name\u003e /from \u003cdate\u003e /to \u003cdate\u003e.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"        // Convert date to correct format","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"        if (startDate !\u003d \"\") {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"            startDate \u003d DateManager.normaliseDateFormat(startDate);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"            if (endDate !\u003d \"\") {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"                endDate \u003d DateManager.normaliseDateFormat(endDate);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"        ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"        return new String[] {taskName, startDate, endDate};","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"     * @param c char to transform into task number to delete.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException when invalid task number given.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"    public void deleteTask(char c) throws InvalidCommandException {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"        // Convert task number to int","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"        int num \u003d c - \u00270\u0027;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"        if (this.taskManager.getSize() \u003c num) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(\"There is no task with that number.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"        // Delete task","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"        Task task \u003d this.taskManager.getTask(num - 1);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"        System.out.println(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"                \"    Alright. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"                \"      \" + task.toString());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"        this.taskManager.deleteTask(num - 1);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"        System.out.println(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"                \"    Now you have \" + this.taskManager.getSize() + \" task\" +","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"                ((this.taskManager.getSize() \u003d\u003d 1) ? \"\" : \"s\") + \" in the list.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"     * Displays all tasks and their status as a numbered list.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Billy026"},"content":"    public void listTasks() {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Billy026"},"content":"        if (this.taskManager.getSize() !\u003d 0) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Billy026"},"content":"            for (int i \u003d 1; i \u003c\u003d this.taskManager.getSize(); i++) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Billy026"},"content":"                System.out.println(\"    \" + i + \". \" + this.taskManager.getTask(i - 1).toString());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    There are currently no tasks in your list.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Billy026"},"content":"     * Marks a task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Billy026"},"content":"     * @param input user input converted to an array.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException when invalid task number given.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Billy026"},"content":"    public void markTask(String[] input) throws InvalidCommandException {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Billy026"},"content":"            // Convert task number to int","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Billy026"},"content":"            int num \u003d input[1].charAt(0) - \u00270\u0027;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Billy026"},"content":"            if (this.taskManager.getSize() \u003c num) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Billy026"},"content":"                throw new InvalidCommandException(\"There is no task with that number.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Billy026"},"content":"            Task task \u003d this.taskManager.markTask(num - 1, true);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Billy026"},"content":"            System.out.println(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Billy026"},"content":"                    \"    Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Billy026"},"content":"                    \"      \" + task.toString());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Billy026"},"content":"     * Unmarks a task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Billy026"},"content":"     * @param input user input converted to an array.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException when invalid task number given.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Billy026"},"content":"    public void unmarkTask(String[] input) throws InvalidCommandException {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Billy026"},"content":"            // Convert task number to int","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Billy026"},"content":"            int num \u003d input[1].charAt(0) - \u00270\u0027;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Billy026"},"content":"            if (this.taskManager.getSize() \u003c num) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Billy026"},"content":"                throw new InvalidCommandException(\"There is no task with that number.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Billy026"},"content":"            Task task \u003d this.taskManager.markTask(num - 1, false);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Billy026"},"content":"            System.out.println(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Billy026"},"content":"                    \"    Oh, I guess it\u0027s not done yet:\\n\" +","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Billy026"},"content":"                    \"      \" + task.toString());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Billy026"},"content":"     * Propogates displayIncomingDeadlines to taskManager.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Billy026"},"content":"    public void displayIncomingDeadlines() {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Billy026"},"content":"        this.taskManager.displayIncomingDeadlines();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false}],"authorContributionMap":{"Billy026":213}},{"path":"src/main/java/managers/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package managers;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":" * Handles storing and loading of tasks into hard disk.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":" * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":" * @param FILE_PATH path of file to save to.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"public class Storage {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    // File path for saving tasks","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    private static final String FILE_PATH \u003d \"./data/bob.txt\";","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    public Storage() {}","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     * Saves a task to data file.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"     * @param newTask task to save.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    public void saveTask(Task newTask) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        file.getParentFile().mkdirs(); // Ensures parent directory exists","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"        try(BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, true))) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"            writer.write(newTask.toString());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"            writer.newLine();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"    There was a problem saving the task: \" + e.getMessage());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"     * Loads tasks from data file into task list.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"     * @param consumer task adding function in TaskManager.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"    public void loadTasks(Consumer\u003cTask\u003e consumer) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"        ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"        try(BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"            String line;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"                try {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"                    consumer.accept(Task.fromSaveFormat(line));","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"                } catch (Exception e) { // Handle corrupted task","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"                    System.err.println(\"    There was a problem loading the task: \" + e.getMessage());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    Saved task list found.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    No saved task list found.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"    There was a problem loading the file: \" + e.getMessage());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"     * Rewrites the task list to the data file.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"    public void rewriteTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"        try(BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"                writer.write(task.toString());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"            System.err.println(\"    There was a problem saving the task: \" + e.getMessage());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false}],"authorContributionMap":{"Billy026":88}},{"path":"src/main/java/managers/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package managers;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import tasks.Event;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import tasks.TaskWithDeadline;","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":" * Contains list of tasks and operations on it.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":" * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":" * @param tasks list of tasks.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":" * @param storage stores and loads tasks from hard disk.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"     * Primary constructor.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    public TaskManager() {","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        this.storage.loadTasks((Task t) -\u003e this.tasks.add(t));","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"     * Returns size of the list of tasks.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"     * @return size of list of tasks.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"    public int getSize() {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"     * Adds a task based on taskType and params. Also saves task into hard disk.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"     * @param params parameters of task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"     * @return created task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException if invalid task types given.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"    public Task addTask(String taskType, String[] params) throws InvalidTaskOperationException {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"            task \u003d new ToDo(params[0]);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"            this.tasks.add(task);","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"            task \u003d new Deadline(params[0], params[1]);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"            this.tasks.add(task);","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"            task \u003d new Event(params[0], params[1], params[2]);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            this.tasks.add(task);","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"                \"Invalid task type. The valid task types are: T, D, E.\");","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"        ","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        this.storage.saveTask(task);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"        return task;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"     * Returns task at given index.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"     * @param index index of requested task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"     * @return task at index.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"     * Removes task at given index from list of tasks.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"     * @param index index of task to remove.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"        this.storage.rewriteTaskList(this.tasks);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"     * Either marks or unmarks a task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"     * When mark \u003d\u003d true, mark task. Else unmark task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"     * @param index index of task to edit.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"     * @param mark whether to mark or unmark task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"     * @return edited task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException if invalid index given.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"    public Task markTask(int index, boolean mark) throws InvalidTaskOperationException {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"        Task task \u003d this.getTask(index);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"        if (mark) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"            task.check();","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"            task.uncheck();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"        this.storage.rewriteTaskList(this.tasks);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"        return task;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"     * Displays all Deadlines and Events with deadlines due today.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"    public void displayIncomingDeadlines() {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"        List\u003cTask\u003e deadlineList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"        List\u003cTask\u003e eventList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"            if (task.isTaskType(\"D\")) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"                TaskWithDeadline incomingTask \u003d (TaskWithDeadline) task;","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"                if (incomingTask.isIncoming()) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"                    deadlineList.add(incomingTask);","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"            } else if (task.isTaskType(\"E\")) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"                TaskWithDeadline incomingTask \u003d (TaskWithDeadline) task;","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"                if (incomingTask.isIncoming()) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"                    eventList.add(incomingTask);","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"        if (!deadlineList.isEmpty() || !eventList.isEmpty()) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    Today\u0027s incoming tasks:\");","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"            for (Task task : deadlineList) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"                System.out.println(\"    \" + task.toString());","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"    ","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"            for (Task task : eventList) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"                System.out.println(\"    \" + task.toString());","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    You have no incoming tasks today.\");","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-29T16:23:59","isFullCredit":false}],"authorContributionMap":{"Billy026":147}},{"path":"src/main/java/managers/UiManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package managers;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":" * Manages all functions related to the UI.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":" * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":" * @param parser class that makes sense of user input.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"public class UiManager {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"    private Parser parser;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     * Primary constructor.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    public UiManager() {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     * Controls the main flow of the program.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     * @param sc scanner to receive user input.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    public void executeUi(Scanner sc) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        greeting();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        storeAndList(sc);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"     * Displays a greeting on launch of main activity.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    private void greeting() {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        // Printing of logo","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"        String logo \u003d ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"                  \"      ____        _        \\n\"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"                + \"     |  _ \\\\      | |      \\n\"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"                + \"     | |_| |     | |       \\n\"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"                + \"     |    /  ___ | | __    \\n\"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"                + \"     |  _ \\\\ / _ \\\\| |/_ \\\\\\n\"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"                + \"     | |_| | |_| |  |_| |  \\n\"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"                + \"     |____/ \\\\___/|_|\\\\__/ \\n\";","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"    Hello from\\n\" + logo);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        lineBreak();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"        System.out.println();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"        // Initial greeting","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"        System.out.println(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"                \"    Hi, I\u0027m Bob!\\n\" + ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"                \"    Can I do something for you?\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"        lineBreak();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"        System.out.println();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"     * Repeatedly executes user commands.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"     * @param sc scanner to receive user input.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"    private void storeAndList(Scanner sc) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"        System.out.println();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"        this.parser.displayIncomingDeadlines();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"        System.out.println();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"        // Repeatedly executes commands until user exits","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        while(true) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"            String[] input \u003d sc.nextLine().split(\" \");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"            lineBreak();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"            if (input[0].equals(\"bye\")) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"            try {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"                executeCommand(input);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"                System.err.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"            lineBreak();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"            System.out.println();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"    Bye! See you soon!\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"        lineBreak();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"     * Propogates the relevant command to the parser.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"     * @param input user input converted to an array.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException when an invalid command has been inputted.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"    private void executeCommand(String[] input) throws InvalidCommandException {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"        switch (input[0]) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"            case \"todo\":","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"                try {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"                    this.parser.createTask(\"T\", input);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"                } catch (InvalidCommandException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"                    System.err.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"                    throw new InvalidCommandException(\"Please give a name to the ToDo task.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"            case \"deadline\":","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"                try {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"                    this.parser.createTask(\"D\", input);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"                } catch (InvalidCommandException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"                    System.err.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"                    throw new InvalidCommandException(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"                        \"You did not provide a date or time.\\n\" +","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"                        \"    Please format your input as: deadline \u003ctask name\u003e /by \u003cdate\u003e.\"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"                    );","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"            case \"event\":","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"                try {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"                    this.parser.createTask(\"E\", input);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"                } catch (InvalidCommandException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"                    System.err.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"                    throw new InvalidCommandException(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"                        \"You did not provide either a start date or an end date.\\n\" +","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"                        \"    Please format your input as: event \u003ctask name\u003e /from \u003cdate\u003e /to \u003cdate\u003e.\"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"                    );","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"            case \"delete\":","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"                try {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"                    if (!Character.isDigit(input[1].charAt(0))) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"                        throw new InvalidCommandException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"                    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"                    this.parser.deleteTask(input[1].charAt(0));","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"                    throw new InvalidCommandException(\"Please indicate which task to delete.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"            case \"list\":","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"                this.parser.listTasks();","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"            case \"mark\":","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"                try {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"                    if (!Character.isDigit(input[1].charAt(0))) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"                        throw new InvalidCommandException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"                    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Billy026"},"content":"                    this.parser.markTask(input);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Billy026"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Billy026"},"content":"                    throw new InvalidCommandException(\"Please indicate which task to mark.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Billy026"},"content":"            case \"unmark\":","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Billy026"},"content":"                try {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Billy026"},"content":"                    if (!Character.isDigit(input[1].charAt(0))) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Billy026"},"content":"                        throw new InvalidCommandException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Billy026"},"content":"                    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Billy026"},"content":"                    this.parser.unmarkTask(input);","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Billy026"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Billy026"},"content":"                    throw new InvalidCommandException(\"Please indicate which task to unmark.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Billy026"},"content":"            default:","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Billy026"},"content":"                throw new InvalidCommandException(\"I don\u0027t understand.\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Billy026"},"content":"     * Prints a line break.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Billy026"},"content":"    private void lineBreak() {","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Billy026"},"content":"        System.out.println(","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Billy026"},"content":"            \"    __________________________________________________________________________________\");","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false}],"authorContributionMap":{"Billy026":175}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package tasks;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":" * Tasks with only one date.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"public class Deadline extends TaskWithDeadline {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"     * Constructor for newly added Deadlines.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     * @param time date to finish by.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"    public Deadline(String taskName, String time) {","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"        super(taskName, \"D\", time);","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     * Constructor for Deadlines loaded from save file.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"     * @param time date to finish by.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"     * @param isCompleted completion status of task.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    public Deadline(String taskName, String time, boolean isCompleted) {","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"        super(taskName, \"D\", time, isCompleted);","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        String[] parts \u003d super.toString().split(\",\");","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        return parts[0] + \" | by: \" + parts[1];","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false}],"authorContributionMap":{"Billy026":33}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package tasks;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":" * Tasks with two datess.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":" * ","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":" * @param end date event will end.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"public class Event extends TaskWithDeadline {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"    private String end;","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"     * Constructor for newly added Events.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * @param start date event will start.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     * @param end date event will end.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    public Event(String taskName, String start, String end) {","lastModifiedDate":"2025-01-29T22:07:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"        super(taskName, \"E\", start);","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"     * Constructor for Events loaded from save file.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     * @param start date event will start.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     * @param end date event will end.","lastModifiedDate":"2025-01-30T16:25:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     * @param isCompleted completion status of task.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"    public Event(String taskName, String start, String end, boolean isCompleted) {","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"        super(taskName, \"E\", start, isCompleted);","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"        String[] parts \u003d super.toString().split(\",\");","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        return parts[0] + \" | from: \" + parts[1] + \" | to: \" + this.end;","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false}],"authorContributionMap":{"Billy026":41}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package tasks;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":" * Encapsulates a task with a name and completion status.","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":" * ","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":" * @param taskType type of task.","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":" * @param taskName name of task.","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":" * @param isCompleted completion status of task.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"    private String taskName;","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    private String taskType;","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    private boolean isCompleted;","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     * Constructor for newly added tasks.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    public Task(String taskName, String taskType) {","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     * Constructor for tasks loaded from save file.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"     * @param isCompleted completion status of task.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"    public Task(String taskName, String taskType, boolean isCompleted) {","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"     * Sets completion status to true.","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException when task has already been completed.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"    public void check() throws InvalidTaskOperationException {","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(\"Task has already been completed.\");","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"            this.isCompleted \u003d true;","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"     * Sets completion status to false.","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException when task has not been completed.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"    public void uncheck() throws InvalidTaskOperationException {","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        if (!this.isCompleted) {","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(\"Task has still not been completed.\");","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"            this.isCompleted \u003d false;","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"     * Converts a line from save file to a Task object.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"     * @param line line from save file.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"     * @return saved Task object.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"     * @throws IllegalArgumentException when save format is invalid.","lastModifiedDate":"2025-01-30T20:57:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"    public static Task fromSaveFormat(String line) throws IllegalArgumentException {","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"            throw new IllegalArgumentException(\"    Invalid save format: \" + line);","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"        boolean isCompleted \u003d parts[0].trim().equals(\"[X]\");","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"        String taskType \u003d parts[1].trim();","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"        String taskName \u003d parts[2].trim();","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"        switch (taskType) {","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"            case \"T\":","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"                return new ToDo(taskName, isCompleted);","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"            case \"D\":","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"                String time \u003d parts[3].trim().replaceFirst(\"by: \", \"\");","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"                return new Deadline(taskName, time, isCompleted);","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"            case \"E\":","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"                String start \u003d parts[3].trim().replaceFirst(\"from: \", \"\");","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"                String end \u003d parts[4].trim().replaceFirst(\"to: \", \"\");","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"                return new Event(taskName, start, end, isCompleted);","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"            default:","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"                throw new IllegalArgumentException(\"    Invalid task type: \" + taskType);","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"     * Returns whether task is the declared task type.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"     * @param taskType declared task type.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"     * @return If task is the declared task type.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"    public boolean isTaskType(String taskType) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"        return this.taskType.equals(taskType);","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"        return \"[\" + ((isCompleted) ? \"X\" : \" \") + \"] | \" + this.taskType  + \" | \" + this.taskName;","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-20T21:25:39","isFullCredit":false}],"authorContributionMap":{"Billy026":114}},{"path":"src/main/java/tasks/TaskWithDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package tasks;","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import managers.DateManager;","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":" * Tasks with a deadline.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":" * ","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":" * @param deadline date to be completed by.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"public abstract class TaskWithDeadline extends Task {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"    private String deadline;","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     * Constructor for newly added tasks with a deadline.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     * @param deadline date to be completed by.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    public TaskWithDeadline(String taskName, String taskType, String deadline) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"        super(taskName, taskType);","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"     * Constructor for tasks with a deadline loaded from save file.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     * @param taskType type of task.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     * @param deadline date to be completed by.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     * @param isCompleted completion status of task.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    public TaskWithDeadline(String taskName, String taskType, String deadline, boolean isCompleted) {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        super(taskName, taskType, isCompleted);","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"     * Returns whether task is due today.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"     * @return if task is due today.","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"    public boolean isIncoming() {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"        return DateManager.isSameDay(this.deadline);","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"        return super.toString() + \",\" + this.deadline;","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false}],"authorContributionMap":{"Billy026":51}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package tasks;","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T16:49:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":" * Tasks without a deadline","lastModifiedDate":"2025-01-30T17:39:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"     * Constructor for newly added ToDos.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21T20:53:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"        super(taskName, \"T\");","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     * Constructor for ToDos loaded from save file.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"     * @param isCompleted completion status of task.","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    public ToDo(String taskName, boolean isCompleted) {","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        super(taskName, \"T\", isCompleted);","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-29T18:55:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        return super.toString();","lastModifiedDate":"2025-01-29T16:29:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-20T22:40:03","isFullCredit":false}],"authorContributionMap":{"Billy026":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false}],"authorContributionMap":{"Billy026":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"            fx:controller\u003d\"bob.gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-21T15:21:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false}],"authorContributionMap":{"Billy026":43}},{"path":"src/test/java/Bob/commands/CreateCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"public class CreateCommandTest {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    @AfterEach","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    public void cleanUp() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    public void exec_validInput_correctOutput() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        CreateCommand todoCmd \u003d new CreateCommand(new String[] {\"todo\", \"read\"}, \"T\",","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"                \"Exception thrown.\");","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d todoCmd.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Sure. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | T | read\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"                    + \"Now you have 1 task in the list.\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"        CreateCommand deadlineCmd \u003d new CreateCommand(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"                new String[] {\"deadline\", \"assignment\", \"/by\", \"01/01/2025\", \"10:30\"},","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"                \"D\", \"Exception thrown.\");","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d deadlineCmd.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Sure. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | D | assignment | by: 01/01/2025 10:30\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"                    + \"Now you have 2 tasks in the list.\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        CreateCommand eventCmd \u003d new CreateCommand(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"                new String[] {\"event\", \"meeting\", \"/from\", \"01/01/2025\", \"10:00\", \"/to\", \"01/01/2025\", \"11:00\"},","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"                \"E\", \"Exception thrown.\");","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d eventCmd.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Sure. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | E | meeting | from: 01/01/2025 10:00 | to: 01/01/2025 11:00\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"                    + \"Now you have 3 tasks in the list.\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"    public void exec_insufficientParametersGiven_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"        CreateCommand todoCmd \u003d new CreateCommand(new String[] {\"todo\"}, \"T\",","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"                \"Exception thrown.\");","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"            () -\u003e todoCmd.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"        CreateCommand deadlineCmd \u003d new CreateCommand(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"            new String[] {\"deadline\", \"assignment\", \"/by\"},","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"            \"D\", \"Exception thrown.\");","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"            () -\u003e deadlineCmd.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"        CreateCommand eventCmd \u003d new CreateCommand(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"            new String[] {\"event\", \"meeting\", \"/from\", \"01/01/2025\", \"10:00\", \"/by\", \"01/01/2025\", \"11:00\"},","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"            \"E\", \"Exception thrown.\");","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"            () -\u003e eventCmd.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"    public void exec_invalidDatesGiven_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"        CreateCommand alphabeticDeadline \u003d new CreateCommand(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"            new String[] {\"deadline\", \"assignment\", \"/by\", \"a\"},","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"            \"D\", \"Exception thrown.\");","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"            () -\u003e alphabeticDeadline.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"        CreateCommand invalidDate \u003d new CreateCommand(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"            new String[] {\"deadline\", \"assignment\", \"/by\", \"80/80/2080\", \"00:00\"},","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"            \"D\", \"Exception thrown.\");","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"            () -\u003e invalidDate.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"        CreateCommand eventWithoutStart \u003d new CreateCommand(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"            new String[] {\"event\", \"meeting\", \"/from\", \"/to\", \"01/01/2025\", \"11:00\"},","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"            \"E\", \"Exception thrown.\");","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"            () -\u003e eventWithoutStart.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"        CreateCommand eventWithoutEnd \u003d new CreateCommand(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Billy026"},"content":"            new String[] {\"event\", \"meeting\", \"/from\", \"01/01/2025\", \"10:00\", \"/to\"},","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Billy026"},"content":"            \"E\", \"Exception thrown.\");","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Billy026"},"content":"            () -\u003e eventWithoutEnd.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false}],"authorContributionMap":{"Billy026":157}},{"path":"src/test/java/Bob/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    @AfterEach","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    public void cleanUp() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    public void exec_validTaskIndex_correctOutput() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"T\", new String[] {\"read\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"            DeleteCommand cmd \u003d new DeleteCommand(new String[] {\"delete\", \"1\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d cmd.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Alright. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"                + \"[ ] | T | read\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"                + \"Now you have 0 task in the list.\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"    public void exec_invalidTaskIndex_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"        DeleteCommand cmd \u003d new DeleteCommand(new String[] {\"delete\", \"a\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"            () -\u003e cmd.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"    public void exec_taskIndexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        DeleteCommand cmd \u003d new DeleteCommand(new String[] {\"delete\", \"1\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"            () -\u003e cmd.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"    public void exec_noTaskIndexGiven_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"        DeleteCommand cmd \u003d new DeleteCommand(new String[] {\"delete\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"            () -\u003e cmd.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false}],"authorContributionMap":{"Billy026":85}},{"path":"src/test/java/Bob/commands/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"public class FindCommandTest {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    @AfterEach","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    public void cleanUp() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    public void exec_hasMatchingTask_correctOutput() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"T\", new String[] {\"read\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"T\", new String[] {\"not\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"            FindCommand cmd \u003d new FindCommand(new String[] {\"find\", \"read\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d cmd.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"                    + \"1. [ ] | T | read\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"    public void exec_noMatchingTask_correctOutput() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"T\", new String[] {\"not\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"T\", new String[] {\"alsoNotMatching\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            FindCommand cmd \u003d new FindCommand(new String[] {\"find\", \"hello\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d cmd.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"I can\u0027t find any matching tasks.\\n\";","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"    public void exec_noStringGiven_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"        FindCommand cmd \u003d new FindCommand(new String[] {\"find\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"            () -\u003e cmd.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false}],"authorContributionMap":{"Billy026":83}},{"path":"src/test/java/Bob/commands/GetDueDateCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"public class GetDueDateCommandTest {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    @AfterEach","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    public void cleanUp() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    public void exec_hasMatchingTaskWithTime_correctOutput() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"D\", new String[] {\"deadline\", \"01/01/2025 10:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"D\", new String[] {\"other deadline\", \"01/01/2025 11:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"E\", new String[] {\"event\", \"01/01/2025 10:30\", \"01/01/2025 11:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"            GetDueDateCommand cmd \u003d","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"                    new GetDueDateCommand(new String[] {\"getDueDate\", \"01/01/2025 10:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d cmd.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Here\u0027s the tasks due at that date:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | D | deadline | by: 01/01/2025 10:30\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | E | event | from: 01/01/2025 10:30 | to: 01/01/2025 11:30\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"    public void exec_hasMatchingTaskWithoutTime_correctOutput() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"D\", new String[] {\"deadline\", \"01/01/2025 10:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"D\", new String[] {\"other deadline\", \"01/01/2025 11:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"E\", new String[] {\"event\", \"01/01/2025 10:30\", \"01/01/2025 11:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"            GetDueDateCommand cmd \u003d","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"                    new GetDueDateCommand(new String[] {\"getDueDate\", \"01/01/2025\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d cmd.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Here\u0027s the tasks due at that date:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | D | deadline | by: 01/01/2025 10:30\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | D | other deadline | by: 01/01/2025 11:30\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | E | event | from: 01/01/2025 10:30 | to: 01/01/2025 11:30\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"    public void exec_noMatchingTask_correctOutput() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"D\", new String[] {\"deadline\", \"01/01/2025 10:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"D\", new String[] {\"other deadline\", \"01/01/2025 11:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"E\", new String[] {\"event\", \"01/01/2025 10:30\", \"01/01/2025 11:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"            GetDueDateCommand cmd \u003d","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"                    new GetDueDateCommand(new String[] {\"getDueDate\", \"02/01/2025\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d cmd.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"You...don\u0027t have any tasks due that day!\";","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"    public void exec_invalidDate_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"D\", new String[] {\"deadline\", \"01/01/2025 10:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"D\", new String[] {\"other deadline\", \"01/01/2025 11:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"E\", new String[] {\"event\", \"01/01/2025 10:30\", \"01/01/2025 11:30\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"            GetDueDateCommand notADate \u003d","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"                    new GetDueDateCommand(new String[] {\"getDueDate\", \"a\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"            assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"                InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"                () -\u003e notADate.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"                \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"            );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"            GetDueDateCommand invalidDate \u003d","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"                    new GetDueDateCommand(new String[] {\"getDueDate\", \"80/80/2080\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"            assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"                InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"                () -\u003e invalidDate.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"                \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"            );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false}],"authorContributionMap":{"Billy026":130}},{"path":"src/test/java/Bob/commands/HelpCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"public class HelpCommandTest {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    @AfterEach","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    public void cleanUp() {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    public void exec_correctOutput() {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        HelpCommand cmd \u003d new HelpCommand(new String[] {\"help\"});","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d cmd.exec(taskManager);","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Sure, here is what you can do:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"                    + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"                    + \"ToDo\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"                    + \"________________\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"                    + \"todo \u003ctask name\u003e\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"                    + \"________________\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"                    + \"Creates a to do task. A to do task only has a task name, with no deadlines.\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"                    + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"                    + \"Deadline\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"                    + \"________________________________________________________\\n\"","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"                    + \"deadline \u003ctask name\u003e /by \u003cdue date: e.g. dd/MM/yyyy hh:mm\u003e\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"                    + \"________________________________________________________\\n\"","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"                    + \"Creates a deadline task. A deadline task has a task name and one deadline.\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"                    + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"                    + \"Event\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"                    + \"________________________________________________________\\n\"","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"                    + \"event \u003ctask name\u003e /from \u003cstart date: e.g. dd/MM/yyyy hh:mm\u003e /to \u003cend date: e.g.\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"                    + \" dd/MM/yyyy hh:mm\u003e\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"                    + \"________________________________________________________\\n\"","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"                    + \"Creates an event task. An event task has a task name, a start date and an end date.\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"                    + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"                    + \"Delete\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"                    + \"___________________\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"                    + \"delete \u003ctask index\u003e\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"                    + \"___________________\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"                    + \"Deletes a task by its index.\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"                    + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"                    + \"Find\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"                    + \"___________\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"                    + \"find \u003cname\u003e\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"                    + \"___________\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"                    + \"Lists down all tasks containing \u003cname\u003e.\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"                    + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"                    + \"Get due date\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"                    + \"_____________________\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"                    + \"getDueDate \u003cdue date\u003e\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"                    + \"_____________________\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"                    + \"Lists down all tasks with the specified due date (if inputted due date does not have\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"                    + \" time, time will not be accounted for when getting matching tasks).\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"                    + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"                    + \"List\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"                    + \"____\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"                    + \"list\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"                    + \"____\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"                    + \"Lists all existing tasks.\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"                    + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"                    + \"Mark\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"                    + \"_________________\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"                    + \"mark \u003ctask index\u003e\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"                    + \"_________________\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"                    + \"Marks a task at the given index as completed.\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"                    + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"                    + \"Unmark\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"                    + \"___________________\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"                    + \"unmark \u003ctask index\u003e\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"                    + \"___________________\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"                    + \"Marks a task at the given index as incomplete.\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"                    + \"\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-21T13:43:42","isFullCredit":false}],"authorContributionMap":{"Billy026":102}},{"path":"src/test/java/Bob/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"public class ListCommandTest {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    @AfterEach","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    public void cleanUp() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    public void exec_containsTask_correctOutput() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"T\", new String[] {\"read books\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"            ListCommand findCommand \u003d new ListCommand(new String[] {\"list\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d findCommand.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"                    + \"1. [ ] | T | read books\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"    public void exec_noTasks_correctOutput() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"            ListCommand findCommand \u003d new ListCommand(new String[] {\"list\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d findCommand.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"There are no tasks in your list.\\n\";","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false}],"authorContributionMap":{"Billy026":65}},{"path":"src/test/java/Bob/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.commands;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"import bob.managers.TaskManager;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"public class MarkCommandTest {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    @AfterEach","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    public void cleanUp() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    public void exec_markIncompleteTask_correctOutput() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"T\", new String[] {\"read books\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"            MarkCommand markCommand \u003d new MarkCommand(new String[] {\"mark\", \"1\"}, true);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d markCommand.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"                    + \"[X] | T | read books\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"    public void exec_unmarkCompletedTask_correctOutput() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"T\", new String[] {\"read books\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"            MarkCommand markCommand \u003d new MarkCommand(new String[] {\"mark\", \"1\"}, true);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"            String markedOutput \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"                    + \"[X] | T | read books\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"            assert markCommand.exec(taskManager).equals(markedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"            MarkCommand unmarkCommand \u003d new MarkCommand(new String[] {\"unmark\", \"1\"}, false);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d unmarkCommand.exec(taskManager);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Oh, I guess it\u0027s not done yet:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | T | read books\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"    public void exec_markCompletedTask_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"T\", new String[] {\"read books\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"            MarkCommand markCommand \u003d new MarkCommand(new String[] {\"mark\", \"1\"}, true);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"            String markedOutput \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"                    + \"[X] | T | read books\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"            assert markCommand.exec(taskManager).equals(markedOutput);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"            MarkCommand markAgainCommand \u003d new MarkCommand(new String[] {\"mark\", \"1\"}, true);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"            assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"                InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"                () -\u003e markAgainCommand.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"                \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"            );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"    public void exec_unmarkIncompleteTask_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"            taskManager.addTask(\"T\", new String[] {\"read books\"});","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"            MarkCommand unmarkIncompleteCommand \u003d new MarkCommand(new String[] {\"unmark\", \"1\"}, false);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"            assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"                InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"                () -\u003e unmarkIncompleteCommand.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"                \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"            );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"    public void exec_invalidTaskIndex_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"        MarkCommand cmd \u003d new MarkCommand(new String[] {\"mark\", \"a\"}, true);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"            () -\u003e cmd.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"    public void exec_taskIndexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"        MarkCommand cmd \u003d new MarkCommand(new String[] {\"mark\", \"1\"}, true);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"            () -\u003e cmd.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"    public void exec_noTaskIndexGiven_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"        MarkCommand markCommand \u003d new MarkCommand(new String[] {\"mark\"}, true);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"            () -\u003e markCommand.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Billy026"},"content":"        MarkCommand unmarkCommand \u003d new MarkCommand(new String[] {\"unmark\"}, false);","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Billy026"},"content":"            () -\u003e unmarkCommand.exec(taskManager),","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-20T20:27:16","isFullCredit":false}],"authorContributionMap":{"Billy026":158}},{"path":"src/test/java/Bob/managers/ConversionManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.managers;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidDateFormatException;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"public class ConversionManagerTest {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    public void convertInputToIndex_validInput_returnsCorrectOutput() throws InvalidCommandException {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"        int expectedIndex \u003d 123;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        int actualIndex \u003d ConversionManager.convertInputToIndex(\"123\", \"Invalid input!\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"        assertEquals(actualIndex, expectedIndex);","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    public void convertInputToIndex_invalidInput_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"            () -\u003e ConversionManager.convertInputToIndex(\"abc\", \"Invalid input!\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"            () -\u003e ConversionManager.convertInputToIndex(\"1@3\", \"Invalid input!\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"    public void convertToNumerics_validInput_returnsCorrectOutput() throws InvalidDateFormatException {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"        String[] validInput \u003d new String[] {\"24\", \"10\", \"2025\"};","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        int[] expectedOutput \u003d new int[] {24, 10, 2025};","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"        int[] actualOutput \u003d ConversionManager.convertToNumerics(validInput, \"Invalid date format!\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"        assertArrayEquals(actualOutput, expectedOutput);","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"    public void convertToNumerics_invalidInput_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"        String[] invalidInput \u003d {\"24\", \"October\", \"2025\"};","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"            InvalidDateFormatException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"            () -\u003e ConversionManager.convertToNumerics(invalidInput, \"Invalid date format!\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false}],"authorContributionMap":{"Billy026":55}},{"path":"src/test/java/Bob/managers/DateManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.managers;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import java.util.function.Function;","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidDateFormatException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"public class DateManagerTest {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    private static final String shortDateFormat \u003d \"dd/MM/yyyy HH:mm\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    private static final String longDateFormat \u003d \"dd MMMM yyyy HH:mm\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    public void normaliseDateFormat_weekOfDay_correctOutput() {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"        HashMap\u003cString, Integer\u003e dayMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"monday\", 1);","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"tuesday\", 2);","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"wednesday\", 3);","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"thursday\", 4);","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"friday\", 5);","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"saturday\", 6);","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"        dayMap.put(\"sunday\", 7);","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        int currInt \u003d dayMap.get(LocalDate.now().getDayOfWeek().name().toLowerCase());","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        Function\u003cInteger, String\u003e c \u003d (i) -\u003e {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"            if (i \u003c currInt) {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"                i +\u003d 7;","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"            return LocalDate.now().plusDays(i - currInt).atStartOfDay()","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"                    .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"        };","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"Monday\"), c.apply(1));","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"tuesday\"), c.apply(2));","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"WEDNESDAY\"), c.apply(3));","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"Thu\"), c.apply(4));","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"fri\"), c.apply(5));","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"SAT\"), c.apply(6));","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"sUn\"), c.apply(7));","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"    public void normaliseDateFormat_ddMMyyyy_correctOutput() {","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"31/10/2025\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"                    \"31/10/2025 00:00\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"10/10/2026 10:30\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"                    \"10/10/2026 10:30\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"21:45 01/01/2025\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"                    \"01/01/2025 21:45\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"    public void normaliseDateFormat_ddMMMMyyyy_correctOutput() {","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"            assertEquals(","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"                    DateManager.normaliseDateFormat(\"31 January 2025\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"                            \"31 January 2025 00:00\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"            assertEquals(","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"                    DateManager.normaliseDateFormat(\"10 october 2026 10:30\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"                            \"10 October 2026 10:30\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"            assertEquals(","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"                    DateManager.normaliseDateFormat(\"21:45 01 nOveMBer 2025\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"                            \"01 November 2025 21:45\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"    public void normaliseDateFormat_dMMyy_correctOutput() {","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"8/10/25\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"                    \"08/10/2025 00:00\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"7/10/98 10:30\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"                    \"07/10/1998 10:30\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"21:45 1/01/76\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"                    \"01/01/1976 21:45\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"    public void normaliseDateFormat_dMMyyyy_correctOutput() {","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"8/10/2025\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"                    \"08/10/2025 00:00\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"7/10/2026 10:30\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"                    \"07/10/2026 10:30\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"21:45 1/01/2025\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"                    \"01/01/2025 21:45\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"    public void normaliseDateFormat_dMMMyyyy_correctOutput() {","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"31 JAN 2025\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"                    \"31 January 2025 00:00\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"10 oct 2026 10:30\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"                    \"10 October 2026 10:30\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"21:45 01 nOv 2025\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"                    \"01 November 2025 21:45\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"    public void normaliseDateFormat_yearFirst_correctOutput() {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"2025-8-31\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"                    \"31/08/2025 00:00\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"            assertEquals(DateManager.normaliseDateFormat(\"32 10 10 10:30\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"                    \"10/10/1932 10:30\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"            assertEquals(","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"                DateManager.normaliseDateFormat(\"21:30 1998 October 25\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"                        \"25 October 1998 21:30\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"    public void normaliseDateFormat_invalidDate_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Billy026"},"content":"            InvalidDateFormatException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Billy026"},"content":"            () -\u003e DateManager.normaliseDateFormat(\"hi\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Billy026"},"content":"            InvalidDateFormatException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Billy026"},"content":"            () -\u003e DateManager.normaliseDateFormat(\"31/31/31/31 10:30\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Billy026"},"content":"            InvalidDateFormatException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Billy026"},"content":"            () -\u003e DateManager.normaliseDateFormat(\"31/101/2025 10:30\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Billy026"},"content":"            InvalidDateFormatException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Billy026"},"content":"            () -\u003e DateManager.normaliseDateFormat(\"10 hi 2026 10:30\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Billy026"},"content":"            InvalidDateFormatException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Billy026"},"content":"            () -\u003e DateManager.normaliseDateFormat(\"01/01/202 10:30\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Billy026"},"content":"            InvalidDateFormatException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Billy026"},"content":"            () -\u003e DateManager.normaliseDateFormat(\"01/01/20 25:30\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Billy026"},"content":"            InvalidDateFormatException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Billy026"},"content":"            () -\u003e DateManager.normaliseDateFormat(\"01/01/20 00:60\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Billy026"},"content":"    public void isSameDay_shortFormatWithTime_correctBooleansReturned() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Billy026"},"content":"        String matchingDate \u003d \"01/01/2025 10:30\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Billy026"},"content":"        String differentTime \u003d \"01/01/2025 11:00\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Billy026"},"content":"        String differentDate \u003d \"02/01/2025 11:00\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Billy026"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(matchingDate, DateTimeFormatter.ofPattern(shortDateFormat));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Billy026"},"content":"        assertTrue(DateManager.isSameDay(matchingDate, date, true));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Billy026"},"content":"        assertFalse(DateManager.isSameDay(differentTime, date, true));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Billy026"},"content":"        assertFalse(DateManager.isSameDay(differentDate, date, true));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Billy026"},"content":"    public void isSameDay_shortFormatWithoutTime_correctBooleansReturned() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Billy026"},"content":"        String matchingDate \u003d \"01/01/2025 10:30\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Billy026"},"content":"        String differentTime \u003d \"01/01/2025 11:00\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Billy026"},"content":"        String differentDate \u003d \"02/01/2025 11:00\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Billy026"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(matchingDate, DateTimeFormatter.ofPattern(shortDateFormat));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Billy026"},"content":"        assertTrue(DateManager.isSameDay(matchingDate, date, false));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Billy026"},"content":"        assertTrue(DateManager.isSameDay(differentTime, date, false));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Billy026"},"content":"        assertFalse(DateManager.isSameDay(differentDate, date, false));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Billy026"},"content":"    public void isSameDay_longFormatWithTime_correctBooleansReturned() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Billy026"},"content":"        String matchingDate \u003d \"01 January 2025 10:30\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Billy026"},"content":"        String differentTime \u003d \"01 January 2025 11:00\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Billy026"},"content":"        String differentDate \u003d \"02 January 2025 11:00\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Billy026"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(matchingDate, DateTimeFormatter.ofPattern(longDateFormat));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Billy026"},"content":"        assertTrue(DateManager.isSameDay(matchingDate, date, true));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Billy026"},"content":"        assertFalse(DateManager.isSameDay(differentTime, date, true));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Billy026"},"content":"        assertFalse(DateManager.isSameDay(differentDate, date, true));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Billy026"},"content":"    public void isSameDay_longFormatWithoutTime_correctBooleansReturned() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Billy026"},"content":"        String matchingDate \u003d \"01 January 2025 10:30\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Billy026"},"content":"        String differentTime \u003d \"01 January 2025 11:00\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Billy026"},"content":"        String differentDate \u003d \"02 January 2025 11:00\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Billy026"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(matchingDate, DateTimeFormatter.ofPattern(longDateFormat));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Billy026"},"content":"        assertTrue(DateManager.isSameDay(matchingDate, date, false));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Billy026"},"content":"        assertTrue(DateManager.isSameDay(differentTime, date, false));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Billy026"},"content":"        assertFalse(DateManager.isSameDay(differentDate, date, false));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Billy026"},"content":"    public void checkForValidEventDates_validEventDates_returnedSuccessfully() {","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Billy026"},"content":"        String[] inputPartsShortDate \u003d new String[] {\"task\", \"01/01/2025 10:00\", \"01/01/2025 11:00\"};","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Billy026"},"content":"        String[] inputPartsLongDate \u003d new String[] {\"task\", \"01 May 2025 10:00\", \"01 May 2025 11:00\"};","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Billy026"},"content":"            DateManager.checkForValidEventDates(inputPartsShortDate, true);","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Billy026"},"content":"            DateManager.checkForValidEventDates(inputPartsLongDate, true);","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Billy026"},"content":"    public void checkForValidEventDates_invalidEventDates_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Billy026"},"content":"        String[] inputPartsShortDate \u003d new String[] {\"task\", \"01/01/2025 11:00\", \"01/01/2025 10:00\"};","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Billy026"},"content":"        String[] inputPartsLongDate \u003d new String[] {\"task\", \"01 May 2025 11:00\", \"01 May 2025 11:00\"};","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Billy026"},"content":"            () -\u003e DateManager.checkForValidEventDates(inputPartsShortDate, true),","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Billy026"},"content":"            () -\u003e DateManager.checkForValidEventDates(inputPartsLongDate, true),","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:51:04","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-31T20:15:37","isFullCredit":false}],"authorContributionMap":{"Billy026":262}},{"path":"src/test/java/Bob/managers/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.managers;","lastModifiedDate":"2025-02-12T16:59:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    //private Parser parser;","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"        //this.parser \u003d new Parser(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-02-05T21:43:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    public void createTask_noTaskName_taskNotAddedSuccessfully() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        ","lastModifiedDate":"2025-02-03T17:32:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    public void createTask_noDate_taskNotAddedSucessfully() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    public void createTask_eventUsingBy_taskNotAddedSuccessfully() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    public void deleteTask_invalidIndex_taskNotDeletedSuccessfully() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    public void markTask_invalidIndex_taskNotMarkedSuccessfully() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"    public void unmarkTask_invalidIndex_taskNotUnmarkedSuccessfully() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"    // displayIncomingDeadlines tested by taskManager","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false}],"authorContributionMap":{"Billy026":45}},{"path":"src/test/java/Bob/managers/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package Bob.managers;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"import Bob.tasks.Task;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"import Bob.tasks.ToDo;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    private Storage storage ;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"        this.storage \u003d new Storage(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    @AfterEach","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    public void tearDown() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"    public void saveTask_validTask_taskIsSaved() throws IOException {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"Test Task\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"        this.storage.saveTask(todo);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"            assertEquals(\"[ ] | T | Test Task\", reader.readLine());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"    public void loadTasks_existingFile_tasksAreLoaded() throws IOException {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"test_data/test_tasks.txt\"))) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"            writer.write(\"[ ] | T | Task 1\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"            writer.newLine();","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"            writer.write(\"[ ] | T | Task 2\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"            writer.newLine();","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"        this.storage.loadTasks(loadedTasks::add);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"        assertEquals(2, loadedTasks.size());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"        assertEquals(\"[ ] | T | Task 1\", loadedTasks.get(0).toString());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        assertEquals(\"[ ] | T | Task 2\", loadedTasks.get(1).toString());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"    public void loadTasks_noFile_printsNoSavedTasks() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"        this.storage.loadTasks(loadedTasks::add);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"        assertTrue(loadedTasks.isEmpty());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"    public void rewriteTaskList_validTasks_fileContainsCorrectData() throws IOException {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"        List\u003cTask\u003e tasks \u003d List.of(new ToDo(\"Task A\"), new ToDo(\"Task B\"));","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"        this.storage.rewriteTaskList(tasks);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"            assertEquals(\"[ ] | T | Task A\", reader.readLine());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"            assertEquals(\"[ ] | T | Task B\", reader.readLine());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"    public void saveTask_ioException_ioExceptionHandled() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"        String invalidPath \u003d \"/invalid/path/test_data/test_tasks.txt\";","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"        Storage faultyStorage \u003d new Storage(invalidPath);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"Invalid Task\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"        assertDoesNotThrow(() -\u003e faultyStorage.saveTask(todo));","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false}],"authorContributionMap":{"Billy026":105}},{"path":"src/test/java/Bob/managers/TaskManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.managers;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-23T15:58:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"import javafx.util.Pair;","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"public class TaskManagerTest {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    private static final String shortDateFormat \u003d \"dd/MM/yyyy HH:mm\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:58:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"    @AfterEach","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    public void cleanUp() {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:58:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"    public void addTask_validTask_taskAddedSuccessfully() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"T\", new String[]{\"todo\"});","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"D\", new String[]{\"deadline\", \"31/10/2025\"});","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"E\", new String[]{\"event\", \"31/10/2025\", \"31/10/2025\"});","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"            assertEquals(this.taskManager.getTask(0).toString(), \"[ ] | T | todo\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"            assertEquals(this.taskManager.getTask(1).toString(),","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"                    \"[ ] | D | deadline | by: 31/10/2025\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"            assertEquals(this.taskManager.getTask(2).toString(),","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"                    \"[ ] | E | event | from: 31/10/2025 | to: 31/10/2025\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"    public void addTask_taskAlreadyExists_exceptionThrown() {","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"T\", new String[]{\"todo\"});","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            assertEquals(this.taskManager.getTask(0).toString(), \"[ ] | T | todo\");","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"            () -\u003e this.taskManager.addTask(\"T\", new String[]{\"todo\"}),","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"            this.taskManager.markTask(0, true);","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"            assertEquals(this.taskManager.getTask(0).toString(), \"[X] | T | todo\");","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"            () -\u003e this.taskManager.addTask(\"T\", new String[]{\"todo\"}),","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T21:01:49","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"    public void addTask_invalidTask_exceptionThrown() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"            () -\u003e this.taskManager.addTask(\"J\", new String[]{\"junit\"}),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"    public void deleteTask_validIndex_taskDeletedSuccessfully() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"T\", new String[]{\"todo\"});","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"        assertEquals(this.taskManager.getSize(), 1);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"        this.taskManager.deleteTask(0);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"        assertEquals(this.taskManager.getSize(), 0);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"    public void deleteTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"            IndexOutOfBoundsException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"            () -\u003e this.taskManager.deleteTask(0),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"    public void markTask_markIncompleteTask_taskMarkedSuccessfully() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"T\", new String[]{\"todo\"});","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"        assertEquals(this.taskManager.getSize(), 1);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"            this.taskManager.markTask(0, true);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"            assertEquals(this.taskManager.getTask(0).toString(), \"[X] | T | todo\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"    public void markTask_unmarkCompletedTask_taskUnmarkedSuccessfully() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"T\", new String[]{\"todo\"});","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Billy026"},"content":"        assertEquals(this.taskManager.getSize(), 1);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Billy026"},"content":"            this.taskManager.markTask(0, true);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Billy026"},"content":"            assertEquals(this.taskManager.getTask(0).toString(), \"[X] | T | todo\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Billy026"},"content":"            this.taskManager.markTask(0, false);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Billy026"},"content":"            assertEquals(this.taskManager.getTask(0).toString(), \"[ ] | T | todo\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Billy026"},"content":"    public void markTask_markCompletedTask_taskMarkedUnsuccessfully() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"T\", new String[]{\"todo\"});","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Billy026"},"content":"            assertEquals(this.taskManager.getSize(), 1);","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Billy026"},"content":"            this.taskManager.markTask(0, true);","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Billy026"},"content":"            assertEquals(this.taskManager.getTask(0).toString(), \"[X] | T | todo\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Billy026"},"content":"            () -\u003e this.taskManager.markTask(0, true),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Billy026"},"content":"    public void markTask_unmarkIncompleteTask_taskUnmarkedUnsuccessfully() {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"T\", new String[]{\"todo\"});","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Billy026"},"content":"        assertEquals(this.taskManager.getSize(), 1);","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Billy026"},"content":"            () -\u003e this.taskManager.markTask(0, false),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Billy026"},"content":"    public void getMatchingTasks_containsMatchingTasks_correctOutput() {","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"T\", new String[]{\"todo\"});","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"D\", new String[]{\"hello\", \"10/10/2025\"});","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"E\", new String[]{\"toddler\", \"10/10/2025\", \"10/10/2025\"});","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Billy026"},"content":"        List\u003cTask\u003e matchingTasks \u003d this.taskManager.getMatchingTasks(\"tod\");","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Billy026"},"content":"        assertEquals(matchingTasks.size(), 2);","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Billy026"},"content":"        assertEquals(matchingTasks.get(0).toString(), \"[ ] | T | todo\");","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Billy026"},"content":"        assertEquals(matchingTasks.get(1).toString(),","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Billy026"},"content":"                \"[ ] | E | toddler | from: 10/10/2025 | to: 10/10/2025\");","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Billy026"},"content":"    public void getMatchingTasks_noMatchingTasks_correctOutput() {","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Billy026"},"content":"        this.taskManager \u003d new TaskManager(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"T\", new String[]{\"todo\"});","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"D\", new String[]{\"hello\", \"10/10/2025\"});","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"E\", new String[]{\"toddler\", \"10/10/2025\", \"10/10/2025\"});","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Billy026"},"content":"        List\u003cTask\u003e matchingTasks \u003d this.taskManager.getMatchingTasks(\"supermegacalifricious\");","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Billy026"},"content":"        assertEquals(matchingTasks.size(), 0);","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Billy026"},"content":"    public void displayIncomingDeadlines_bothIncomingAndNonIncoming_correctOutput() {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Billy026"},"content":"        // Set up tasks","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Billy026"},"content":"        String currDate \u003d LocalDateTime.now().format(DateTimeFormatter.ofPattern(shortDateFormat));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Billy026"},"content":"        String nextDate \u003d LocalDateTime.now().plusDays(1)","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Billy026"},"content":"                .format(DateTimeFormatter.ofPattern(shortDateFormat));","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"D\", new String[]{\"deadline\", currDate});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"D\", new String[]{\"other deadline\", nextDate});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"E\", new String[]{\"event\", currDate, nextDate});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d this.taskManager.displayIncomingDeadlines();","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"    Here\u0027s today\u0027s incoming tasks:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | D | deadline | by: \" + currDate + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | E | event | from: \" + currDate + \" | to: \" + nextDate + \"\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Billy026"},"content":"            assertEquals(","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Billy026"},"content":"                expectedOutput.trim().replace(\"\\r\\n\", \"\\n\"),","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Billy026"},"content":"                actualOutput.toString().trim().replace(\"\\r\\n\", \"\\n\"));","lastModifiedDate":"2025-02-14T11:31:23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Billy026"},"content":"    public void displayIncomingDeadlines_noIncomingDeadlines_correctOutput() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Billy026"},"content":"        // Set up tasks","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Billy026"},"content":"        String nextDate \u003d LocalDateTime.now().plusDays(1)","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Billy026"},"content":"                .format(DateTimeFormatter.ofPattern(shortDateFormat));","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"D\", new String[]{\"other deadline\", nextDate});","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d this.taskManager.displayIncomingDeadlines();","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"You...don\u0027t have any incoming tasks today.\\n\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Billy026"},"content":"            assertEquals(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Billy026"},"content":"                expectedOutput.trim().replace(\"\\r\\n\", \"\\n\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Billy026"},"content":"                actualOutput.toString().trim().replace(\"\\r\\n\", \"\\n\"));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Billy026"},"content":"    public void displaySameDeadines_hasSameDeadlinesWithTime_correctOutput() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Billy026"},"content":"        String date1 \u003d \"20/02/2025 10:30\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Billy026"},"content":"        String date2 \u003d \"21/02/2025 09:30\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"D\", new String[]{\"deadline\", date1});","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"D\", new String[]{\"other deadline\", date2});","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"E\", new String[]{\"event\", date1, date2});","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Billy026"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(date1, DateTimeFormatter.ofPattern(shortDateFormat));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d this.taskManager.displaySameDeadlines(new Pair\u003c\u003e(date, true));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Here\u0027s the tasks due at that date:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | D | deadline | by: \" + date1 + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | E | event | from: \" + date1 + \" | to: \" + date2 + \"\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Billy026"},"content":"            assertEquals(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Billy026"},"content":"                expectedOutput.trim().replace(\"\\r\\n\", \"\\n\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Billy026"},"content":"                actualOutput.toString().trim().replace(\"\\r\\n\", \"\\n\"));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Billy026"},"content":"    public void displaySameDeadines_hasSameDeadlinesWithoutTime_correctOutput() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Billy026"},"content":"        String date1 \u003d \"20/02/2025 10:30\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Billy026"},"content":"        String date2 \u003d \"20/02/2025 11:30\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"D\", new String[]{\"deadline\", date1});","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"D\", new String[]{\"other deadline\", date2});","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"E\", new String[]{\"event\", date1, date2});","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Billy026"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(date1, DateTimeFormatter.ofPattern(shortDateFormat));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d this.taskManager.displaySameDeadlines(new Pair\u003c\u003e(date, false));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"Here\u0027s the tasks due at that date:\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | D | deadline | by: \" + date1 + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | D | other deadline | by: \" + date2 + \"\\n\"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Billy026"},"content":"                    + \"[ ] | E | event | from: \" + date1 + \" | to: \" + date2 + \"\\n\";","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Billy026"},"content":"            assertEquals(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Billy026"},"content":"                expectedOutput.trim().replace(\"\\r\\n\", \"\\n\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Billy026"},"content":"                actualOutput.toString().trim().replace(\"\\r\\n\", \"\\n\"));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Billy026"},"content":"    public void displaySameDeadines_noSameDealines_correctOutput() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Billy026"},"content":"        String date1 \u003d \"20/02/2025 10:30\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Billy026"},"content":"        String date2 \u003d \"21/02/2025 11:30\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Billy026"},"content":"        String notMatchingDate \u003d \"01/01/2024 00:00\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"D\", new String[]{\"deadline\", date1});","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"D\", new String[]{\"other deadline\", date2});","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"E\", new String[]{\"event\", date1, date2});","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Billy026"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(notMatchingDate,","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Billy026"},"content":"                    DateTimeFormatter.ofPattern(shortDateFormat));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Billy026"},"content":"            String actualOutput \u003d this.taskManager.displaySameDeadlines(new Pair\u003c\u003e(date, false));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Billy026"},"content":"            String expectedOutput \u003d \"You...don\u0027t have any tasks due that day!\\n\";","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Billy026"},"content":"            assertEquals(","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Billy026"},"content":"                expectedOutput.trim().replace(\"\\r\\n\", \"\\n\"),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Billy026"},"content":"                actualOutput.toString().trim().replace(\"\\r\\n\", \"\\n\"));","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Billy026"},"content":"    public void getSavedListMessage_hasSavedTasks_correctOutput() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Billy026"},"content":"            this.taskManager.addTask(\"T\", new String[]{\"todo\"});","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Billy026"},"content":"            assertEquals(this.taskManager.getSavedListMessage(),","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Billy026"},"content":"                    \"Huh, seems like you already have a saved task list.\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Billy026"},"content":"    public void getSavedListMessage_noSavedTasks_correctOutput() {","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Billy026"},"content":"        assertEquals(this.taskManager.getSavedListMessage(), \"There\u0027s...no tasks right now.\");","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-20T20:25:24","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-31T22:15:54","isFullCredit":false}],"authorContributionMap":{"Billy026":376}},{"path":"src/test/java/Bob/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.parser;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import static org.mockito.Mockito.doReturn;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-23T15:58:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"import bob.parser.Parser.Actions;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    private Parser parser;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"        this.parser \u003d Mockito.spy(new Parser(Paths.get(\"test_data\", \"test_tasks.txt\").toString()));","lastModifiedDate":"2025-02-23T15:58:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    @AfterEach","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"    public void cleanUp() {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:58:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"    public void parseCommand_todoCommand_reachedSuccessfully() throws InvalidCommandException {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"        doReturn(Actions.TODO).when(parser).convertToActions(\"todo\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"todo\", \"buy milk\"});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"        verify(parser).convertToActions(\"todo\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"    public void parseCommand_deadlineCommand_reachedSuccessfully() throws InvalidCommandException {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"        doReturn(Actions.DEADLINE).when(parser).convertToActions(\"deadline\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"deadline\", \"assignment\", \"/by\", \"30/01/2025\"});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"        verify(parser).convertToActions(\"deadline\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"    public void parseCommand_eventCommand_reachedSuccessfully() throws InvalidCommandException {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"        doReturn(Actions.EVENT).when(parser).convertToActions(\"event\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"event\", \"meeting\", \"/from\", \"30/01/2025\", \"/to\", \"31/01/2025\"});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"        verify(parser).convertToActions(\"event\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"    public void parseCommand_deleteCommand_reachedSuccessfully() throws InvalidCommandException {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"todo\", \"buy milk\"});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"        doReturn(Actions.DELETE).when(parser).convertToActions(\"delete\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"delete\", \"1\"});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"        verify(parser).convertToActions(\"delete\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"    public void parseCommand_listCommand_reachedSuccessfully() throws InvalidCommandException {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"        doReturn(Actions.LIST).when(parser).convertToActions(\"list\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"list\"});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"        verify(parser).convertToActions(\"list\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"    public void parseCommand_getDueDateCommand_reachedSuccessfully() throws InvalidCommandException {","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"        doReturn(Actions.GETDUEDATE).when(parser).convertToActions(\"getDueDate\");","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"getDueDate\", \"24/4/25\", \"10:30\"});","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"        verify(parser).convertToActions(\"getDueDate\");","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"    public void parseCommand_findCommand_reachedSuccessfully() throws InvalidCommandException {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"        doReturn(Actions.FIND).when(parser).convertToActions(\"find\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"find\", \"read\"});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"        verify(parser).convertToActions(\"find\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"    public void parseCommand_markCommand_reachedSuccessfully() throws InvalidCommandException {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"todo\", \"buy milk\"});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"        doReturn(Actions.MARK).when(parser).convertToActions(\"mark\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"mark\", \"1\"});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"        verify(parser).convertToActions(\"mark\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"    public void parseCommand_unmarkCommand_reachedSuccessfully() throws InvalidCommandException {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"todo\", \"buy milk\"});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"mark\", \"1\"});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"        doReturn(Actions.UNMARK).when(parser).convertToActions(\"unmark\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"unmark\", \"1\"});","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"        verify(parser).convertToActions(\"unmark\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"    public void parseCommand_helpCommand_reachedSuccessfully() throws InvalidCommandException {","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"        doReturn(Actions.HELP).when(parser).convertToActions(\"help\");","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"        parser.parseCommand(new String[]{\"help\"});","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"        verify(parser).convertToActions(\"help\");","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-23T16:16:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"    public void convertToActions_validCommand_correctOutput() {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"            assertEquals(parser.convertToActions(\"todo\"), Actions.TODO);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"            assertEquals(parser.convertToActions(\"deadline\"), Actions.DEADLINE);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"            assertEquals(parser.convertToActions(\"event\"), Actions.EVENT);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"            assertEquals(parser.convertToActions(\"delete\"), Actions.DELETE);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"            assertEquals(parser.convertToActions(\"list\"), Actions.LIST);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"            assertEquals(parser.convertToActions(\"getDueDate\"), Actions.GETDUEDATE);","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"            assertEquals(parser.convertToActions(\"find\"), Actions.FIND);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"            assertEquals(parser.convertToActions(\"mark\"), Actions.MARK);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"            assertEquals(parser.convertToActions(\"unmark\"), Actions.UNMARK);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"    public void convertToActions_invalidCommand_exceptionThrown() {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"            () -\u003e parser.convertToActions(null),","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"            () -\u003e parser.convertToActions(\"get due date\"),","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"            InvalidCommandException.class,","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"            () -\u003e parser.convertToActions(\"1234@abcd\"),","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-18T21:43:51","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false}],"authorContributionMap":{"Billy026":145}},{"path":"src/test/java/Bob/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.storage;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import java.io.File;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-23T15:59:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"import java.util.List;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"import bob.tasks.Task;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"import bob.tasks.ToDo;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        this.storage \u003d new Storage(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    @AfterEach","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    public void tearDown() {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(Paths.get(\"test_data\", \"test_tasks.txt\").toString());","lastModifiedDate":"2025-02-23T15:59:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"    public void saveTask_validTask_taskIsSaved() throws IOException {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"Test Task\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"        this.storage.saveTask(todo);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"            assertEquals(\"[ ] | T | Test Task\", reader.readLine());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"    public void loadTasks_existingFile_tasksAreLoaded() throws IOException {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"test_data/test_tasks.txt\"))) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"            writer.write(\"[ ] | T | Task 1\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            writer.newLine();","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"            writer.write(\"[ ] | T | Task 2\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"            writer.newLine();","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"        this.storage.loadTasks(loadedTasks::add);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"        assertEquals(2, loadedTasks.size());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        assertEquals(\"[ ] | T | Task 1\", loadedTasks.get(0).toString());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"        assertEquals(\"[ ] | T | Task 2\", loadedTasks.get(1).toString());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"    public void loadTasks_noFile_printsNoSavedTasks() {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"            file.delete();","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"        this.storage.loadTasks(loadedTasks::add);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"        assertTrue(loadedTasks.isEmpty());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"    public void rewriteTaskList_validTasks_fileContainsCorrectData() throws IOException {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"        List\u003cTask\u003e tasks \u003d List.of(new ToDo(\"Task A\"), new ToDo(\"Task B\"));","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"        this.storage.rewriteTaskList(tasks);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"        File file \u003d new File(\"test_data/test_tasks.txt\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"            assertEquals(\"[ ] | T | Task A\", reader.readLine());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"            assertEquals(\"[ ] | T | Task B\", reader.readLine());","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"    public void saveTask_handlesIoException() {","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"        String invalidPath \u003d \"/invalid/path/test_data/test_tasks.txt\";","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"        Storage faultyStorage \u003d new Storage(invalidPath);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"Invalid Task\");","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"        assertDoesNotThrow(() -\u003e faultyStorage.saveTask(todo));","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false}],"authorContributionMap":{"Billy026":108}},{"path":"src/test/java/Bob/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.tasks;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"    public void toString_defaultConstructor_correctOutput() {","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"        Deadline deadline \u003d new Deadline(\"new task\", \"31/01/2025\");","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"        assertEquals(deadline.toString(), \"[ ] | D | new task | by: 31/01/2025\");","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    public void toString_isCompleted_correctOutput() {","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        Deadline deadline \u003d new Deadline(\"completed task\", \"31/01/2025\", true);","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"        assertEquals(deadline.toString(), \"[X] | D | completed task | by: 31/01/2025\");","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    public void toString_isNotCompleted_correctOutput() {","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        Deadline deadline \u003d new Deadline(\"incomplete task\", \"31/01/2025\", false);","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        assertEquals(deadline.toString(), \"[ ] | D | incomplete task | by: 31/01/2025\");","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false}],"authorContributionMap":{"Billy026":25}},{"path":"src/test/java/Bob/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.tasks;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"public class EventTest {","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"    public void toString_defaultConstructor_correctOutput() {","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"        Event event \u003d new Event(\"new task\", \"31/01/2025\", \"31/01/2025\");","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"        assertEquals(event.toString(), \"[ ] | E | new task | from: 31/01/2025 | to: 31/01/2025\");","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    public void toString_isCompleted_correctOutput() {","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        Event event \u003d new Event(","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"                \"completed task\", \"31/01/2025\", \"31/01/2025\", true);","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"        assertEquals(event.toString(), \"[X] | E | completed task | from: 31/01/2025 | to: 31/01/2025\");","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    public void toString_isNotCompleted_correctOutput() {","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        Event event \u003d new Event(","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"                \"incomplete task\", \"31/01/2025\", \"31/01/2025\", false);","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"        assertEquals(event.toString(), \"[ ] | E | incomplete task | from: 31/01/2025 | to: 31/01/2025\");","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false}],"authorContributionMap":{"Billy026":27}},{"path":"src/test/java/Bob/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.tasks;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"import bob.exceptions.InvalidTaskOperationException;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"public class TaskTest {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    public void check_incompleteTask_taskMarked() {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"todo\", false);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", \"31/01/2025\", false);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"        Event event \u003d new Event(\"event\", \"31/01/2025\", \"31/01/2025\", false);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"        assertEquals(todo.toString(), \"[ ] | T | todo\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"        assertEquals(deadline.toString(), \"[ ] | D | deadline | by: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        assertEquals(event.toString(), \"[ ] | E | event | from: 31/01/2025 | to: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"            todo.markTask();","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"            deadline.markTask();","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"            event.markTask();","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"            assertEquals(todo.toString(), \"[X] | T | todo\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"            assertEquals(deadline.toString(), \"[X] | D | deadline | by: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"            assertEquals(event.toString(), \"[X] | E | event | from: 31/01/2025 | to: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"    public void check_completedTask_exceptionThrown() {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"todo\", true);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", \"31/01/2025\", true);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"        Event event \u003d new Event(\"event\", \"31/01/2025\", \"31/01/2025\", true);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"        assertEquals(todo.toString(), \"[X] | T | todo\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"        assertEquals(deadline.toString(), \"[X] | D | deadline | by: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"        assertEquals(event.toString(), \"[X] | E | event | from: 31/01/2025 | to: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"            () -\u003e todo.markTask(),","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"            () -\u003e deadline.markTask(),","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"            () -\u003e event.markTask(),","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"    public void uncheck_completedTask_taskMarked() {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"todo\", true);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", \"31/01/2025\", true);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        Event event \u003d new Event(\"event\", \"31/01/2025\", \"31/01/2025\", true);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"        assertEquals(todo.toString(), \"[X] | T | todo\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"        assertEquals(deadline.toString(), \"[X] | D | deadline | by: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"        assertEquals(event.toString(), \"[X] | E | event | from: 31/01/2025 | to: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"            todo.unmarkTask();","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"            deadline.unmarkTask();","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"            event.unmarkTask();","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"            assertEquals(todo.toString(), \"[ ] | T | todo\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"            assertEquals(deadline.toString(), \"[ ] | D | deadline | by: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"            assertEquals(event.toString(), \"[ ] | E | event | from: 31/01/2025 | to: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"    public void uncheck_incompleteTask_exceptionThrown() {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"todo\", false);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", \"31/01/2025\", false);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"        Event event \u003d new Event(\"event\", \"31/01/2025\", \"31/01/2025\", false);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"        assertEquals(todo.toString(), \"[ ] | T | todo\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"        assertEquals(deadline.toString(), \"[ ] | D | deadline | by: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"        assertEquals(event.toString(), \"[ ] | E | event | from: 31/01/2025 | to: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"            () -\u003e todo.unmarkTask(),","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"            () -\u003e deadline.unmarkTask(),","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"            InvalidTaskOperationException.class,","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"            () -\u003e event.unmarkTask(),","lastModifiedDate":"2025-02-21T14:02:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"    public void getFromSaveFormat_correctFormat_correctTaskReturned() {","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"            Task todo \u003d Task.getFromSaveFormat(\"[ ] | T | todo\");","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"            Task deadline \u003d Task.getFromSaveFormat(\"[ ] | D | deadline | by: 31 January 2025\");","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"            Task event \u003d Task.getFromSaveFormat(\"[ ] | E | event | from: 31/01/2025 | to: 31/01/2025\");","lastModifiedDate":"2025-02-03T17:55:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"            assertTrue(todo.isTaskType(\"T\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"            assertTrue(deadline.isTaskType(\"D\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"            assertTrue(event.isTaskType(\"E\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"            assertEquals(todo.toString(), \"[ ] | T | todo\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"            assertEquals(deadline.toString(), \"[ ] | D | deadline | by: 31 January 2025\");","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"            assertEquals(event.toString(), \"[ ] | E | event | from: 31/01/2025 | to: 31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"            fail(\"Exception should not have been thrown: \" + e.getMessage());","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"    public void getFromSaveFormat_incorrectFormat_exceptionThrown() {","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"            IllegalArgumentException.class,","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"            () -\u003e Task.getFromSaveFormat(\"[ ] | todo\"),","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"        assertThrows(","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"            IllegalArgumentException.class,","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"            () -\u003e Task.getFromSaveFormat(\"[ ] | J | junit\"),","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"            \"Exception should have been thrown.\"","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"        );","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"    public void isTaskType_correctTaskType_trueReturned() {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Billy026"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", \"31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Billy026"},"content":"        Event event \u003d new Event(\"event\", \"31/01/2025\", \"31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Billy026"},"content":"        assertTrue(todo.isTaskType(\"T\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Billy026"},"content":"        assertTrue(deadline.isTaskType(\"D\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Billy026"},"content":"        assertTrue(event.isTaskType(\"E\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Billy026"},"content":"    public void isTaskType_incorrectTaskType_falseReturned() {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Billy026"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", \"31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Billy026"},"content":"        Event event \u003d new Event(\"event\", \"31/01/2025\", \"31/01/2025\");","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Billy026"},"content":"        assertFalse(todo.isTaskType(\"D\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Billy026"},"content":"        assertFalse(todo.isTaskType(\"E\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Billy026"},"content":"        assertFalse(deadline.isTaskType(\"T\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Billy026"},"content":"        assertFalse(deadline.isTaskType(\"E\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Billy026"},"content":"        assertFalse(event.isTaskType(\"T\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Billy026"},"content":"        assertFalse(event.isTaskType(\"D\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Billy026"},"content":"    public void contains_containsString_trueReturned() {","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Billy026"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", \"31/01/2025\");","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Billy026"},"content":"        Event event \u003d new Event(\"event\", \"31/01/2025\", \"31/01/2025\");","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Billy026"},"content":"        assertTrue(todo.contains(\"tod\"));","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Billy026"},"content":"        assertTrue(deadline.contains(\"line\"));","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Billy026"},"content":"        assertTrue(event.contains(\"vent\"));","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Billy026"},"content":"    public void contains_doesNotContainString_falseReturned() {","lastModifiedDate":"2025-02-18T21:27:35","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Billy026"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", \"31/01/2025\");","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Billy026"},"content":"        Event event \u003d new Event(\"event\", \"31/01/2025\", \"31/01/2025\");","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Billy026"},"content":"        assertFalse(todo.contains(\"TOD\"));","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Billy026"},"content":"        assertFalse(deadline.contains(\"Line\"));","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Billy026"},"content":"        assertFalse(event.contains(\"hi\"));","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T23:01:56","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false}],"authorContributionMap":{"Billy026":192}},{"path":"src/test/java/Bob/tasks/TaskWithDeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.tasks;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"public class TaskWithDeadlineTest {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    public void isIncoming_isSameDay_trueReturned() {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"        String currDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"        Deadline deadlineDueToday \u003d new Deadline(\"deadline\", currDate);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"        Event eventDueToday \u003d new Event(\"event\", currDate, currDate);","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"        //assertTrue(deadlineDueToday.isIncoming());","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"        //assertTrue(eventDueToday.isIncoming());","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    public void isIncoming_isNotSameDay_falseReturned() {","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        String nextDate \u003d LocalDate.now().plusDays(1).","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"                format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"        Deadline deadlineDueToday \u003d new Deadline(\"deadline\", nextDate);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"        Event eventDueToday \u003d new Event(\"event\", nextDate, nextDate);","lastModifiedDate":"2025-02-03T21:23:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"        //assertFalse(deadlineDueToday.isIncoming());","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        //assertFalse(eventDueToday.isIncoming());","lastModifiedDate":"2025-02-18T21:04:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-31T17:45:21","isFullCredit":false}],"authorContributionMap":{"Billy026":31}},{"path":"src/test/java/Bob/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"package bob.tasks;","lastModifiedDate":"2025-02-07T13:57:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-02-21T15:07:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"public class ToDoTest {","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"    public void toString_defaultConstructor_correctOutput() {","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"new task\");","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"        assertEquals(todo.toString(), \"[ ] | T | new task\");","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    public void toString_isCompleted_correctOutput() {","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"completed task\", true);","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"        assertEquals(todo.toString(), \"[X] | T | completed task\");","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    @Test","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"    public void toString_isNotCompleted_correctOutput() {","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"        ToDo todo \u003d new ToDo(\"incomplete task\", false);","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        assertEquals(todo.toString(), \"[ ] | T | incomplete task\");","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-31T19:05:05","isFullCredit":false}],"authorContributionMap":{"Billy026":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"hi","lastModifiedDate":"2025-01-21T21:46:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"mark","lastModifiedDate":"2025-01-21T22:08:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"unmark","lastModifiedDate":"2025-01-21T22:08:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"mark 1","lastModifiedDate":"2025-01-21T22:08:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"unmark 1","lastModifiedDate":"2025-01-21T22:08:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"mark a","lastModifiedDate":"2025-01-21T22:08:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"unmark a","lastModifiedDate":"2025-01-21T22:08:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"todo","lastModifiedDate":"2025-01-21T22:08:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"todo read books","lastModifiedDate":"2025-01-21T20:49:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"deadline","lastModifiedDate":"2025-01-21T22:08:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"deadline submit assignment","lastModifiedDate":"2025-01-21T21:46:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"deadline submit assignment /by Sunday","lastModifiedDate":"2025-01-21T20:49:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"mark 1","lastModifiedDate":"2025-01-21T20:49:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"event","lastModifiedDate":"2025-01-21T22:08:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"event meeting with project team","lastModifiedDate":"2025-01-21T21:46:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"event meeting with project team /from Saturday 8pm","lastModifiedDate":"2025-01-21T21:46:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"event meeting with project team /to 9pm","lastModifiedDate":"2025-01-21T21:46:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"event meeting with project team /from Saturday 8pm /to 9pm","lastModifiedDate":"2025-01-21T20:49:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"mark 1","lastModifiedDate":"2025-01-21T20:49:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"hello","lastModifiedDate":"2025-01-21T21:46:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"mark 2","lastModifiedDate":"2025-01-21T20:49:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"unmark 2","lastModifiedDate":"2025-01-21T20:49:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"unmark 2","lastModifiedDate":"2025-01-21T20:49:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"list","lastModifiedDate":"2025-01-21T20:49:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"delete","lastModifiedDate":"2025-01-21T22:24:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"delete a","lastModifiedDate":"2025-01-21T22:24:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"delete 5","lastModifiedDate":"2025-01-21T22:24:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"delete 2","lastModifiedDate":"2025-01-21T22:24:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"list","lastModifiedDate":"2025-01-21T22:24:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"bye","lastModifiedDate":"2025-01-21T20:49:19","isFullCredit":false}],"authorContributionMap":{"Billy026":30}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"java -classpath ..\\bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21T20:49:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"Billy026":1,"-":20}}]
