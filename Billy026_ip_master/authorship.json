[{"path":"src/main/java/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"import java.lang.StringBuffer;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":" * Main class for IP","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"public class Bob {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"        greeting();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"        storeAndList();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"        // Clean up","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        sc.close();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"     * Displays a greeting on launch of main activity","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    private static void greeting() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        // Printing of logo","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"        String logo \u003d ","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"                  \"      ____        _        \\n\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"                + \"     |  _ \\\\      | |      \\n\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"                + \"     | |_| |     | |       \\n\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"                + \"     |    /  ___ | | __    \\n\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"                + \"     |  _ \\\\ / _ \\\\| |/_ \\\\\\n\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"                + \"     | |_| | |_| |  |_| |  \\n\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"                + \"     |____/ \\\\___/|_|\\\\__/ \\n\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        System.out.println(\"    Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"    __________________________________________________________________________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"        // Initial greeting","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"    Hi, I\u0027m Bob!\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"    Can I do something for you?\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"    __________________________________________________________________________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"        System.out.println();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"     * Allows storing and displaying of commands","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"    private static void storeAndList() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"        ArrayList\u003cTask\u003e commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"        // Performs different operations depending on user input","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"        while(true) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"            String[] input \u003d sc.nextLine().split(\" \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    __________________________________________________________________________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"            if (input[0].equals(\"bye\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"                break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Billy026"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Billy026"},"content":"                executeCommand(input, commands);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Billy026"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Billy026"},"content":"                System.out.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    __________________________________________________________________________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Billy026"},"content":"            System.out.println();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"    Bye! See you soon!\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"    __________________________________________________________________________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Billy026"},"content":"     * If statement that handles the logic of inputted commands","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Billy026"},"content":"     * @param input user input converted to an array","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Billy026"},"content":"     * @param commands list of added tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Billy026"},"content":"     * When an invalid command has been inputted.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Billy026"},"content":"    public static void executeCommand(String[] input, ArrayList\u003cTask\u003e commands) throws InvalidCommandException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Billy026"},"content":"        if (input[0].equals(\"todo\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Billy026"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Billy026"},"content":"                toDoTask(input, commands);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Billy026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Billy026"},"content":"                throw new InvalidCommandException(\"Please give a name to the ToDo task.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Billy026"},"content":"        } else if (input[0].equals(\"deadline\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Billy026"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Billy026"},"content":"                deadlineTask(input, commands);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Billy026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Billy026"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Billy026"},"content":"                    \"You did not provide a date or time.\\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Billy026"},"content":"                    \"    Please format your input as: deadline \u003ctask name\u003e /by \u003cdate/time\u003e.\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Billy026"},"content":"                );","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Billy026"},"content":"        } else if (input[0].equals(\"event\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Billy026"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Billy026"},"content":"                eventTask(input, commands);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Billy026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Billy026"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Billy026"},"content":"                    \"You did not provide either a start date/time or an end date/time.\\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Billy026"},"content":"                    \"    Please format your input as: event \u003ctask name\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e.\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Billy026"},"content":"                );","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Billy026"},"content":"        } else if (input[0].equals(\"delete\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Billy026"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Billy026"},"content":"                if (!Character.isDigit(input[1].charAt(0))) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Billy026"},"content":"                    throw new InvalidCommandException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Billy026"},"content":"                deleteTask(input[1].charAt(0), commands);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Billy026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Billy026"},"content":"                throw new InvalidCommandException(\"Please indicate which task to delete.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Billy026"},"content":"        } else if (input[0].equals(\"list\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Billy026"},"content":"            listTasks(commands);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Billy026"},"content":"        } else if (input[0].equals(\"mark\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Billy026"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Billy026"},"content":"                if (!Character.isDigit(input[1].charAt(0))) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Billy026"},"content":"                    throw new InvalidCommandException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Billy026"},"content":"                markTask(input, commands);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Billy026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Billy026"},"content":"                throw new InvalidCommandException(\"Please indicate which task to mark.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Billy026"},"content":"        } else if (input[0].equals(\"unmark\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Billy026"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Billy026"},"content":"                if (!Character.isDigit(input[1].charAt(0))) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Billy026"},"content":"                    throw new InvalidCommandException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Billy026"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Billy026"},"content":"                unmarkTask(input, commands);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Billy026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Billy026"},"content":"                throw new InvalidCommandException(\"Please indicate which task to unmark.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Billy026"},"content":"            throw new InvalidCommandException(\"I don\u0027t understand.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Billy026"},"content":"     * Stores a ToDo task in the list of Tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Billy026"},"content":"     * @param input user input converted to an array","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Billy026"},"content":"     * @param commands list of added tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Billy026"},"content":"    private static void toDoTask(String[] input, ArrayList\u003cTask\u003e commands) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Billy026"},"content":"        // Stores a ToDo task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Billy026"},"content":"        StringBuffer sb \u003d new StringBuffer();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Billy026"},"content":"        sb.append(input[1]);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Billy026"},"content":"        for (int i \u003d 2; i \u003c input.length; i++) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Billy026"},"content":"            sb.append(\" \" + input[i]);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Billy026"},"content":"        String command \u003d sb.toString();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Billy026"},"content":"        ToDo task \u003d new ToDo(command);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Billy026"},"content":"        commands.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"    Sure. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"      \" + task.listTask());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"    Now you have \" + commands.size() + \" task\" + ((commands.size() \u003d\u003d 1) ? \"\" : \"s\") + \" in the list.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Billy026"},"content":"     * Stores a Deadline task in the list of Tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Billy026"},"content":"     * @param input user input converted to an array","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Billy026"},"content":"     * @param commands list of added tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Billy026"},"content":"    private static void deadlineTask(String[] input, ArrayList\u003cTask\u003e commands) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Billy026"},"content":"        // Stores a Deadline task","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Billy026"},"content":"        StringBuffer name \u003d new StringBuffer();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Billy026"},"content":"        StringBuffer time \u003d new StringBuffer();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Billy026"},"content":"        boolean change \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Billy026"},"content":"        boolean space \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Billy026"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Billy026"},"content":"            if (input[i].equals(\"/by\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Billy026"},"content":"                change \u003d true;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Billy026"},"content":"                space \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Billy026"},"content":"                continue;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Billy026"},"content":"            ((change) ? time : name).append(((space) ? \" \" : \"\") + input[i]);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Billy026"},"content":"            if (!space) space \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Billy026"},"content":"        String command \u003d name.toString();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Billy026"},"content":"        String duration \u003d time.toString();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Billy026"},"content":"            Deadline task \u003d new Deadline(command, duration);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Billy026"},"content":"            commands.add(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    Sure. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"      \" + task.listTask());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    Now you have \" + commands.size() + \" task\" + ((commands.size() \u003d\u003d 1) ? \"\" : \"s\") + \" in the list.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Billy026"},"content":"            // Invalid formatting","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Billy026"},"content":"     * Stores a Event task in the list of tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Billy026"},"content":"     * @param input user input converted to an array","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Billy026"},"content":"     * @param commands list of added tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Billy026"},"content":"    private static void eventTask(String[] input, ArrayList\u003cTask\u003e commands) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Billy026"},"content":"        // Stores an Event task","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Billy026"},"content":"        StringBuffer name \u003d new StringBuffer();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Billy026"},"content":"        StringBuffer start \u003d new StringBuffer();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Billy026"},"content":"        StringBuffer end \u003d new StringBuffer();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Billy026"},"content":"        int change \u003d 0;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Billy026"},"content":"        boolean space \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Billy026"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Billy026"},"content":"            if (input[i].equals(\"/from\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Billy026"},"content":"                change \u003d 1;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Billy026"},"content":"                space \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Billy026"},"content":"                continue;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Billy026"},"content":"            if (input[i].equals(\"/to\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Billy026"},"content":"                change \u003d 2;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Billy026"},"content":"                space \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Billy026"},"content":"                continue;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Billy026"},"content":"            ((change \u003d\u003d 0) ? name : (change \u003d\u003d 1) ? start : end).append(((space) ? \" \" : \"\") + input[i]);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Billy026"},"content":"            if (!space) space \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Billy026"},"content":"        String command \u003d name.toString();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Billy026"},"content":"        String startTime \u003d start.toString();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Billy026"},"content":"        String endTime \u003d end.toString();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Billy026"},"content":"            Event task \u003d new Event(command, startTime, endTime);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Billy026"},"content":"            commands.add(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    Sure. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"      \" + task.listTask());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    Now you have \" + commands.size() + \" task\" + ((commands.size() \u003d\u003d 1) ? \"\" : \"s\") + \" in the list.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Billy026"},"content":"            // Invalid formatting","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Billy026"},"content":"     * Deletes a task from the list of tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Billy026"},"content":"     * @param c char to transform into task number to delete","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Billy026"},"content":"     * @param commands list of tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Billy026"},"content":"     * When invalid task number given","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Billy026"},"content":"    private static void deleteTask(char c, ArrayList\u003cTask\u003e commands) throws InvalidCommandException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Billy026"},"content":"        int num \u003d c - \u00270\u0027;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Billy026"},"content":"        if (commands.size() \u003c num) throw new InvalidCommandException(\"There is no task with that number.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Billy026"},"content":"        Task task \u003d commands.get(num - 1);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"    Alright. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"      \" + task.listTask());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Billy026"},"content":"        commands.remove(num - 1);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Billy026"},"content":"        System.out.println(\"    Now you have \" + commands.size() + \" task\" + ((commands.size() \u003d\u003d 1) ? \"\" : \"s\") + \" in the list.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Billy026"},"content":"     * Displays all tasks and their status as a numbered list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Billy026"},"content":"     * @param commands list of added tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Billy026"},"content":"    private static void listTasks(ArrayList\u003cTask\u003e commands) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Billy026"},"content":"        // Lists current commands","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Billy026"},"content":"        if (commands.size() !\u003d 0) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Billy026"},"content":"            for (int i \u003d 1; i \u003c\u003d commands.size(); i++) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Billy026"},"content":"                System.out.println(\"    \" + i + \". \" + commands.get(i - 1).listTask());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Billy026"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    There are currently no tasks in your list.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Billy026"},"content":"     * Marks a task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Billy026"},"content":"     * @param input user input converted to an array","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Billy026"},"content":"     * @param commands list of added tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Billy026"},"content":"     * When invalid task number given","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Billy026"},"content":"    private static void markTask(String[] input, ArrayList\u003cTask\u003e commands) throws InvalidCommandException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Billy026"},"content":"        // Mark Task as completed","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Billy026"},"content":"            int num \u003d input[1].charAt(0) - \u00270\u0027;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Billy026"},"content":"            if (commands.size() \u003c num) throw new InvalidCommandException(\"There is no task with that number.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Billy026"},"content":"            Task task \u003d commands.get(num - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Billy026"},"content":"            task.check();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"      \" + task.listTask());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Billy026"},"content":"     * Unmarks a task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Billy026"},"content":"     * @param input user input converted to an array","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Billy026"},"content":"     * @param commands list of added tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Billy026"},"content":"     * When invalid task number given","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Billy026"},"content":"    private static void unmarkTask(String[] input, ArrayList\u003cTask\u003e commands) throws InvalidCommandException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Billy026"},"content":"        // Mark Task as uncompleted","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Billy026"},"content":"        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Billy026"},"content":"            int num \u003d input[1].charAt(0) - \u00270\u0027;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Billy026"},"content":"            if (commands.size() \u003c num) throw new InvalidCommandException(\"There is no task with that number.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Billy026"},"content":"            Task task \u003d commands.get(num - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Billy026"},"content":"            task.uncheck();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    Oh, I guess it\u0027s not done yet:\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"      \" + task.listTask());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Billy026"},"content":"        } catch (InvalidTaskOperationException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Billy026"},"content":"            System.out.println(\"    \" + e.getMessage());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"Billy026":328,"-":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":" * Tasks with only one date/time","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"    private String time;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"     * Primary constructor","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     * @param time date/time to finish by","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     * Invalid date/time given","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"    public Deadline(String taskName, String time) throws InvalidTaskOperationException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"        super(taskName);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"        if (time.equals(\"\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"                \"You did not provide a date or time.\\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"                \"    Please format your input as: deadline \u003ctask name\u003e /by \u003cdate/time\u003e.\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"                );","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"     * Displays task with the status of its completion and date/time","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"     * @return taskName with completed status and date/time","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"    public String listTask() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"        return \"[D]\" + super.listTask() + \" (by: \" + this.time + \")\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Billy026":36}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":" * Tasks with two dates/times","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"    private String start;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"    private String end;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     * Primary constructor","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"     * @param start date/time event will start","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * @param end date/time event will end","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     * Invalid date/time given","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    public Event(String taskName, String start, String end)throws InvalidTaskOperationException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"        super(taskName);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"        if (start.equals(\"\") || end.equals(\"\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"                \"You did not provide either a start date/time or an end date/time.\\n\" +","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"                \"    Please format your input as: event \u003ctask name\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e.\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"                );","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"     * Displays task with the status of its completion, start and end dates/times","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"     * @return taskName with completed status, start and end dates/times","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"    public String listTask() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"        return \"[E]\" + super.listTask() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Billy026":39}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":" * Exception for when the user enters an invalid command","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"     * Default constructor","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"    public InvalidCommandException() {}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     * Primary constructor","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * @param message Specialised message","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        super(message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Billy026":18}},{"path":"src/main/java/InvalidTaskOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":" * Exception for when there is an invalid operation in one of the Task functions","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"public class InvalidTaskOperationException extends Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"     * Default constructor","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"    public InvalidTaskOperationException() {}","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     * Primary constructor","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * @param message Specialised message","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    public InvalidTaskOperationException(String message) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        super(message);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Billy026":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":" * Tasks in a to-do list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"public class Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"    // Name of task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"    private String taskName;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"    // Status of completion","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"    private boolean completed;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"     * Primary constructor","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"    public Task(String taskName) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"        this.completed \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"     * Sets completed to true","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"     * When task has already been completed","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"    public void check() throws InvalidTaskOperationException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"        if (this.completed) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(\"Task has already been completed.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"            this.completed \u003d true;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Billy026"},"content":"     * Sets completed to false","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Billy026"},"content":"     * @throws InvalidTaskOperationException","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Billy026"},"content":"     * When task has not been completed","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Billy026"},"content":"    public void uncheck() throws InvalidTaskOperationException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Billy026"},"content":"        if (!this.completed) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Billy026"},"content":"            throw new InvalidTaskOperationException(\"Task has still not been completed.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Billy026"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Billy026"},"content":"            this.completed \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Billy026"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Billy026"},"content":"     * Displays task with the status of its completion","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Billy026"},"content":"     * @return taskName with completed status","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Billy026"},"content":"    public String listTask() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Billy026"},"content":"        return \"[\" + ((completed) ? \"X\" : \" \") + \"] \" + this.taskName;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Billy026":56}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":" * Tasks without date/time","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"     * Primary constructor","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"     * @param taskName name of task","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"        super(taskName);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"     * Displays task with the status of its completion","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"     * ","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"     * @return taskName with completed status","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"    public String listTask() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"        return \"[T]\" + super.listTask();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Billy026":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Billy026"},"content":"hi","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Billy026"},"content":"mark","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Billy026"},"content":"unmark","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Billy026"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Billy026"},"content":"unmark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Billy026"},"content":"mark a","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Billy026"},"content":"unmark a","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Billy026"},"content":"todo","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Billy026"},"content":"todo read books","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Billy026"},"content":"deadline","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Billy026"},"content":"deadline submit assignment","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Billy026"},"content":"deadline submit assignment /by Sunday","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Billy026"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Billy026"},"content":"event","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Billy026"},"content":"event meeting with project team","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Billy026"},"content":"event meeting with project team /from Saturday 8pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Billy026"},"content":"event meeting with project team /to 9pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"event meeting with project team /from Saturday 8pm /to 9pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Billy026"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Billy026"},"content":"hello","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Billy026"},"content":"mark 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Billy026"},"content":"unmark 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Billy026"},"content":"unmark 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Billy026"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Billy026"},"content":"delete","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Billy026"},"content":"delete a","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Billy026"},"content":"delete 5","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Billy026"},"content":"delete 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Billy026"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Billy026"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Billy026":30}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Billy026"},"content":"java -classpath ..\\bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Billy026":1,"-":20}}]
