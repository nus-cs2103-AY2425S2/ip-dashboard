{"authorDailyContributionsMap":{"Billy026":[{"date":"2025-01-20","commitResults":[{"hash":"8b0e59af7bacac16763ba4fa4d397cf833efa53a","isMergeCommit":false,"messageTitle":"Changed logo to display name \"Bob\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":5}}},{"hash":"e531453d6ac3589e3ce1455ad624c0c8f4b8a5c3","isMergeCommit":false,"messageTitle":"Added initial skeletal version of greeting and goodbye","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"27fdb7b56e5b0eb8d09f6f9ef1ff4481e84ec765","isMergeCommit":false,"messageTitle":"Renamed Duke.java to Bob.java","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"81b35f3c3a145b623fb1e4122c18dcae0ce39095","isMergeCommit":false,"messageTitle":"Implement echoing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":14}}},{"hash":"4e188710058ec09e66ae4989ec801edb438fc602","isMergeCommit":false,"messageTitle":"Customised Bob\u0027s personality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"747f8596d806216181b88af25bbbc4c4154e3804","isMergeCommit":false,"messageTitle":"Separated code into functions","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":3}}},{"hash":"329e548be6f48307c24922fa8d26ab342f2833b4","isMergeCommit":false,"messageTitle":"Add storing and displaying of commands","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":8}}},{"hash":"de35246bed0aeea92c67131d8d32715f78bf3c01","isMergeCommit":false,"messageTitle":"Implement new classes Task and InvalidTaskOperationException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":0}}},{"hash":"9cf7f3e454e85ad06bf5aa858ef1add73436a0cd","isMergeCommit":false,"messageTitle":"added mark and unmark capabilities","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":14}}},{"hash":"357b5258974084cfa76a5d669bc69ca2f0362b79","isMergeCommit":false,"messageTitle":"Added 3 types of Tasks and updated Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":5}}},{"hash":"a1bdd3d9ca34c9f31eab5c64dcb774dedc28ebb1","isMergeCommit":false,"messageTitle":"Updated Bob.java","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":6}}}]},{"date":"2025-01-21","commitResults":[{"hash":"3e44f40f9d6200aa61fde326db87e5352233c44a","isMergeCommit":false,"messageTitle":"Created automated test cases","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"bat":{"insertions":2,"deletions":2}}},{"hash":"55f5bdc5abfa1671176de20061a4d35ad3b12d85","isMergeCommit":false,"messageTitle":"Added error handling for incorrect formatting of inputting of Deadline and Event tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":107,"deletions":28}}},{"hash":"0cf13830556a7245a643900bffe81f8cd35c775a","isMergeCommit":false,"messageTitle":"Created functions for most operations in if statement of storeAndList()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":124,"deletions":92}}},{"hash":"321e9694eb101c5b9f9c7ff073686592015c1c86","isMergeCommit":false,"messageTitle":"Added error handling for unrecognised commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":16}}},{"hash":"c9e2cea0b7b96c3a5dc21f656173eaec3d4fbf7e","isMergeCommit":false,"messageTitle":"Update automated tests","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0}}},{"hash":"72f7f50466bc57afb09967da66abe267121a54a4","isMergeCommit":false,"messageTitle":"Handled miscellaneous errors and updated automated tests","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"java":{"insertions":66,"deletions":18}}},{"hash":"57bc053701cc281ffdd765d882796f8be2b25c4d","isMergeCommit":false,"messageTitle":"Implement deletion of task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":0}}},{"hash":"05529b0bf5c7f2e8a5bb8be82ba6d94bca5086f8","isMergeCommit":false,"messageTitle":"Updated automated tests","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0}}}]},{"date":"2025-01-29","commitResults":[{"hash":"00581bcb81080b562389a251cdd88d4056345911","isMergeCommit":false,"messageTitle":"Rewrite classes and functions for better encapsulation","messageBody":"Some functions in Bob.java have similar utilities. In addition, the\nfunctions to create the different Task subtypes are very similar.\n\nThese functions could clutter the other functions in Bob.java that\nare used specifically for it only. Similar functions also cause code\nduplication.\n\nLet\u0027s,\n* create a new class to house all functions that execute specific\ncommands inputted by the user\n* combine the functions that create tasks into one function\n\nCreating a new class for these functions with similar purposes improves\nencapsulation. Combining the functions that create tasks also improves\ncode quality.\n","fileTypesAndContributionMap":{"java":{"insertions":173,"deletions":0}}},{"hash":"624bf2e77f58b27a560446fffb389812faa6a931","isMergeCommit":false,"messageTitle":"Improper Java coding standards","messageBody":"Improper styling of code, especially comments, that do not follow\nJava coding standards.\n\nUsing a personal style of styling code may cause confusion for other\nfuture programmers updating the code.\n\nLet\u0027s update all code and comments to follow Java coding standards.\n\nFollowing Java coding standards formats the code using a generally-used\nguideline, improving code readability.\n\nRefer to this website for Java coding standards:\nhttps://se-education.org/guides/conventions/java/intermediate\n.html#layout\n","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":285}}},{"hash":"7c25e36562b05db4ecebc5ad9115bb1ac7440b80","isMergeCommit":false,"messageTitle":"Arrange classes into packages","messageBody":"Several classes are related to one another.\n\nThe classes related to one another should be grouped together.\n\nLet\u0027s arrange related classes into packages.\n\nThis will improve code quality and code readability.\n","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":0}}},{"hash":"308f4d075e3d4384adb82611e89152016082ce29","isMergeCommit":false,"messageTitle":"Task classes: implement save feature for Tasks","messageBody":"Tasks were only saved locally, so running the code again resets all\ntasks.\n\nTasks should be able to persist for an effective task list.\n\nLet\u0027s save tasks into the hard disk in order to persist their data.\n\nData about tasks are now able to persist, and are specific to each\nuser.\n","fileTypesAndContributionMap":{"java":{"insertions":287,"deletions":122}}},{"hash":"7a0f4bfa09efc147337136cb421aa9c68c7f9c32","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"365a948cfa7fdaa588a9deb603b80d3ee2e141f3","isMergeCommit":false,"messageTitle":"Date formats: restrict formats of dates","messageBody":"Invalid date formats are accepted.\n\nInvalid date formats can cause the tasks set by users to be nonsensical.\nIt will also invalidate the future implementation of listing tasks with\nincoming due dates.\n\nLet\u0027s\n* prevent invalid date formats from being accepted\n* allow conversion of date formats\n\nThis allows dates and times in tasks to be sensible, as well as maintain\na default date format.\n","fileTypesAndContributionMap":{"java":{"insertions":285,"deletions":27}}}]},{"date":"2025-01-30","commitResults":[{"hash":"7b649b58c6411409415f869526a4f31f49f5de6f","isMergeCommit":false,"messageTitle":"Date attribute classes: fix bugs in conversion of date formats.","messageBody":"Some valid date formats are incorrectly displayed or caused errors.\n\nLet\u0027s\n* Fix dates to be correctly displayed\n* Normalize displayed date formats\n* Include days of the week to the valid date formats (e.g. Sunday)\n* Limit date formats to day-before-month format\n\nWe normalize displayed date formats to streamline input from\nvarious users. This way, we avoid potential bugs, though at the\ncost of a bit of user satisfaction. We limit date formats to prevent\nincorrect behaviours with subsequent functions (month-before-day\nformat will be implemented later).\n","fileTypesAndContributionMap":{"java":{"insertions":169,"deletions":227}}},{"hash":"7151a46fb768c051224faab1816042f73f3cf82b","isMergeCommit":false,"messageTitle":"Bob class: Added display of tasks due today","messageBody":"There impact of deadlines in Deadline and Event\ntasks are non-existent.\n\nUsers should be alerted if tasks with deadlines are due.\n\nLet\u0027s implement display of tasks with deadlines that are due upon\nload of tasks.\n\nThis reminds users of potential tasks that they may have forgotten\nabout.\n","fileTypesAndContributionMap":{"java":{"insertions":141,"deletions":27}}},{"hash":"ac12466f109a23b76534f4fdab570da684500449","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"24bc72a14772d61f1074d1148a8ce1d03dc60fe1","isMergeCommit":false,"messageTitle":"All files: group functions and classes into more classes","messageBody":"Some classes are very long and can be divided into multiple\nclasses.\n\nCreating more classes to further group similar functions allows\nhigher encapsulation and code quality.\n\nLet\u0027s\n* Add classes UiManager, Parser and Storage\n* Move functions that handled display from Bob.java to UiManager\n* Distribute functions in TaskManager to Parser and Storage\n\nAside from Parser and Storage mentioned in the assignment,\nUiManager works similarly to Ui and TaskManager works similarly\nto TaskList.\n","fileTypesAndContributionMap":{"java":{"insertions":545,"deletions":409}}},{"hash":"ce726c5ad652673939eec61299c575d4a32fc0d3","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-a-moreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"14529cfa57b881cca5ea8a5f2c1c2a6b12dafc7f","isMergeCommit":false,"messageTitle":"Exception classes: updated package name","messageBody":"Classes are not in main package Bob.\n\nGrouping all files in a main package Bob allows more efficient\ntransfer of files.\n\nLet\u0027s put all exception files into Bob -\u003e Exceptions\n","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":0}}},{"hash":"c7a9f802ce6c063dd37b0cd815e1d3da0dda212a","isMergeCommit":false,"messageTitle":"Managers classes: updated package name","messageBody":"Classes are not in main package Bob.\n\nGrouping all files in a main package Bob allows more efficient\ntransfer of files.\n\nLet\u0027s put all exception files into Bob -\u003e managers.\n","fileTypesAndContributionMap":{"java":{"insertions":807,"deletions":0}}},{"hash":"107833401ce56c0f4a143733a4ee6c71ab336dc4","isMergeCommit":false,"messageTitle":"Tasks classes: updated package name","messageBody":"Classes are not in main package Bob.\n\nGrouping all files in a main package Bob allows more efficient\ntransfer of files.\n\nLet\u0027s put all exception files into Bob -\u003e tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":269,"deletions":0}}},{"hash":"30f4ff812a0d6bb54df37ba65d0f5f54c3074836","isMergeCommit":false,"messageTitle":"Bob class: updated package name","messageBody":"Class is not in main package Bob.\n\nGrouping all files in a main package Bob allows more efficient\ntransfer of files.\n\nLet\u0027s put all exception files into Bob.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"88dcba07e6c6651f6049856912df968f0ccce4b7","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-a-packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}}]},{"date":"2025-01-31","commitResults":[{"hash":"21e1770de0bd92e7f6f5034a498e936ad759e71d","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"f8ce9472715eecf392ae29dc4118a7c2c5eb7299","isMergeCommit":false,"messageTitle":"Gradle file: update files to support Gradle","messageBody":"Testing of program is not automated.\n\nAutomatic testing, which is supported by Gradle, of our program\nrelieves developers of the workload of manually testing each\nfunction.\n\nLet\u0027s\n* implement Gradle into our project\n* ensure all versions are consistent\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"f9b7a974adc1abf48433b38687d2aad52585c0ca","isMergeCommit":false,"messageTitle":"Src classes: add new line to the end of all classes","messageBody":"All classes did not end with a new line.\n\nThis may cause problems during compilation due to errors with\nparsers.\n\nLet\u0027s add a new line to the end of all classes.\n\nAdding a new line allows compilers to know that it is where the\nclass ends.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"714733570b5e61e22dfcfb74d4a85932b0877d88","isMergeCommit":false,"messageTitle":"Abstract task classes: implement JUnit tests","messageBody":"Only manual testing is available for abstract task classes.\n\nWe should automate testing if possible to allow more thorough\ntesting with minimal effort.\n\nLet\u0027s\n* create two test classes for the two abstract task classes\n* implement test functions for all non-trivial functions in each\ntest class\n\nCreating test classes for each non-test class improves code quality\nas it is simpler to determine where errors occurred in the event\nthat errors do occur.\n","fileTypesAndContributionMap":{"java":{"insertions":196,"deletions":0}}},{"hash":"a10ef8e1432fdf5d71a5101d7c4a2b37ba32a7ad","isMergeCommit":false,"messageTitle":"Task classes: implement JUnit tests","messageBody":"Only manual testing is available for task classes.\n\nWe should automate testing if possible to allow more thorough\ntesting with minimal effort.\n\nLet\u0027s\n* fix a minor bug in TaskTest\n* create three test classes for the three task classes\n* implement test functions for all non-trivial functions in each\ntest class\n\nCreating test classes for each non-test class improves code quality\nas it is simpler to determine where errors occurred in the event\nthat errors do occur.\n","fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":2}}},{"hash":"aa0aca770c0ee62c66ce803e38d386b30bd98553","isMergeCommit":false,"messageTitle":"DateManager class: implement JUnit tests","messageBody":"Only manual testing is available for DateManager.\n\nWe should automate testing if possible to allow more thorough\ntesting with minimal effort.\n\nLet\u0027s\n* fix a bug with year-first dates in normaliseDateFormat function\n* create test class for the DateManager\n* implement test functions for all non-trivial functions\n\nCreating test classes for each non-test class improves code quality\nas it is simpler to determine where errors occurred in the event\nthat errors do occur.\n","fileTypesAndContributionMap":{"java":{"insertions":156,"deletions":1}}},{"hash":"6ef4256dce4d70bf56a6eb812d92644f8ee9d368","isMergeCommit":false,"messageTitle":"Other Manager classes: implement JUnit tests","messageBody":"Only manual testing is available for the Manager classes.\n\nWe should automate testing if possible to allow more thorough\ntesting with minimal effort.\n\nLet\u0027s\n* create test classes for the Manager classes\n* implement test functions for all non-trivial functions\n\nCreating test classes for each non-test class improves code quality\nas it is simpler to determine where errors occurred in the event\nthat errors do occur.\n\nParseManager has not been tested to meet deadline. Will implement\nlater.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":352,"deletions":19}}},{"hash":"641c946714f64afbf18f923c2535b2a116d1242e","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-a-junit\u0027 into branch-a-gradle","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"8799c7185d5d983462d5eff1011828e830e28ffe","isMergeCommit":false,"messageTitle":"Implement JAR support","messageBody":"No JAR file could be created.\n\nChange configurations in build.gradle to allow JAR file to be\ncreated.\n\nLet\u0027s change configurations to allow JAR file to be created.\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"89e209d07de219e5ad31c226564040459e66f241","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-a-jar\u0027 into branch-a-gradle","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"0345134b8fd202a83641f86bc8662ae4af1dba18","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-a-gradle\u0027","messageBody":"","tags":["A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"f5e0247a6402edc0f1569d2bb72280bf4a97f636","isMergeCommit":false,"messageTitle":"Add functionality to find matching tasks in task list","messageBody":"There is no quick way of searching for tasks.\n\nUsers may want to find out if they need to do something specific,\ninstead of just seeing what tasks they have left.\n\nLet\u0027s allow users to search for tasks containing a string.\n\nThis may also help future functions that require filtering the\ntask list to find matching tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":0}}},{"hash":"c66bae66aa7ad92d34cf8e4bb9bd88823deecb37","isMergeCommit":false,"messageTitle":"Test find functionality","messageBody":"The find function had no automatic test functions.\n\nImplementing test functions for the find function will allow it\nto be tested more efficiently.\n\nLet\u0027s create test functions for all new functions added to support\nthe find function.\n\nTest functions are added relative to which classes the functions\nwere from.\n\nAgain, no test functions were added for ParseManager in order to\nmeet the deadline. Will be added later.\n","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":0}}},{"hash":"8dfb5c4d2057e6c14efb6f24a1c0e868c231ddc5","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-9\u0027","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-03","commitResults":[{"hash":"1156f4a679b5b7e95bf244592a098f10a4ecb5c8","isMergeCommit":false,"messageTitle":"Command classes: create a class for each valid user command","messageBody":"All command functions are compiled in Parser.\n\nThis makes Parser unnecessary long, which worsens code readability.\n\nLet\u0027s\n* Make InvalidDateFormatException and InvalidTaskOperationException\nsubclasses of InvalidCommandException.\n* Create an abstract class Command.\n* Create a class for each valid user command.\n* Create a class with only methods for type conversions, which\nare used in multiple Command classes and possible other classes\n\nStreamlining the exceptions allows all exceptions to represent\ninvalid user commands, which streamlines error handling. The\ndifferent exception classes allows more details for each, which\nmay help in logging.\n\nCreating a class for each valid user command separates otherwise\nunrelated commands into different files, improving code\nreadability and so, code quality.\n\nHuge thanks to yjunyeu for inspiring the idea to make Command\nclasses. https://github.com/nus-cs2103-AY2425S2/ip/pull/144/files#\ndiff-ffe7028257bb3f644403cb7ccad35f74d0fcbcd2b6c1c1b5819745fac55fc\n956\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":280,"deletions":17}}},{"hash":"65462ac92ee290bc684f756d4f5189eae288d791","isMergeCommit":false,"messageTitle":"Manager classes: modify for new Command classes","messageBody":"Redistribute functions in Bob, Parser and UiManager to account for\nthe new Command classes.\n\nThis makes the code in each class more concise and relevant to their\npurpose.\n\nLet\u0027s\n* Move scanner from Bob to UiManager\n* Move executeCommand to Parser, with new name parseCommand\n\nThis narrows down the scope of functions and the scanner to only\nthe scopes they are relevant in. Thus, code quality improves.\n","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":309}}},{"hash":"9883b66ffc329e35b826c941d5cc84440be8bcf0","isMergeCommit":false,"messageTitle":"All classes: improve variable names","messageBody":"Some variable names were too vague for their context and purpose.\n\nVague variable names worsens code readability.\n\nLet\u0027s\n* change all variable names to suit their context and purpose\n* change all variable names to suit JavaDoc styling\n\nThis makes all variable names consistent and sensible, thus\nimproving code readability, and so, code quality.\n","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":51}}},{"hash":"723909c115af2d6608fa8c1703e2286dfd1e2d02","isMergeCommit":false,"messageTitle":"All classes: update JavaDoc styles","messageBody":"JavaDoc styles are outdated for new and modified functions.\n\nLet\u0027s update all JavaDoc styles.\n","fileTypesAndContributionMap":{"java":{"insertions":164,"deletions":49}}},{"hash":"98ebe94b39caf9106ada57a070f4d8d133a42642","isMergeCommit":false,"messageTitle":"Test classes: update test functions","messageBody":"Test functions for some classes are outdated.\n\nLet\u0027s update affected test functions to match the current functions.\n","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":0},"java":{"insertions":489,"deletions":61}}},{"hash":"e3b5eae8444f2392139da61d3f6267a7fc5bbbea","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-post-week2-modifications\u0027","messageBody":"","tags":["Post-Week2-Modifications"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-04","commitResults":[{"hash":"aaf5cc4a059e72b1001750c810262ddec708ba3a","isMergeCommit":false,"messageTitle":"Checkstyle file: add support for Checkstyle","messageBody":"There is no automatic checking of code for problems in JavaDoc\ncomments.\n\nIt takes effort and time to manually check for these problems, so\nwe should automate it if possible.\n\nLet\u0027s add the Checkstyle plugin for automatic JavaDoc style\nchecking.\n\nCheckstyle automates the JavaDoc styling checks, giving us\ndevelopers more time to spend on more impactful things.\n","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":2,"deletions":3}}},{"hash":"7b0dc805ca28a86839589de3754cd07f022472cd","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","tags":["A-Checkstyle"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-05","commitResults":[{"hash":"d4fc65503aa8da519531f54e7c1e37d55ba17f73","isMergeCommit":false,"messageTitle":"Add GUI to program","messageBody":"All output are shown in the terminal.\n\nThis is not user-friendly to users who are not comfortable with\nusing primarily CLI.\n\nLet\u0027s\n* implement GUI for the user\u0027s commands and the program\u0027s responses\n* give an image to the supposed character giving responses, Bob\n* convert all terminal output into output shown in dialog boxes\n\nThis provides a user-friendly interface for non-technical users,\nwho make up the majority of target users.\n","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":1},"fxml":{"insertions":65,"deletions":0},"java":{"insertions":292,"deletions":129}}},{"hash":"207e94a25c23b25303612d702dbb7a2017d2c4a6","isMergeCommit":false,"messageTitle":"Classes with output","messageBody":"Bob\u0027s responses do not suit his intended personality.\n\nThe personality shown in the different responses do not match.\n\nLet\u0027s change all responses to reflect Bob\u0027s intended personality,\na hesitant, but nice crocodile.\n\nThis gives Bob a more consistent personality, enhancing the\nchat bot.\n\nCredit for image:\nBob - https://www.reddit.com/r/PokemonScarletViolet/comments/z442kw\n/what_i_wish_fuecocos_final_evolutionskeledirge/\nUser - https://openclipart.org/detail/247563/simple-cartoon-person\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":12}}}]},{"date":"2025-02-07","commitResults":[{"hash":"dd71a978ce1bc3f5a8b854c8900dd128f538f132","isMergeCommit":false,"messageTitle":"Rename Bob package to bob to align with Checkstyle guidelines","messageBody":"The ancestor package is capitalised.\n\nThis does not align with the Checkstyle guidelines.\n\nLet\u0027s\n* rename the ancestor package to bob\n* refactor all import and package statements\n* modify paths in the fxml and build.gradle files to reflect this\nchange\n\nEnsuring that all packages are lowercase standardizes styling,\nallowing more consistent code among different programmers.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":88,"deletions":87}}},{"hash":"c71078ee6ec51f0f2f902b5e9faadb0a7cb12d2b","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"Billy026":{"java":3943,"md":0,"fxml":65,"sh":0,"bat":1,"gradle":22,"txt":30}},"authorContributionVariance":{"Billy026":368475.2},"authorDisplayNameMap":{"Billy026":"CS2103T-T10-3 BILL..DINA"}}
