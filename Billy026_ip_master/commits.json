{"authorDailyContributionsMap":{"Billy026":[{"date":"2025-01-20","commitResults":[{"hash":"8b0e59af7bacac16763ba4fa4d397cf833efa53a","isMergeCommit":false,"messageTitle":"Changed logo to display name \"Bob\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":5}}},{"hash":"e531453d6ac3589e3ce1455ad624c0c8f4b8a5c3","isMergeCommit":false,"messageTitle":"Added initial skeletal version of greeting and goodbye","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"27fdb7b56e5b0eb8d09f6f9ef1ff4481e84ec765","isMergeCommit":false,"messageTitle":"Renamed Duke.java to Bob.java","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"81b35f3c3a145b623fb1e4122c18dcae0ce39095","isMergeCommit":false,"messageTitle":"Implement echoing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":14}}},{"hash":"4e188710058ec09e66ae4989ec801edb438fc602","isMergeCommit":false,"messageTitle":"Customised Bob\u0027s personality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"747f8596d806216181b88af25bbbc4c4154e3804","isMergeCommit":false,"messageTitle":"Separated code into functions","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":3}}},{"hash":"329e548be6f48307c24922fa8d26ab342f2833b4","isMergeCommit":false,"messageTitle":"Add storing and displaying of commands","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":8}}},{"hash":"de35246bed0aeea92c67131d8d32715f78bf3c01","isMergeCommit":false,"messageTitle":"Implement new classes Task and InvalidTaskOperationException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":0}}},{"hash":"9cf7f3e454e85ad06bf5aa858ef1add73436a0cd","isMergeCommit":false,"messageTitle":"added mark and unmark capabilities","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":14}}},{"hash":"357b5258974084cfa76a5d669bc69ca2f0362b79","isMergeCommit":false,"messageTitle":"Added 3 types of Tasks and updated Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":5}}},{"hash":"a1bdd3d9ca34c9f31eab5c64dcb774dedc28ebb1","isMergeCommit":false,"messageTitle":"Updated Bob.java","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":6}}}]},{"date":"2025-01-21","commitResults":[{"hash":"3e44f40f9d6200aa61fde326db87e5352233c44a","isMergeCommit":false,"messageTitle":"Created automated test cases","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"bat":{"insertions":2,"deletions":2}}},{"hash":"55f5bdc5abfa1671176de20061a4d35ad3b12d85","isMergeCommit":false,"messageTitle":"Added error handling for incorrect formatting of inputting of Deadline and Event tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":107,"deletions":28}}},{"hash":"0cf13830556a7245a643900bffe81f8cd35c775a","isMergeCommit":false,"messageTitle":"Created functions for most operations in if statement of storeAndList()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":124,"deletions":92}}},{"hash":"321e9694eb101c5b9f9c7ff073686592015c1c86","isMergeCommit":false,"messageTitle":"Added error handling for unrecognised commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":16}}},{"hash":"c9e2cea0b7b96c3a5dc21f656173eaec3d4fbf7e","isMergeCommit":false,"messageTitle":"Update automated tests","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0}}},{"hash":"72f7f50466bc57afb09967da66abe267121a54a4","isMergeCommit":false,"messageTitle":"Handled miscellaneous errors and updated automated tests","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"java":{"insertions":66,"deletions":18}}},{"hash":"57bc053701cc281ffdd765d882796f8be2b25c4d","isMergeCommit":false,"messageTitle":"Implement deletion of task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":0}}},{"hash":"05529b0bf5c7f2e8a5bb8be82ba6d94bca5086f8","isMergeCommit":false,"messageTitle":"Updated automated tests","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0}}}]},{"date":"2025-01-29","commitResults":[{"hash":"00581bcb81080b562389a251cdd88d4056345911","isMergeCommit":false,"messageTitle":"Rewrite classes and functions for better encapsulation","messageBody":"Some functions in Bob.java have similar utilities. In addition, the\nfunctions to create the different Task subtypes are very similar.\n\nThese functions could clutter the other functions in Bob.java that\nare used specifically for it only. Similar functions also cause code\nduplication.\n\nLet\u0027s,\n* create a new class to house all functions that execute specific\ncommands inputted by the user\n* combine the functions that create tasks into one function\n\nCreating a new class for these functions with similar purposes improves\nencapsulation. Combining the functions that create tasks also improves\ncode quality.\n","fileTypesAndContributionMap":{"java":{"insertions":173,"deletions":0}}},{"hash":"624bf2e77f58b27a560446fffb389812faa6a931","isMergeCommit":false,"messageTitle":"Improper Java coding standards","messageBody":"Improper styling of code, especially comments, that do not follow\nJava coding standards.\n\nUsing a personal style of styling code may cause confusion for other\nfuture programmers updating the code.\n\nLet\u0027s update all code and comments to follow Java coding standards.\n\nFollowing Java coding standards formats the code using a generally-used\nguideline, improving code readability.\n\nRefer to this website for Java coding standards:\nhttps://se-education.org/guides/conventions/java/intermediate\n.html#layout\n","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":285}}},{"hash":"7c25e36562b05db4ecebc5ad9115bb1ac7440b80","isMergeCommit":false,"messageTitle":"Arrange classes into packages","messageBody":"Several classes are related to one another.\n\nThe classes related to one another should be grouped together.\n\nLet\u0027s arrange related classes into packages.\n\nThis will improve code quality and code readability.\n","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":0}}},{"hash":"308f4d075e3d4384adb82611e89152016082ce29","isMergeCommit":false,"messageTitle":"Task classes: implement save feature for Tasks","messageBody":"Tasks were only saved locally, so running the code again resets all\ntasks.\n\nTasks should be able to persist for an effective task list.\n\nLet\u0027s save tasks into the hard disk in order to persist their data.\n\nData about tasks are now able to persist, and are specific to each\nuser.\n","fileTypesAndContributionMap":{"java":{"insertions":287,"deletions":122}}},{"hash":"7a0f4bfa09efc147337136cb421aa9c68c7f9c32","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"365a948cfa7fdaa588a9deb603b80d3ee2e141f3","isMergeCommit":false,"messageTitle":"Date formats: restrict formats of dates","messageBody":"Invalid date formats are accepted.\n\nInvalid date formats can cause the tasks set by users to be nonsensical.\nIt will also invalidate the future implementation of listing tasks with\nincoming due dates.\n\nLet\u0027s\n* prevent invalid date formats from being accepted\n* allow conversion of date formats\n\nThis allows dates and times in tasks to be sensible, as well as maintain\na default date format.\n","fileTypesAndContributionMap":{"java":{"insertions":285,"deletions":27}}}]},{"date":"2025-01-30","commitResults":[{"hash":"7b649b58c6411409415f869526a4f31f49f5de6f","isMergeCommit":false,"messageTitle":"Date attribute classes: fix bugs in conversion of date formats.","messageBody":"Some valid date formats are incorrectly displayed or caused errors.\n\nLet\u0027s\n* Fix dates to be correctly displayed\n* Normalize displayed date formats\n* Include days of the week to the valid date formats (e.g. Sunday)\n* Limit date formats to day-before-month format\n\nWe normalize displayed date formats to streamline input from\nvarious users. This way, we avoid potential bugs, though at the\ncost of a bit of user satisfaction. We limit date formats to prevent\nincorrect behaviours with subsequent functions (month-before-day\nformat will be implemented later).\n","fileTypesAndContributionMap":{"java":{"insertions":169,"deletions":227}}},{"hash":"7151a46fb768c051224faab1816042f73f3cf82b","isMergeCommit":false,"messageTitle":"Bob class: Added display of tasks due today","messageBody":"There impact of deadlines in Deadline and Event\ntasks are non-existent.\n\nUsers should be alerted if tasks with deadlines are due.\n\nLet\u0027s implement display of tasks with deadlines that are due upon\nload of tasks.\n\nThis reminds users of potential tasks that they may have forgotten\nabout.\n","fileTypesAndContributionMap":{"java":{"insertions":141,"deletions":27}}},{"hash":"ac12466f109a23b76534f4fdab570da684500449","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"24bc72a14772d61f1074d1148a8ce1d03dc60fe1","isMergeCommit":false,"messageTitle":"All files: group functions and classes into more classes","messageBody":"Some classes are very long and can be divided into multiple\nclasses.\n\nCreating more classes to further group similar functions allows\nhigher encapsulation and code quality.\n\nLet\u0027s\n* Add classes UiManager, Parser and Storage\n* Move functions that handled display from Bob.java to UiManager\n* Distribute functions in TaskManager to Parser and Storage\n\nAside from Parser and Storage mentioned in the assignment,\nUiManager works similarly to Ui and TaskManager works similarly\nto TaskList.\n","fileTypesAndContributionMap":{"java":{"insertions":545,"deletions":409}}},{"hash":"ce726c5ad652673939eec61299c575d4a32fc0d3","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-a-moreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"14529cfa57b881cca5ea8a5f2c1c2a6b12dafc7f","isMergeCommit":false,"messageTitle":"Exception classes: updated package name","messageBody":"Classes are not in main package Bob.\n\nGrouping all files in a main package Bob allows more efficient\ntransfer of files.\n\nLet\u0027s put all exception files into Bob -\u003e Exceptions\n","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":0}}},{"hash":"c7a9f802ce6c063dd37b0cd815e1d3da0dda212a","isMergeCommit":false,"messageTitle":"Managers classes: updated package name","messageBody":"Classes are not in main package Bob.\n\nGrouping all files in a main package Bob allows more efficient\ntransfer of files.\n\nLet\u0027s put all exception files into Bob -\u003e managers.\n","fileTypesAndContributionMap":{"java":{"insertions":807,"deletions":0}}},{"hash":"107833401ce56c0f4a143733a4ee6c71ab336dc4","isMergeCommit":false,"messageTitle":"Tasks classes: updated package name","messageBody":"Classes are not in main package Bob.\n\nGrouping all files in a main package Bob allows more efficient\ntransfer of files.\n\nLet\u0027s put all exception files into Bob -\u003e tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":269,"deletions":0}}},{"hash":"30f4ff812a0d6bb54df37ba65d0f5f54c3074836","isMergeCommit":false,"messageTitle":"Bob class: updated package name","messageBody":"Class is not in main package Bob.\n\nGrouping all files in a main package Bob allows more efficient\ntransfer of files.\n\nLet\u0027s put all exception files into Bob.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"88dcba07e6c6651f6049856912df968f0ccce4b7","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-a-packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}}]},{"date":"2025-01-31","commitResults":[{"hash":"21e1770de0bd92e7f6f5034a498e936ad759e71d","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"f8ce9472715eecf392ae29dc4118a7c2c5eb7299","isMergeCommit":false,"messageTitle":"Gradle file: update files to support Gradle","messageBody":"Testing of program is not automated.\n\nAutomatic testing, which is supported by Gradle, of our program\nrelieves developers of the workload of manually testing each\nfunction.\n\nLet\u0027s\n* implement Gradle into our project\n* ensure all versions are consistent\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"f9b7a974adc1abf48433b38687d2aad52585c0ca","isMergeCommit":false,"messageTitle":"Src classes: add new line to the end of all classes","messageBody":"All classes did not end with a new line.\n\nThis may cause problems during compilation due to errors with\nparsers.\n\nLet\u0027s add a new line to the end of all classes.\n\nAdding a new line allows compilers to know that it is where the\nclass ends.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"714733570b5e61e22dfcfb74d4a85932b0877d88","isMergeCommit":false,"messageTitle":"Abstract task classes: implement JUnit tests","messageBody":"Only manual testing is available for abstract task classes.\n\nWe should automate testing if possible to allow more thorough\ntesting with minimal effort.\n\nLet\u0027s\n* create two test classes for the two abstract task classes\n* implement test functions for all non-trivial functions in each\ntest class\n\nCreating test classes for each non-test class improves code quality\nas it is simpler to determine where errors occurred in the event\nthat errors do occur.\n","fileTypesAndContributionMap":{"java":{"insertions":196,"deletions":0}}},{"hash":"a10ef8e1432fdf5d71a5101d7c4a2b37ba32a7ad","isMergeCommit":false,"messageTitle":"Task classes: implement JUnit tests","messageBody":"Only manual testing is available for task classes.\n\nWe should automate testing if possible to allow more thorough\ntesting with minimal effort.\n\nLet\u0027s\n* fix a minor bug in TaskTest\n* create three test classes for the three task classes\n* implement test functions for all non-trivial functions in each\ntest class\n\nCreating test classes for each non-test class improves code quality\nas it is simpler to determine where errors occurred in the event\nthat errors do occur.\n","fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":2}}},{"hash":"aa0aca770c0ee62c66ce803e38d386b30bd98553","isMergeCommit":false,"messageTitle":"DateManager class: implement JUnit tests","messageBody":"Only manual testing is available for DateManager.\n\nWe should automate testing if possible to allow more thorough\ntesting with minimal effort.\n\nLet\u0027s\n* fix a bug with year-first dates in normaliseDateFormat function\n* create test class for the DateManager\n* implement test functions for all non-trivial functions\n\nCreating test classes for each non-test class improves code quality\nas it is simpler to determine where errors occurred in the event\nthat errors do occur.\n","fileTypesAndContributionMap":{"java":{"insertions":156,"deletions":1}}},{"hash":"6ef4256dce4d70bf56a6eb812d92644f8ee9d368","isMergeCommit":false,"messageTitle":"Other Manager classes: implement JUnit tests","messageBody":"Only manual testing is available for the Manager classes.\n\nWe should automate testing if possible to allow more thorough\ntesting with minimal effort.\n\nLet\u0027s\n* create test classes for the Manager classes\n* implement test functions for all non-trivial functions\n\nCreating test classes for each non-test class improves code quality\nas it is simpler to determine where errors occurred in the event\nthat errors do occur.\n\nParseManager has not been tested to meet deadline. Will implement\nlater.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":352,"deletions":19}}},{"hash":"641c946714f64afbf18f923c2535b2a116d1242e","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-a-junit\u0027 into branch-a-gradle","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"8799c7185d5d983462d5eff1011828e830e28ffe","isMergeCommit":false,"messageTitle":"Implement JAR support","messageBody":"No JAR file could be created.\n\nChange configurations in build.gradle to allow JAR file to be\ncreated.\n\nLet\u0027s change configurations to allow JAR file to be created.\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"89e209d07de219e5ad31c226564040459e66f241","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-a-jar\u0027 into branch-a-gradle","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"0345134b8fd202a83641f86bc8662ae4af1dba18","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-a-gradle\u0027","messageBody":"","tags":["A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"f5e0247a6402edc0f1569d2bb72280bf4a97f636","isMergeCommit":false,"messageTitle":"Add functionality to find matching tasks in task list","messageBody":"There is no quick way of searching for tasks.\n\nUsers may want to find out if they need to do something specific,\ninstead of just seeing what tasks they have left.\n\nLet\u0027s allow users to search for tasks containing a string.\n\nThis may also help future functions that require filtering the\ntask list to find matching tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":0}}},{"hash":"c66bae66aa7ad92d34cf8e4bb9bd88823deecb37","isMergeCommit":false,"messageTitle":"Test find functionality","messageBody":"The find function had no automatic test functions.\n\nImplementing test functions for the find function will allow it\nto be tested more efficiently.\n\nLet\u0027s create test functions for all new functions added to support\nthe find function.\n\nTest functions are added relative to which classes the functions\nwere from.\n\nAgain, no test functions were added for ParseManager in order to\nmeet the deadline. Will be added later.\n","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":0}}},{"hash":"8dfb5c4d2057e6c14efb6f24a1c0e868c231ddc5","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-9\u0027","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-03","commitResults":[{"hash":"1156f4a679b5b7e95bf244592a098f10a4ecb5c8","isMergeCommit":false,"messageTitle":"Command classes: create a class for each valid user command","messageBody":"All command functions are compiled in Parser.\n\nThis makes Parser unnecessary long, which worsens code readability.\n\nLet\u0027s\n* Make InvalidDateFormatException and InvalidTaskOperationException\nsubclasses of InvalidCommandException.\n* Create an abstract class Command.\n* Create a class for each valid user command.\n* Create a class with only methods for type conversions, which\nare used in multiple Command classes and possible other classes\n\nStreamlining the exceptions allows all exceptions to represent\ninvalid user commands, which streamlines error handling. The\ndifferent exception classes allows more details for each, which\nmay help in logging.\n\nCreating a class for each valid user command separates otherwise\nunrelated commands into different files, improving code\nreadability and so, code quality.\n\nHuge thanks to yjunyeu for inspiring the idea to make Command\nclasses. https://github.com/nus-cs2103-AY2425S2/ip/pull/144/files#\ndiff-ffe7028257bb3f644403cb7ccad35f74d0fcbcd2b6c1c1b5819745fac55fc\n956\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":280,"deletions":17}}},{"hash":"65462ac92ee290bc684f756d4f5189eae288d791","isMergeCommit":false,"messageTitle":"Manager classes: modify for new Command classes","messageBody":"Redistribute functions in Bob, Parser and UiManager to account for\nthe new Command classes.\n\nThis makes the code in each class more concise and relevant to their\npurpose.\n\nLet\u0027s\n* Move scanner from Bob to UiManager\n* Move executeCommand to Parser, with new name parseCommand\n\nThis narrows down the scope of functions and the scanner to only\nthe scopes they are relevant in. Thus, code quality improves.\n","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":309}}},{"hash":"9883b66ffc329e35b826c941d5cc84440be8bcf0","isMergeCommit":false,"messageTitle":"All classes: improve variable names","messageBody":"Some variable names were too vague for their context and purpose.\n\nVague variable names worsens code readability.\n\nLet\u0027s\n* change all variable names to suit their context and purpose\n* change all variable names to suit JavaDoc styling\n\nThis makes all variable names consistent and sensible, thus\nimproving code readability, and so, code quality.\n","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":51}}},{"hash":"723909c115af2d6608fa8c1703e2286dfd1e2d02","isMergeCommit":false,"messageTitle":"All classes: update JavaDoc styles","messageBody":"JavaDoc styles are outdated for new and modified functions.\n\nLet\u0027s update all JavaDoc styles.\n","fileTypesAndContributionMap":{"java":{"insertions":164,"deletions":49}}},{"hash":"98ebe94b39caf9106ada57a070f4d8d133a42642","isMergeCommit":false,"messageTitle":"Test classes: update test functions","messageBody":"Test functions for some classes are outdated.\n\nLet\u0027s update affected test functions to match the current functions.\n","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":0},"java":{"insertions":489,"deletions":61}}},{"hash":"e3b5eae8444f2392139da61d3f6267a7fc5bbbea","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-post-week2-modifications\u0027","messageBody":"","tags":["Post-Week2-Modifications"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-04","commitResults":[{"hash":"aaf5cc4a059e72b1001750c810262ddec708ba3a","isMergeCommit":false,"messageTitle":"Checkstyle file: add support for Checkstyle","messageBody":"There is no automatic checking of code for problems in JavaDoc\ncomments.\n\nIt takes effort and time to manually check for these problems, so\nwe should automate it if possible.\n\nLet\u0027s add the Checkstyle plugin for automatic JavaDoc style\nchecking.\n\nCheckstyle automates the JavaDoc styling checks, giving us\ndevelopers more time to spend on more impactful things.\n","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":2,"deletions":3}}},{"hash":"7b0dc805ca28a86839589de3754cd07f022472cd","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","tags":["A-Checkstyle"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-05","commitResults":[{"hash":"d4fc65503aa8da519531f54e7c1e37d55ba17f73","isMergeCommit":false,"messageTitle":"Add GUI to program","messageBody":"All output are shown in the terminal.\n\nThis is not user-friendly to users who are not comfortable with\nusing primarily CLI.\n\nLet\u0027s\n* implement GUI for the user\u0027s commands and the program\u0027s responses\n* give an image to the supposed character giving responses, Bob\n* convert all terminal output into output shown in dialog boxes\n\nThis provides a user-friendly interface for non-technical users,\nwho make up the majority of target users.\n","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":1},"fxml":{"insertions":65,"deletions":0},"java":{"insertions":292,"deletions":129}}},{"hash":"207e94a25c23b25303612d702dbb7a2017d2c4a6","isMergeCommit":false,"messageTitle":"Classes with output","messageBody":"Bob\u0027s responses do not suit his intended personality.\n\nThe personality shown in the different responses do not match.\n\nLet\u0027s change all responses to reflect Bob\u0027s intended personality,\na hesitant, but nice crocodile.\n\nThis gives Bob a more consistent personality, enhancing the\nchat bot.\n\nCredit for image:\nBob - https://www.reddit.com/r/PokemonScarletViolet/comments/z442kw\n/what_i_wish_fuecocos_final_evolutionskeledirge/\nUser - https://openclipart.org/detail/247563/simple-cartoon-person\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":12}}}]},{"date":"2025-02-07","commitResults":[{"hash":"dd71a978ce1bc3f5a8b854c8900dd128f538f132","isMergeCommit":false,"messageTitle":"Rename Bob package to bob to align with Checkstyle guidelines","messageBody":"The ancestor package is capitalised.\n\nThis does not align with the Checkstyle guidelines.\n\nLet\u0027s\n* rename the ancestor package to bob\n* refactor all import and package statements\n* modify paths in the fxml and build.gradle files to reflect this\nchange\n\nEnsuring that all packages are lowercase standardizes styling,\nallowing more consistent code among different programmers.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":88,"deletions":87}}},{"hash":"c71078ee6ec51f0f2f902b5e9faadb0a7cb12d2b","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-10","commitResults":[{"hash":"3a66bf9e0f99793d86b36a4c4ee58674c3dff59d","isMergeCommit":false,"messageTitle":"Add assertions to ensure assumptions are correct","messageBody":"At certain points in some functions, if one of the variables\nsomehow do not have their intended state, the function will create\na bug.\n\nAlthough unlikely, it is still in our best interest to ensure\nthese variables have their intended states.\n\nLet\u0027s:\n* assert that the referenced Task in the updated Command classes\nand TaskManager should not be null.\n* assert that the created hashmaps and hashsets in DateManager\nand Parser have the correct number of entries.\n\nAssertions terminate the program in the case of these very unlikely\nscenarios, protecting data from being corrupted.\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":3}}}]},{"date":"2025-02-12","commitResults":[{"hash":"3a7d172aa59f538cb1ce8a887e1c3a002c040847","isMergeCommit":false,"messageTitle":"Replace certain for loops in TaskManager with streams","messageBody":"Certain functions in TaskManager use for(Task t : tasks).\n\nThese instances can be replaced with streams.\n\nLet\u0027s replace such instances with streams, filters and forEach function\ncalls.\n\nUsing streams instead of for loops reduces the need for deep nesting,\nwhich worsens code quality.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":11}}},{"hash":"c165cbf7fe2f0521375c980592ad20c4a70d601c","isMergeCommit":false,"messageTitle":"Fix deep nesting within certain classes","messageBody":"Deep nesting occurs in some functions, through a combination of\nfor loops, while loops and if statements.\n\nDeep nesting causes code within these nestings to be hard to track,\nsince they have many restrictions in different statements.\n\nLet\u0027s ensure that there is no more than 2 nesting in all of our\nfunctions.\n\nLimiting deep nesting to a depth of 2 allows some flexibility with\nif statements in for or while loops, but avoids confusion with any\nfurther nesting.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":19}}},{"hash":"b8162685850ddc823254975c0866851825d8c343","isMergeCommit":false,"messageTitle":"Implement SLAP","messageBody":"Some functions were too long and had multiple groups of\ncomputations.\n\nSeparating these groups of computations into their own functions\nhelps to implement SLAP, which improves code quality.\n\nLet\u0027s group computations with similar purposes into their own\nfunctions.\n\nImplementing stricter SLAP allows easy modification to more\nspecific parts of code, and isolates these parts for more efficient\ntesting.\n","fileTypesAndContributionMap":{"java":{"insertions":203,"deletions":108}}},{"hash":"cce7a9ff547f39eea90cad29bbf7d3db58973612","isMergeCommit":false,"messageTitle":"Avoid complicated expression","messageBody":"Some expressions are too complicated, and so cannot be read easily.\n\nThis makes modifying them difficult.\n\nLet\u0027s extract boolean logic out into their own variables when\nmore than 3 are relevant at a time.\n\nThis prevents clustering of boolean logic, abstracting out the\ndetails and so, making the code easier to read.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":15}}},{"hash":"c37806a35d531308a38cec3062a9c520ab0f1de9","isMergeCommit":false,"messageTitle":"Replace magic numbers","messageBody":"Many magic numbers and magic words are used throughout the classes.\n\nMagic numbers and words can confuse readers, as they may not know\nwhat these numbers and words mean.\n\nLet\u0027s replace magic numbers and words with defined literals,\nwith explanatory variable names.\n","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":28}}},{"hash":"8a4ae188ddeccc27eed1233d1e53fda8bcb04793","isMergeCommit":false,"messageTitle":"Make the happy path prominent","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"1e5fbc2ce63f5a318f943ed7ec252a7e3f1b76bc","isMergeCommit":false,"messageTitle":"Avoid empty catch blocks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"a04e27a1d730c831c20dda66c19ec5755cb08d8f","isMergeCommit":false,"messageTitle":"Use the default branch","messageBody":"Some if statements do not have an else statement when they should\nbe checking if invalid conditions are fulfilled.\n\nIf we simply assume these invalid conditions will not be reached,\nit will cause problems if they are reached, which will cause bugs.\n\nLet\u0027s add else clauses to if statements and default branches to\nswitch cases.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":4}}}]},{"date":"2025-02-14","commitResults":[{"hash":"9887d88c0d234725dba9510d89adf0645e6e4af8","isMergeCommit":false,"messageTitle":"Add and modify comments for all functions","messageBody":"Header comments are outdated for some functions. New functions\nalso did not have header comments.\n\nUp-to-date header comments are needed to maintain code readability\nand styling.\n\nLet\u0027s:\n* Add header comments for all extracted new functions\n* Edit header comments to suit modified functions\n","fileTypesAndContributionMap":{"java":{"insertions":240,"deletions":49}}},{"hash":"b6273b9035f37144094e3cd1ad97a45cc6b51a79","isMergeCommit":true,"messageTitle":"Merge pull request #1 from Billy026/branch-A-CodeQuality","messageBody":"Enhance code quality","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"9cf30d9cc3592944d9a7fcadbcfad20ab15e62c6","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Assertions\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/Bob/commands/DeleteCommand.java\n#\tsrc/main/java/Bob/commands/MarkCommand.java\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"3574fcf955a7d3efebb3309fce61b15a5269b451","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Streams\u0027","messageBody":"","tags":["BCD-Extension","A-Streams"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-17","commitResults":[{"hash":"31569844387c90408db16882b00cf4e9f2a1e8d8","isMergeCommit":false,"messageTitle":"Add time to date parts of tasks","messageBody":"Tasks only have date without time.\n\nUsers may want to add time to their tasks, especially for tasks\nto be done in a single day.\n\nLet\u0027s\n* add time to all tasks that will be created.\n* initiate time to 00:00 for all tasks without specified time.\n* modify incoming tasks to account for newly added time formats.\n\nAdding time allows more flexibility in the duration they would\nlike to set for their tasks with deadlines, improving user\nexperience.\n","fileTypesAndContributionMap":{"java":{"insertions":270,"deletions":50}}}]},{"date":"2025-02-18","commitResults":[{"hash":"5417cd275db178f8247e0b1b8e0e0680e5f61d6e","isMergeCommit":false,"messageTitle":"Add getDueDate command","messageBody":"There is no way to filter tasks by their deadlines.\n\nUsers may want to know which tasks they have to complete by a\nspecific deadline.\n\nLet\u0027s implement getDueDate, which gets all tasks with a matching\ndue date as the one inputted.\n\nCreating this command allows filtering of tasks by deadline, which\nis useful if users only want to see tasks with specific deadline\nfrom a large list of tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":290,"deletions":119}}},{"hash":"b428ec82ef866889d9cf263e9449cdb06564beda","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-GetDuedate\u0027","messageBody":"","tags":["A-Personality"],"fileTypesAndContributionMap":{}},{"hash":"01299a9face310a2c94ce800dcbff99347a0672f","isMergeCommit":false,"messageTitle":"Update Task classes test","messageBody":"Tests for classes in bob.tasks are outdated.\n\nOutdated tests can miss out on incorrect computations, or wrongly\nfail a test that should pass.\n\nLet\u0027s update all tests in the bob.tasks package.\n\nUpdating tests package-by-package, instead of all at once, ensures\nthe bob.tasks package is thoroughly tested before moving on to the\nnext.\n","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":43}}},{"hash":"bd097453a4fd53e9c774459a40008ddd2f17b8d3","isMergeCommit":false,"messageTitle":"Update Parser and Storage classes test","messageBody":"Tests for classes in bob.parser and bob.storage are outdated.\n\nOutdated tests can miss out on incorrect computations, or wrongly\nfail a test that should pass.\n\nLet\u0027s update all tests in bob.parser and bob.storage packages.\n\nUpdating tests package-by-package, instead of all at once, ensures\nthe bob.parser and bob.storage packages are thoroughly tested\nbefore moving on to the next.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":10}}}]},{"date":"2025-02-20","commitResults":[{"hash":"192167dd462d0aeda5efdefab5398c397051260e","isMergeCommit":false,"messageTitle":"Update Manager classes test","messageBody":"Tests for classes in bob.managers are outdated.\n\nOutdated tests can miss out on incorrect computations, or wrongly\nfail a test that should pass.\n\nLet\u0027s update all tests in the bob.managers package.\n\nUpdating tests package-by-package, instead of all at once, ensures\nthe bob.managers package is thoroughly tested before moving on to\nthe next.\n","fileTypesAndContributionMap":{"java":{"insertions":342,"deletions":78}}},{"hash":"421fd20fd4d8d1d0b66009688799b177d04ea9b1","isMergeCommit":false,"messageTitle":"Update Command classes test","messageBody":"There are no test functions for classes in the bob.commands\npackage.\n\nAll non-trivial functions should have automated tests to catch bugs\nwhile updating code.\n\nLet\u0027s add test functions in the bob.commands package.\n\nUpdating tests package-by-package, instead of all at once, ensures\nthe bob.commands package is thoroughly tested before moving on to\nthe next.\n","fileTypesAndContributionMap":{"java":{"insertions":678,"deletions":2}}},{"hash":"b42b695c625c073f024ab03ad7f5dd5902558599","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreTesting\u0027","messageBody":"","tags":["A-MoreTesting"],"fileTypesAndContributionMap":{}},{"hash":"8b1b8a07b8bbe461d81c1b7b60d7ff679780ba78","isMergeCommit":false,"messageTitle":"Add restraint to createCommand for events","messageBody":"When creating events, the end date can be before or at the same\ntime as the start date.\n\nThis is unsensible, and so should be rejected, with a message\ntelling the user that this they may have made a mistake.\n\nLet\u0027s\n* Implement a function in DateManager to enforce this restraint\n* Add test functions in DateManagerTest to test this restraint\n\nSince we are just handling potential unwanted commands, we should\ncreate test functions after implementing the restraint functions\nto test if they work as intended.\n","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":0}}},{"hash":"c187f09afbb1b071c9d6ca58d607746a7af11928","isMergeCommit":false,"messageTitle":"Add restraint to createCommand for same tasks","messageBody":"Tasks that already exist in the task list can be added again.\n\nThis is unsensible, and so should be rejected, with a message\ntelling the user that this they may have made a mistake.\n\nLet\u0027s\n* Implement a function in TaskManager to enforce this restraint\n* Add test functions in TaskManagerTest to test this restraint\n\nSince we are just handling potential unwanted commands, we should\ncreate test functions after implementing the restraint functions\nto test if they work as intended.\n","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":3}}},{"hash":"8733f0104050cf85b08304262c2c19510b10bf07","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreErrorHandling\u0027","messageBody":"","tags":["A-MoreErrorHandling"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-21","commitResults":[{"hash":"dbd93aa0023aabe1efbc212ac6996451fe182992","isMergeCommit":false,"messageTitle":"Update label in user dialog box","messageBody":"The text in the user\u0027s DialogBox is left aligned, which may not be\nuser-friendly.\n\nSince the user icon is on the right, the text should be right-aligned\nto enhance user experience for the UI.\n\nLet\u0027s change the alignment of the label to be right-aligned in\ngetUserDialog().\n\nChanging the alignment in the function itself allows manual alignment\nbased on which character is \u0027speaking\u0027.\n","fileTypesAndContributionMap":{"fxml":{"insertions":7,"deletions":7},"java":{"insertions":4,"deletions":1}}},{"hash":"005f531c1d4623fc469c4d2afd6cf404bf18dae0","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-BetterGui\u0027","messageBody":"","tags":["A-BetterGui"],"fileTypesAndContributionMap":{}},{"hash":"91aad54e299a7de85fd48b93c641825a9210b4f2","isMergeCommit":false,"messageTitle":"Create HelpCommand","messageBody":"Users do not have a list of all valid user commands that they can\ninput.\n\nBy listing all commands the user can input, it helps them utilize\nthe program, improving user experience.\n\nLet\u0027s\n* Create HelpCommand\n* Create test functions for HelpCommand\n\nBy creating an entire command for this, it isolates this list of\ncommands into its own dialog box, allowing users to reference it later\non.\n","fileTypesAndContributionMap":{"java":{"insertions":224,"deletions":0}}},{"hash":"9011947285c30832e97aad70b169f21f7edff5de","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-HelpCommand\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"84dc8bafebc32ed1f24f8e83604ce0cebdde2298","isMergeCommit":false,"messageTitle":"Update based on peer feedback","messageBody":"Comments on my iP branch pointed out ways I could improve code\nreadability.\n\nTaking into account comments from others is important as they can\nhighlight points that are otherwise easy to miss out on.\n\nLet\u0027s modify all relevant parts that were pointed out by the comments\nand are feasible.\n\nWhile some comments suggested changes for code readability, it would\nresult in massive overhauls of code with complex operations, which\nwould worsen code readability overall. That being said, most of the\ncomments were implemented and useful.\n\nThank you to yjunyeu and shashwatchan for pointing out parts of my\ncode that can be modified to improve code readability.\n","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":63}}},{"hash":"7097cf39098547fe5c832141edbad0469e381df0","isMergeCommit":false,"messageTitle":"Modify code based on Checkstyle","messageBody":"The code has JavaDoc style errors, as indicated by Checkstyle.\n\nResolving these Checkstyle conflicts help to maintain the JavaDoc\nstyling.\n\nLet\u0027s resolve all conflicts indicated by Checkstyle.\n\nBy adhering to the JavaDoc styling, it sets a styling basis to which\nother developers that may modify this code can follow. This avoids\ncode readability problems due to clashes in personal code styling\nformats.\n","fileTypesAndContributionMap":{"java":{"insertions":320,"deletions":351}}},{"hash":"549951d5c125d8c8e6547cd842de216486e5162b","isMergeCommit":false,"messageTitle":"Modify code based on iP code quality feedback","messageBody":"A few parts of the code do not follow standard code quality\npractices.\n\nAs with the JavaDoc conventions, following a standardized Code\nQuality convention allows multiple developers to have a\nstandardized styling method.\n\nLet\u0027s modify our code based on suggestions in the iP code quality\nfeedback.\n\nMaintaining proper code quality allows greater code readability.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"f5406c469f185651a5d0e5f8d895f489184e15c8","isMergeCommit":false,"messageTitle":"Fix GUI bug","messageBody":"GUI is unable to be displayed due to incorrect path name.\n\nWithout the GUI being displayed, users cannot enter commands and\nutilize the program.\n\nLet\u0027s update the path name in MainWindows.fxml to the correct\npath name.\n\nDoing so, allows the GUI to display, and so the program to be able\nto be utilized.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1}}},{"hash":"6b33072ad398031b71ae51b178937a65cabb340c","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"README is outdated and doesn\u0027t go over the program\u0027s functionalities.\r\n\r\nUsers may not know how to use the program.\r\n\r\nLet\u0027s update the README with all the valid commands a user can\r\ninput.\r\n\r\nThis way, users can cross-reference the README to learn how to\r\nuse the program.","fileTypesAndContributionMap":{"md":{"insertions":110,"deletions":14}}},{"hash":"0f66c78404fecf4f8a0bc2e2d293a5b0e298411e","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"Update README to support break lines between descriptions and formatting.\r\n\r\nThe description and formatting of each command are in the same line, which may confuse the user.\r\n\r\nLet\u0027s add a break line after each description.\r\n\r\nThis causes the formatting to be on a new line.","fileTypesAndContributionMap":{"md":{"insertions":11,"deletions":0}}}]},{"date":"2025-02-23","commitResults":[{"hash":"951a323e73c762d6910fd29a6917690f594e5a76","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/Billy026/ip","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"301d4e69afbc7fc3ccc0d41bd24a0855cedc6711","isMergeCommit":false,"messageTitle":"Update manager test classes to support cross-platform","messageBody":"The program can only run on Windows.\n\nIt is desirable for users to be able to run the program regardless\nof the OS they use.\n\nLet\u0027s update manager test classes to support cross-platform\nfunctionality.\n\nUpdating classes package-by-package allows concise testing of the\nindividual classes, to ensure modifications do not cause bugs in\nthe program.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"ecadd391d3dd237b73f12828bdaa60a0b341d598","isMergeCommit":false,"messageTitle":"Update parser test class to support cross-platform","messageBody":"The program can only run on Windows.\n\nIt is desirable for users to be able to run the program regardless\nof the OS they use.\n\nLet\u0027s update parser test class to support cross-platform\nfunctionality.\n\nUpdating classes package-by-package allows concise testing of the\nindividual classes, to ensure modifications do not cause bugs in\nthe program.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"6aaf5d06ed4fd405df21d0d7273f43aecfe4a7ad","isMergeCommit":false,"messageTitle":"Update storage test class to support cross-platform","messageBody":"The program can only run on Windows.\n\nIt is desirable for users to be able to run the program regardless\nof the OS they use.\n\nLet\u0027s update storage test class to support cross-platform\nfunctionality.\n\nUpdating classes package-by-package allows concise testing of the\nindividual classes, to ensure modifications do not cause bugs in\nthe program.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"b8c72817f03256b120925cad44aca693ef620b48","isMergeCommit":false,"messageTitle":"Update command test classes to support cross-platform","messageBody":"The program can only run on Windows.\n\nIt is desirable for users to be able to run the program regardless\nof the OS they use.\n\nLet\u0027s update command test classes to support cross-platform\nfunctionality.\n\nUpdating classes package-by-package allows concise testing of the\nindividual classes, to ensure modifications do not cause bugs in\nthe program.\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":14}}},{"hash":"49d2ff53e86e028969c13c8581169e510b9a7a38","isMergeCommit":false,"messageTitle":"Update build.gradle and src classes to support cross-platform","messageBody":"The program can only run on Windows.\n\nIt is desirable for users to be able to run the program regardless\nof the OS they use.\n\nLet\u0027s update build.gradle and src classes classes to support\ncross-platform functionality.\n\nUpdating classes package-by-package allows concise testing of the\nindividual classes, to ensure modifications do not cause bugs in\nthe program.\n","fileTypesAndContributionMap":{"gradle":{"insertions":20,"deletions":6},"java":{"insertions":3,"deletions":1}}},{"hash":"698792b0a0e1effb8a4f88a370a1f84ca8bf5dde","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/Billy026/ip","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"6886024083fcafab0881b330e68d97f9e920850c","isMergeCommit":false,"messageTitle":"Update help command to be executable","messageBody":"The help command could not be recognised by the parser.\n\nUsers will not be able to refer to what actions they can perform if\nthe help command is not working as intended.\n\nLet\u0027s\n* add help to the switch statement of parser\n* cap the dash length of the output of help to the maximum window\nwidth\n* add test functions to ensure help can be reached in parser test\n\nThe help command was intended to be added, but was mistakenly\nleft out.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":10}}},{"hash":"dff12469ebba484fdaeeb7bd7b502c2ca8ac4618","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/Billy026/ip","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{}},{"hash":"e38222ea15ba4445ed3c47d44e5836b2bedea3be","isMergeCommit":false,"messageTitle":"Fix build.gradle to allow cross-platform functionality","messageBody":"bob.jar was not working on OS apart from Windows.\n\nThis is undersirable as it should execute regardless of the OS\nused.\n\nLet\u0027s add all dependencies for JavaFX for all 3 OS.\n\nThis way, bob.jar will run on most computers, as they use either\nWindows, Mac or Linux.\n","fileTypesAndContributionMap":{"gradle":{"insertions":13,"deletions":15}}},{"hash":"1ca5d297e4bc955443e24eb1334236c60d461a11","isMergeCommit":false,"messageTitle":"Update error message for CreateCommand","messageBody":"Error message for when dates are not given to create deadlines or\nevents does not mention time is allowed.\n\nUsers may not know they can input time, which may worsen user\nexperience.\n\nLet\u0027s modify the error message to indicate time is also allowed.\n\nModifying the error message instead of displaying it to the user\noutright will prevent information overload as soon as the GUI starts\nup.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}}]}]},"authorFileTypeContributionMap":{"Billy026":{"java":5955,"md":121,"fxml":65,"sh":0,"bat":1,"gradle":34,"txt":30}},"authorContributionVariance":{"Billy026":293319.66},"authorDisplayNameMap":{"Billy026":"CS2103T-T10-3 BILL..DINA"}}
