[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"application {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"    mainClass.set(\"blob.Launcher\")","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"    archiveBaseName \u003d \"blob\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"checkstyle {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"curiousfun88":26,"-":36}},{"path":"data/blob.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"E | 1 | proj | 33 to 42","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"D | 1 |  | Dec 31 2019 18:32","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"D | 1 | sfs | Apr 23 2018 17:39","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"D | 1 | sggs | Dec 31 2019 18:00","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"D | 1 | sgsgs | Mar 02 2014 19:42","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"D | 1 | sgbsigs | Dec 31 2017 15:34","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"T | 1 | hi","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"curiousfun88":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"## Blob!! User Guide","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"***","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"Hello! I\u0027m Blob!! Blob helps you do the things that you are too lazy to do yourself...like tracking your tasks in a list!!","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"It\u0027s text-based, easy to learn and FREE to use! Perfect for the ultimate ~~procrastinator~~ busy student who has too many tasks to remember! ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"Come, give Blob a try :)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"## Features","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"***","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"## 1. Add ToDo Tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"***","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"To add a ToDo task, you can use the ```todo``` command followed by the task description.\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"Format: ```todo [task description]```\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"Examples: ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"- ```todo do homework```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"- ```todo buy broccoli```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"- ```todo study for exam```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"Expected output (last example):","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"    [T][ ] study for exam","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"## 2. Add Deadlines ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"***","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"To add a Deadline task, you can use the ```deadline``` command followed by the task description and the due date in the format yyyy/MM/dd HHmm or MMM dd yyyy HH:mm.\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"Format: ```deadline [task description] /by [due date in required format]```\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"Examples:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"- ```deadline submit quiz /by 2025/02/24 0900```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"- ```deadline download github /by 2025/01/14 0000```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"- ```deadline buy broccoli /by Mar 03 2025 18:30```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"Expected output (last example):","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"    [D][ ] buy broccoli (by: Mar 03 2025 18:30)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"## 3. Add Events ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"***","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"To add an Event task, you can use the ```event``` command followed by the task description, event start time and event end time.\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"Format: ```event [task description] /from [event start time] /to [event end time]```\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"Examples:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"- ```event CCA /from Sat 1200 /to Sat 1400```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"- ```event mahjong session /from Fri 1800 /to Fri 2000```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"- ```event birthday celebration /from 3 Apr 1800 /to 3 Apr 2200```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"Expected output (last example):","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"    [E][ ] birthday celebration (from: 3 Apr 1800 to: 3 Apr 2200)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"## 4. Find tasks based on keyword ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"***","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"curiousfun88"},"content":"To find tasks based on keyword, you can use the ```find``` command followed by the keyword.\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"curiousfun88"},"content":"Format: ```find [keyword]```\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"curiousfun88"},"content":"Examples:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"curiousfun88"},"content":"- ```find broccoli```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"curiousfun88"},"content":"- ```find mahjong```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"curiousfun88"},"content":"- ```find exam```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"curiousfun88"},"content":"Expected output (last example):","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"curiousfun88"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"curiousfun88"},"content":"Here are the matching tasks: ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"curiousfun88"},"content":"[T][ ] study for exam","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"curiousfun88"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"curiousfun88"},"content":"## 5. Delete task ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"curiousfun88"},"content":"***","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"curiousfun88"},"content":"To delete specific tasks, you can use the ```delete``` command followed by the task number, which is based on input sequence.\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"curiousfun88"},"content":"Format: ```delete [task number]```\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"curiousfun88"},"content":"Examples:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"curiousfun88"},"content":"- ```delete 2```: deletes 2nd task on the list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"curiousfun88"},"content":"- ```delete 3```: deletes 3rd task on the list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"curiousfun88"},"content":"- ```delete 1```: delete 1st task on the list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"curiousfun88"},"content":"Example Output: ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"curiousfun88"},"content":"Blob has removed the task below! ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"curiousfun88"},"content":"    [E][ ] birthday celebration (from: 3 Apr 1800 to: 3 Apr 2200)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"curiousfun88"},"content":"Now you have 2 tasks left!","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"curiousfun88"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"curiousfun88"},"content":"## 6. Mark tasks ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"curiousfun88"},"content":"***","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"curiousfun88"},"content":"To mark specific tasks with \"X\", you can use the ```mark``` command followed by the task number, which is based on input sequence.\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"curiousfun88"},"content":"Format: ```mark [task number]```\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"curiousfun88"},"content":"Examples:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"curiousfun88"},"content":"- ```mark 2```: mark 2nd task on the list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"curiousfun88"},"content":"- ```mark 3```: mark 3rd task on the list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"curiousfun88"},"content":"- ```mark 1```: mark 1st task on the list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"curiousfun88"},"content":"Example Output: ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"curiousfun88"},"content":"Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"curiousfun88"},"content":"    [T][X] study for exam","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"curiousfun88"},"content":"## 7. Unmark tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"curiousfun88"},"content":"***","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"curiousfun88"},"content":"To unmark specific tasks, you can use the ```unmark``` command followed by the task number, which is based on input sequence.\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"curiousfun88"},"content":"Format: ```unmark [task number]```\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"curiousfun88"},"content":"Examples:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"curiousfun88"},"content":"- ```unmark 2```: unmark 2nd task on the list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"curiousfun88"},"content":"- ```unmark 3```: unmark 3rd task on the list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"curiousfun88"},"content":"- ```unmark 1```: unmark 1st task on the list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"curiousfun88"},"content":"Example Output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"curiousfun88"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"curiousfun88"},"content":"OK, I\u0027ve marked this task as not done yet: ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"curiousfun88"},"content":"    [T][] study for exam","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"curiousfun88"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"curiousfun88"},"content":"## 8. Display entire list of existing tasks ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"curiousfun88"},"content":"***","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"curiousfun88"},"content":"To display the entire list of existing tasks, you can use the ```list``` command.\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"curiousfun88"},"content":"Format: ```list```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"curiousfun88"},"content":"## 9. Display list of deadlines based on date ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"curiousfun88"},"content":"***","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"curiousfun88"},"content":"To display the list of deadlines based on date, you can use the ```deadlineslist``` command followed by the specific due date in the format yyyy/MM/dd.\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"curiousfun88"},"content":"Format: ```deadlineslist [due date in required format]```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"curiousfun88"},"content":"Examples: ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"curiousfun88"},"content":"- ```deadlineslist 2025/03/03```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"curiousfun88"},"content":"- ```deadlineslist 2025/05/25```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"curiousfun88":118,"-":20}},{"path":"ip/data/blob.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"T | 0 | study for exam","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"D | 0 | buy food | Mar 03 2025 18:00","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"D | 0 | buy groceries | Mar 03 2025 19:43","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"E | 1 | party | Fri 8pm to Fri 10pm","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"D | 0 | quiz | Mar 03 2024 18:54","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"curiousfun88":5}},{"path":"src/main/java/blob/Blob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":" * Represents Blob, the friendly chatbot","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"public class Blob {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"     * Constructs a Blob instance with the specified file path for task storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"    public Blob() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"            this.storage \u003d new Storage(\"./ip/data/blob.txt\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"            tasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"            ui.loadingError();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"        Parser parse \u003d new Parser(tasks, storage, ui);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"        String result \u003d parse.processCommand(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"        return result;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"curiousfun88":34}},{"path":"src/main/java/blob/BlobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":" * Represents BlobException, which are specific exceptions to be captured by the chatbot.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"public class BlobException extends Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"     * Constructor for BlobException class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"     * @param message specific exception message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"    public BlobException(String message) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"        super(message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"curiousfun88":15}},{"path":"src/main/java/blob/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":" * Represents the Deadline task type.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"    private static final DateTimeFormatter STORAGE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"    private static final DateTimeFormatter RUN_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"    private final LocalDateTime deadline; // Store deadline as LocalDateTime","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"    private final String by;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"     * @param description Deadline Task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"     * @param by Deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"        this.deadline \u003d parseDateTime(by);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"     * Parses the date string to LocalDateTime.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"     * @param by data string to be converted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"    public static LocalDateTime parseDateTime(String by) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"            return LocalDateTime.parse(by, STORAGE_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"                return LocalDateTime.parse(by, RUN_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"                throw new IllegalArgumentException(\"Invalid date format!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"     * Returns the deadline task in a printable string form.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"     * @return Deadline Task in String format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"        DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(output) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"     * Converts the blob.Deadline task from input form to data form (for storage).","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"     * @return Deadline Task in storage format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"curiousfun88"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"curiousfun88"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"curiousfun88"},"content":"        DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"curiousfun88"},"content":"        //output format: month/day/year time (24h format)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"curiousfun88"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + deadline.format(output);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"curiousfun88"},"content":"     * Gets the deadline date.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"curiousfun88"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"curiousfun88"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"curiousfun88"},"content":"        return this.deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"curiousfun88"},"content":"     * Gets the deadline date in String form.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"curiousfun88"},"content":"     * @return String.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"curiousfun88"},"content":"    public String getDeadlineString() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"curiousfun88"},"content":"        return deadline.format(STORAGE_FORMAT);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"curiousfun88"},"content":"     * Obtains the deadlines that falls on the same date.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"curiousfun88"},"content":"     * @param targetDate deadlines that fall on that specified date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"curiousfun88"},"content":"     * @param tasks the TaskList that houses the deadlines.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"curiousfun88"},"content":"     * @return list of tasks that have same date deadlines.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"curiousfun88"},"content":"    public static List\u003cDeadline\u003e getDeadlinesOnSameDay(LocalDate targetDate, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"curiousfun88"},"content":"        List\u003cDeadline\u003e allDeadlines \u003d loadTasksWithDeadlines(tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"curiousfun88"},"content":"        List\u003cDeadline\u003e sameDayDeadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"curiousfun88"},"content":"        for (Deadline deadlineTask : allDeadlines) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"curiousfun88"},"content":"            LocalDate taskDate \u003d deadlineTask.getDeadline().toLocalDate(); // obtain the date part of the deadline","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"curiousfun88"},"content":"            if (taskDate.equals(targetDate)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"curiousfun88"},"content":"                sameDayDeadlines.add(deadlineTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"curiousfun88"},"content":"        return sameDayDeadlines;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"curiousfun88"},"content":"     * Loads all deadline tasks with the same date.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"curiousfun88"},"content":"     * @param tasks the TaskList that houses the deadlines.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"curiousfun88"},"content":"     * @return list of tasks with same date deadlines.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"curiousfun88"},"content":"    public static List\u003cDeadline\u003e loadTasksWithDeadlines(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"curiousfun88"},"content":"        List\u003cDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"curiousfun88"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"curiousfun88"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"curiousfun88"},"content":"                deadlines.add((Deadline) task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"curiousfun88"},"content":"        return deadlines;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"curiousfun88":125}},{"path":"src/main/java/blob/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"     * Loads the DialogBox layout from an FXML file and initializes","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"     * the dialog text and display image.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"     * @param text The text content of the dialog.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"     * @param img  The image associated with the dialog.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"    private void flip() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"     * Creates a DialogBox representing the user\u0027s message.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"curiousfun88"},"content":"     * @param text The text content of the user\u0027s message.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"curiousfun88"},"content":"     * @param img  The image representing the user.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"curiousfun88"},"content":"     * @return A DialogBox containing the user\u0027s message and image.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"curiousfun88"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"curiousfun88"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"curiousfun88"},"content":"     * Creates a DialogBox representing Blob\u0027s response.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"curiousfun88"},"content":"     * The dialog box is flipped to differentiate it from the user\u0027s message.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"curiousfun88"},"content":"     * @param text The text content of Blob\u0027s response.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"curiousfun88"},"content":"     * @param img  The image representing Blob.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"curiousfun88"},"content":"     * @return A flipped DialogBox containing Blob\u0027s response and image.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"curiousfun88"},"content":"    public static DialogBox getBlobDialog(String text, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"curiousfun88"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"curiousfun88"},"content":"        db.flip();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"curiousfun88"},"content":"        return db;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"curiousfun88":85}},{"path":"src/main/java/blob/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":" * Represents the Event task type.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"    protected String from;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"    protected String to;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"     * Constructor for Event class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"     * @param description Event description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"     * @param from Event start time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"     * @param to Event end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"     * Returns event details in String form that can be printed.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"     * @return Event Task in String format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"     * Converts the Event task from input form to data form.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"     * @return Event Task in storage format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" to \" + to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"     * Retrieves the start time of the event.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"     * @return The start time as a string.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"    public String getStartTime() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"        return this.from;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"     * Retrieves the end time of the event.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"     * @return The end time as a string.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"    public String getEndTime() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"        return this.to;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"curiousfun88":62}},{"path":"src/main/java/blob/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":" * Launches the application","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"public class Launcher {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"     * Launches the JavaFX application.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"     * Initiates the JavaFX application by calling the","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"     * launch method on the Main class, passing the command-line arguments.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"     * @param args Command-line arguments passed to the application.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"curiousfun88":20}},{"path":"src/main/java/blob/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":" * Creates a GUI for Blob using FXML.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"    private final Blob blob \u003d new Blob();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"     * Initializes and shows the main GUI window for the Blob application.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"     * This method loads the FXML layout for the main window, sets up the","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"     * scene and stage for the JavaFX application, and injects the Blob instance","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"     * into the controller. It also handles any IOExceptions that may occur","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"     * during the loading of the FXML file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"     * @param stage The primary stage for the JavaFX application.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"            stage.setTitle(\"Blob!!\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBlob(blob); // inject the Blob instance","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"            stage.show();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"curiousfun88":42}},{"path":"src/main/java/blob/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":" * Controls main GUI.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"    private Blob blob;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"    private boolean isNewEntry \u003d true;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/box.png\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"    private final Image blobImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/blob.png\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"     * Initializer for the main GUI.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"        sendButton.setOnAction(event -\u003e handleUserInput());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"     * Injects the Blob instance.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"    public void setBlob(Blob b) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"        blob \u003d b;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"        if (isNewEntry) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"                    DialogBox.getBlobDialog(Ui.helloMessage(), blobImage)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"            );","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"            isNewEntry \u003d false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Blob\u0027s reply and then appends them to","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"        String response \u003d blob.getResponse(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"curiousfun88"},"content":"                DialogBox.getBlobDialog(response, blobImage)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"curiousfun88"},"content":"        );","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"curiousfun88"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"curiousfun88":68}},{"path":"src/main/java/blob/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":" * Represents the Parser class, which processes commands.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"public class Parser {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"     * Constructor for Parser class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"     * @param tasks the TaskList involved.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"     * @param ui the UI involved.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"    public Parser(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"     * Processes the user command and delegates it to specific handlers based on the command.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"     * @param command The user input command to process.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"     * @return A response message based on the processed command.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"    public String processCommand(String command) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"            if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"                return handleBye();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"            } else if (command.equalsIgnoreCase(\"Hello\") || command.equalsIgnoreCase(\"Hi\")) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"                return ui.hiReplyMessage();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"                return tasks.listTasks();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"            } else if (command.startsWith(\"deadlineslist\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"                return tasks.listSameDeadlineTasks(command);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"            } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"                return handleTaskUpdate(command, true);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"            } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"                return handleTaskUpdate(command, false);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"            } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"                return handleTaskAddition(command, \"todo\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"                return handleTaskAddition(command, \"deadline\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"                return handleTaskAddition(command, \"event\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"            } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"                return handleTaskDeletion(command);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"            } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"                return tasks.findTask(command);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"            } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"                return ui.invalidCommandMessage();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"        } catch (BlobException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"            return ui.error(e.getMessage());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"curiousfun88"},"content":"            return ui.error(\"Please specify which task!\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"curiousfun88"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"curiousfun88"},"content":"            return ui.error(\"Please input again for Blob!\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"curiousfun88"},"content":"     * Handles the \"bye\" command with a delayed exit.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"curiousfun88"},"content":"     * @return The farewell message to the user.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"curiousfun88"},"content":"    private String handleBye() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"curiousfun88"},"content":"        String byeMessage \u003d ui.byeMessage();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"curiousfun88"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"curiousfun88"},"content":"        pause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"curiousfun88"},"content":"        pause.play();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"curiousfun88"},"content":"        return byeMessage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"curiousfun88"},"content":"     * Handles task update operations like marking/unmarking tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"curiousfun88"},"content":"     * @param command The user input command to update a task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"curiousfun88"},"content":"     * @param isMark True for marking tasks, false for unmarking.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"curiousfun88"},"content":"     * @return The response message after updating the task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"curiousfun88"},"content":"    private String handleTaskUpdate(String command, boolean isMark) throws BlobException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"curiousfun88"},"content":"        String response;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"curiousfun88"},"content":"        if (isMark) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"curiousfun88"},"content":"            response \u003d tasks.markTask(command);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"curiousfun88"},"content":"        } else {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"curiousfun88"},"content":"            response \u003d tasks.unmarkTask(command);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"curiousfun88"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"curiousfun88"},"content":"        return response;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"curiousfun88"},"content":"     * Handles the addition of a new task based on the specified task type.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"curiousfun88"},"content":"     * @param command The user input command to add a new task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"curiousfun88"},"content":"     * @param type The type of task to add (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"curiousfun88"},"content":"     * @return The response message after adding the task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"curiousfun88"},"content":"    private String handleTaskAddition(String command, String type) throws BlobException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"curiousfun88"},"content":"        String response;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"curiousfun88"},"content":"        switch (type) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"curiousfun88"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"curiousfun88"},"content":"            response \u003d tasks.addTodoTask(command);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"curiousfun88"},"content":"            break;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"curiousfun88"},"content":"        case \"deadline\":","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"curiousfun88"},"content":"            response \u003d tasks.addDeadlineTask(command);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"curiousfun88"},"content":"            break;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"curiousfun88"},"content":"        case \"event\":","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"curiousfun88"},"content":"            response \u003d tasks.addEventTask(command);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"curiousfun88"},"content":"            break;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"curiousfun88"},"content":"        default:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"curiousfun88"},"content":"            return ui.invalidCommandMessage();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"curiousfun88"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"curiousfun88"},"content":"        return response;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"curiousfun88"},"content":"     * Handles the deletion of a task based on the command.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"curiousfun88"},"content":"     * @param command The user input command to delete a task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"curiousfun88"},"content":"     * @return The response message after deleting the task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"curiousfun88"},"content":"    private String handleTaskDeletion(String command) throws BlobException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"curiousfun88"},"content":"        String response \u003d tasks.deleteTask(command);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"curiousfun88"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"curiousfun88"},"content":"        return response;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"curiousfun88":137}},{"path":"src/main/java/blob/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":" * Handles loading and saving tasks from a specific file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"public class Storage {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"    private final String directoryPath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"     * Constructs a Storage object for managing task persistence.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"        this.directoryPath \u003d new File(filePath).getParent(); // Extract directory path","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"        // Ensure the directory exists before creating a new file","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"            directory.mkdirs();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"            file.createNewFile(); // Create a new empty file","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"            System.out.println(\"Error creating new file: \" + e.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"     * Saves tasks to the specified file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"     * @param tasks The TaskList to save.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"        // Ensure the directory exists before writing","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"            directory.mkdirs();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(file))) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"                writer.println(task.serialize());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"            System.out.println(\"Tasks successfully saved to: \" + filePath);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"            System.out.println(\"Error saving tasks to \" + filePath + \": \" + e.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"curiousfun88"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"curiousfun88"},"content":"     * @return A TaskList containing the saved tasks.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"curiousfun88"},"content":"    public TaskList loadTasks() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"curiousfun88"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"curiousfun88"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"curiousfun88"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"curiousfun88"},"content":"            System.out.println(\"Data file does not exist at \" + filePath + \". Returning empty task list.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"curiousfun88"},"content":"            return tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"curiousfun88"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"curiousfun88"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"curiousfun88"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"curiousfun88"},"content":"                try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"curiousfun88"},"content":"                    Task task \u003d Task.deserialize(line);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"curiousfun88"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"curiousfun88"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"curiousfun88"},"content":"                    System.out.println(\"Skipping corrupted line: \" + line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"curiousfun88"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"curiousfun88"},"content":"            System.out.println(\"Tasks successfully loaded from: \" + filePath);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"curiousfun88"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"curiousfun88"},"content":"            System.out.println(\"Error loading tasks from \" + filePath + \": \" + e.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"curiousfun88"},"content":"        return tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"curiousfun88":94}},{"path":"src/main/java/blob/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":" * Represents the Task superclass.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"public class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"    protected String description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"     * Constructor for task class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"     * @param description Task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"     * Obtains the current task status (marked/unmarked).","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"     * Helps to mark the task as done.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"     * Helps to mark the task as not done.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"     * Returns task details in String form that can be printed.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"     * @return Task in String format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"     * Converts Task from input to storage form.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"     * @return Task in storage format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"        return \"\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"     * Converts Task from storage to input form.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"curiousfun88"},"content":"     * @param data specific storage data.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"curiousfun88"},"content":"     * @return Task from the stored format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"curiousfun88"},"content":"    public static Task deserialize(String data) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"curiousfun88"},"content":"        String[] components \u003d data.split(\" \\\\| \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"curiousfun88"},"content":"        String type \u003d components[0];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"curiousfun88"},"content":"        boolean isDone \u003d components[1].equals(\"1\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"curiousfun88"},"content":"        String description \u003d components[2];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"curiousfun88"},"content":"        switch (type) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"curiousfun88"},"content":"        case \"T\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"curiousfun88"},"content":"            Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"curiousfun88"},"content":"            if (isDone) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"curiousfun88"},"content":"                todo.markAsDone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"curiousfun88"},"content":"            return todo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"curiousfun88"},"content":"        case \"D\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"curiousfun88"},"content":"            String by \u003d components[3];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"curiousfun88"},"content":"            Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"curiousfun88"},"content":"            if (isDone) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"curiousfun88"},"content":"                deadline.markAsDone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"curiousfun88"},"content":"            return deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"curiousfun88"},"content":"        case \"E\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"curiousfun88"},"content":"            String[] times \u003d components[3].split(\" to \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"curiousfun88"},"content":"            Event event \u003d new Event(description, times[0], times[1]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"curiousfun88"},"content":"            if (isDone) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"curiousfun88"},"content":"                event.markAsDone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"curiousfun88"},"content":"            return event;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"curiousfun88"},"content":"        default:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"curiousfun88"},"content":"            throw new IllegalArgumentException(\"Invalid task type: \" + type);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"curiousfun88"},"content":"     * Returns the task description.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"curiousfun88"},"content":"     * @return Task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"curiousfun88"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"curiousfun88"},"content":"        return this.description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"curiousfun88":106}},{"path":"src/main/java/blob/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"import java.util.Iterator;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":" * Represents the TaskList class that houses all task operations.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"     * Adds the task to the TaskList after checking for duplicates.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"     * If the task is a duplicate, it will not be added.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"        int initialSize \u003d tasks.size();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"        assert tasks.size() \u003d\u003d initialSize + 1 : \"Task was not added correctly!\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"     * Checks if a Todo task with the specified description already exists in the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"     * @return true if a Todo task with the same description exists, false otherwise.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"    private boolean isDuplicateTodo(String description) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"        return tasks.stream()","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"                .filter(task -\u003e task instanceof Todo)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"                .anyMatch(task -\u003e task.getDescription().equals(description));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"     * Checks if a Deadline task with the specified description and due date already exists in the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"     * @param due The due date of the Deadline task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"     * @return true if a Deadline task with the same description and due date exists, false otherwise.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"    private boolean isDuplicateDeadline(String description, String due) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"        DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"); // \"Mar 03 2025 18:00\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"        DateTimeFormatter format2 \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"); // \"2025/03/03 1800\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"        LocalDateTime parsedDue \u003d null;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"            if (due.matches(\"\\\\d{4}/\\\\d{2}/\\\\d{2} \\\\d{4}\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"                parsedDue \u003d LocalDateTime.parse(due, format2);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"curiousfun88"},"content":"            } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"curiousfun88"},"content":"                parsedDue \u003d LocalDateTime.parse(due, format1);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"curiousfun88"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"curiousfun88"},"content":"            return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"curiousfun88"},"content":"        String formattedDue \u003d parsedDue.format(format1); // Normalize format","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"curiousfun88"},"content":"        return tasks.stream()","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"curiousfun88"},"content":"                .filter(task -\u003e task instanceof Deadline)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"curiousfun88"},"content":"                .anyMatch(deadline -\u003e {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"curiousfun88"},"content":"                    String storedDue \u003d ((Deadline) deadline).getDeadlineString();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"curiousfun88"},"content":"                    return deadline.getDescription().equals(description)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"curiousfun88"},"content":"                            \u0026\u0026 storedDue.equals(formattedDue);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"curiousfun88"},"content":"                });","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"curiousfun88"},"content":"     * Checks if an Event task with the specified description, start time, and end time already exists in the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"curiousfun88"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"curiousfun88"},"content":"     * @param startTime The start time of the Event.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"curiousfun88"},"content":"     * @param endTime The end time of the Event.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"curiousfun88"},"content":"     * @return true if an Event task with the same description, start time, and end time exists, false otherwise.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"curiousfun88"},"content":"    private boolean isDuplicateEvent(String description, String startTime, String endTime) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"curiousfun88"},"content":"        return tasks.stream()","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"curiousfun88"},"content":"                .filter(task -\u003e task instanceof Event)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"curiousfun88"},"content":"                .anyMatch(event -\u003e event.getDescription().equals(description)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"curiousfun88"},"content":"                        \u0026\u0026 ((Event) event).getStartTime().equals(startTime)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"curiousfun88"},"content":"                        \u0026\u0026 ((Event) event).getEndTime().equals(endTime));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"curiousfun88"},"content":"     * Returns a formatted string of existing tasks in the TaskList.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"curiousfun88"},"content":"    public String listTasks() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"curiousfun88"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"curiousfun88"},"content":"            return \"Your task list is empty!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"curiousfun88"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"curiousfun88"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"curiousfun88"},"content":"            sb.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"curiousfun88"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"curiousfun88"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"curiousfun88"},"content":"     * @param command markTask command and task index.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"curiousfun88"},"content":"    public String markTask(String command) throws BlobException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"curiousfun88"},"content":"        int index \u003d parseIndex(command);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"curiousfun88"},"content":"        Task selected \u003d tasks.get(index - 1);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"curiousfun88"},"content":"        selected.markAsDone();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"curiousfun88"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + selected;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"curiousfun88"},"content":"     * Unmarks the task as undone.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"curiousfun88"},"content":"     * @param command unmarkTask command and task index.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"curiousfun88"},"content":"    public String unmarkTask(String command) throws BlobException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"curiousfun88"},"content":"        int index \u003d parseIndex(command);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"curiousfun88"},"content":"        Task selected \u003d tasks.get(index - 1);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"curiousfun88"},"content":"        selected.markAsNotDone();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"curiousfun88"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + selected;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"curiousfun88"},"content":"     * Adds a Todo task to the TaskList.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"curiousfun88"},"content":"     * @param command addTodoTask command and task details.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"curiousfun88"},"content":"    public String addTodoTask(String command) throws BlobException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"curiousfun88"},"content":"        String description \u003d command.substring(4).trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"curiousfun88"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"curiousfun88"},"content":"            throw new BlobException(\"Key in your task! You can\u0027t be doing nothing lazy bum!!\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"curiousfun88"},"content":"        Task todo \u003d new Todo(description);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"curiousfun88"},"content":"        if (isDuplicateTodo(description)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"curiousfun88"},"content":"            throw new BlobException(\"Duplicate todo detected. Stop re-keying the same task! \"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"curiousfun88"},"content":"                    + \"Blob may be fat but I will not eat your stuff!!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"curiousfun88"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"curiousfun88"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + todo + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"curiousfun88"},"content":"     * Adds a Deadline task to the TaskList.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"curiousfun88"},"content":"     * @param command addDeadlineTask command and task details.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"curiousfun88"},"content":"    public String addDeadlineTask(String command) throws BlobException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"curiousfun88"},"content":"        int startIndex \u003d 8;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"curiousfun88"},"content":"        int endIndex \u003d command.indexOf(\"/\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"curiousfun88"},"content":"        int byIndex \u003d endIndex + 4;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"curiousfun88"},"content":"        if (endIndex \u003d\u003d -1 || command.length() \u003c\u003d byIndex) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"curiousfun88"},"content":"            throw new BlobException(\"HOLD ON! Blob doesn\u0027t know when your task is due! Please key in!!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"curiousfun88"},"content":"        String description \u003d command.substring(startIndex, endIndex).trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"curiousfun88"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"curiousfun88"},"content":"            throw new BlobException(\"STOP RIGHT THERE! You can\u0027t have a nameless deadline! Don\u0027t try to fool Blob!!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"curiousfun88"},"content":"        String due \u003d command.substring(byIndex).trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"curiousfun88"},"content":"        Task deadline \u003d new Deadline(description, due);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"curiousfun88"},"content":"        if (isDuplicateDeadline(description, due)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"curiousfun88"},"content":"            throw new BlobException(\"Duplicate deadline detected. Stop re-keying the same task! \"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"curiousfun88"},"content":"                    + \"Blob may be fat but I will not eat your stuff!!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"curiousfun88"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"curiousfun88"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + deadline","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"curiousfun88"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"curiousfun88"},"content":"     * Adds an Event task to the TaskList.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"curiousfun88"},"content":"     * @param command addEventTask command and task details.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"curiousfun88"},"content":"    public String addEventTask(String command) throws BlobException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"curiousfun88"},"content":"        int startIndex \u003d 5;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"curiousfun88"},"content":"        int fromIndex \u003d command.indexOf(\"/from\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"curiousfun88"},"content":"        if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"curiousfun88"},"content":"            throw new BlobException(\"Please ensure you enter the required event details before telling Blob!!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"curiousfun88"},"content":"        String description \u003d command.substring(startIndex, fromIndex - 1).trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"curiousfun88"},"content":"        int toIndex \u003d command.indexOf(\"/to\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"curiousfun88"},"content":"        if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"curiousfun88"},"content":"            throw new BlobException(\"Please ensure you enter the required event details before telling Blob!!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"curiousfun88"},"content":"        String startTime \u003d command.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"curiousfun88"},"content":"        String endTime \u003d command.substring(toIndex + 3).trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"curiousfun88"},"content":"        if (description.isEmpty() || startTime.isEmpty() || endTime.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"curiousfun88"},"content":"            throw new BlobException(\"Please ensure all event details are entered! Blob can\u0027t read your mind!!\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"curiousfun88"},"content":"        Task event \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"curiousfun88"},"content":"        if (isDuplicateEvent(description, startTime, endTime)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"curiousfun88"},"content":"            throw new BlobException(\"Duplicate event detected. Stop re-keying the same task! \"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"curiousfun88"},"content":"                    + \"Blob may be fat but I will not eat your stuff!!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"curiousfun88"},"content":"        tasks.add(event);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"curiousfun88"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + event + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"curiousfun88"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"curiousfun88"},"content":"     * @param command deleteTask command and task index.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"curiousfun88"},"content":"    public String deleteTask(String command) throws BlobException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"curiousfun88"},"content":"        int index \u003d parseIndex(command);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"curiousfun88"},"content":"        Task selected \u003d tasks.remove(index - 1);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"curiousfun88"},"content":"        return \"Blob has removed the task below!\\n  \" + selected + \"\\nNow you have \" + tasks.size() + \" tasks left!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"curiousfun88"},"content":"     * Finds tasks that contain the given keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"curiousfun88"},"content":"     * @param command findTask command and task index.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"curiousfun88"},"content":"    public String findTask(String command) throws BlobException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"curiousfun88"},"content":"        if (command.split(\" \").length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"curiousfun88"},"content":"            throw new BlobException(\"WAIT!!! No keyword! How do you expect Blob to find?!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"curiousfun88"},"content":"        String keyword \u003d command.split(\" \")[1];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"curiousfun88"},"content":"        TaskList res \u003d new TaskList();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"curiousfun88"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"curiousfun88"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"curiousfun88"},"content":"                res.add(task);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"curiousfun88"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the matching tasks:\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"curiousfun88"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"curiousfun88"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"curiousfun88"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"curiousfun88"},"content":"                result.append(task).append(\"\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"curiousfun88"},"content":"                isFound \u003d true;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"curiousfun88"},"content":"        return isFound ? result.toString() : \"No matching tasks found!\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"curiousfun88"},"content":"     * Lists tasks with the same deadline.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"curiousfun88"},"content":"     * @param command listSameDeadlineTasks command and deadline date.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"curiousfun88"},"content":"    public String listSameDeadlineTasks(String command) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"curiousfun88"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"curiousfun88"},"content":"            String dateString \u003d command.split(\" \", 2)[1];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"curiousfun88"},"content":"            LocalDate targetDate \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"curiousfun88"},"content":"            List\u003cDeadline\u003e deadlines \u003d Deadline.getDeadlinesOnSameDay(targetDate, tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"curiousfun88"},"content":"            if (deadlines.isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"curiousfun88"},"content":"                return \"No tasks found with deadline on \" + targetDate + \"!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"curiousfun88"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Tasks due on \" + targetDate + \":\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"curiousfun88"},"content":"            for (Deadline deadline : deadlines) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"curiousfun88"},"content":"                sb.append(deadline).append(\"\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"curiousfun88"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"curiousfun88"},"content":"            return sb.toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"curiousfun88"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"curiousfun88"},"content":"            return \"Invalid date format. Please use yyyy/MM/dd.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"curiousfun88"},"content":"     * Checks whether the TaskList is empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"curiousfun88"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"curiousfun88"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"curiousfun88"},"content":"     * Returns the number of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"curiousfun88"},"content":"    public int size() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"curiousfun88"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"curiousfun88"},"content":"     * Returns the task at a specific index.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"curiousfun88"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"curiousfun88"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"curiousfun88"},"content":"     * Ensures TaskList is iterable.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"curiousfun88"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"curiousfun88"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"curiousfun88"},"content":"        return tasks.iterator();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"curiousfun88"},"content":"     * Parses the index.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"curiousfun88"},"content":"    private int parseIndex(String command) throws BlobException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"curiousfun88"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"curiousfun88"},"content":"            return Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"curiousfun88"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"curiousfun88"},"content":"            throw new BlobException(\"Invalid task index!\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"curiousfun88"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"curiousfun88":315}},{"path":"src/main/java/blob/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":" * Represents the Todo task type.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"class Todo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"     * @param description Todo Task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"     * Returns todo details in String form that can be printed.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"     * @return Todo task in String format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"     * Converts the Todo task from input form to data form.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"     * @return Todo task in storage format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"curiousfun88":35}},{"path":"src/main/java/blob/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":" * Represents the Ui class, the basic running of the application.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"public class Ui {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"     * Constructor for Ui class. Starts the input scanner.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"    public Ui() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"     * Returns the hello message.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"    public static String helloMessage() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"        return \"Welcome sleepyhead! I\u0027m Blob!!\\n\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"                + \"I help you do the things that you are too lazy to do yourself...like tracking your tasks!\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"                + \" Let\u0027s begin :)\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"     * Returns the exit message.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"    public String byeMessage() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"        return \"Thank you. Before you go, huggie for Blob? \";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"     * Reads the user input.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"     * @return the input command in String format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"     * Loads the loading error message.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"    public String loadingError() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"        return \"Error loading data file. Starting with an empty task list.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"     * Displays the given message.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"     * @param message the given message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"    public String showMessage(String message) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"        return message;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"     * Displays invalid command message.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"    public String invalidCommandMessage() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"curiousfun88"},"content":"        return \"Please key in a valid task! Blob doesn\u0027t know what you want!!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"curiousfun88"},"content":"     * Plays an error message with the given message.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"curiousfun88"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"curiousfun88"},"content":"     * @param message the input message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"curiousfun88"},"content":"    public String error(String message) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"curiousfun88"},"content":"        return \"ERROR: \" + message;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"curiousfun88"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"curiousfun88"},"content":"     * Returns a reply to the user\u0027s repeated Hi(s);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"curiousfun88"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"curiousfun88"},"content":"    public String hiReplyMessage() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"curiousfun88"},"content":"        return \"yes hello! Cut to the chase. Zzz Blob ain\u0027t got all day. Blob needs to sleep!! -.-\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"curiousfun88":81}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"            \u003cInsets left\u003d\"8.0\" right\u003d\"8.0\" /\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"         \u003cfont\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"            \u003cFont name\u003d\"Segoe UI Semibold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"curiousfun88":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"blob.MainWindow\"\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"curiousfun88":19}},{"path":"src/test/java/blob/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"    private static final String TEST_DIRECTORY_PATH \u003d \"test_data\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"    private static final String TEST_FILE_PATH \u003d TEST_DIRECTORY_PATH + File.separator + \"test_blob.txt\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"    @AfterEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"    public void revert() throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"        //Delete test files after each test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"        Files.deleteIfExists(Paths.get(TEST_FILE_PATH));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"        Files.deleteIfExists(Paths.get(TEST_DIRECTORY_PATH));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"    public void testSaveAndLoadTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"        //Create and add tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"        Task task1 \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"        Task task2 \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"        tasks.add(task1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"        tasks.add(task2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"        //Check if file was created","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"        assertTrue(file.exists(), \"Task file should exist after saving tasks.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"        //Load tasks from file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"        TaskList loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"        //Check if tasks are correctly loaded","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"        assertEquals(2, loadedTasks.size(), \"Loaded task list should contain two tasks.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"        assertEquals(\"Buy groceries\", loadedTasks.get(0).getDescription(), \"First task description should match.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"        assertEquals(\"Read book\", loadedTasks.get(1).getDescription(), \"Second task description should match.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"    public void testLoadTasksFromNonExistentFile() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"        // Ensure the file does not exist before loading","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"curiousfun88"},"content":"        file.delete();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"curiousfun88"},"content":"        //Load tasks from non-existent file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"curiousfun88"},"content":"        TaskList loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"curiousfun88"},"content":"        //Return empty task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"curiousfun88"},"content":"        assertTrue(loadedTasks.isEmpty(), \"Loading from a non-existent file should return an empty task list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"curiousfun88"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"curiousfun88"},"content":"    public void testSkipCorruptedLines() throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"curiousfun88"},"content":"        //Ensure test/data directory exists before writing to the file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"curiousfun88"},"content":"        Files.createDirectories(Paths.get(TEST_DIRECTORY_PATH));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"curiousfun88"},"content":"        //Create a test file with one valid and one corrupted line","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"curiousfun88"},"content":"        Files.write(Paths.get(TEST_FILE_PATH), List.of(\"T | 0 | Do laundry\", \"gibberish\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"curiousfun88"},"content":"        TaskList loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"curiousfun88"},"content":"        //Should only load the valid task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"curiousfun88"},"content":"        assertEquals(1, loadedTasks.size(), \"Only valid tasks should be loaded.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"curiousfun88"},"content":"        assertEquals(\"Do laundry\", loadedTasks.get(0).getDescription(), \"Valid task should be correctly loaded.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"curiousfun88":86}},{"path":"src/test/java/blob/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"package blob;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"public class TodoTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"    public void testToString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"        Todo todo \u003d new Todo(\"Buy broccoli\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"        assertEquals(\"[T][ ] Buy broccoli\", todo.toString(), \"toString() should match expected format.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"        assertEquals(\"[T][X] Buy broccoli\", todo.toString(), \"toString() should reflect marked status.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"    public void testSerialise() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"        Todo todo \u003d new Todo(\"Buy broccoli\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"        assertEquals(\"T | 0 | Buy broccoli\", todo.serialize(), \"serialise() should correctly format an unmarked task.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"        assertEquals(\"T | 1 | Buy broccoli\", todo.serialize(), \"serialise() should correctly format a marked task.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"curiousfun88":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"todo borrow book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"curiousfun88":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"java -classpath ..\\bin Blob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"curiousfun88":1,"-":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"java -classpath ../bin Blob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"curiousfun88":1,"-":37}}]
