[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"    mainClass.set(\"clonky.Clonky\")","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"    archiveBaseName \u003d \"clonky\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"    mainClassName \u003d \"clonky.Clonky\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"    archiveFileName \u003d \"clonky.jar\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"soonami69":4,"-":39}},{"path":"src/main/java/clonky/Clonky.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"    package clonky;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"    import clonky.tasks.Parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"    import clonky.ui.UI;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"    import java.util.Scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"     * The main entry point for the Clonky application.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"     * Clonky is a task manager that supports different types of tasks and user interactions.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"    public class Clonky {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"        private UI ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"        /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"         * Initializes Clonky with a specified file path for saving/loading tasks. Currently the","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"         * File path is hard-coded.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"         *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"         * @param filePath The path where tasks are stored. (Currently not used in initialization)","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"         */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"        public Clonky(String filePath) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"            //TODO: Let filepath be configurable...","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"            ui \u003d new UI(new Parser(), new Scanner(System.in));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"        /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"         * Starts the Clonky task manager by invoking the UI.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"         */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"        public void run() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"            ui.startup();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"        /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"         * The main method, which starts the Clonky application.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"         *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"         * @param args Command-line arguments (not currently used)","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"         */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"        public static void main(String[] args) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"            new Clonky(\"This isn\u0027t working yet\").run();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":39}},{"path":"src/main/java/clonky/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":" * The {@code Deadline} class represents a task that has a specific due date.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":" * It extends the {@code Task} class and stores a {@code LocalDate} for the deadline.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"    private final LocalDate by;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"     * Constructs a new {@code Deadline} task with a description and due date.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"     * @param by The due date in {@code YYYY-MM-DD} format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"        super(description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"     * Returns a string representation of the deadline task,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"     * including its description and due date formatted as \"MMM d yyyy\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":35}},{"path":"src/main/java/clonky/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":" * The {@code Event} class represents a task that occurs within a specific time frame.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":" * It extends the {@code Task} class and stores {@code LocalDate} values for the start and end dates.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"    private final LocalDate from;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"    private final LocalDate to;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"     * Constructs a new {@code Event} task with a description, start date, and end date.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"     * @param from The start date of the event in {@code YYYY-MM-DD} format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"     * @param to The end date of the event in {@code YYYY-MM-DD} format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"        super(description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"     * Returns a string representation of the event task, including its description,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"     * start date, and end date formatted as \"MMM d yyyy\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"        return String.format(\"[E]%s (from %s to %s)\", super.toString(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":39}},{"path":"src/main/java/clonky/tasks/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"class InvalidTaskFormatException extends Exception {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"    public InvalidTaskFormatException(String message) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"        super(message);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":7}},{"path":"src/main/java/clonky/tasks/NoByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"public class NoByException extends Exception {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"    public NoByException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"        super(\"Specify a deadline for your... well, deadline with \\\"/by {date}\\\"\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":7}},{"path":"src/main/java/clonky/tasks/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"public class NoDescriptionException extends Exception {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"    public NoDescriptionException(String errorMessage) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"        super(String.format(\"Hey, you didn\u0027t give a description for this %s\", errorMessage));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":7}},{"path":"src/main/java/clonky/tasks/NoFromException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"public class NoFromException extends Exception {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"    public NoFromException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"        super(\"Specify a starting date for your event with \\\"/from {date}\\\"\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":7}},{"path":"src/main/java/clonky/tasks/NoToException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"public class NoToException extends Exception {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"    public NoToException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"        super(\"Specify an end date for your event with \\\"/to {date}\\\"\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":7}},{"path":"src/main/java/clonky/tasks/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":" * The {@code Parser} class handles the parsing and execution of user commands","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":" * related to task management in the Clonky application.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":" * It supports adding, removing, marking, and saving/loading tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"public class Parser {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"     * Adds a new {@code Todo} task to the list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"     * @throws NoDescriptionException If the description is empty or null.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"    public void addTodo(String description) throws NoDescriptionException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"        taskList.addTodo(description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"     * Adds a new {@code Deadline} task with a due date.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"     * @param arguments The task description and due date in the format \"description /by YYYY-MM-DD\".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"     * @throws NoDescriptionException If the description is missing.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"     * @throws NoByException If the due date is missing.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"    public void addDeadline(String arguments) throws NoDescriptionException, NoByException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"        taskList.addDeadline(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"     * Adds an event task by passing the arguments to the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"     * @param arguments The arguments containing the description, start, and end dates.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"     * @throws NoDescriptionException If the description is empty.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"     * @throws NoFromException       If the \u0027/from\u0027 part is missing.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"     * @throws NoToException         If the \u0027/to\u0027 part is missing.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"    public void addEvent(String arguments) throws NoDescriptionException, NoFromException, NoToException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"        taskList.addEvent(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"     * Marks a task as done based on the given index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"     * @param arguments The index of the task to mark as done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"    public void markTask(String arguments) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"        int index \u003d parseIndex(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"        if (index \u003d\u003d -1) return;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"        taskList.markTask(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"     * Unmarks a task based on the given index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"     * @param arguments The index of the task to unmark.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"    public void unmarkTask(String arguments) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"        int index \u003d parseIndex(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"        if (index \u003d\u003d -1) return;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"        taskList.unmarkTask(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"soonami69"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"soonami69"},"content":"    public void listTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"soonami69"},"content":"        taskList.listTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"soonami69"},"content":"    private int parseIndex(String argument) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"soonami69"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"soonami69"},"content":"            int index \u003d Integer.parseInt(argument.trim()) - 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"soonami69"},"content":"            if (index \u003c 0 || index \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"soonami69"},"content":"                if (taskList.getSize() \u003d\u003d 1) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"soonami69"},"content":"                    System.out.println(\"I\u0027m only accepting the number 1 at the moment.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"soonami69"},"content":"                } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"soonami69"},"content":"                    System.out.printf(\"Please provide a number between 1 and %d!\\n\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"soonami69"},"content":"                            taskList.getSize());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"soonami69"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"soonami69"},"content":"                return -1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"soonami69"},"content":"            return index;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"soonami69"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"soonami69"},"content":"            System.out.println(\"Please provide a proper number!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"soonami69"},"content":"            return -1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"soonami69"},"content":"     * Removes a task based on the given index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"soonami69"},"content":"     * @param arguments The index of the task to be removed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"soonami69"},"content":"    public void removeTask(String arguments) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"soonami69"},"content":"        int index \u003d parseIndex(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"soonami69"},"content":"        if (index \u003d\u003d -1) return;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"soonami69"},"content":"        taskList.removeTask(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"soonami69"},"content":"     * Finds tasks that match the given description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"soonami69"},"content":"     * @param description The description to search for.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"soonami69"},"content":"     * @return A list of tasks that match the description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"soonami69"},"content":"    public void find(String description) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"soonami69"},"content":"        String[] parts \u003d description.split(\" \", 2); // Split command and arguments","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"soonami69"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"soonami69"},"content":"        String arguments \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"soonami69"},"content":"        switch (command) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"soonami69"},"content":"        case (\"desc\"):","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"soonami69"},"content":"            List\u003cTask\u003e tasks \u003d taskList.findTasksByDescription(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"soonami69"},"content":"            System.out.printf(\"There are %d tasks that contained %s\\n\", tasks.size(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"soonami69"},"content":"                    arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"soonami69"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"soonami69"},"content":"                System.out.printf(\"%d. %s\\n\", i + 1,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"soonami69"},"content":"                        tasks.get(i).toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"soonami69"},"content":"            System.out.println(\"Find what you need?\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"soonami69"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"soonami69"},"content":"        case (\"time\"):","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"soonami69"},"content":"            System.out.println(\"Yea, I wish I had time too...\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"soonami69"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"soonami69"},"content":"        default:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"soonami69"},"content":"            System.out.println(\"I don\u0027t quite understand that. Use \" +","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"soonami69"},"content":"                    \"find {query} to search for tasks\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"soonami69"},"content":"    public boolean loadTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"soonami69"},"content":"        return taskList.loadTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"soonami69"},"content":"    public void saveTasks(String arguments) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"soonami69"},"content":"        taskList.saveTasks(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":142}},{"path":"src/main/java/clonky/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"public class Task {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"    protected String description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":28}},{"path":"src/main/java/clonky/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":" * The {@code TaskList} class manages a collection of tasks and provides methods","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":" * for adding, marking, unmarking, removing, and searching tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"public class TaskList {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"     * Adds a todo task to the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"     * @throws NoDescriptionException If the description is empty.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"    public void addTodo(String description) throws NoDescriptionException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"            throw new NoDescriptionException(\"Todo\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"        Todo newTodo \u003d new Todo(description.trim());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"        System.out.printf(\"New todo \\\"%s\\\" has been successfully eaten.\\n\", newTodo.description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"     * @param arguments The arguments containing the description and deadline.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"     * @throws NoDescriptionException If the description is empty.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"     * @throws NoByException         If the \u0027/by\u0027 part is missing.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"    public void addDeadline(String arguments) throws NoDescriptionException, NoByException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"        String[] parts \u003d arguments.split(\"/by\", 2);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"            if (parts[0].trim().isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"                throw new NoDescriptionException(\"Deadline\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"            throw new NoByException();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"        Deadline newDeadline \u003d new Deadline(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"        System.out.printf(\"New deadline \\\"%s\\\" has been successfully eaten.\\n\", newDeadline.description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"soonami69"},"content":"     * @param arguments The arguments containing the description, start, and end dates.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"     * @throws NoDescriptionException If the description is empty.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"     * @throws NoFromException       If the \u0027/from\u0027 part is missing.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"soonami69"},"content":"     * @throws NoToException         If the \u0027/to\u0027 part is missing.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"    public void addEvent(String arguments) throws NoDescriptionException, NoFromException, NoToException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"        String[] parts \u003d arguments.split(\"/from\", 2);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"            if (parts[0].trim().isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"                throw new NoDescriptionException(\"Event\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"            throw new NoFromException();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"soonami69"},"content":"        String[] timeParts \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"soonami69"},"content":"        if (timeParts.length \u003c 2 || timeParts[0].trim().isEmpty() || timeParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"soonami69"},"content":"            if (timeParts[0].trim().isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"soonami69"},"content":"                throw new NoFromException();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"soonami69"},"content":"            throw new NoToException();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"soonami69"},"content":"        Event newEvent \u003d new Event(parts[0].trim(), timeParts[0].trim(), timeParts[1].trim());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"soonami69"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"soonami69"},"content":"        System.out.printf(\"New event \\\"%s\\\" has been successfully eaten.\\n\", newEvent.description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"soonami69"},"content":"     * Marks a task as done based on its index in the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"soonami69"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"soonami69"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"soonami69"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"soonami69"},"content":"            if (tasks.get(index).isDone) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"soonami69"},"content":"                System.out.println(\"Task already complete!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"soonami69"},"content":"            } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"soonami69"},"content":"                tasks.get(index).markAsDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"soonami69"},"content":"                System.out.println(\"Task \" + tasks.get(index).description + \" successfully marked as done.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"soonami69"},"content":"     * Unmarks a task as undone based on its index in the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"soonami69"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"soonami69"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"soonami69"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"soonami69"},"content":"            if (!tasks.get(index).isDone) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"soonami69"},"content":"                System.out.println(\"Task already incomplete!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"soonami69"},"content":"            } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"soonami69"},"content":"                tasks.get(index).markAsUndone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"soonami69"},"content":"                System.out.println(\"Task \" + tasks.get(index).description + \" successfully unmarked.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"soonami69"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"soonami69"},"content":"    public void listTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"soonami69"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"soonami69"},"content":"            System.out.println(\"Nothing in my stomach. Feed me!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"soonami69"},"content":"            return;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"soonami69"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"soonami69"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"soonami69"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"soonami69"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"soonami69"},"content":"     * Removes a task from the task list based on its index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"soonami69"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"soonami69"},"content":"    public Task removeTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"soonami69"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"soonami69"},"content":"            Task removed \u003d tasks.get(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"soonami69"},"content":"            tasks.remove(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"soonami69"},"content":"            System.out.println(\"Task successfully removed.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"soonami69"},"content":"            return removed;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"soonami69"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"soonami69"},"content":"            throw new IndexOutOfBoundsException(\"Can\u0027t find task of \" + index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"soonami69"},"content":"     * Finds tasks in the list that match the given description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"soonami69"},"content":"     * @param description The description to search for.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"soonami69"},"content":"     * @return A list of tasks that match the given description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"soonami69"},"content":"    public List\u003cTask\u003e findTasksByDescription(String description) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"soonami69"},"content":"        return tasks.stream()","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"soonami69"},"content":"                .filter(task -\u003e task.description.toLowerCase().contains(description.toLowerCase()))","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"soonami69"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"soonami69"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"soonami69"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"soonami69"},"content":"    public boolean loadTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"soonami69"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"soonami69"},"content":"            tasks.clear();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"soonami69"},"content":"            Path filePath \u003d Paths.get(\"clonky\", \"tasks.txt\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"soonami69"},"content":"            tasks.addAll(TaskWriter.LoadTasks(filePath.toString()));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"soonami69"},"content":"            return true;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"soonami69"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"soonami69"},"content":"            System.out.println(\"File could not be read!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"soonami69"},"content":"        } catch (InvalidTaskFormatException | DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"soonami69"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"soonami69"},"content":"        return false;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"soonami69"},"content":"    public void saveTasks(String filePath) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"soonami69"},"content":"        String path \u003d (filePath \u003d\u003d null || filePath.isEmpty())","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"soonami69"},"content":"                ? Paths.get(\"clonky\", \"tasks.txt\").toString()","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"soonami69"},"content":"                : filePath;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"soonami69"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"soonami69"},"content":"            TaskWriter.saveTasks(tasks, path);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"soonami69"},"content":"            System.out.printf(\"Tasks successfully saved at %s, Yippee!!!! \u003eo\u003c\\n\", path);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"soonami69"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"soonami69"},"content":"            // Handle exception (log, retry, etc.)","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"soonami69"},"content":"            System.err.println(\"Error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"soonami69"},"content":"    public int getSize() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"soonami69"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":195}},{"path":"src/main/java/clonky/tasks/TaskWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"import java.io.File;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":" * The {@code TaskWriter} class provides utility methods for saving and loading tasks to and from a file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":" * It supports parsing and reconstructing {@code Todo}, {@code Deadline}, and {@code Event} tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"class TaskWriter {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"     * Saves the given list of tasks to the specified file path.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"     * If the parent directory does not exist, it is created.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"     * @param tasks    The list of tasks to be saved.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"     * @param filePath The file path where tasks should be stored.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"    public static void saveTasks(List\u003cTask\u003e tasks, String filePath) throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"        File parentFolder \u003d file.getParentFile(); // Get parent directory","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"        // Ensure the directory exists","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"        if (parentFolder !\u003d null \u0026\u0026 !parentFolder.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"            boolean created \u003d parentFolder.mkdirs(); // Create directories","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"            if (created) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"                System.out.println(\"Directory created at: \" + parentFolder.getAbsolutePath());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"        // Write tasks to the file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"                writer.write(task.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"     * Loads tasks from the specified file path and reconstructs them into a list of {@code Task} objects.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"     * @param filePath The file path from which tasks should be loaded.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"     * @return A list of tasks parsed from the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"     * @throws IOException                If an error occurs while reading the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"soonami69"},"content":"     * @throws InvalidTaskFormatException If the file contains an unrecognized task format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"    public static List\u003cTask\u003e LoadTasks(String filePath) throws IOException, InvalidTaskFormatException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"soonami69"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"            String line;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"soonami69"},"content":"        return tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"soonami69"},"content":"     * Parses a line from the task file and converts it into a corresponding {@code Task} object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"soonami69"},"content":"     * @param line The line to be parsed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"soonami69"},"content":"     * @return The parsed {@code Task} object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"soonami69"},"content":"     * @throws InvalidTaskFormatException If the line format is unrecognized.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"soonami69"},"content":"    private static Task parseTask(String line) throws InvalidTaskFormatException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"soonami69"},"content":"        if (line.startsWith(\"[T]\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"soonami69"},"content":"            return parseTodoTask(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"soonami69"},"content":"        } else if (line.startsWith(\"[D]\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"soonami69"},"content":"            return parseDeadlineTask(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"soonami69"},"content":"        } else if (line.startsWith(\"[E]\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"soonami69"},"content":"            return parseEventTask(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"soonami69"},"content":"        throw new InvalidTaskFormatException(\"Task format: \" + line + \" is not recognized.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"soonami69"},"content":"     * Determines if a task is marked as done based on the task string format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"soonami69"},"content":"     * @param line The task string from the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"soonami69"},"content":"     * @return {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"soonami69"},"content":"     * @throws InvalidTaskFormatException If the task completion status is invalid.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"soonami69"},"content":"    private static boolean isTaskDone(String line) throws InvalidTaskFormatException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"soonami69"},"content":"        if (line.length() \u003c 5 || (line.charAt(4) !\u003d \u0027X\u0027 \u0026\u0026 line.charAt(4) !\u003d \u0027 \u0027)) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"soonami69"},"content":"            throw new InvalidTaskFormatException(\"Invalid task completion status in line: \" + line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"soonami69"},"content":"        return line.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"soonami69"},"content":"     * Parses a todo task from a given line.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"soonami69"},"content":"     * @param line The todo task line from the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"soonami69"},"content":"     * @return The parsed {@code Todo} object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"soonami69"},"content":"     * @throws InvalidTaskFormatException If the format is invalid.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"soonami69"},"content":"    private static Todo parseTodoTask(String line) throws InvalidTaskFormatException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"soonami69"},"content":"        boolean isDone \u003d isTaskDone(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"soonami69"},"content":"        String description \u003d line.substring(7);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"soonami69"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"soonami69"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"soonami69"},"content":"            todo.markAsDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"soonami69"},"content":"        return todo;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"soonami69"},"content":"     * Parses a deadline task from a given line.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"soonami69"},"content":"     * @param line The deadline task line from the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"soonami69"},"content":"     * @return The parsed {@code Deadline} object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"soonami69"},"content":"     * @throws InvalidTaskFormatException If the format is invalid or missing required details.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"soonami69"},"content":"    private static Deadline parseDeadlineTask(String line) throws InvalidTaskFormatException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"soonami69"},"content":"        boolean isDone \u003d isTaskDone(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"soonami69"},"content":"        int byIndex \u003d line.indexOf(\"(by: \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"soonami69"},"content":"        if (byIndex \u003d\u003d -1) throw new InvalidTaskFormatException(\"Missing \u0027(by: date)\u0027 in deadline task: \" + line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"soonami69"},"content":"        String description \u003d line.substring(7, byIndex).trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"soonami69"},"content":"        String deadlineDate \u003d line.substring(byIndex + 5, line.length() - 1).trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"soonami69"},"content":"        LocalDate date \u003d LocalDate.parse(deadlineDate, formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"soonami69"},"content":"        deadlineDate \u003d date.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"soonami69"},"content":"        Deadline deadline \u003d new Deadline(description, deadlineDate);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"soonami69"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"soonami69"},"content":"            deadline.markAsDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"soonami69"},"content":"        return deadline;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"soonami69"},"content":"     * Parses an event task from a given line.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"soonami69"},"content":"     * @param line The event task line from the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"soonami69"},"content":"     * @return The parsed {@code Event} object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"soonami69"},"content":"     * @throws InvalidTaskFormatException If the format is invalid or missing required details.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"soonami69"},"content":"    private static Event parseEventTask(String line) throws InvalidTaskFormatException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"soonami69"},"content":"        boolean isDone \u003d isTaskDone(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"soonami69"},"content":"        int fromIndex \u003d line.indexOf(\"(from \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"soonami69"},"content":"        if (fromIndex \u003d\u003d -1)","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"soonami69"},"content":"            throw new InvalidTaskFormatException(\"Missing \u0027(from: start to end)\u0027 in event task: \" + line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"soonami69"},"content":"        String description \u003d line.substring(7, fromIndex).trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"soonami69"},"content":"        Event event \u003d getEvent(line, fromIndex, description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"soonami69"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"soonami69"},"content":"            event.markAsDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"soonami69"},"content":"        return event;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"soonami69"},"content":"    private static Event getEvent(String line, int fromIndex, String description) throws InvalidTaskFormatException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"soonami69"},"content":"        int toIndex \u003d line.indexOf(\"to\", fromIndex);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"soonami69"},"content":"        if (toIndex \u003d\u003d -1) throw new InvalidTaskFormatException(\"Missing \u0027to\u0027 in event task: \" + line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"soonami69"},"content":"        String startDate \u003d line.substring(fromIndex + 6, toIndex).trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"soonami69"},"content":"        String endDate \u003d line.substring(toIndex + 3, line.length() - 1).trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"soonami69"},"content":"        LocalDate date \u003d LocalDate.parse(startDate, formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"soonami69"},"content":"        startDate \u003d date.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"soonami69"},"content":"        date \u003d LocalDate.parse(endDate, formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"soonami69"},"content":"        endDate \u003d date.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"soonami69"},"content":"        Event event \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"soonami69"},"content":"        return event;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":175}},{"path":"src/main/java/clonky/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":" * The {@code Todo} class represents a simple task without any time constraints.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":" * It extends the {@code Task} class and only requires a description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"     * Constructs a new {@code Todo} task with the specified description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"        super(description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"     * Returns a string representation of the todo task, including its type indicator.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"     * @return A formatted string representing the todo task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"    public String toString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":27}},{"path":"src/main/java/clonky/tasks/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"    public UnknownCommandException(String errorMessage) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"        super(String.format(\"*embraces you gently* Hey, you know that {%s} is not a recognized command, right?\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"                errorMessage));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":8}},{"path":"src/main/java/clonky/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import clonky.tasks.NoByException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"import clonky.tasks.NoDescriptionException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"import clonky.tasks.NoFromException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"import clonky.tasks.NoToException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"import clonky.tasks.Parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"import clonky.tasks.UnknownCommandException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":" * Handles user interaction for the Clonky application.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":" * The UI class takes user input, processes commands, and interacts with the {@link Parser}.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"public class UI {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"    private final Parser PARSER;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"     * Constructs a new UI instance with a given parser and scanner.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"     * @param parser  The parser responsible for processing commands.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"     * @param scanner The scanner to read user input.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"    public UI(Parser parser, Scanner scanner) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"        this.PARSER \u003d parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"     * Starts the UI by displaying a welcome message and attempting to load saved tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"     * After initialization, it enters the main user input loop.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"    public void startup() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"        String logo \u003d \"\\uD83C\\uDF4E ⋆ \\uD83C\\uDF52  \\uD83C\\uDF80  \\uD835\\uDC9E\\uD835\\uDCC1\\uD83C\\uDF51\\uD835\\uDCC3\\uD835\\uDCC0\\uD835\\uDCCE  \\uD83C\\uDF80  \\uD83C\\uDF52 ⋆ \\uD83C\\uDF4E\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"        System.out.println(\"Hello! I\u0027m \\n\" + logo + \"\\nFEED ME\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"        System.out.println(\"Loading tasks...\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"        if (PARSER.loadTasks()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"            System.out.println(\"Tasks successfully dug up!!!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"            System.out.println(\"Tasks could not be loaded... I\u0027ll just ignore it for now...\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"        run();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"    private void run() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"        while (true) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"            System.out.print(\"You: \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"            String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"                System.out.println(\"Go away!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"soonami69"},"content":"                break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"            try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"soonami69"},"content":"                handleCommand(userInput);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"    private void handleCommand(String userInput) throws UnknownCommandException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"soonami69"},"content":"        String[] parts \u003d userInput.split(\" \", 2); // Split command and arguments","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"soonami69"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"soonami69"},"content":"        String arguments \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"soonami69"},"content":"        switch (command) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"soonami69"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"soonami69"},"content":"            try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"soonami69"},"content":"                PARSER.addTodo(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"soonami69"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"soonami69"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"soonami69"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"soonami69"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"soonami69"},"content":"            try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"soonami69"},"content":"                PARSER.addDeadline(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"soonami69"},"content":"            } catch (NoDescriptionException | NoByException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"soonami69"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"soonami69"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"soonami69"},"content":"        case \"event\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"soonami69"},"content":"            try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"soonami69"},"content":"                PARSER.addEvent(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"soonami69"},"content":"            } catch (NoDescriptionException | NoFromException | NoToException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"soonami69"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"soonami69"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"soonami69"},"content":"        case \"hello\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"soonami69"},"content":"            System.out.println(\"Hi!. What would you like to do today?\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"soonami69"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"soonami69"},"content":"        case \"save\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"soonami69"},"content":"            PARSER.saveTasks(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"soonami69"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"soonami69"},"content":"        case \"load\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"soonami69"},"content":"            PARSER.loadTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"soonami69"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"soonami69"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"soonami69"},"content":"            PARSER.markTask(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"soonami69"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"soonami69"},"content":"        case \"unmark\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"soonami69"},"content":"            PARSER.unmarkTask(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"soonami69"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"soonami69"},"content":"        case \"find\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"soonami69"},"content":"            PARSER.find(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"soonami69"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"soonami69"},"content":"        case \"ANNIHILATE\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"soonami69"},"content":"            PARSER.removeTask(arguments);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"soonami69"},"content":"            // This is a deliberate fall through so that it will lists tasks after one is removed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"soonami69"},"content":"        case \"list\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"soonami69"},"content":"            PARSER.listTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"soonami69"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"soonami69"},"content":"        default:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"soonami69"},"content":"            throw new UnknownCommandException(command);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":122}},{"path":"src/test/java/clonky/tasks/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"class ParserTest {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"    private Parser parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"    void setUp() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"        System.setOut(new PrintStream(outputStream)); // Capture console output","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"    void testAddTodo_ValidInput() throws NoDescriptionException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"        parser.addTodo(\"Buy groceries\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"        assertTrue(output.contains(\"New todo \\\"Buy groceries\\\" has been successfully eaten.\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"    void testAddTodo_EmptyDescription_ThrowsException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"        Exception exception \u003d assertThrows(NoDescriptionException.class, () -\u003e parser.addTodo(\"\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"        assertEquals(\"Hey, you didn\u0027t give a description for this Todo\", exception.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"    void testAddDeadline_ValidInput() throws NoDescriptionException, NoByException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"        parser.addDeadline(\"Submit assignment /by 2024-06-30\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"        assertTrue(output.contains(\"New deadline \\\"Submit assignment\\\" has been successfully eaten.\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"    void testAddDeadline_MissingBy_ThrowsException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"        Exception exception \u003d assertThrows(NoByException.class, () -\u003e parser.addDeadline(\"Submit assignment\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"        assertEquals(\"Specify a deadline for your... well, deadline with \\\"/by {date}\\\"\", exception.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"    void testAddEvent_MissingFrom_ThrowsException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"        Exception exception \u003d assertThrows(NoFromException.class, () -\u003e parser.addEvent(\"Dance battle /to 2:00PM\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"        assertEquals(\"Specify a starting date for your event with \\\"/from {date}\\\"\", exception.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"    void testAddEvent_ValidInput() throws NoDescriptionException, NoFromException, NoToException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"        parser.addEvent(\"Eat chicken rice /from 2019-02-02 /to 2020-03-20\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"soonami69"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"        assertTrue(output.contains(\"New event \\\"Eat chicken rice\\\" has been successfully eaten.\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"    void testListTasks_EmptyList() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"        parser.listTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"        assertTrue(output.contains(\"Nothing in my stomach. Feed me!\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"soonami69"},"content":"    void testMarkTask_InvalidIndex() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"soonami69"},"content":"        parser.markTask(\"999\"); // No tasks exist yet","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"soonami69"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"soonami69"},"content":"        assertTrue(output.contains(\"Please provide a number between 1 and 0!\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"soonami69"},"content":"    void testRemoveTask_InvalidIndex() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"soonami69"},"content":"        parser.removeTask(\"999\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"soonami69"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"soonami69"},"content":"        assertTrue(output.contains(\"Please provide a number between 1 and 0!\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"soonami69"},"content":"    void testSaveTasks(@TempDir Path tempDir) throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"soonami69"},"content":"        Path testFilePath \u003d tempDir.resolve(\"test_tasks.txt\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"soonami69"},"content":"        parser.saveTasks(testFilePath.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"soonami69"},"content":"        assertTrue(testFilePath.toFile().exists());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":91}},{"path":"src/test/java/clonky/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"class TaskListTest {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"    void setUp() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"    void addTask_shouldIncreaseSize() throws NoDescriptionException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"        taskList.addTodo(\"Buy milk\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"        assertEquals(1, taskList.getSize(), \"Task list size should be 1 after adding a task.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"    void removeTask_shouldDecreaseSize() throws NoDescriptionException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"        taskList.addTodo(\"Buy milk\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"        taskList.addTodo(\"Walk the dog\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"        Task removedTask \u003d taskList.removeTask(0);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"        assertEquals(\"Buy milk\", removedTask.description, \"Removed task should be \u0027Buy milk\u0027.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"        assertEquals(1, taskList.getSize(), \"Task list size should be 1 after removing a task.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"    void removeTask_invalidIndex_shouldThrowException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.removeTask(0), \"Removing from empty list should throw an exception.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"    void getTask_validIndex_shouldReturnCorrectTask() throws NoDescriptionException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"        taskList.addTodo(\"Finish homework\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"        Task retrievedTask \u003d taskList.getTask(0);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"        assertEquals(\"Finish homework\", retrievedTask.description, \"Retrieved task should be \u0027Finish homework\u0027.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"    void getTask_invalidIndex_shouldThrowException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.getTask(0), \"Retrieving from empty list should throw an exception.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"    void findTasks_shouldReturnMatchingTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"        taskList.addTask(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"        taskList.addTask(new Todo(\"Finish project\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"        taskList.addTask(new Todo(\"Groceries for party\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"        List\u003cTask\u003e results \u003d taskList.findTasksByDescription(\"groceries\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"        assertEquals(2, results.size(), \"Should find 2 tasks containing \u0027groceries\u0027.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"    void findTasks_noMatch_shouldReturnEmptyList() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"        taskList.addTask(new Todo(\"Clean the house\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"        List\u003cTask\u003e results \u003d taskList.findTasksByDescription(\"homework\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"        assertTrue(results.isEmpty(), \"Should return an empty list if no tasks match.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"soonami69"},"content":"    void listTasks_emptyList_shouldPrintMessage() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"soonami69"},"content":"        taskList.listTasks(); // Manually check the console output for \"Nothing in my stomach. Feed me!\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"soonami69"},"content":"    void listTasks_nonEmptyList_shouldPrintTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"soonami69"},"content":"        taskList.addTask(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"soonami69"},"content":"        taskList.addTask(new Todo(\"Finish project\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"soonami69"},"content":"        taskList.listTasks(); // Manually check the console output","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":80}},{"path":"src/test/java/clonky/ui/UITest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package clonky.ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import clonky.tasks.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"import java.io.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"class UITest {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"    private UI ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"    private MockParser mockParser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"    void setUp() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"        // Use a custom mock parser","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"        mockParser \u003d new MockParser();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"        // Capture system output","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"        // Simulate user input","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"        String simulatedInput \u003d \"todo Buy milk\\nbye\\n\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"        System.setIn(new ByteArrayInputStream(simulatedInput.getBytes()));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"        // Initialize UI with the mock parser and simulated input","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"        ui \u003d new UI(mockParser, new Scanner(System.in));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"    void testTodoCommand() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"        ui.startup();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"        assertTrue(mockParser.todoCalled, \"addTodo() should be called\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"        assertTrue(mockParser.todoArgument.equals(\"Buy milk\"), \"Argument passed to addTodo() should match input\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"    void testExitMessageOnBye() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"        ui.startup();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"        assertTrue(output.contains(\"Go away!\"), \"Exit message should be displayed\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":" * Custom mock class for testing UI without Mockito.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"class MockParser extends Parser {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"    boolean todoCalled \u003d false;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"    String todoArgument \u003d \"\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"    public void addTodo(String description) throws NoDescriptionException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"        todoCalled \u003d true;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"soonami69"},"content":"        todoArgument \u003d description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"    public boolean loadTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"        return true;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"soonami69":66}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"todo borrow book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"remove 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"remove 4","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"ANNIHILATE 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"ANNIHILATE 4","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"soonami69":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"java -classpath ..\\bin clonky.Clonky \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"soonami69":1,"-":20}}]
