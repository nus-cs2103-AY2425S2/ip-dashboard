[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"    mainClass.set(\"luke.ui.Launcher\")","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"    archiveBaseName \u003d \"luke\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"checkstyle {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"-":39,"zechary28":22}},{"path":"src/main/java/luke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import luke.component.Storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import luke.component.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import luke.component.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"    public abstract void execute(TaskList tl, Ui ui, Storage st);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"zechary28":9}},{"path":"src/main/java/luke/component/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.component;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.io.File;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":" * The {@code Storage} class is responsible for reading from a file located at {@link #READ_FILE_PATH}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":" * and writing to a file located at {@link #WRITE_FILE_PATH}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":" * It provides methods to read lines from the file, write lines to the file,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":" * check if the file exists and has content, and clear the file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"public class Storage {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"    private static final String READ_FILE_PATH \u003d \"src/main/resources/data/list.txt\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    private static final String WRITE_FILE_PATH \u003d \"src/main/resources/data/list.txt\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"    private static final String JAR_READ_FILE_PATH \u003d \"data/list.txt\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    private static final String JAR_WRITE_FILE_PATH \u003d \"data/list.txt\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"    private boolean isJar \u003d false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"     * Constructs a Storage object and initializes a Scanner to read from the file","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"     * located at \"data/list.txt\".","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"     * @throws FileNotFoundException if the file at the READ_FILE_PATH does not exist","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"    public Storage() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"            this.scanner \u003d new Scanner(new File(READ_FILE_PATH));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"            isJar \u003d true;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"            try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"                this.scanner \u003d new Scanner(new File(JAR_READ_FILE_PATH));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"            } catch (FileNotFoundException e2) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"                System.out.println(\"No file found\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"     * Reads the next line from the file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"     * @return the next line of text in the file","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"    public String readLine() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"            return this.scanner.nextLine();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"            return \"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zechary28"},"content":"     * Writes the specified text to the file located at WRITE_FILE_PATH.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"     * A new line is added after the text.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"     * @param textToAdd the text to be written to the file","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"     * @throws IOException if an I/O error occurs while writing to the file","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zechary28"},"content":"    public void writeLine(String textToAdd) throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zechary28"},"content":"        String writeFilePath \u003d isJar ? JAR_WRITE_FILE_PATH : WRITE_FILE_PATH;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zechary28"},"content":"        // Create directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zechary28"},"content":"        File directory \u003d new File(writeFilePath).getParentFile();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zechary28"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zechary28"},"content":"            directory.mkdirs(); // Create directories","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"Directory created: \");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zechary28"},"content":"        // Create the file if it doesn\u0027t exist","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zechary28"},"content":"        File file \u003d new File(writeFilePath);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zechary28"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zechary28"},"content":"            file.createNewFile(); // Create file","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"File created: \" + writeFilePath);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zechary28"},"content":"        // Use try-with-resources to ensure the writer is closed properly","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zechary28"},"content":"        try (FileWriter writer \u003d new FileWriter(file, true)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zechary28"},"content":"            writer.write(textToAdd + System.lineSeparator());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zechary28"},"content":"     * Checks if there are more lines to be read from the file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zechary28"},"content":"     * @return true if there are more lines to be read, false otherwise","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zechary28"},"content":"    public boolean hasNext() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zechary28"},"content":"        return scanner.hasNext();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zechary28"},"content":"     * Checks if the file located at the READ_FILE_PATH exists and can be written to.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zechary28"},"content":"     * @return true if the file is accessible for writing, false otherwise","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zechary28"},"content":"    public boolean hasReadFile() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zechary28"},"content":"        String readFilePath \u003d isJar ? JAR_READ_FILE_PATH : READ_FILE_PATH;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zechary28"},"content":"            new FileWriter(readFilePath, true).close();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zechary28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zechary28"},"content":"            return false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zechary28"},"content":"        return true;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zechary28"},"content":"     * Checks if the file located at the WRITE_FILE_PATH exists and can be written to.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zechary28"},"content":"     * @return true if the file is accessible for writing, false otherwise","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zechary28"},"content":"    public boolean hasWriteFile() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zechary28"},"content":"        String writeFilePath \u003d isJar ? JAR_WRITE_FILE_PATH : WRITE_FILE_PATH;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zechary28"},"content":"            new FileWriter(writeFilePath, true).close();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zechary28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zechary28"},"content":"            return false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zechary28"},"content":"        return true;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zechary28"},"content":"     * Clears the content of the file located at WRITE_FILE_PATH.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zechary28"},"content":"     * This method overwrites the file with an empty content.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zechary28"},"content":"     * @throws IOException if an I/O error occurs while clearing the file","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zechary28"},"content":"    public void clearFile() throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zechary28"},"content":"        String writeFilePath \u003d isJar ? JAR_WRITE_FILE_PATH : WRITE_FILE_PATH;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zechary28"},"content":"        new FileWriter(writeFilePath, false).close();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zechary28"},"content":"    public File createEmptyFile() throws IOException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zechary28"},"content":"        File file \u003d new File(JAR_READ_FILE_PATH);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zechary28"},"content":"        file.getParentFile().mkdirs(); // Create parent directories if they don\u0027t exist","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zechary28"},"content":"        return file;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"zechary28":141}},{"path":"src/main/java/luke/component/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.component;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import luke.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":" * The {@code TaskList} class represents a list of tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":" * It provides methods to add, delete, retrieve, and modify tasks in the list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":" * Tasks are represented by {@link Task} objects.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"public class TaskList {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"     * Constructs a new {@code TaskList} object and initializes an empty list of tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"     * @return the number of tasks in the list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"    public int getSize() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"        return list.size();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"     * @param task the task to be added","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"        this.list.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"     * Deletes a task from the list by its index.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"     * @param i the index of the task to be deleted","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"     * @return the task that was removed","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"    public Task deleteTask(int i) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"        return this.list.remove(i);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"     * @param i the index of the task to be retrieved","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zechary28"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"        return this.list.get(i);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zechary28"},"content":"     * Marks a task as done or not done based on the specified flag.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zechary28"},"content":"     * @param i the index of the task to be marked","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zechary28"},"content":"     * @param isDone {@code true} to mark the task as done, {@code false} to mark it as not done","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zechary28"},"content":"    public void markTask(int i, boolean isDone) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zechary28"},"content":"        this.list.get(i).setIsDone(isDone);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zechary28"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zechary28"},"content":"     * @return the list of tasks","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zechary28"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zechary28"},"content":"        return this.list;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"zechary28":79}},{"path":"src/main/java/luke/component/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.component;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":" * The {@code Ui} class provides methods for interacting with the user through","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":" * the console. It allows displaying messages, error notifications, and reading","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":" * user input.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"public class Ui {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"    private static final String LOGO \u003d \" _           _\\n\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"            + \"| |    _   _| | _____\\n\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"            + \"| |   | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"            + \"| |___| |_| |   \u003c  __/\\n\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"    // IO","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"    private BufferedReader reader;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"    private PrintWriter writer;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"     * Constructs a new {@code Ui} object, initializing the reader and writer","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"     * for interacting with the console.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"    public Ui() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"        reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"        writer \u003d new PrintWriter(System.out);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"     * Displays a separator line in the console.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"    public String showLine() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"        return \"____________________________________________________________\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"     * Displays a welcome message with the application logo.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"    public String showWelcome() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"        return \"Hello I\u0027m\\n\" + LOGO;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"     * Displays an error message in the console.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"     * @param message the error message to be displayed","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"    public String showError(String message) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"        return \"There was an error: \" + message;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"     * Displays an exit message and terminates the program.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"    public String exit() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"        return \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zechary28"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zechary28"},"content":"     * @return the line of input entered by the user","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zechary28"},"content":"     * @throws IOException if an I/O error occurs during input reading","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zechary28"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zechary28"},"content":"        return reader.readLine();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"zechary28":73}},{"path":"src/main/java/luke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.exception;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"// exceptions","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"zechary28":6}},{"path":"src/main/java/luke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":" * The {@code Deadline} class represents a task with a specific deadline.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":" * This class extends the abstract {@link Task} class and adds functionality","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":" * for handling a due time for the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"    protected LocalDateTime dueTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"     * Constructs a new {@code Deadline} task with the specified name, completion status,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"     * and due time. The due time is provided as a string in the format \"DD/MM/YYYY HH:MM\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"     * which is then converted into a {@code LocalDateTime}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"     * @param name the name of the task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"     * @param isDone the completion status of the task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"     * @param dueTime the due time of the task in the format \"DD/MM/YYYY HH:MM\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"    public Deadline(String name, boolean isDone, String dueTime) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"        super(name, isDone);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"        // input format of dueTime: [DD/MM/YYYY HH:MM]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"        // required format        : [YYYY:MM:DDTHH:MM:SS]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"        String day \u003d dueTime.substring(0, 2);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"        String month \u003d dueTime.substring(3, 5);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"        String year \u003d dueTime.substring(6, 10);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"        String hour \u003d dueTime.substring(11, 13);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"        String minute \u003d dueTime.substring(14, 16);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"        String timeString \u003d String.format(\"%s-%s-%sT%s:%s:00\", year, month, day, hour, minute);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"        this.dueTime \u003d LocalDateTime.parse(timeString); // assume string is in correct format","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"     * Gets the name of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"     * @return the name of the task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"    public String getName() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"        return this.name;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"     * @param isDone {@code true} if the task is done, {@code false} otherwise","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zechary28"},"content":"     * Gets the due time of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"     * @return the due time of the task as a {@code LocalDateTime}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"    public LocalDateTime getDueTime() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"        return this.dueTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zechary28"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zechary28"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zechary28"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zechary28"},"content":"        return isDone;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zechary28"},"content":"     * Returns a string representation of the deadline task, including its completion","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zechary28"},"content":"     * status, name, and formatted due time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zechary28"},"content":"     * @return a string representation of the deadline task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zechary28"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zechary28"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", this.isDone ? \"X\" : \" \",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zechary28"},"content":"                this.name, this.dueTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zechary28"},"content":"    public int compareTo(Task t) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zechary28"},"content":"        if (t instanceof ToDo) { // todo \u003c deadline \u003c event \u003c everything else","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zechary28"},"content":"            return 1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zechary28"},"content":"        } else if (t instanceof Deadline){ // sort by time","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zechary28"},"content":"            if (this.isDone !\u003d t.isDone) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zechary28"},"content":"                return this.isDone ? 1 : -1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zechary28"},"content":"            } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zechary28"},"content":"                Deadline dl \u003d (Deadline) t;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zechary28"},"content":"                return this.dueTime.compareTo(dl.dueTime);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zechary28"},"content":"        } else { // todo \u003c deadline \u003c event \u003c everything else","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zechary28"},"content":"            return -1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"zechary28":99}},{"path":"src/main/java/luke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":" * The {@code Event} class represents a task that occurs at a specific time range.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":" * This class extends the abstract {@link Task} class and provides functionality","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":" * for handling the start and end times of an event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"     * Constructs a new {@code Event} task with the specified name, completion status,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"     * start time, and end time. The start and end times are provided as strings in the","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"     * format \"DD/MM/YYYY HH:MM\", which are then converted into {@code LocalDateTime}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"     * @param name the name of the event","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"     * @param isDone the completion status of the event","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"     * @param start the start time of the event in the format \"DD/MM/YYYY HH:MM\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"     * @param end the end time of the event in the format \"DD/MM/YYYY HH:MM\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"    public Event(String name, boolean isDone, String start, String end) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"        super(name, isDone);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"        // input format of start and end: [DD/MM/YYYY HH:MM]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"        // required format        : [YYYY:MM:DDTHH:MM:SS]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"        String startDay \u003d start.substring(0, 2);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"        String startMonth \u003d start.substring(3, 5);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"        String startYear \u003d start.substring(6, 10);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"        String startHour \u003d start.substring(11, 13);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"        String startMinute \u003d start.substring(14, 16);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"        String startTimeString \u003d String.format(\"%s-%s-%sT%s:%s:00\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"                startYear, startMonth, startDay,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"                startHour, startMinute);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"        String endDay \u003d end.substring(0, 2);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"        String endMonth \u003d end.substring(3, 5);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"        String endYear \u003d end.substring(6, 10);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"        String endHour \u003d end.substring(11, 13);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"        String endMinute \u003d end.substring(14, 16);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"        String endTimeString \u003d String.format(\"%s-%s-%sT%s:%s:00\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"                endYear, endMonth, endDay,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"                endHour, endMinute);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"        this.startTime \u003d LocalDateTime.parse(startTimeString);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"        this.endTime \u003d LocalDateTime.parse(endTimeString);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"     * Gets the name of the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"     * @return the name of the event","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zechary28"},"content":"    public String getName() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"        return this.name;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zechary28"},"content":"     * Sets the completion status of the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zechary28"},"content":"     * @param isDone {@code true} if the event is done, {@code false} otherwise","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zechary28"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zechary28"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zechary28"},"content":"     * Gets the completion status of the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zechary28"},"content":"     * @return {@code true} if the event is done, {@code false} otherwise","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zechary28"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zechary28"},"content":"        return this.isDone;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zechary28"},"content":"     * Gets the start time of the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zechary28"},"content":"     * @return the start time of the event as a {@code LocalDateTime}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zechary28"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zechary28"},"content":"        return this.startTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zechary28"},"content":"     * Gets the end time of the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zechary28"},"content":"     * @return the end time of the event as a {@code LocalDateTime}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zechary28"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zechary28"},"content":"        return this.endTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zechary28"},"content":"     * Returns a string representation of the event, including its completion status,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zechary28"},"content":"     * name, start time, and end time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zechary28"},"content":"     * @return a string representation of the event","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zechary28"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zechary28"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\", this.isDone ? \"X\" : \" \", this.name,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zechary28"},"content":"                this.startTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zechary28"},"content":"                this.endTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zechary28"},"content":"    public int compareTo(Task t) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zechary28"},"content":"        if (t instanceof ToDo || t instanceof Deadline) { // todo \u003c deadline \u003c event \u003c everything else","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zechary28"},"content":"            return 1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zechary28"},"content":"        } else if (t instanceof Event){ // sort by time","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zechary28"},"content":"            if (this.isDone !\u003d t.isDone) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zechary28"},"content":"                return this.isDone ? 1 : -1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zechary28"},"content":"            } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zechary28"},"content":"                Event ev \u003d (Event) t;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zechary28"},"content":"                return this.startTime.compareTo(ev.startTime);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zechary28"},"content":"        } else { // todo \u003c deadline \u003c event \u003c everything else","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zechary28"},"content":"            return -1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"zechary28":124}},{"path":"src/main/java/luke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":" * The {@code Task} class represents an abstract task that has a name and a completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":" * Subclasses must implement the methods to get and set the task\u0027s name, completion status,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":" * and provide a string representation of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"    protected String name;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"     * Constructs a new {@code Task} with the specified name and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"     * @param name the name of the task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"     * @param isDone the completion status of the task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"     * Gets the name of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"     * @return the name of the task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"    public abstract String getName();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"     * @param isDone {@code true} if the task is done, {@code false} otherwise","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"    public abstract void setIsDone(boolean isDone);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"    public abstract boolean getIsDone();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"     * @return a string representation of the task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"    public abstract String toString();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"zechary28":52}},{"path":"src/main/java/luke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":" * The {@code ToDo} class represents a task without a specific due date.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":" * This class extends the abstract {@link Task} class and provides functionality","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":" * for managing a task\u0027s completion status and name.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"    protected String dueDate;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"     * Constructs a new {@code ToDo} task with the specified name and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"     * @param name the name of the task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"     * @param isDone the completion status of the task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"        super(name, isDone);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"     * Gets the name of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"     * @return the name of the task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"    public String getName() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"        return this.name;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"     * @param isDone {@code true} if the task is done, {@code false} otherwise","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"        return isDone;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"     * Returns a string representation of the todo task, including its completion","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"     * status and name.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"     * @return a string representation of the todo task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zechary28"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zechary28"},"content":"        return String.format(\"[T][%s] %s\", this.isDone ? \"X\" : \" \", this.name);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"    public int compareTo(Task t) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"        if (t instanceof ToDo) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zechary28"},"content":"            if (this.isDone !\u003d t.isDone) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zechary28"},"content":"                return this.isDone ? 1 : -1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zechary28"},"content":"            } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zechary28"},"content":"                return this.name.compareTo(t.getName());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zechary28"},"content":"        } else { // todo \u003c deadline \u003c event \u003c everything else","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zechary28"},"content":"            return -1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"zechary28":71}},{"path":"src/main/java/luke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"    @FXML","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"    @FXML","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"    private void flip() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zechary28"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zechary28"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"        db.flip();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"        return db;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"zechary28":61}},{"path":"src/main/java/luke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"public class Launcher {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"zechary28":12}},{"path":"src/main/java/luke/ui/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"import luke.component.Storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"import luke.component.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"import luke.component.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"import luke.exception.InvalidInputException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"import luke.task.Deadline;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"import luke.task.Event;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"import luke.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"import luke.task.ToDo;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":" * The {@code Luke} class is the main entry point for the task management application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":" * It handles the interactions with the user, parses commands, and updates the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":" * It is responsible for managing tasks, saving/loading task data to/from a file,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":" * and providing feedback to the user via the {@link Ui} class.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"public class Luke {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"    private StringBuilder output;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"     * Constructs a new {@code Luke} object which initializes the task list, user interface,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"     * and storage system. If the storage system cannot be found, the program will terminate.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"    public Luke() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"            this.storage \u003d new Storage();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"No file for storage found, exiting program\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"            System.exit(0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"        this.output \u003d new StringBuilder();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"        this.output \u003d new StringBuilder();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"            return \"No input detected\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"        // determine command","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zechary28"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zechary28"},"content":"        String command \u003d inputArr[0].toLowerCase();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"        if (command.equals(\"help\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"list of commands:\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"todo     : add todo task\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"deadline : add deadline task\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"event    : add event task\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"list     : show list of all tasks\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"mark n   : mark task n as done\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"unmark n : unmark task n as not done\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"delete n : delete task n from list\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"find     : search list by keyword\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"sort     : show list in sorted order\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"sort a   : show sorted list and apply sort\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"bye      : save list and exit program\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zechary28"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zechary28"},"content":"            try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zechary28"},"content":"                writeListToFile();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zechary28"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zechary28"},"content":"                this.output.append(\"There was a problem writing to the file\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zechary28"},"content":"            System.exit(0);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zechary28"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zechary28"},"content":"            markTask(Integer.parseInt(inputArr[1]) - 1, true);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zechary28"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zechary28"},"content":"            markTask(Integer.parseInt(inputArr[1]) - 1, false);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zechary28"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zechary28"},"content":"            printList(this.taskList.getList());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zechary28"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zechary28"},"content":"            deleteTask(Integer.parseInt(inputArr[1]) - 1);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zechary28"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zechary28"},"content":"            findTask(inputArr[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zechary28"},"content":"        } else if (command.equals(\"sort\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zechary28"},"content":"            boolean isApply \u003d true;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zechary28"},"content":"            try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zechary28"},"content":"                isApply \u003d !inputArr[1].isEmpty();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zechary28"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zechary28"},"content":"                isApply \u003d false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zechary28"},"content":"            showSortedList(isApply);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zechary28"},"content":"        } else { // add tasks","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zechary28"},"content":"            handleAddTask(input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zechary28"},"content":"        return this.output.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zechary28"},"content":"    public String getStartUp() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zechary28"},"content":"        this.output \u003d new StringBuilder();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zechary28"},"content":"        this.output.append(this.ui.showWelcome());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zechary28"},"content":"        checkListFile();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zechary28"},"content":"        return this.output.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zechary28"},"content":"    public String getShutDown() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zechary28"},"content":"        this.output \u003d new StringBuilder();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zechary28"},"content":"        writeListToFile();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zechary28"},"content":"        this.output.append(this.ui.exit()).append(\"\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zechary28"},"content":"        return this.output.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zechary28"},"content":"    // Parsers for task creation","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zechary28"},"content":"     * Parses the input for creating a ToDo task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zechary28"},"content":"     * @param input the user input","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zechary28"},"content":"     * @return a new {@code ToDo} task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zechary28"},"content":"     * @throws InvalidInputException if the input is invalid","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zechary28"},"content":"    public Task parseToDo(String input) throws InvalidInputException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zechary28"},"content":"        // invalid input: [todo] or [todo ]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zechary28"},"content":"        if (input.length() \u003c 5 || input.substring(5).trim().isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"Todo format: [todo] [name]\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zechary28"},"content":"        String name \u003d input.substring(5);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zechary28"},"content":"        assert !name.trim().isEmpty() : \"name should not be empty\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zechary28"},"content":"        return new ToDo(name, false);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zechary28"},"content":"     * Parses the input for creating a Deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zechary28"},"content":"     * @param input the user input","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zechary28"},"content":"     * @return a new {@code Deadline} task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zechary28"},"content":"     * @throws InvalidInputException if the input is invalid","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zechary28"},"content":"    public Task parseDeadline(String input) throws InvalidInputException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zechary28"},"content":"        // invalid input: [deadline] or [deadline ]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zechary28"},"content":"        if (input.length() \u003c 9 || input.substring(9).trim().isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"Deadline format: deadline [name] /by [DD/MM/YYYY HH:MM]\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zechary28"},"content":"        String[] inputArr \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zechary28"},"content":"        // invalid input: [deadline *** /by ] or [deadline /by ***]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zechary28"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"Deadline format: deadline [name] /by [DD/MM/YYYY HH:MM]\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zechary28"},"content":"        String name \u003d inputArr[0];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zechary28"},"content":"        String due \u003d inputArr[1];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zechary28"},"content":"        assert !name.trim().isEmpty() : \"name should not be empty\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"zechary28"},"content":"        assert !due.trim().isEmpty() : \"deadline should not be empty\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"zechary28"},"content":"        // invalid input: white spaces for name and deadline","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"zechary28"},"content":"        return new Deadline(name, false, due);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"zechary28"},"content":"     * Parses the input for creating an Event task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"zechary28"},"content":"     * @param input the user input","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"zechary28"},"content":"     * @return a new {@code Event} task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"zechary28"},"content":"     * @throws InvalidInputException if the input is invalid","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"zechary28"},"content":"    public Task parseEvent(String input) throws InvalidInputException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"zechary28"},"content":"        // invalid input: [event] or [event ]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"zechary28"},"content":"        if (input.length() \u003c 6 || input.substring(6).trim().isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"Event format: event [name] /from [DD/MM/YYYY HH:MM] /to [DD/MM/YYYY HH:MM]\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"zechary28"},"content":"        // split [name] /from [rest...]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"zechary28"},"content":"        String[] inputArr \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"zechary28"},"content":"        // invalid input: [event *** /from ] or [event /from ***]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"zechary28"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"Event format: event [name] /from [DD/MM/YYYY HH:MM] /to [DD/MM/YYYY HH:MM]\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"zechary28"},"content":"        input \u003d inputArr[1];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"zechary28"},"content":"        String name \u003d inputArr[0]; // extract name","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"zechary28"},"content":"        // split [start] /by [end]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"zechary28"},"content":"        inputArr \u003d input.split(\" /to \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"zechary28"},"content":"        // invalid input: [event *** /from *** /to ] or [event *** /from /to ***]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"zechary28"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"Event format: event [name] /from [DD/MM/YYYY HH:MM] /to [DD/MM/YYYY HH:MM]\\n\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"zechary28"},"content":"        String start \u003d inputArr[0];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"zechary28"},"content":"        String end \u003d inputArr[1];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"zechary28"},"content":"        assert !name.trim().isEmpty() : \"name should not be empty\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"zechary28"},"content":"        assert !start.trim().isEmpty() : \"start time should not be empty\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"zechary28"},"content":"        assert !end.trim().isEmpty() : \"end time should not be empty\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"zechary28"},"content":"        return new Event(name, false, start, end);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"zechary28"},"content":"    // Task management and UI updates","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"zechary28"},"content":"    public void handleAddTask(String input) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"zechary28"},"content":"        String taskType \u003d input.split(\" \")[0].toLowerCase();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"zechary28"},"content":"            if (taskType.equals(\"todo\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"zechary28"},"content":"                Task task \u003d parseToDo(input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"zechary28"},"content":"                this.taskList.addTask(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"zechary28"},"content":"                showTaskUpdates(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"zechary28"},"content":"            } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"zechary28"},"content":"                Task task \u003d parseDeadline(input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"zechary28"},"content":"                this.taskList.addTask(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"zechary28"},"content":"                showTaskUpdates(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"zechary28"},"content":"            } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"zechary28"},"content":"                Task task \u003d parseEvent(input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"zechary28"},"content":"                this.taskList.addTask(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"zechary28"},"content":"                showTaskUpdates(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"zechary28"},"content":"            } else {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"zechary28"},"content":"                this.output.append(\"I don\u0027t understand\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"zechary28"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"zechary28"},"content":"            this.output.append(e.getMessage());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"zechary28"},"content":"     * Updates the UI and displays a message after a task is added.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"zechary28"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"zechary28"},"content":"    public void showTaskUpdates(Task task) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"zechary28"},"content":"        this.output.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"zechary28"},"content":"        this.output.append(\"  \" + task + \"\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"zechary28"},"content":"        this.output.append(\"Now you have \" + taskList.getSize() + \" tasks in the list.\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"zechary28"},"content":"    public boolean checkIndex(int i) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"zechary28"},"content":"        if (i \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"There are only \" + taskList.getSize() + \" tasks in the list\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"zechary28"},"content":"            return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"zechary28"},"content":"        } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"zechary28"},"content":"            return true;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"zechary28"},"content":"     * Prints the list of tasks to the UI.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"zechary28"},"content":"    public void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"zechary28"},"content":"        this.output.append(\" Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"zechary28"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"zechary28"},"content":"            this.output.append(String.format(\" %d.%s\", i + 1, tasks.get(i)) + \"\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"zechary28"},"content":"     * Marks a task as done or undone.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"zechary28"},"content":"     * @param i the index of the task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"zechary28"},"content":"     * @param isDone whether the task should be marked as done","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"zechary28"},"content":"    public void markTask(int i, boolean isDone) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"zechary28"},"content":"        if (!checkIndex(i)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"zechary28"},"content":"            return;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"zechary28"},"content":"        Task task \u003d this.taskList.getTask(i);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"zechary28"},"content":"        task.setIsDone(isDone);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"zechary28"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"   \" + task + \"\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"zechary28"},"content":"        } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"   \" + task + \"\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"zechary28"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"zechary28"},"content":"     * @param i the index of the task to delete","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"zechary28"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"zechary28"},"content":"        if (!checkIndex(i)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"zechary28"},"content":"            return;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"zechary28"},"content":"        Task task \u003d this.taskList.deleteTask(i);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"zechary28"},"content":"        this.output.append(\"Noted. I\u0027ve removed this task: \\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"zechary28"},"content":"        this.output.append(\"  \" + task + \"\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"zechary28"},"content":"        this.output.append(\"Now you have \" + this.taskList.getSize() + \" tasks in the list.\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"zechary28"},"content":"     * Finds tasks in the task list that contain the specified keyword (case-insensitive)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"zechary28"},"content":"     * as a whole word and prints the matching tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"zechary28"},"content":"     * @param keyword the keyword to search for within the task names.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"zechary28"},"content":"     *                The search is case-insensitive and matches whole words.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"zechary28"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"zechary28"},"content":"        // build list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"zechary28"},"content":"        ArrayList\u003cTask\u003e resultList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"zechary28"},"content":"        String key \u003d keyword.toUpperCase();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"zechary28"},"content":"        for (Task task : this.taskList.getList()) { // for each task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"zechary28"},"content":"            String upperCaseTaskName \u003d task.getName().toUpperCase();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"zechary28"},"content":"            String upperCaseKey \u003d keyword.toUpperCase();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"zechary28"},"content":"            if (upperCaseTaskName.contains(upperCaseKey)) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"zechary28"},"content":"                resultList.add(task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"zechary28"},"content":"        // print list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"zechary28"},"content":"        if (resultList.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"There were no matches found.\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"zechary28"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"zechary28"},"content":"            printList(resultList);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"zechary28"},"content":"    // Sorting","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"zechary28"},"content":"    private void merge(ArrayList\u003cTask\u003e array, int low, int mid, int high) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"zechary28"},"content":"        // subarray1 \u003d array[low..mid], subarray2 \u003d array[mid+1..high], both sorted","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"zechary28"},"content":"        int left \u003d low;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"zechary28"},"content":"        int right \u003d mid + 1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"zechary28"},"content":"        ArrayList\u003cTask\u003e backupList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"zechary28"},"content":"        // Merging both subarrays","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"zechary28"},"content":"        while (left \u003c\u003d mid \u0026\u0026 right \u003c\u003d high) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"zechary28"},"content":"            Task earlierTask \u003d array.get(left).compareTo(array.get(right)) \u003c 0","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"zechary28"},"content":"                    ? array.get(left++)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"zechary28"},"content":"                    : array.get(right++);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"zechary28"},"content":"            backupList.add(earlierTask);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"zechary28"},"content":"        // Copy any remaining elements from the left subarray","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"zechary28"},"content":"        while (left \u003c\u003d mid) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"zechary28"},"content":"            backupList.add(array.get(left++));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"zechary28"},"content":"        // Copy any remaining elements from the right subarray","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"zechary28"},"content":"        while (right \u003c\u003d high) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"zechary28"},"content":"            backupList.add(array.get(right++));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"zechary28"},"content":"        // Copy the sorted elements back into the original array","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"zechary28"},"content":"        for (int i \u003d 0; i \u003c backupList.size(); i++) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"zechary28"},"content":"            array.set(low + i, backupList.get(i));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"zechary28"},"content":"    private void mergeSort(ArrayList\u003cTask\u003e array, int low, int high) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"zechary28"},"content":"        // the array to be sorted is array[low..high]","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"zechary28"},"content":"        if (low \u003c high) { // base case: low \u003e\u003d high (0 or 1 item)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"zechary28"},"content":"            int mid \u003d (low + high) / 2;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"zechary28"},"content":"            mergeSort(array, low, mid); // divide into two halves","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"zechary28"},"content":"            mergeSort(array,mid + 1, high); // then recursively sort them","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"zechary28"},"content":"            merge(array, low, mid, high); // conquer: the merge routine","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"zechary28"},"content":"    public void showSortedList(boolean apply) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"zechary28"},"content":"        // clone list","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"zechary28"},"content":"        if (apply) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"zechary28"},"content":"            ArrayList\u003cTask\u003e currList \u003d this.taskList.getList();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"zechary28"},"content":"            mergeSort(currList, 0, this.taskList.getSize() - 1);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"zechary28"},"content":"            printList(currList);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"zechary28"},"content":"        } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"zechary28"},"content":"        ArrayList\u003cTask\u003e cloneList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"zechary28"},"content":"        cloneList.addAll(this.taskList.getList());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"zechary28"},"content":"        mergeSort(cloneList, 0, cloneList.size() - 1);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"zechary28"},"content":"        printList(cloneList);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"zechary28"},"content":"     * Checks if a saved task list file exists and loads it, or creates a new list if no file is found.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"zechary28"},"content":"    public void checkListFile() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"zechary28"},"content":"        boolean isFound \u003d readListFile();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"zechary28"},"content":"        if (isFound) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"zechary28"},"content":"            printList(this.taskList.getList());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"zechary28"},"content":"     * Reads the task list from the storage file and adds tasks to the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"zechary28"},"content":"     * @throws FileNotFoundException if the storage file is not found","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"zechary28"},"content":"    public boolean readListFile() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"zechary28"},"content":"        String header \u003d this.storage.readLine();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"zechary28"},"content":"        if (header.isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"zechary28"},"content":"            return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"zechary28"},"content":"        while (this.storage.hasNext()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"zechary28"},"content":"            String task \u003d this.storage.readLine();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"zechary28"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"zechary28"},"content":"                this.taskList.addTask(readTask(task));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"zechary28"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"zechary28"},"content":"                this.output.append(\" There was something wrong with this task.\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"zechary28"},"content":"                this.output.append(\" \" + task + \"\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"zechary28"},"content":"        return true;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"zechary28"},"content":"     * Reads a single task from a line of text and returns the corresponding Task object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"zechary28"},"content":"     * @param input the task data in string format","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"zechary28"},"content":"     * @return the corresponding Task object","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"zechary28"},"content":"     * @throws InvalidInputException if the task data is invalid","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"zechary28"},"content":"    public Task readTask(String input) throws InvalidInputException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"zechary28"},"content":"        String[] taskParts \u003d input.split(\" : \");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"zechary28"},"content":"        String taskType \u003d taskParts[0];","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"zechary28"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"zechary28"},"content":"            return readToDo(taskParts);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"zechary28"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"zechary28"},"content":"            return readDeadline(taskParts);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"zechary28"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"zechary28"},"content":"            return readEvent(taskParts);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"zechary28"},"content":"        } else {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"invalid command\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"zechary28"},"content":"    public Task readToDo(String[] inputArr) throws InvalidInputException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"zechary28"},"content":"        if (inputArr.length \u003c 3) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"len \u003c 3\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"zechary28"},"content":"        boolean isDone \u003d inputArr[1].equals(\"1\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"zechary28"},"content":"        String name \u003d inputArr[2];","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"zechary28"},"content":"        return new ToDo(name, isDone);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"zechary28"},"content":"    public Task readDeadline(String[] inputArr) throws InvalidInputException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"zechary28"},"content":"        if (inputArr.length \u003c 4) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"len \u003c 4\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"zechary28"},"content":"        boolean isDone \u003d inputArr[1].equals(\"1\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"zechary28"},"content":"        String name \u003d inputArr[2];","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"zechary28"},"content":"        String deadline \u003d inputArr[3];","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"zechary28"},"content":"        return new Deadline(name, isDone, deadline);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"zechary28"},"content":"    public Task readEvent(String[] inputArr) throws InvalidInputException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"zechary28"},"content":"        if (inputArr.length \u003c 5) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"len \u003c 5\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"zechary28"},"content":"        boolean isDone \u003d inputArr[1].equals(\"1\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"zechary28"},"content":"        String name \u003d inputArr[2];","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"zechary28"},"content":"        String start \u003d inputArr[3];","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"zechary28"},"content":"        String end \u003d inputArr[4];","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"zechary28"},"content":"        return new Event(name, isDone, start, end);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"zechary28"},"content":"     * Writes the current task list to the storage file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"zechary28"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"zechary28"},"content":"     * @throws IOException if an I/O error occurs while writing to the file","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"zechary28"},"content":"    public void writeListToFile() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"zechary28"},"content":"            if (this.storage.hasWriteFile()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"zechary28"},"content":"                this.storage.clearFile();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"Saving list...\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"zechary28"},"content":"            storage.writeLine(String.format(\"list: %d\", this.taskList.getSize()));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"zechary28"},"content":"            int numTasks \u003d taskList.getSize();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"zechary28"},"content":"            for (Task task : taskList.getList()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"zechary28"},"content":"                if (task instanceof ToDo) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"zechary28"},"content":"                    ToDo todo \u003d (ToDo) task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"zechary28"},"content":"                    this.storage.writeLine(String.format(\"T : %s : %s\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"zechary28"},"content":"                            todo.getIsDone() ? \"1\" : \"0\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"zechary28"},"content":"                            todo.getName()));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"zechary28"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"zechary28"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"zechary28"},"content":"                    this.storage.writeLine(String.format(\"D : %s : %s : %s\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"zechary28"},"content":"                            deadline.getIsDone() ? \"1\" : \"0\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"zechary28"},"content":"                            deadline.getName(),","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"zechary28"},"content":"                            deadline.getDueTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"))));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"zechary28"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"zechary28"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"zechary28"},"content":"                    this.storage.writeLine(String.format(\"E : %s : %s : %s : %s\",","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"zechary28"},"content":"                            event.getIsDone() ? \"1\" : \"0\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"zechary28"},"content":"                            event.getName(),","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"zechary28"},"content":"                            event.getStartTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")),","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"zechary28"},"content":"                            event.getEndTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"))));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"zechary28"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"zechary28"},"content":"            this.output.append(\"Saved successfully\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"zechary28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"zechary28"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"zechary28":506}},{"path":"src/main/java/luke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"    private Luke luke \u003d new Luke();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"            stage.setMinHeight(417);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"            // set app icon and title","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"            stage.setTitle(\"Luke Task Manager\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"            Image icon \u003d new Image(getClass().getResource(\"/images/appicon.png\").toExternalForm());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"            // get controller","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"            MainWindow controller \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"            controller.setDuke(luke);  // inject the Duke instance","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"            // bind lifecycle events","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"            stage.setOnShown(event -\u003e controller.handleStartUp());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"            stage.setOnCloseRequest(event -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"                controller.handleShutDown();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"                // Ensure the application exits","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"                stage.close();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"            });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"            stage.show();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"zechary28":52}},{"path":"src/main/java/luke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"    @FXML","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"    @FXML","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    @FXML","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    @FXML","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"    private Luke luke;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/wooper.png\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/manaphy.png\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"    @FXML","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"    public void setDuke(Luke d) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"        luke \u003d d;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"    @FXML","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"        String response \u003d luke.getResponse(input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"        );","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"    public void handleStartUp() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"                DialogBox.getDukeDialog(luke.getStartUp(), dukeImage)","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zechary28"},"content":"        );","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"    public void handleShutDown() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"                DialogBox.getDukeDialog(luke.getShutDown(), dukeImage)","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zechary28"},"content":"        );","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"zechary28":64}},{"path":"src/main/resources/data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"list: 10","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"T : 0 : FFFF","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"T : 1 : aaa","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"T : 1 : bbb","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"T : 1 : ccc","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"T : 1 : ddd","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"T : 1 : eee","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"T : 1 : fff","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"T : 1 : finish assignment","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"T : 1 : test","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"D : 0 : adad : 29/11/1232 12:34","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"zechary28":11}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/23.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"zechary28":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/23.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"luke.ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"zechary28":19}},{"path":"src/test/java/luke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import luke.component.StorageTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import luke.component.TaskListTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import luke.component.UiTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"public abstract class CommandTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"    public abstract void execute(TaskListTest tl, UiTest uiTest, StorageTest st);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zechary28":9}},{"path":"src/test/java/luke/component/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.component;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.io.File;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"    private static final String READ_FILE_PATH \u003d \"data/list.txt\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"    private static final String WRITE_FILE_PATH \u003d \"data/list.txt\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    public StorageTest() throws FileNotFoundException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"        this.scanner \u003d new Scanner(new File(READ_FILE_PATH));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"    public String readLine() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"    public void writeLine(String textToAdd) throws IOException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"        FileWriter writer \u003d new FileWriter(WRITE_FILE_PATH, true);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"        writer.write(textToAdd + \"\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"        writer.close();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"    public boolean hasNext() { return scanner.hasNext(); }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"    public boolean hasReadFile() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"            new FileWriter(READ_FILE_PATH, true).close();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"            return false;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"        return true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"    public boolean hasWriteFile() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"            new FileWriter(WRITE_FILE_PATH, true).close();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"            return false;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"        return true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"    public void clearFile() throws IOException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"        new FileWriter(WRITE_FILE_PATH, false).close();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zechary28":55}},{"path":"src/test/java/luke/component/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.component;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import luke.task.TaskTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"import luke.task.ToDoStub;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"import luke.task.DeadlineStub;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"import luke.task.EventStub;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"    public ArrayList\u003cTaskTest\u003e list;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"    public TaskListTest() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"    public void addTask_addToDo_containsToDo() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"        TaskListTest tl \u003d new TaskListTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"        ToDoStub td \u003d new ToDoStub(\"\", true);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"        tl.addTask(td);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"        assertEquals(td, tl.list.get(0));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"    public void getTask_containsEventAtIndex1_GetEvent_returnsEvent() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"        TaskListTest tl \u003d new TaskListTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"        EventStub ev \u003d new EventStub(\"\",true,\"\",\"\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"        tl.addTask(new ToDoStub(\"\", true));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"        tl.addTask(ev);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"        assertEquals(ev, tl.list.get(1));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"    public void getSize_add_return() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"        TaskListTest tl \u003d new TaskListTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"        tl.addTask(new EventStub(\"\", true, \"\", \"\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"        tl.addTask(new DeadlineStub(\"\", true, \"\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"        assertEquals(2, tl.getSize());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"    public void deleteTask_2TasksDelNumber2_returnLastTask() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"        TaskListTest tl \u003d new TaskListTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"        tl.addTask(new EventStub(\"\", true, \"\", \"\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"        DeadlineStub dl \u003d new DeadlineStub(\"\", true, \"\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"        tl.addTask(dl);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"        assertEquals(dl, tl.deleteTask(1)); // 0-indexed","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"    public void getList_2TasksInList_returnCorrectList() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zechary28"},"content":"        TaskListTest tl \u003d new TaskListTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zechary28"},"content":"        ArrayList\u003cTaskTest\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"        ToDoStub td \u003d new ToDoStub(\"\", true);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"        tl.addTask(td);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"        list.add(td);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"        EventStub ev \u003d new EventStub(\"\",true,\"\",\"\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zechary28"},"content":"        tl.addTask(ev);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zechary28"},"content":"        list.add(ev);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zechary28"},"content":"        assertEquals(list, tl.getList());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zechary28"},"content":"    public int getSize() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zechary28"},"content":"        return list.size();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zechary28"},"content":"    public void addTask(TaskTest taskTest) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zechary28"},"content":"        this.list.add(taskTest);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zechary28"},"content":"    public TaskTest deleteTask(int i) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zechary28"},"content":"        return this.list.remove(i);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zechary28"},"content":"    public TaskTest getTask(int i) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zechary28"},"content":"        return this.list.get(i);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zechary28"},"content":"    public void markTask(int i, boolean isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zechary28"},"content":"        this.list.get(i).setIsDone(isDone);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zechary28"},"content":"    public ArrayList\u003cTaskTest\u003e getList() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zechary28"},"content":"        return this.list;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zechary28":90}},{"path":"src/test/java/luke/component/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.component;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"public class UiTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"    private static final String LOGO \u003d \" _           _\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"            + \"| |    _   _| | _____\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"            + \"| |   | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"            + \"| |___| |_| |   \u003c  __/\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"    //io","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"    private BufferedReader reader;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    private PrintWriter writer;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    public UiTest() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"        reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"        writer \u003d new PrintWriter(System.out);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"    // showing to System.out","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"        showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"        System.out.println(\"Hello I\u0027m\\n\" + LOGO);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"        showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"        showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"        System.out.println(\"There was an error: \" + message);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"        showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"    public void exit() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"        showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"        showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"        System.exit(0);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"    // reading from input","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"        return reader.readLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zechary28":53}},{"path":"src/test/java/luke/exception/InvalidInputExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.exception;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"// exceptions","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"public class InvalidInputExceptionTest extends Exception {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"zechary28":6}},{"path":"src/test/java/luke/task/DeadlineStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"public class DeadlineStub extends TaskTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"    public DeadlineStub(String name, boolean isDone, String dueTime) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"        super(name, isDone);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"    public String getName() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"        return \"DeadlineStub\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"    public LocalDateTime getDueTime() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"        return LocalDateTime.parse(\"2025-01-01T01:01:01\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"        return true;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"        return \"[D][1] DeadlineStub (by: 01 Jan 2025)\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zechary28":31}},{"path":"src/test/java/luke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"public class DeadlineTest extends TaskTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"    protected LocalDateTime dueTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"    public DeadlineTest(String name, boolean isDone, String dueTime) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"        super(name, isDone);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"        // input format of dueTime: [DD/MM/YYYY HH:MM]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"        // required format        : [YYYY:MM:DDTHH:MM:SS]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"        String day \u003d dueTime.substring(0, 2), month \u003d dueTime.substring(3, 5), year \u003d dueTime.substring(6, 10);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"        String hour \u003d dueTime.substring(11, 13), minute \u003d dueTime.substring(14, 16);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"        String timeString \u003d String.format(\"%s-%s-%sT%s:%s:00\", year, month, day, hour, minute);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"        this.dueTime \u003d LocalDateTime.parse(timeString); // assume string is in correct format","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    public String getName() { return this.name; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"    public LocalDateTime getDueTime() { return this.dueTime; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"    public boolean getIsDone() { return isDone; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", this.isDone?\"X\":\" \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"                , this.name, this.dueTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zechary28":35}},{"path":"src/test/java/luke/task/EventStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"public class EventStub extends TaskTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"    public EventStub(String name, boolean isDone, String start, String end) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"        super(name, isDone);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"    public String getName() { return \"EventStub\"; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"    public void setIsDone(boolean isDone) { }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"    public boolean getIsDone() { return true; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    public LocalDateTime getStartTime() { return LocalDateTime.parse(\"2025-01-01T01:01:01\"); }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    public LocalDateTime getEndTime() { return LocalDateTime.parse(\"2025-02-02T02:02:02\"); }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"        return \"[E][1] EventStub (from: 01 Jan 2025 to: 02 Feb 2025)\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zechary28":26}},{"path":"src/test/java/luke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"public class EventTest extends TaskTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"    public EventTest(String name, boolean isDone, String start, String end) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"        super(name, isDone);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"        // input format of dueTime: [DD/MM/YYYY HH:MM]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"        // required format        : [YYYY:MM:DDTHH:MM:SS]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"        String startDay \u003d start.substring(0, 2), startMonth \u003d start.substring(3, 5), startYear \u003d start.substring(6, 10);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"        String startHour \u003d start.substring(11, 13), startMinute \u003d start.substring(14, 16);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"        String startTimeString \u003d String.format(\"%s-%s-%sT%s:%s:00\", startYear, startMonth, startDay, startHour, startMinute);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"        String endDay \u003d end.substring(0, 2), endMonth \u003d end.substring(3, 5), endYear \u003d end.substring(6, 10);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"        String endHour \u003d end.substring(11, 13), endMinute \u003d end.substring(14, 16);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"        String endTimeString \u003d String.format(\"%s-%s-%sT%s:%s:00\", endYear, endMonth, endDay, endHour, endMinute);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"        this.startTime \u003d LocalDateTime.parse(startTimeString);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"        this.endTime \u003d LocalDateTime.parse(endTimeString);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"    public String getName() { return this.name; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"    public boolean getIsDone() { return this.isDone; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"    public LocalDateTime getStartTime() { return this.startTime; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"    public LocalDateTime getEndTime() { return this.endTime; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\", this.isDone?\"X\":\" \", this.name","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"                , this.startTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"                , this.endTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zechary28":43}},{"path":"src/test/java/luke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"// abstract Task class","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"public abstract class TaskTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"    protected String name;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"    public TaskTest(String name, boolean isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"    public abstract String getName();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"    public abstract void setIsDone(boolean isDone);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"    public abstract boolean getIsDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    public abstract String toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zechary28":21}},{"path":"src/test/java/luke/task/ToDoStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"public class ToDoStub extends TaskTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"    public ToDoStub(String name, boolean isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"        super(name, isDone);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"    public String getName() { return \"ToDoStub\"; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"    public void setIsDone(boolean isDone) {    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"    public boolean getIsDone() { return true; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"        return \"[T][1] ToDoStub\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zechary28":19}},{"path":"src/test/java/luke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"public class ToDoTest extends TaskTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"    protected String dueDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"    public ToDoTest(String name, boolean isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"        super(name, isDone);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"    public String getName() { return this.name; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"    public boolean getIsDone() { return isDone; }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"        return String.format(\"[T][%s] %s\", this.isDone?\"X\":\" \", this.name);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zechary28":23}},{"path":"src/test/java/luke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"public class Launcher {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"zechary28":12}},{"path":"src/test/java/luke/ui/LukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"import luke.component.StorageTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"import luke.component.TaskListTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"import luke.component.UiTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"import luke.exception.InvalidInputExceptionTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"import luke.task.*;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"public class LukeTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    private TaskListTest tasklist;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"    private UiTest uiTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"    private StorageTest storageTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"    public LukeTest() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"        this.tasklist \u003d new TaskListTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"        this.uiTest \u003d new UiTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"            this.storageTest \u003d new StorageTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"No file for storage found, exiting program\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"            System.exit(0);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"    public static void main(String[] args) throws IOException, InvalidInputExceptionTest, NumberFormatException, FileNotFoundException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"        new LukeTest().run();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"    public void run() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"        this.uiTest.showWelcome();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"        checkListFile();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"        while (true) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"                String input \u003d uiTest.readCommand();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"                if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"                    System.out.println(\"No input detected\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"                    throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"                // determine command","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"                String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"                String command \u003d inputArr[0];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"                if (command.equals(\"bye\")) break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"                else if (command.equals(\"mark\")) markTask(Integer.parseInt(inputArr[1]) - 1, true);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"                else if (command.equals(\"unmark\")) markTask(Integer.parseInt(inputArr[1]) - 1, false);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"                else if (command.equals(\"list\")) printList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"                else if (command.equals(\"delete\")) deleteTask(Integer.parseInt(inputArr[1]) - 1);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"                else { // add tasks","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zechary28"},"content":"                    String type \u003d command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zechary28"},"content":"                    if (type.equals(\"todo\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"                        TaskTest taskTest \u003d parseToDo(input);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"                        this.tasklist.addTask(taskTest);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"                        addTaskUpdates(taskTest);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"                    } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zechary28"},"content":"                        TaskTest taskTest \u003d parseDeadline(input);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zechary28"},"content":"                        this.tasklist.addTask(taskTest);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zechary28"},"content":"                        addTaskUpdates(taskTest);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zechary28"},"content":"                    } else if (type.equals(\"event\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zechary28"},"content":"                        TaskTest taskTest \u003d parseEvent(input);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zechary28"},"content":"                        this.tasklist.addTask(taskTest);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zechary28"},"content":"                        addTaskUpdates(taskTest);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zechary28"},"content":"                    } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zechary28"},"content":"                        throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zechary28"},"content":"                    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zechary28"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zechary28"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zechary28"},"content":"                uiTest.showError(e.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zechary28"},"content":"            } finally {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zechary28"},"content":"                uiTest.showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zechary28"},"content":"            writeListToFile();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zechary28"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zechary28"},"content":"        this.uiTest.exit();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zechary28"},"content":"    // parsers","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zechary28"},"content":"    public static TaskTest parseToDo(String input) throws InvalidInputExceptionTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zechary28"},"content":"        // invalid input: [t0do] or [t0do ]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zechary28"},"content":"        if (input.length() \u003c 5 || input.substring(5).trim().isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: [todo] or [todo ]\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zechary28"},"content":"        String name \u003d input.substring(5);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zechary28"},"content":"        return new ToDoTest(name, false);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zechary28"},"content":"    public static TaskTest parseDeadline(String input) throws InvalidInputExceptionTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zechary28"},"content":"        // invalid input: [deadline] or [deadline ]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zechary28"},"content":"        if (input.length() \u003c 9 || input.substring(9).trim().isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: [deadline] or [deadline ]\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zechary28"},"content":"        String[] inputArr \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zechary28"},"content":"        // invalid input: [deadline *** /by ] or [deadline /by ***]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zechary28"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zechary28"},"content":"            System.out.println(inputArr[0]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: [deadline *** /by ] or [deadline /by ***]\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zechary28"},"content":"        String name \u003d inputArr[0];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zechary28"},"content":"        String due \u003d inputArr[1];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zechary28"},"content":"        // invalid input: white spaces for name and deadline","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zechary28"},"content":"        if (name.trim().isEmpty() || due.trim().isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: empty task name or deadline\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zechary28"},"content":"        return new DeadlineTest(name, false, due);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zechary28"},"content":"    public static TaskTest parseEvent(String input) throws InvalidInputExceptionTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zechary28"},"content":"        // invalid input: [event] or [event ]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zechary28"},"content":"        if (input.length() \u003c 6 || input.substring(6).trim().isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: [event] or [event ]\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zechary28"},"content":"        // split [name] /from [rest...]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zechary28"},"content":"        String[] inputArr \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zechary28"},"content":"        // invalid input: [event *** /from ] or [event /from ***]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zechary28"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: [event *** /from ] or [event /from ***]\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zechary28"},"content":"        input \u003d inputArr[1];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zechary28"},"content":"        String name \u003d inputArr[0]; // extract name","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zechary28"},"content":"        // split [start] /by [end]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zechary28"},"content":"        inputArr \u003d input.split(\" /to \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zechary28"},"content":"        // invalid input: [event *** /from *** /to ] or [event *** /from /to ***]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zechary28"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: [event *** /from *** /to ] or [event *** /from /to ***]\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zechary28"},"content":"        String start \u003d inputArr[0];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zechary28"},"content":"        String end \u003d inputArr[1];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zechary28"},"content":"        if (start.trim().isEmpty() || end.trim().isEmpty()) throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zechary28"},"content":"        return new EventTest(name, false, start, end);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zechary28"},"content":"    public void addTaskUpdates(TaskTest taskTest) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zechary28"},"content":"        this.uiTest.showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zechary28"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zechary28"},"content":"        System.out.println(\"   \" + taskTest);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zechary28"},"content":"        System.out.println(\" Now you have \" + tasklist.getSize() + \" tasks in the list.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zechary28"},"content":"        this.uiTest.showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zechary28"},"content":"    public void printList() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zechary28"},"content":"        this.uiTest.showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"zechary28"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zechary28"},"content":"        for (int i \u003d 0; i \u003c this.tasklist.getSize(); i++) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"zechary28"},"content":"            System.out.println(String.format(\" %d.%s\",i+1, this.tasklist.getList().get(i)));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zechary28"},"content":"        this.uiTest.showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"zechary28"},"content":"    public void markTask(int i, boolean isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"zechary28"},"content":"        TaskTest taskTest \u003d this.tasklist.getTask(i);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"zechary28"},"content":"        taskTest.setIsDone(isDone);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"zechary28"},"content":"        this.uiTest.showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"zechary28"},"content":"        if (isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"zechary28"},"content":"            System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"   \" + taskTest);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"zechary28"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"zechary28"},"content":"            System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"   \" + taskTest);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"zechary28"},"content":"        this.uiTest.showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"zechary28"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"zechary28"},"content":"        TaskTest taskTest \u003d this.tasklist.deleteTask(i);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"zechary28"},"content":"        this.uiTest.showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"zechary28"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"zechary28"},"content":"        System.out.println(\"   \" + taskTest);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"zechary28"},"content":"        System.out.println(\" Now you have \" + this.tasklist.getSize() + \" tasks in the list.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"zechary28"},"content":"        this.uiTest.showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"zechary28"},"content":"    public void checkListFile() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"zechary28"},"content":"        boolean foundList \u003d true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"zechary28"},"content":"            readListFile();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"zechary28"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"No list found\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"Creating new list...\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"zechary28"},"content":"            foundList \u003d false;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"zechary28"},"content":"        } finally {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"zechary28"},"content":"            if (foundList) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"zechary28"},"content":"                printList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"zechary28"},"content":"                this.uiTest.showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"zechary28"},"content":"    public void readListFile() throws FileNotFoundException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"zechary28"},"content":"        String header \u003d this.storageTest.readLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"zechary28"},"content":"        while (this.storageTest.hasNext()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"zechary28"},"content":"            String task \u003d this.storageTest.readLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"zechary28"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"zechary28"},"content":"                this.tasklist.addTask(readTask(task));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"zechary28"},"content":"            } catch (InvalidInputExceptionTest e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"zechary28"},"content":"                this.uiTest.showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"zechary28"},"content":"                System.out.println(\" There was something wrong with this task.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"zechary28"},"content":"                System.out.println(\" \" + task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"zechary28"},"content":"                this.uiTest.showLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"zechary28"},"content":"    public TaskTest readTask(String input) throws InvalidInputExceptionTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"zechary28"},"content":"        String[] task \u003d input.split(\" : \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"zechary28"},"content":"        String taskType \u003d task[0];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"zechary28"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"zechary28"},"content":"            if (task.length \u003c 3) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"zechary28"},"content":"                System.out.println(\"len \u003c 3\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"zechary28"},"content":"                throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"zechary28"},"content":"            boolean isDone \u003d task[1].equals(\"1\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"zechary28"},"content":"            String name \u003d task[2];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"zechary28"},"content":"            return new ToDoTest(name, isDone);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"zechary28"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"zechary28"},"content":"            if (task.length \u003c 4) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"zechary28"},"content":"                System.out.println(\"len \u003c 4\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"zechary28"},"content":"                throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"zechary28"},"content":"            boolean isDone \u003d task[1].equals(\"1\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"zechary28"},"content":"            String name \u003d task[2];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"zechary28"},"content":"            String deadline \u003d task[3];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"zechary28"},"content":"            return new DeadlineTest(name, isDone, deadline);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"zechary28"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"zechary28"},"content":"            if (task.length \u003c 5) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"zechary28"},"content":"                System.out.println(\"len \u003c 5\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"zechary28"},"content":"                throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"zechary28"},"content":"            boolean isDone \u003d task[1].equals(\"1\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"zechary28"},"content":"            String name \u003d task[2];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"zechary28"},"content":"            String start \u003d task[3];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"zechary28"},"content":"            String end \u003d task[4];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"zechary28"},"content":"            return new EventTest(name, isDone, start, end);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"zechary28"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid command\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputExceptionTest();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"zechary28"},"content":"    public void writeListToFile() throws IOException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"zechary28"},"content":"        this.storageTest.clearFile();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"zechary28"},"content":"        System.out.println(\"Saving list...\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"zechary28"},"content":"        storageTest.writeLine(String.format(\"list: %d\", this.tasklist.getSize()));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"zechary28"},"content":"        for (TaskTest taskTest : tasklist.getList()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"zechary28"},"content":"            if (taskTest instanceof ToDoTest) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"zechary28"},"content":"                ToDoTest todo \u003d (ToDoTest) taskTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"zechary28"},"content":"                this.storageTest.writeLine(String.format(\"T : %s : %s\", todo.getIsDone()? \"1\" : \"0\", todo.getName()));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"zechary28"},"content":"            } else if (taskTest instanceof DeadlineTest) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"zechary28"},"content":"                DeadlineTest deadlineTest \u003d (DeadlineTest) taskTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"zechary28"},"content":"                this.storageTest.writeLine(String.format(\"D : %s : %s : %s\", deadlineTest.getIsDone()? \"1\" : \"0\", deadlineTest.getName()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"zechary28"},"content":"                        , deadlineTest.getDueTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"))));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"zechary28"},"content":"            } else if (taskTest instanceof EventTest) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"zechary28"},"content":"                EventTest eventTest \u003d (EventTest) taskTest;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"zechary28"},"content":"                this.storageTest.writeLine(String.format(\"E : %s : %s : %s : %s\", eventTest.getIsDone()? \"1\" : \"0\", eventTest.getName()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"zechary28"},"content":"                        , eventTest.getStartTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"))","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"zechary28"},"content":"                        , eventTest.getEndTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"))));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"zechary28"},"content":"        System.out.println(\"Saved successfully\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"zechary28":279}},{"path":"src/test/java/luke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"package luke.ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"        stage.setScene(scene); // Setting the stage to show our scene","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"zechary28":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"todo borrow book","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"deadlineTest return book /by Sunday","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"eventTest project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"mark 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"unmark 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"delete 1","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"deadlineTest","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"bye","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"zechary28":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"java -classpath ..\\bin duke.uiTest.Luke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"zechary28":1}}]
