[{"path":"data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"list: 5","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"T : 1 : eat","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"E : 0 : sleep : 3am : 5am","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"D : 1 : shit : 9am","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"T : 0 : eat more","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"D : 0 : 2103 iP : today","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"zechary28":6}},{"path":"src/main/java/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zechary28"},"content":"public class Luke {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zechary28"},"content":"    public static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zechary28"},"content":"    public static int numItems;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zechary28"},"content":"    public static final String LIST_FILE_PATH \u003d \"../../../data/list.txt\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zechary28"},"content":"    // abstract class","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"    public static abstract class Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zechary28"},"content":"        protected String name;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zechary28"},"content":"        protected boolean isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zechary28"},"content":"        public Task(String name, boolean isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zechary28"},"content":"            this.name \u003d name;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zechary28"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zechary28"},"content":"        public abstract void setIsDone(boolean isDone);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zechary28"},"content":"        @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zechary28"},"content":"        public abstract String toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zechary28"},"content":"    // Task subtypes","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zechary28"},"content":"    public static class ToDo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zechary28"},"content":"        protected String dueDate;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zechary28"},"content":"        public ToDo(String name, boolean isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zechary28"},"content":"            super(name, isDone);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zechary28"},"content":"        public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zechary28"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zechary28"},"content":"        @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zechary28"},"content":"        public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zechary28"},"content":"            return String.format(\"[T][%s] %s\", this.isDone?\"X\":\" \", this.name);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zechary28"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zechary28"},"content":"        protected String dueTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zechary28"},"content":"        public Deadline(String name, boolean isDone, String dueTime) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zechary28"},"content":"            super(name, isDone);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zechary28"},"content":"            this.dueTime \u003d dueTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zechary28"},"content":"        public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zechary28"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zechary28"},"content":"        @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zechary28"},"content":"        public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zechary28"},"content":"            return String.format(\"[D][%s] %s (by: %s)\", this.isDone?\"X\":\" \", this.name, this.dueTime);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zechary28"},"content":"    public static class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zechary28"},"content":"        protected String startTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zechary28"},"content":"        protected String endTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zechary28"},"content":"        public Event(String name, boolean isDone, String start, String end) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zechary28"},"content":"            super(name, isDone);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zechary28"},"content":"            this.startTime \u003d start;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zechary28"},"content":"            this.endTime \u003d end;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zechary28"},"content":"        public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zechary28"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zechary28"},"content":"        @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zechary28"},"content":"        public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zechary28"},"content":"            return String.format(\"[E][%s] %s (from: %s to: %s)\", this.isDone?\"X\":\" \", this.name, this.startTime, this.endTime);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zechary28"},"content":"    // exceptions","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zechary28"},"content":"    public static class InvalidInputException extends Exception {}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zechary28"},"content":"    public static void main(String[] args) throws IOException, InvalidInputException, NumberFormatException, FileNotFoundException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zechary28"},"content":"        //io","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zechary28"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zechary28"},"content":"        PrintWriter writer \u003d new PrintWriter(System.out);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zechary28"},"content":"        //data structures","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zechary28"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zechary28"},"content":"        String logo \u003d \" _           _\\n\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zechary28"},"content":"                + \"| |    _   _| | _____\\n\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zechary28"},"content":"                + \"| |   | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zechary28"},"content":"                + \"| |___| |_| |   \u003c  __/\\n\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zechary28"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zechary28"},"content":"        printLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zechary28"},"content":"        System.out.println(\"Hello I\u0027m\\n\" + logo);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zechary28"},"content":"        printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zechary28"},"content":"        boolean foundList \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zechary28"},"content":"        System.out.println(\"Checking for saved list...\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zechary28"},"content":"            readListFile(); // will build the list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zechary28"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"No list found\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"Creating new list...\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zechary28"},"content":"            numItems \u003d 0;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zechary28"},"content":"            foundList \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zechary28"},"content":"        } finally {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zechary28"},"content":"            // print out existing list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zechary28"},"content":"            if (foundList) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zechary28"},"content":"                System.out.println(\"Here is your current list:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zechary28"},"content":"                printList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zechary28"},"content":"                printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zechary28"},"content":"            // main loop","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zechary28"},"content":"            while (true) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zechary28"},"content":"                try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zechary28"},"content":"                    String input \u003d reader.readLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zechary28"},"content":"                    if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zechary28"},"content":"                        throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zechary28"},"content":"                    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zechary28"},"content":"                    String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zechary28"},"content":"                    String command \u003d inputArr[0];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zechary28"},"content":"                    if (command.equals(\"bye\")) break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zechary28"},"content":"                    else if (command.equals(\"mark\")) markTask(Integer.parseInt(inputArr[1]) - 1, true);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zechary28"},"content":"                    else if (command.equals(\"unmark\")) markTask(Integer.parseInt(inputArr[1]) - 1, false);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zechary28"},"content":"                    else if (command.equals(\"list\")) printList();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zechary28"},"content":"                    else if (command.equals(\"delete\")) deleteTask(Integer.parseInt(inputArr[1]) - 1);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zechary28"},"content":"                    else { // add tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zechary28"},"content":"                        String type \u003d command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zechary28"},"content":"                        if (type.equals(\"todo\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zechary28"},"content":"                            handleToDo(input);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zechary28"},"content":"                        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zechary28"},"content":"                            handleDeadline(input);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zechary28"},"content":"                        } else if (type.equals(\"event\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zechary28"},"content":"                            handleEvent(input);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zechary28"},"content":"                        } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zechary28"},"content":"                            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zechary28"},"content":"                        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zechary28"},"content":"                        addTaskUpdates();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zechary28"},"content":"                    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zechary28"},"content":"                } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zechary28"},"content":"                    printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zechary28"},"content":"                    System.out.println(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means or the input is invalid.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zechary28"},"content":"                    printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zechary28"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"zechary28"},"content":"                    printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zechary28"},"content":"                    System.out.println(\" OOPS!!! Invalid number format. Please enter a valid index.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"zechary28"},"content":"                    printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"zechary28"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zechary28"},"content":"                    printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"zechary28"},"content":"                    System.out.println(\" OOPS!!! Input is missing required arguments.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zechary28"},"content":"                    printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"zechary28"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"zechary28"},"content":"                    printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"zechary28"},"content":"                    System.out.println(\" OOPS!!! An unexpected error occurred: \" + e.getMessage());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"zechary28"},"content":"                    printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"zechary28"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"zechary28"},"content":"            writeListToFile();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"zechary28"},"content":"            exit();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"zechary28"},"content":"    public static void printLine() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"zechary28"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"zechary28"},"content":"    public static void exit() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"zechary28"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"zechary28"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"zechary28"},"content":"        printLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"zechary28"},"content":"        System.exit(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"zechary28"},"content":"    public static void handleToDo(String input) throws InvalidInputException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"zechary28"},"content":"        // invalid input: [todo] or [todo ]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"zechary28"},"content":"        if (input.length() \u003c 5 || input.substring(5).trim().isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: [todo] or [todo ]\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"zechary28"},"content":"        String name \u003d input.substring(5);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"zechary28"},"content":"        list.add(new ToDo(name, false));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"zechary28"},"content":"    public static void handleDeadline(String input) throws InvalidInputException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"zechary28"},"content":"        // invalid input: [deadline] or [deadline ]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"zechary28"},"content":"        if (input.length() \u003c 9 || input.substring(9).trim().isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: [deadline] or [deadline ]\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"zechary28"},"content":"        String[] inputArr \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"zechary28"},"content":"        // invalid input: [deadline *** /by ] or [deadline /by ***]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"zechary28"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"zechary28"},"content":"            System.out.println(inputArr[0]);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: [deadline *** /by ] or [deadline /by ***]\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"zechary28"},"content":"        String name \u003d inputArr[0];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"zechary28"},"content":"        String due \u003d inputArr[1];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"zechary28"},"content":"        // invalid input: white spaces for name and deadline","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"zechary28"},"content":"        if (name.trim().isEmpty() || due.trim().isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: empty task name or deadline\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"zechary28"},"content":"        list.add(new Deadline(name, false, due));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"zechary28"},"content":"    public static void handleEvent(String input) throws InvalidInputException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"zechary28"},"content":"        // invalid input: [event] or [event ]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"zechary28"},"content":"        if (input.length() \u003c 6 || input.substring(6).trim().isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: [event] or [event ]\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"zechary28"},"content":"        // split [name] /from [rest...]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"zechary28"},"content":"        String[] inputArr \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"zechary28"},"content":"        // invalid input: [event *** /from ] or [event /from ***]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"zechary28"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: [event *** /from ] or [event /from ***]\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"zechary28"},"content":"        input \u003d inputArr[1];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"zechary28"},"content":"        String name \u003d inputArr[0]; // extract name","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"zechary28"},"content":"        // split [start] /by [end]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"zechary28"},"content":"        inputArr \u003d input.split(\" /to \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"zechary28"},"content":"        // invalid input: [event *** /from *** /to ] or [event *** /from /to ***]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"zechary28"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"invalid input: [event *** /from *** /to ] or [event *** /from /to ***]\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"zechary28"},"content":"        String start \u003d inputArr[0];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"zechary28"},"content":"        String end \u003d inputArr[1];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"zechary28"},"content":"        if (start.trim().isEmpty() || end.trim().isEmpty()) throw new InvalidInputException();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"zechary28"},"content":"        list.add(new Event(name, false, start, end));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"zechary28"},"content":"    public static void addTaskUpdates() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"zechary28"},"content":"        printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"zechary28"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"zechary28"},"content":"        System.out.println(\"   \" + list.get(numItems));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"zechary28"},"content":"        numItems++;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"zechary28"},"content":"        System.out.println(\" Now you have \" + numItems + \" tasks in the list.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"zechary28"},"content":"        printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"zechary28"},"content":"    public static void printList() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"zechary28"},"content":"        printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"zechary28"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"zechary28"},"content":"        for (int i \u003d 0; i \u003c numItems; i++) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"zechary28"},"content":"            System.out.println(String.format(\" %d.%s\",i+1, list.get(i)));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"zechary28"},"content":"        printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"zechary28"},"content":"    public static void markTask(int i, boolean isDone) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"zechary28"},"content":"        Task task \u003d list.get(i);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"zechary28"},"content":"        task.setIsDone(isDone);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"zechary28"},"content":"        printLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"zechary28"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"zechary28"},"content":"            System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"   \" + task.toString());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"zechary28"},"content":"            printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"zechary28"},"content":"        } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"zechary28"},"content":"            System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"   \" + task.toString());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"zechary28"},"content":"            printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"zechary28"},"content":"    public static void deleteTask(int i) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"zechary28"},"content":"        Task task \u003d list.remove(i);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"zechary28"},"content":"        printLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"zechary28"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"zechary28"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"zechary28"},"content":"        numItems--;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"zechary28"},"content":"        System.out.println(\" Now you have \" + numItems + \" tasks in the list.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"zechary28"},"content":"        printLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"zechary28"},"content":"    public static void readListFile() throws FileNotFoundException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"zechary28"},"content":"        File file \u003d new File(LIST_FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"zechary28"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"zechary28"},"content":"        String header \u003d scanner.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"zechary28"},"content":"        int num \u003d Integer.parseInt(header.substring(6));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"zechary28"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"zechary28"},"content":"            String task \u003d scanner.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"zechary28"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"zechary28"},"content":"                readTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"zechary28"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"zechary28"},"content":"                printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"zechary28"},"content":"                System.out.println(\" There was something wrong with this task.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"zechary28"},"content":"                System.out.println(\" \" + task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"zechary28"},"content":"                printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"zechary28"},"content":"            numItems++;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"zechary28"},"content":"    public static void readTask(String input) throws InvalidInputException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"zechary28"},"content":"        String[] task \u003d input.split(\" : \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"zechary28"},"content":"        String taskType \u003d task[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"zechary28"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"zechary28"},"content":"            if (task.length \u003c 3) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"zechary28"},"content":"//                System.out.println(\"len \u003c 3\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"zechary28"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"zechary28"},"content":"            boolean isDone \u003d task[1].equals(\"1\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"zechary28"},"content":"            String name \u003d task[2];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"zechary28"},"content":"            list.add(new ToDo(name, isDone));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"zechary28"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"zechary28"},"content":"            if (task.length \u003c 4) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"zechary28"},"content":"                System.out.println(\"len \u003c 4\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"zechary28"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"zechary28"},"content":"            boolean isDone \u003d task[1].equals(\"1\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"zechary28"},"content":"            String name \u003d task[2];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"zechary28"},"content":"            String deadline \u003d task[3];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"zechary28"},"content":"            list.add(new Deadline(name, isDone, deadline));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"zechary28"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"zechary28"},"content":"            if (task.length \u003c 5) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"zechary28"},"content":"                System.out.println(\"len \u003c 5\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"zechary28"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"zechary28"},"content":"            boolean isDone \u003d task[1].equals(\"1\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"zechary28"},"content":"            String name \u003d task[2];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"zechary28"},"content":"            String start \u003d task[3];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"zechary28"},"content":"            String end \u003d task[4];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"zechary28"},"content":"            list.add(new Event(name, isDone, start, end));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"zechary28"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"zechary28"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"zechary28"},"content":"        };","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"zechary28"},"content":"    public static void writeListToFile() throws IOException, FileNotFoundException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"zechary28"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"Searching for list file...\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"zechary28"},"content":"            new FileWriter(LIST_FILE_PATH, false).close(); // clear file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"zechary28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"Could not find file \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"Creating new file...\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"zechary28"},"content":"        } finally {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"Saving list...\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"zechary28"},"content":"            FileWriter writer \u003d new FileWriter(LIST_FILE_PATH, true);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"zechary28"},"content":"            writer.write(String.format(\"list: %d\\n\", numItems));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"zechary28"},"content":"            for (Task task : list) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"zechary28"},"content":"                if (task instanceof ToDo) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"zechary28"},"content":"                    ToDo todo \u003d (ToDo) task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"zechary28"},"content":"                    writer.write(String.format(\"T : %s : %s\", todo.isDone? \"1\" : \"0\", todo.name));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"zechary28"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"zechary28"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"zechary28"},"content":"                    writer.write(String.format(\"D : %s : %s : %s\", deadline.isDone? \"1\" : \"0\", deadline.name, deadline.dueTime));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"zechary28"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"zechary28"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"zechary28"},"content":"                    writer.write(String.format(\"E : %s : %s : %s : %s\", event.isDone? \"1\" : \"0\", event.name, event.startTime, event.endTime));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"zechary28"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"zechary28"},"content":"                writer.write(\"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"zechary28"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"zechary28"},"content":"            writer.flush();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"zechary28"},"content":"            writer.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"zechary28"},"content":"            System.out.println(\"Saved successfully\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"zechary28"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"zechary28"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"zechary28"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"zechary28"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zechary28":381}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zechary28"},"content":"todo borrow book","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zechary28"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zechary28"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zechary28"},"content":"mark 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zechary28"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zechary28"},"content":"unmark 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zechary28"},"content":"delete 1","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zechary28"},"content":"deadline","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zechary28"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zechary28"},"content":"bye","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"zechary28":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zechary28"},"content":"java -classpath ..\\bin Luke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"zechary28":1}}]
