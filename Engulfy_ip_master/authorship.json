[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"checkstyle {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"    configFile \u003d rootProject.file(\"config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"    mainClass.set(\"engulfy.main.Launcher\")","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"    archiveBaseName \u003d \"engulfy\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Engulfy":24,"-":39}},{"path":"src/main/java/engulfy/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.storage.Storage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.Ui;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":" * Represents an abstract command for adding tasks.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":" * This class implements the Command interface and provides","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":" * the execution logic for adding a task to the task list.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"public abstract class AddCommand implements Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"    private Task task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"     * Executes the add command by adding a task to the task list,","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"     * saving the updated list to storage, and returning a confirmation message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     * @param tasks   The task list to which the task will be added.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"     * @param storage The storage handler for saving task data.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"     * @return A message confirming that the task has been added.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If an error occurs while saving the task.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"     * @throws NullPointerException If the task has not been initialized.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EngulfyError {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"        assert task !\u003d null : \"Task should not be null when executing AddCommand\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"        Task currentTask \u003d getTask();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"        tasks.addTask(currentTask);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"        return ui.showTaskAdded(currentTask, tasks.size());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"     * Retrieves the task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"     * @return the current task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"    public Task getTask() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"        return task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"     * Sets a new task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"     * @param task the task to be set.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"     * @throws AssertionError if the provided task is null.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"    public void setTask(Task task) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"        assert task !\u003d null : \"Task should not be null when setting it\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"     * Indicates whether this command causes the application to exit.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"     * @return false, as adding a task does not terminate the application.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Engulfy"},"content":"        return false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":69}},{"path":"src/main/java/engulfy/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Deadline;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":" * A command for adding a deadline task.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":" * Parses the arguments to extract the task description and due date.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"     * Constructs an AddDeadlineCommand with the given arguments.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"     * @param arguments The arguments containing the description and deadline.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If the arguments are empty or incorrectly formatted.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"    public AddDeadlineCommand(String arguments) throws EngulfyError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"        assert arguments !\u003d null : \"Arguments should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(\"I need a description to help you keep track ;-;\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"        String[] parts \u003d arguments.split(\" /by \", 2);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(\"Zenitsu does not understand your date!\\n \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"                    + \"Use: deadline \u003cdescription\u003e /by \u003cdatetime\u003e\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"        setTask(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":31}},{"path":"src/main/java/engulfy/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Event;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":" * A command for adding an event task.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":" * Parses the arguments to extract the task description, start time, and end time.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"     * Constructs an AddEventCommand with the given arguments.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"     * @param arguments The arguments containing the description, start time, and end time.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If the arguments are empty or incorrectly formatted.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"    public AddEventCommand(String arguments) throws EngulfyError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"        assert arguments !\u003d null : \"Arguments should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(\"I need a description to help you keep track ;-;\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"        String[] parts \u003d arguments.split(\" /from \", 2);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"        if (parts.length \u003c 2 || !parts[1].contains(\" /to \")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(\"Zenitsu does not understand your date!\\n \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"                    + \"Use: event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"        setTask(new Event(parts[0], timeParts[0], timeParts[1]));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":32}},{"path":"src/main/java/engulfy/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Todo;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":" * A command for adding a to-do task.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":" * Parses the arguments to extract the task description.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"    private static final String NO_DESCRIPTION_ERROR \u003d \"Zenitsu needs a description to help you keep track ;-;\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"     * Constructs an AddTodoCommand with the given arguments.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"     * @param arguments The arguments containing the description of the to-do task.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If the arguments are empty.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"    public AddTodoCommand(String arguments) throws EngulfyError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"        assert arguments !\u003d null : \"Arguments should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(NO_DESCRIPTION_ERROR);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"        setTask(new Todo(arguments));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":26}},{"path":"src/main/java/engulfy/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.storage.Storage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.Ui;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":" * Represents a command that can be executed within the Engulfy application.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":" * Each implementing class defines specific behavior for a command, affecting tasks, UI, and/or storage.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"public interface Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"     * Executes the command\u0027s primary logic using the provided dependencies.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"     * @param tasks   The list of current tasks. Used to perform task-related operations.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"     * @param ui      The user interface component. Used to interact with the user and display messages.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"     * @param storage The storage component. Used for persisting task data if required by the command.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"     * @return A string message representing the result of the command execution.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If an error occurs during execution, such as invalid input or storage issues.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) throws EngulfyError;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"     * Determines if the command results in application exit.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"     * @return true if the command is an exit command, false otherwise","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"    boolean isExit();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":30}},{"path":"src/main/java/engulfy/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.storage.Storage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.Ui;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":" * A command to delete a task from the task list.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":" * This command removes a task at a specified index and updates the storage and UI accordingly.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"    private static final String WRONG_NUMBER_ERROR \u003d \"Please specify a valid task number to delete\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"    private final int index;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"     * Constructs a DeleteCommand with the specified task index.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     * @param arguments the string representation of the task index to delete","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError if the arguments cannot be parsed as a valid integer","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"    public DeleteCommand(String arguments) throws EngulfyError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"        assert arguments !\u003d null : \"Arguments should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"            this.index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(WRONG_NUMBER_ERROR);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"     * Executes the command by deleting the task at the specified index, saving the updated task list,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"     * and displaying a confirmation message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"     * @param tasks   The task list from which the task is to be removed.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"     * @param ui      The user interface for displaying the task removal message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"     * @param storage The storage handler to persist the updated task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"     * @return A confirmation message indicating the task has been removed.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If the index is out of bounds or an error occurs while saving the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EngulfyError {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"        Task removedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"        return ui.showTaskRemoved(removedTask, tasks.size());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"     * Checks if the command results in an exit action.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"     * @return false since the delete command does not cause the application to exit","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"        return false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":61}},{"path":"src/main/java/engulfy/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.storage.Storage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.Ui;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":" * A command to exit the application.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":" * This command displays a goodbye message and indicates that the application should terminate.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"     * Executes the exit command by displaying a goodbye message via the UI.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"     * @param tasks   The current task list (not used in this command).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"     * @param ui      The user interface to display the goodbye message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"     * @return A goodbye message indicating the application is closing.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"     * Checks if the command results in an exit action.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"     * @return true since this is an exit command","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"        return true;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":38}},{"path":"src/main/java/engulfy/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import java.util.List;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.storage.Storage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.Ui;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":" * Represents a command to find tasks in the task list that contain a specified keyword.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"    private static final String EMPTY_MSG \u003d \"Zenitsu cannot find the task you are looking for!\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"    private final String keyword;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"        assert keyword !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"     * Executes the find command by searching for tasks that contain the specified keyword","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"     * and displaying the matching tasks to the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"     * @param tasks   The task list to search within.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"     * @param ui      The user interface to interact with the user and display results.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"     * @param storage The storage handler (not used in this command, but needed to comply with the Command interface).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"     * @return A message containing the list of tasks that match the keyword, or a message stating no match was found.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.getAllTasks().stream()","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"                .toList();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"            return (EMPTY_MSG);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"        } else {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"            StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"                output.append(i + 1).append(\".\").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"            return (\"Zenitsu found you!!\\n\\n\" + output).trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"     * Checks if the command results in an exit action.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"     * @return false since this command does not exit the application","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"        return false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":65}},{"path":"src/main/java/engulfy/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.storage.Storage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.Ui;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":" * A command to display the list of all tasks.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":" * This command shows the tasks in the task list, or a message indicating that there are no tasks.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"    private static final String NO_TASK_MSG \u003d \"You seem very free now... Start doing something productive!\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"     * Executes the list command by displaying all tasks in the task list.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"     * If there are no tasks, a message indicating this is displayed.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"     * @param tasks the task list containing all tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"     * @param ui the user interface to display the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     * @param storage the storage (not used in this command, but needed to comply with the Command interface).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     * @return A message with the list of tasks, or a message stating there are no tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"            return ui.showTaskList(tasks.getAllTasks());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"        } else {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"            return (NO_TASK_MSG);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"     * Checks if the command results in an exit action.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"     * @return false since this command does not exit the application","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"        return false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":44}},{"path":"src/main/java/engulfy/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.storage.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.Ui;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":" * A command to mark a task as completed.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":" * This command marks a task at the specified index and updates the storage and UI accordingly.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"    private static final String NOT_NUMBER_ERROR \u003d \"This does not seem like a number to Zenitsu :/\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"    private final int index;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     * @param arguments the string representation of the task index to mark","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError if the arguments cannot be parsed as a valid integer","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"    public MarkCommand(String arguments) throws EngulfyError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"        assert arguments !\u003d null : \"Arguments should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"            this.index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(NOT_NUMBER_ERROR);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"     * Executes the command by marking the task at the specified index, saving the updated task list,","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"     * and displaying the updated UI.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"     * @param tasks the task list containing tasks","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"     * @param ui the user interface to display the task\u0027s updated status","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"     * @param storage the storage to persist the updated task list","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"     * @return a String message that is displayed in the UI after marking the task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError if the task index is out of bounds or if an error occurs during task marking or saving","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EngulfyError {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"        Task task \u003d tasks.markTask(index);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"        return ui.showTaskMarked(task);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"     * Checks if the command results in an exit action.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"     * @return false since this command does not exit the application","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"        return false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":61}},{"path":"src/main/java/engulfy/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.storage.Storage;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.Ui;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":" * Command to add a tag to a specific task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":" * This class implements the Command interface and is responsible for adding a tag to a specified task in the task list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":" * The tag is saved to the task and the task list is persisted using the Storage class.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"public class TagCommand implements Command {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"    private static final String OUT_OF_BOUND_ERROR \u003d \"Your task number is a little TOOOO big or small! try again :D\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"    private final String tag;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"     * Constructs a TagCommand to add a tag to a specific task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     * @param taskIndex The index of the task to tag.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"     * @param tag The tag to add to the task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"    public TagCommand(int taskIndex, String tag) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"     * Executes the command to add the tag to the task at the specified index.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"     * If the task index is invalid, an error is thrown.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"     * The task is updated and saved in the storage.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"     * @param tasks The list of tasks to retrieve and update the task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"     * @param ui The user interface to display responses (currently unused in this command).","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"     * @param storage The storage system to save the updated task list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"     * @return A string message indicating the success of the operation, including the tag and task index.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If the task index is invalid or other issues occur.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EngulfyError {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(OUT_OF_BOUND_ERROR);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"        tasks.get(taskIndex).addTag(tag);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"        return \"Tag added: #\" + tag + \" to task \" + (taskIndex + 1);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"     * @return false since this command does not exit the program.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"        return false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"Engulfy":60}},{"path":"src/main/java/engulfy/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.storage.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.Ui;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":" * A command to unmark a task as completed.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":" * This command unmarks a task at the specified index and updates the storage and UI accordingly.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"    private static final String NOT_NUMBER_ERROR \u003d \"This does not seem like a number to Zenitsu :/\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"    private final int index;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"     * Constructs an UnmarkCommand with the specified task index.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     * @param arguments the string representation of the task index to unmark","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError if the arguments cannot be parsed as a valid integer","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"    public UnmarkCommand(String arguments) throws EngulfyError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"        assert arguments !\u003d null : \"Arguments should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"            this.index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(NOT_NUMBER_ERROR);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"     * Executes the command by unmarking the task at the specified index, saving the updated task list,","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"     * and displaying the updated UI.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"     * @param tasks the task list containing tasks","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"     * @param ui the user interface to display the task\u0027s updated status","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"     * @param storage the storage to persist the updated task list","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"     * @return a String message that is displayed in the UI after unmarking the task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError if an error occurs during task unmarking or saving process","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EngulfyError {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"        Task task \u003d tasks.unmarkTask(index);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"        return ui.showTaskUnmarked(task);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"     * Checks if the command results in an exit action.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"     * @return false since this command does not exit the application","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"        return false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":61}},{"path":"src/main/java/engulfy/error/EngulfyError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.error;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":" * Custom exception class for errors related to the Engulfy application.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":" * This class extends {@link Exception} and is used to signal specific errors in the application.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"public class EngulfyError extends Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"     * Constructs an EngulfyError with the specified error message.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"     * @param message the detail message describing the error","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"    public EngulfyError(String message) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"        super(message);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"        assert message !\u003d null : \"Error message cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":17}},{"path":"src/main/java/engulfy/main/Engulfy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.main;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.command.Command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.parser.Parser;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import engulfy.storage.Storage;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.Ui;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":" * The main class for the Engulfy application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":" * It handles initialization, user interaction, and execution of commands.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"public class Engulfy {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"    private final Parser parser;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     * Constructs an Engulfy instance and initializes the UI, storage, and parser.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"    public Engulfy() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"        assert ui !\u003d null : \"UI must be initialized\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"        assert storage !\u003d null : \"Storage must be initialized\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"        assert parser !\u003d null : \"Parser must be initialized\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"     * Retrieves the current user interface instance.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"     * @return The current instance of the UI.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"    public Ui getUi() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"        assert ui !\u003d null : \"UI must not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"        return ui;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"     * Retrieves the current storage instance.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"     * @return The current instance of the storage.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"    public Storage getStorage() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"        assert storage !\u003d null : \"Storage must not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"        return storage;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"     * Processes the user input, parses the corresponding command, and executes it.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"     * It uses the UI, task list, and storage to perform actions and return responses.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"     * @param input The user\u0027s input to be processed.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"     * @return A response message from the executed command, which can be an","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"     *      update on task list, error message, or feedback.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If the input cannot be parsed or if an error occurs while executing the command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"            TaskList tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"            Command command \u003d parser.parse(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"        } catch (EngulfyError e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Engulfy"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Engulfy":70}},{"path":"src/main/java/engulfy/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.main;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"public class Launcher {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"     * The main entry point of the application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"     * This method serves as a workaround to avoid classpath issues by launching the JavaFX application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"     * @param args Command line arguments passed to the application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"        assert args !\u003d null : \"Command line arguments must not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Engulfy":19}},{"path":"src/main/java/engulfy/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.main;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.MainWindow;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":" * A GUI for Engulfy application using FXML.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":" * This class serves as the entry point for the JavaFX application, setting up the GUI window","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":" * and linking it with the Engulfy logic.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"    private static final String FXML_FILE_PATH \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"    private static final String APP_TITLE \u003d \"Zenitsu ⚡ \";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"    private final Engulfy engulfy \u003d new Engulfy();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"     * Initializes and displays the main window of the Engulfy application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"     * This method loads the FXML file for the main window, sets up the scene, and shows the stage.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"     * It also connects the main window controller to the Engulfy logic.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"     * @param stage The primary stage for this application, onto which the scene is set.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"        assert stage !\u003d null : \"Stage must not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"        assert engulfy !\u003d null : \"Engulfy instance must be initialized\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(FXML_FILE_PATH));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"            stage.setTitle(APP_TITLE);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"            MainWindow mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"            mainWindow.setEngulfy(engulfy);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"            stage.show();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"        } catch (EngulfyError e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Engulfy":50}},{"path":"src/main/java/engulfy/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.parser;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.command.AddDeadlineCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.command.AddEventCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.command.AddTodoCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import engulfy.command.Command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import engulfy.command.DeleteCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"import engulfy.command.ExitCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"import engulfy.command.FindCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"import engulfy.command.ListCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"import engulfy.command.MarkCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"import engulfy.command.TagCommand;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"import engulfy.command.UnmarkCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":" * A parser class to interpret user commands and return corresponding command objects.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":" * This class supports commands such as \"bye\", \"list\", \"delete\", \"mark\", \"unmark\", \"todo\", \"deadline\", and \"event\".","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"public class Parser {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"    private static final String INVALID_TASK_ERROR \u003d \"I AM SO SORRY!! \"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"            + \"But this is not something I am capable of doing for now ;-;\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"     * @param fullCommand The full input string entered by the user.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"     * @return The appropriate Command object based on the parsed input.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If the command is unrecognized.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"    public Command parse(String fullCommand) throws EngulfyError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"        assert fullCommand !\u003d null : \"Command string cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"        String[] parts \u003d splitCommand(fullCommand);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"        return createCommand(parts[0], parts.length \u003e 1 ? parts[1] : \"\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"     * Splits the given command string into command word and arguments.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"     * @param fullCommand The full input string entered by the user.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"     * @return An array where the first element is the command word and the second element is the arguments.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"    private String[] splitCommand(String fullCommand) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"        return fullCommand.split(\" \", 2);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"     * Creates and returns the appropriate Command object based on the command word and arguments.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"     * @param commandWord The command keyword extracted from user input.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"     * @param arguments The arguments associated with the command (if any).","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"     * @return A Command object corresponding to the given command word.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If the command word is unrecognized.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"    private Command createCommand(String commandWord, String arguments) throws EngulfyError {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"        return switch (commandWord) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"        case \"bye\" -\u003e new ExitCommand();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"        case \"list\" -\u003e new ListCommand();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"        case \"delete\" -\u003e new DeleteCommand(arguments);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"        case \"mark\" -\u003e new MarkCommand(arguments);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"        case \"unmark\" -\u003e new UnmarkCommand(arguments);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"        case \"todo\" -\u003e new AddTodoCommand(arguments);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"        case \"deadline\" -\u003e new AddDeadlineCommand(arguments);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"        case \"event\" -\u003e new AddEventCommand(arguments);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"        case \"find\" -\u003e new FindCommand(arguments);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"        case \"tag\" -\u003e createTagCommand(arguments);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Engulfy"},"content":"        default -\u003e throw new EngulfyError(INVALID_TASK_ERROR);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Engulfy"},"content":"        };","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Engulfy"},"content":"     * Creates and returns the TagCommand object.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Engulfy"},"content":"     * The format for tagging would be something like \"tag 1 #fun\" where 1 is the task ID and #fun is the tag.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Engulfy"},"content":"     * @param arguments The arguments for the \"tag\" command (task ID and tag).","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Engulfy"},"content":"     * @return A TagCommand object.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If the arguments are invalid.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Engulfy"},"content":"    private Command createTagCommand(String arguments) throws EngulfyError {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Engulfy"},"content":"        String[] parts \u003d arguments.split(\" \", 2);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Engulfy"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(\"Invalid tag command. Please use the format: tag \u003ctaskID\u003e \u003ctag\u003e\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Engulfy"},"content":"        String taskId \u003d parts[0];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Engulfy"},"content":"        String tag \u003d parts[1];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Engulfy"},"content":"        return new TagCommand(Integer.parseInt(taskId) - 1, tag);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":91}},{"path":"src/main/java/engulfy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.storage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import java.io.File;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"import java.util.List;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"import java.util.Set;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Deadline;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Event;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Todo;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":" * The Storage class handles loading and saving tasks to and from a file.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":" * It ensures that the task list is preserved between application sessions.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"public class Storage {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"    private static final String FILE_PATH \u003d \"data/engulfy.txt\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"    private static final String DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"     * Constructs a Storage instance.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"     * Ensures that the necessary directories and files are ready for use.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"    public Storage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"        assert FILE_PATH !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"        assert DIRECTORY_PATH !\u003d null : \"Directory path cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"     * Loads tasks from a file and returns them as a list.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If an error occurs while loading tasks.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"    public List\u003cTask\u003e load() throws EngulfyError {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"        Set\u003cTask\u003e uniqueTasks \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"            if (!ensureDirectoryExists()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"                return tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"            if (!ensureFileExists(file)) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"                return tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"            for (Task task : readTasksFromFile(file)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"                if (!uniqueTasks.contains(task)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"                    uniqueTasks.add(task);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"        return tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Engulfy"},"content":"     * Ensures that the directory for storing tasks exists.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Engulfy"},"content":"     * @return True if the directory exists or was successfully created, false otherwise.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Engulfy"},"content":"    private boolean ensureDirectoryExists() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Engulfy"},"content":"        File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Engulfy"},"content":"        if (!directory.exists() \u0026\u0026 !directory.mkdirs()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Engulfy"},"content":"            System.out.println(\"Error: Failed to create directory \" + DIRECTORY_PATH);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Engulfy"},"content":"            return false;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Engulfy"},"content":"        return true;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Engulfy"},"content":"     * Ensures that the task file exists.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Engulfy"},"content":"     * @param file The file to check.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Engulfy"},"content":"     * @return True if the file exists or was successfully created, false otherwise.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Engulfy"},"content":"     * @throws IOException If an error occurs while creating the file.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Engulfy"},"content":"    private boolean ensureFileExists(File file) throws IOException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Engulfy"},"content":"        if (!file.exists() \u0026\u0026 file.createNewFile()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Engulfy"},"content":"            System.out.println(\"File created: \" + FILE_PATH);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Engulfy"},"content":"            return false;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Engulfy"},"content":"        return true;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Engulfy"},"content":"     * Reads tasks from the given file and returns them as a list.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Engulfy"},"content":"     * @param file The file to read tasks from.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Engulfy"},"content":"     * @return A list of tasks read from the file.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Engulfy"},"content":"     * @throws IOException If an error occurs while reading the file.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Engulfy"},"content":"    private List\u003cTask\u003e readTasksFromFile(File file) throws IOException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Engulfy"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Engulfy"},"content":"        try (Scanner fileScanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Engulfy"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Engulfy"},"content":"                Task task \u003d parseTaskFromString(fileScanner.nextLine());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Engulfy"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Engulfy"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Engulfy"},"content":"                }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Engulfy"},"content":"        return tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Engulfy"},"content":"     * Saves the given task list to the storage file.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Engulfy"},"content":"     * Overwrites the existing file contents with the updated tasks.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Engulfy"},"content":"     * @param tasks the task list to save","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError if there is an error writing to the file","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Engulfy"},"content":"    public void save(TaskList tasks) throws EngulfyError {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Engulfy"},"content":"        assert tasks !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Engulfy"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH, false);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Engulfy"},"content":"            for (Task task : tasks.getAllTasks()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Engulfy"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Engulfy"},"content":"            writer.close();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Engulfy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(\"error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Engulfy"},"content":"     * Parses a task from a string representation loaded from the storage file.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Engulfy"},"content":"     * @param line the string representation of a task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Engulfy"},"content":"     * @return the corresponding Task object, or null if parsing fails","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Engulfy"},"content":"    private Task parseTaskFromString(String line) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Engulfy"},"content":"        assert line !\u003d null : \"Line cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Engulfy"},"content":"            char type \u003d line.charAt(1);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Engulfy"},"content":"            boolean isDone \u003d line.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Engulfy"},"content":"            if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Engulfy"},"content":"                String description \u003d line.substring(7);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Engulfy"},"content":"                Todo task \u003d new Todo(description);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Engulfy"},"content":"                if (isDone) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Engulfy"},"content":"                    task.markAsDone();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Engulfy"},"content":"                }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Engulfy"},"content":"                return task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Engulfy"},"content":"            } else if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Engulfy"},"content":"                int byIndex \u003d line.lastIndexOf(\"(by: \");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Engulfy"},"content":"                String description \u003d line.substring(7, byIndex - 1);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Engulfy"},"content":"                String by \u003d line.substring(byIndex + 5, line.length() - 1);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Engulfy"},"content":"                Deadline task \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Engulfy"},"content":"                if (isDone) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Engulfy"},"content":"                    task.markAsDone();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Engulfy"},"content":"                }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Engulfy"},"content":"                return task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Engulfy"},"content":"            } else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Engulfy"},"content":"                int fromIndex \u003d line.indexOf(\"(from: \");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Engulfy"},"content":"                int toIndex \u003d line.indexOf(\" to: \");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Engulfy"},"content":"                String description \u003d line.substring(7, fromIndex - 1);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Engulfy"},"content":"                String from \u003d line.substring(fromIndex + 7, toIndex);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Engulfy"},"content":"                String to \u003d line.substring(toIndex + 5, line.length() - 1);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Engulfy"},"content":"                Event task \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Engulfy"},"content":"                if (isDone) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Engulfy"},"content":"                    task.markAsDone();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Engulfy"},"content":"                }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Engulfy"},"content":"                return task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Engulfy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Engulfy"},"content":"            System.out.println(\"error parsing task: \" + line);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Engulfy"},"content":"        return null;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Engulfy":183}},{"path":"src/main/java/engulfy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":" * The Deadline class represents a task with a deadline.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":" * It extends the Task class and includes a specific deadline date and time.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"    private static final DateTimeFormatter DATETIME_FORMATTER \u003d","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"    private static final DateTimeFormatter[] ACCEPTED_FORMATTERS \u003d {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"            DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\"),","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\")","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"    };","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     * Constructs a Deadline task with the given description and deadline.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"     * @param deadline the deadline in a string format (either \"M/d/yyyy HHmm\" or \"MMM dd yyyy, h:mm a\")","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"     * @throws IllegalArgumentException if the deadline format is invalid","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"        super(description);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"        assert description !\u003d null \u0026\u0026 !description.isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"        assert deadline !\u003d null \u0026\u0026 !deadline.isEmpty() : \"Deadline cannot be null or empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"        this.deadline \u003d tryParseDeadline(deadline);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"     * Attempts to parse the deadline string into a LocalDateTime object.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"     * It tries two formats: \"M/d/yyyy HHmm\" and \"MMM dd yyyy, h:mm a\".","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"     * @param deadline the string representing the deadline","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"     * @return a LocalDateTime object representing the parsed deadline","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"     * @throws IllegalArgumentException if the deadline format is invalid","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"    private LocalDateTime tryParseDeadline(String deadline) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"        for (DateTimeFormatter formatter : ACCEPTED_FORMATTERS) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"            try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"                return LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"                continue;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"        throw new IllegalArgumentException(\"Are you sure you are in the correct timezone?: \" + deadline);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"     * Returns the string representation of the Deadline task, including the description and formatted deadline.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"     * @return a string representation of the Deadline task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"    public String toString() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"        assert deadline !\u003d null : \"Deadline should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"                super.toString(),","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"                deadline.format(DATETIME_FORMATTER));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":66}},{"path":"src/main/java/engulfy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":" * The Event class represents a task with a start and end time.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":" * It extends the Task class and includes two specific LocalDateTime objects, \u0027from\u0027 and \u0027to\u0027.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"    private static final DateTimeFormatter DATETIME_FORMATTER \u003d","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"    private static final DateTimeFormatter[] ACCEPTED_FORMATTERS \u003d {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"            DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\"),","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\")","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"    };","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     * Constructs an Event task with the given description, start time, and end time.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"     * @param from the start time in a string format (either \"M/d/yyyy HHmm\" or \"MMM dd yyyy, h:mm a\")","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"     * @param to the end time in a string format (either \"M/d/yyyy HHmm\" or \"MMM dd yyyy, h:mm a\")","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"     * @throws IllegalArgumentException if the start or end time format is invalid","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"        super(description);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"        assert description !\u003d null \u0026\u0026 !description.isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"        assert from !\u003d null \u0026\u0026 !from.isEmpty() : \"Start time cannot be null or empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"        assert to !\u003d null \u0026\u0026 !to.isEmpty() : \"End time cannot be null or empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"        this.from \u003d tryParseDateTime(from);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"        this.to \u003d tryParseDateTime(to);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"     * Attempts to parse a string representing a date-time into a LocalDateTime object.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"     * It tries two formats: \"M/d/yyyy HHmm\" and \"MMM dd yyyy, h:mm a\".","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"     * @param dateTime the string representing the date-time","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"     * @return a LocalDateTime object representing the parsed date-time","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"     * @throws IllegalArgumentException if the date-time format is invalid","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"    private LocalDateTime tryParseDateTime(String dateTime) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"        for (DateTimeFormatter formatter : ACCEPTED_FORMATTERS) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"            try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"                return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"                continue;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"        throw new IllegalArgumentException(\"Are you sure you are in the correct timezone?: \" + dateTime);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"     * Returns the string representation of the Event task, including the description,","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"     * start time, and end time in a formatted string.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"     * @return a string representation of the Event task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"    public String toString() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"        assert from !\u003d null : \"Start time should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"        assert to !\u003d null : \"End time should not be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Engulfy"},"content":"                super.toString(),","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Engulfy"},"content":"                from.format(DATETIME_FORMATTER),","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Engulfy"},"content":"                to.format(DATETIME_FORMATTER));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":71}},{"path":"src/main/java/engulfy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import java.util.Set;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":" * The Task class represents a task with a description and a completion status.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":" * It provides methods to mark the task as done or not done, and to retrieve its status.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"public class Task {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"    private final String description;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"    private boolean isDone;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"    private Set\u003cString\u003e tags;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"     * Constructs a Task with the specified description. The task is initially not done.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"        assert description !\u003d null \u0026\u0026 !description.isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"     * Adds a tag to the list of tags associated with this task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"     * @param tag the tag to be added","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"        tags.add(tag);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"     * Returns a formatted string representation of the tags associated with this task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"     * If there are no tags, an empty string is returned. Otherwise, the tags are","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"     * concatenated and prefixed with a \u0027#\u0027 symbol, separated by commas.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"     * @return a string representation of the tags, or an empty string if no tags exist","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"    public String getTagString() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"        return tags.isEmpty() ? \"\" : \"#\" + String.join(\", \", tags);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"     * Returns the status icon of the task. \"[X]\" if done, \"[ ]\" if not done.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"     * @return a string representing the task\u0027s status icon","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Engulfy"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Engulfy"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Engulfy"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Engulfy"},"content":"        return this.description;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Engulfy"},"content":"     * Returns the task\u0027s completion status.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Engulfy"},"content":"     * @return true if the task is done, false otherwise","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Engulfy"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Engulfy"},"content":"        return isDone;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Engulfy"},"content":"     * Returns the string representation of the task, including the status icon and description.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Engulfy"},"content":"     * @return a string representation of the task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Engulfy"},"content":"    public String toString() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Engulfy"},"content":"        return getStatusIcon() + \" \" + description + \"    \" + getTagString();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":95}},{"path":"src/main/java/engulfy/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import java.util.List;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":" * The TaskList class manages a list of tasks and provides methods to add, delete, mark, unmark tasks.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"public class TaskList {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"    private static final String OUT_OF_BOUND_ERROR \u003d \"Your task number is a little TOOOO big or small! try again :D\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"    private static final String DELETE_ERROR \u003d \"Your task number is not in my database to be deleted! try again :D\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"     * Constructs a new TaskList with no tasks.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"     * Constructs a new TaskList with the specified list of tasks.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"     * @param tasks the list of tasks to initialize the TaskList","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"        assert tasks !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"     * @param task the task to add","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"     * Deletes a task by its index in the TaskList.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"     * @return the deleted task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError if the index is out of bounds","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"    public Task deleteTask(int index) throws EngulfyError {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"            return tasks.remove(index - 1);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(DELETE_ERROR);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"     * Marks a task as done by its index.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"     * @param index the index of the task to mark","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"     * @return the marked task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError if the index is out of bounds","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"    public Task markTask(int index) throws EngulfyError {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Engulfy"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Engulfy"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Engulfy"},"content":"            return task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Engulfy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(OUT_OF_BOUND_ERROR);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Engulfy"},"content":"     * Unmarks a task by its index.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Engulfy"},"content":"     * @param index the index of the task to unmark","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Engulfy"},"content":"     * @return the unmarked task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError if the index is out of bounds","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Engulfy"},"content":"    public Task unmarkTask(int index) throws EngulfyError {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Engulfy"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Engulfy"},"content":"            task.markAsNotDone();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Engulfy"},"content":"            return task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Engulfy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Engulfy"},"content":"            throw new EngulfyError(OUT_OF_BOUND_ERROR);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Engulfy"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Engulfy"},"content":"     * @return true if the list has no tasks, false otherwise","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Engulfy"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Engulfy"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Engulfy"},"content":"     * Returns all tasks in the TaskList.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Engulfy"},"content":"     * @return a list of all tasks","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Engulfy"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Engulfy"},"content":"        return tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Engulfy"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Engulfy"},"content":"     * @return the size of the TaskList","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Engulfy"},"content":"    public int size() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Engulfy"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Engulfy"},"content":"     * Retrieves the task at the specified index from the task list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Engulfy"},"content":"     * @param index the position of the task in the list (0-based index)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Engulfy"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Engulfy"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Engulfy"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Engulfy":128}},{"path":"src/main/java/engulfy/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":" * Represents a Todo task in the system.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"     * @param description the description of the Todo task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"        super(description);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"        assert description !\u003d null \u0026\u0026 !description.isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     * @return a string representing the Todo task","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"    public String toString() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Engulfy":26}},{"path":"src/main/java/engulfy/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.ui;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":" * This class is used for displaying messages in a conversation, with the speaker\u0027s image","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":" * and text displayed in a GUI using JavaFX.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"    private static final String FXML_PATH \u003d \"/view/DialogBox.fxml\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"    @FXML","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"    @FXML","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"     * Constructs a DialogBox instance with the specified text and image.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"     * The dialog box is initialized by loading the corresponding FXML layout.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"     * @param text the message text to display in the dialog box","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"     * @param img the image to display in the ImageView","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(FXML_PATH));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"        assert dialog !\u003d null : \"Dialog label should not be null after loading FXML.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"        assert displayPicture !\u003d null : \"Display picture should not be null after loading FXML.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"     * Flips the dialog box such that the ImageView is on the left and the text is on the right.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"     * This is used to reverse the default layout of the dialog box when displaying a response from Duke.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"    private void flip() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"        assert tmp.size() \u003d\u003d 2 : \"DialogBox should have exactly two children (Label and ImageView).\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Engulfy"},"content":"     * Creates a dialog box for the user with the specified text and image.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Engulfy"},"content":"     * @param text the message text to display in the dialog box","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Engulfy"},"content":"     * @param img the image to display in the ImageView","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Engulfy"},"content":"     * @return a DialogBox instance for the user","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Engulfy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Engulfy"},"content":"        assert text !\u003d null : \"User dialog text should not be null.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Engulfy"},"content":"        assert img !\u003d null : \"User dialog image should not be null.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Engulfy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Engulfy"},"content":"     * Creates a dialog box for Engulfy with the specified text and image.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Engulfy"},"content":"     * The dialog box is flipped so that the image is on the left and text on the right.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Engulfy"},"content":"     * @param text the message text to display in the dialog box","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Engulfy"},"content":"     * @param img the image to display in the ImageView","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Engulfy"},"content":"     * @return a DialogBox instance for Engulfy","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Engulfy"},"content":"    public static DialogBox getZenitsuDialog(String text, Image img) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Engulfy"},"content":"        assert text !\u003d null : \"Zenitsu dialog text should not be null.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Engulfy"},"content":"        assert img !\u003d null : \"Zenitsu dialog image should not be null.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Engulfy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Engulfy"},"content":"        db.flip();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Engulfy"},"content":"        return db;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Engulfy":94}},{"path":"src/main/java/engulfy/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.ui;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import engulfy.main.Engulfy;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":" * Controller for the main GUI of the Engulfy application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":" * This class handles user input and displays dialog boxes for communication between the user and Engulfy.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"    private static final String USER_IMAGE_PATH \u003d \"/images/DaUser.png\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"    private static final String ENGULFY_IMAGE_PATH \u003d \"/images/DaEngulfy.png\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"    private static final String DEFAULT_ERROR_MESSAGE \u003d \"Zenitsu cannot handle this!\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"    @FXML","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"    @FXML","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"    @FXML","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"    private Engulfy engulfy;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream((USER_IMAGE_PATH)));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"    private Image engulfyImage \u003d new Image(this.getClass().getResourceAsStream((ENGULFY_IMAGE_PATH)));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"     * Initializes the main window by binding the scroll pane to the height of the dialog container.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"     * This ensures that the scroll pane automatically scrolls to the bottom when new messages are added.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"    @FXML","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"        assert scrollPane !\u003d null : \"ScrollPane should not be null.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"        assert dialogContainer !\u003d null : \"Dialog container should not be null.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"        assert userInput !\u003d null : \"User input field should not be null.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"     * Injects the Engulfy instance into the main window and displays the welcome message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"     * @param e the Engulfy instance to be injected","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError if there is an error in setting up the Engulfy instance","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"    public void setEngulfy(Engulfy e) throws EngulfyError {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"        assert e !\u003d null : \"Engulfy instance should not be null.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"        engulfy \u003d e;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"        showWelcomeMessage();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"     * Displays a welcome message in the dialog container.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"     * If there is an error loading the tasks, an error message is displayed instead.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"        TaskList tasks;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"            tasks \u003d new TaskList(engulfy.getStorage().load());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Engulfy"},"content":"            String errorMessage \u003d engulfy.getUi().showLoadingError();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Engulfy"},"content":"            dialogContainer.getChildren().add(DialogBox.getZenitsuDialog(errorMessage, engulfyImage));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Engulfy"},"content":"        String welcomeMessage \u003d engulfy.getUi().showWelcome(tasks);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Engulfy"},"content":"        assert welcomeMessage !\u003d null : \"Welcome message should not be null.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Engulfy"},"content":"        dialogContainer.getChildren().add(DialogBox.getZenitsuDialog(welcomeMessage, engulfyImage));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Engulfy"},"content":"     * Handles the user\u0027s input when the send button is clicked.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Engulfy"},"content":"     * It creates two dialog boxes: one for the user\u0027s input and one for Engulfy\u0027s response, and appends them","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Engulfy"},"content":"     * to the dialog container. After processing the input, the text field is cleared.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Engulfy"},"content":"    @FXML","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Engulfy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Engulfy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Engulfy"},"content":"        assert input !\u003d null : \"User input should not be null.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Engulfy"},"content":"        String response;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Engulfy"},"content":"            response \u003d engulfy.getResponse(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Engulfy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Engulfy"},"content":"            response \u003d engulfy.getUi().showError(DEFAULT_ERROR_MESSAGE);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Engulfy"},"content":"        assert response !\u003d null : \"Engulfy\u0027s response should not be null.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Engulfy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Engulfy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Engulfy"},"content":"                DialogBox.getZenitsuDialog(response, engulfyImage)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Engulfy"},"content":"        );","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Engulfy"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Engulfy":100}},{"path":"src/main/java/engulfy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.ui;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import java.util.List;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":" * Represents the UI component that generates messages for the GUI.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":" * This class handles the generation of different messages for user interaction, such as welcome, goodbye,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":" * task list display, error messages, and task-related notifications.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"public class Ui {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"    private static final String WELCOME_MSG \u003d \"Hello there! I\u0027m ZENITSUUU!!\\nHow can I assist you?\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"    private static final String GOODBYE_MSG \u003d \"Awww, will Zenitsu see you again soon?\\n\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"            + \"DON\u0027T GIVE UP!!!\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"    private static final String LOAD_ERROR_MSG \u003d \"Zenitsu can\u0027t seem to load the file ;-; let\u0027s start again.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"     * Generates a welcome message along with the current task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"     * @param tasks The list of tasks to display","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"     * @return A welcome message followed by the task list, or a message indicating no tasks are saved.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"    public String showWelcome(TaskList tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"        assert tasks !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"        String taskMessage \u003d tasks.isEmpty() ? \"No saved tasks yet!\" : showTaskList(tasks.getAllTasks());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"        return (WELCOME_MSG + \"\\n\" + taskMessage).trim();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"     * Generates a goodbye message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"     * @return A goodbye message","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"    public String showGoodbye() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"        return GOODBYE_MSG;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"     * @param tasks List of tasks to display","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"     * @return A string representation of the task list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"    public String showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"        assert tasks !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Your tasks are saved with Zenitsu:\\n\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"            sb.append(\"    \").append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"     * Displays an error message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"     * @param message The error message to display","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"     * @return A string representing the error message","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"    public String showError(String message) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"        return \"OOPS! \" + message;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"     * Generates a message when tasks cannot be loaded.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Engulfy"},"content":"     * @return A loading error message","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Engulfy"},"content":"    public String showLoadingError() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Engulfy"},"content":"        return LOAD_ERROR_MSG;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Engulfy"},"content":"     * Displays a message when a task is added successfully.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Engulfy"},"content":"     * @param task The task that was added","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Engulfy"},"content":"     * @param totalTasks The total number of tasks after adding the new task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Engulfy"},"content":"     * @return A message indicating the task was added and showing the total number of tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Engulfy"},"content":"    public String showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Engulfy"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Engulfy"},"content":"        assert totalTasks \u003e\u003d 0 : \"Total tasks cannot be negative\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Engulfy"},"content":"        return \"Keep up the momentum! Continue adding more tasks!\\n\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Engulfy"},"content":"                + \"    \" + task + \"\\n\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Engulfy"},"content":"                + String.format(\"Now you have %d %s in the list.%n\", totalTasks, totalTasks \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Engulfy"},"content":"     * Displays a message when a task is removed successfully.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Engulfy"},"content":"     * @param task The task that was removed","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Engulfy"},"content":"     * @param totalTasks The total number of tasks after removing the task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Engulfy"},"content":"     * @return A message indicating the task was removed and showing the remaining tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Engulfy"},"content":"    public String showTaskRemoved(Task task, int totalTasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Engulfy"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Engulfy"},"content":"        assert totalTasks \u003e\u003d 0 : \"Total tasks cannot be negative\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Engulfy"},"content":"        return \"LET ZENITSU SLASH THAT TASK AWAY FOR YOU :D\\n\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Engulfy"},"content":"                + \"    \" + task + \"\\n\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Engulfy"},"content":"                + String.format(\"Now you have %d %s in the list.%n\", totalTasks, totalTasks \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Engulfy"},"content":"     * Displays a message when a task is marked as done.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Engulfy"},"content":"     * @param task The task that was marked as done","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Engulfy"},"content":"     * @return A message indicating the task was marked as done","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Engulfy"},"content":"    public String showTaskMarked(Task task) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Engulfy"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Engulfy"},"content":"        return \"NICEE! Keep up the good work!\\n\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Engulfy"},"content":"                + \"    \" + task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Engulfy"},"content":"     * Displays a message when a task is unmarked (set as not done).","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Engulfy"},"content":"     * @param task The task that was unmarked","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Engulfy"},"content":"     * @return A message indicating the task was unmarked","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Engulfy"},"content":"    public String showTaskUnmarked(Task task) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Engulfy"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Engulfy"},"content":"        return \"DON\u0027T GIVE UP! Zenitsu believes in you!\\n\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Engulfy"},"content":"                + \"    \" + task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Engulfy":128}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialogbox.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"                \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"                \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"            \u003cfont\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"                \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"            \u003c/font\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"            \u003cclip\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"                \u003cCircle radius\u003d\"50.0\" centerX\u003d\"50.0\" centerY\u003d\"50.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"            \u003ceffect\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"                \u003cDropShadow color\u003d\"black\" radius\u003d\"5\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":"            \u003c/effect\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Engulfy":36}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" stylesheets\u003d\"@../css/main.css\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"engulfy.ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"how can i help you?\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" styleClass\u003d\"zenitsu-button\"/\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Engulfy":19}},{"path":"src/test/java/engulfy/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"import java.io.File;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"import java.util.List;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"import engulfy.storage.Storage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Todo;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.Ui;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":" * Unit tests for the MarkCommand class, which marks tasks as done.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"class MarkCommandTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"    private File tempFile;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"     * Set up the environment for testing by initializing necessary components.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"     * Redirects System.out to capture output for testing.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"     * @throws IOException If an error occurs while creating a temporary file.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"        tempFile \u003d Files.createTempFile(\"test\", \".txt\").toFile();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"        tempFile.deleteOnExit();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"        storage \u003d new Storage() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"            @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"            public List\u003cTask\u003e load() throws EngulfyError {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"                return List.of();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"            @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"            public void save(TaskList tasks) throws EngulfyError {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"                try (FileWriter writer \u003d new FileWriter(tempFile)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"                    for (Task task : tasks.getAllTasks()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Engulfy"},"content":"                        writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Engulfy"},"content":"                    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Engulfy"},"content":"                } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Engulfy"},"content":"                    throw new EngulfyError(\"error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Engulfy"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Engulfy"},"content":"        };","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Engulfy"},"content":"        taskList.addTask(new Todo(\"task 1\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Engulfy"},"content":"        taskList.addTask(new Todo(\"task 2\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Engulfy"},"content":"        taskList.addTask(new Todo(\"task 3\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Engulfy"},"content":"     * Clean up resources after each test method.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Engulfy"},"content":"     * Restores the original System.out and deletes the temporary file.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Engulfy"},"content":"    @AfterEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Engulfy"},"content":"    void tearDown() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Engulfy"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Engulfy"},"content":"        if (tempFile !\u003d null \u0026\u0026 tempFile.exists()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Engulfy"},"content":"            tempFile.delete();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Engulfy"},"content":"     * Tests that the MarkCommand constructor handles valid input correctly.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Engulfy"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Engulfy"},"content":"    void testConstructorValidInput() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Engulfy"},"content":"        assertDoesNotThrow(() -\u003e new MarkCommand(\"1\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Engulfy"},"content":"     * Tests that the MarkCommand constructor throws an exception for invalid input.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Engulfy"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Engulfy"},"content":"    void testConstructorInvalidInput() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Engulfy"},"content":"        EngulfyError exception \u003d assertThrows(EngulfyError.class, () -\u003e new MarkCommand(\"abc\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Engulfy"},"content":"        assertEquals(\"This does not seem like a number to Engulfy :/\", exception.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Engulfy"},"content":"     * Tests that the execute method marks a task as done successfully.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If an error occurs during task marking.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Engulfy"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Engulfy"},"content":"    void testExecuteMarkTaskSuccessfully() throws EngulfyError {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Engulfy"},"content":"        MarkCommand command \u003d new MarkCommand(\"2\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Engulfy"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Engulfy"},"content":"        Task markedTask \u003d taskList.getAllTasks().get(1);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Engulfy"},"content":"        assertTrue(markedTask.isDone());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Engulfy"},"content":"        String expectedOutput \u003d \"NICEE! Keep up the good work!\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Engulfy"},"content":"                + \"    \" + markedTask;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Engulfy"},"content":"        String actualOutput \u003d outContent.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Engulfy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Engulfy"},"content":"     * Tests that the execute method throws an exception when the task index is invalid.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Engulfy"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Engulfy"},"content":"    void testExecuteInvalidIndex() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Engulfy"},"content":"        MarkCommand command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Engulfy"},"content":"            command \u003d new MarkCommand(\"10\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Engulfy"},"content":"        } catch (EngulfyError e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Engulfy"},"content":"            fail(\"Unexpected EngulfyError during MarkCommand creation: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Engulfy"},"content":"            return;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Engulfy"},"content":"        EngulfyError exception \u003d assertThrows(EngulfyError.class, () -\u003e command.execute(taskList, ui, storage));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Engulfy"},"content":"        assertEquals(\"Your task number is a little TOOOO big or small! try again :D\", exception.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Engulfy"},"content":"     * Tests that the isExit method returns false for MarkCommand (indicating it does not exit the program).","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Engulfy"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Engulfy"},"content":"    void testIsExit() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Engulfy"},"content":"        MarkCommand command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Engulfy"},"content":"            command \u003d new MarkCommand(\"1\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Engulfy"},"content":"        } catch (EngulfyError e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Engulfy"},"content":"            fail(\"Unexpected EngulfyError during MarkCommand creation: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Engulfy"},"content":"            return;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Engulfy"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Engulfy":163}},{"path":"src/test/java/engulfy/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"package engulfy.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Engulfy"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Engulfy"},"content":"import java.io.File;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Engulfy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Engulfy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Engulfy"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Engulfy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Engulfy"},"content":"import java.util.List;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Engulfy"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Engulfy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Engulfy"},"content":"import engulfy.error.EngulfyError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Engulfy"},"content":"import engulfy.storage.Storage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.TaskList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Engulfy"},"content":"import engulfy.task.Todo;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Engulfy"},"content":"import engulfy.ui.Ui;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Engulfy"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Engulfy"},"content":" * Unit tests for the UnmarkCommand class, which marks tasks as not done.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Engulfy"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Engulfy"},"content":"class UnmarkCommandTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Engulfy"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Engulfy"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Engulfy"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Engulfy"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Engulfy"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Engulfy"},"content":"    private File tempFile;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Engulfy"},"content":"     * Set up the environment for testing by initializing necessary components.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Engulfy"},"content":"     * Redirects System.out to capture output for testing.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Engulfy"},"content":"     * @throws IOException If an error occurs while creating a temporary file.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Engulfy"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Engulfy"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Engulfy"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Engulfy"},"content":"        tempFile \u003d Files.createTempFile(\"test\", \".txt\").toFile();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Engulfy"},"content":"        tempFile.deleteOnExit();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Engulfy"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Engulfy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Engulfy"},"content":"        storage \u003d new Storage() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Engulfy"},"content":"            @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Engulfy"},"content":"            public List\u003cTask\u003e load() throws EngulfyError {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Engulfy"},"content":"                return List.of();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Engulfy"},"content":"            @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Engulfy"},"content":"            public void save(TaskList tasks) throws EngulfyError {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Engulfy"},"content":"                try (FileWriter writer \u003d new FileWriter(tempFile)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Engulfy"},"content":"                    for (Task task : tasks.getAllTasks()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Engulfy"},"content":"                        writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Engulfy"},"content":"                    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Engulfy"},"content":"                } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Engulfy"},"content":"                    throw new EngulfyError(\"error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Engulfy"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Engulfy"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Engulfy"},"content":"        };","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Engulfy"},"content":"        taskList.addTask(new Todo(\"task 1\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Engulfy"},"content":"        taskList.addTask(new Todo(\"task 2\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Engulfy"},"content":"        taskList.addTask(new Todo(\"task 3\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Engulfy"},"content":"        for (Task task : taskList.getAllTasks()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Engulfy"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Engulfy"},"content":"     * Clean up resources after each test method.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Engulfy"},"content":"     * Restores the original System.out and deletes the temporary file.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Engulfy"},"content":"    @AfterEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Engulfy"},"content":"    void tearDown() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Engulfy"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Engulfy"},"content":"        if (tempFile !\u003d null \u0026\u0026 tempFile.exists()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Engulfy"},"content":"            tempFile.delete();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Engulfy"},"content":"     * Tests that the UnmarkCommand constructor handles valid input correctly.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Engulfy"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Engulfy"},"content":"    void testConstructorValidInput() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Engulfy"},"content":"        assertDoesNotThrow(() -\u003e new UnmarkCommand(\"1\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Engulfy"},"content":"     * Tests that the UnmarkCommand constructor throws an exception for invalid input.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Engulfy"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Engulfy"},"content":"    void testConstructorInvalidInput() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Engulfy"},"content":"        EngulfyError exception \u003d assertThrows(EngulfyError.class, () -\u003e new UnmarkCommand(\"abc\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Engulfy"},"content":"        assertEquals(\"This does not seem like a number to Engulfy :/\", exception.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Engulfy"},"content":"     * Tests that the execute method marks a task as not done successfully.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Engulfy"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Engulfy"},"content":"     * @throws EngulfyError If an error occurs during task unmarking.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Engulfy"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Engulfy"},"content":"    void testExecuteUnmarkTaskSuccessfully() throws EngulfyError {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Engulfy"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(\"2\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Engulfy"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Engulfy"},"content":"        Task unmarkedTask \u003d taskList.getAllTasks().get(1);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Engulfy"},"content":"        assertFalse(unmarkedTask.isDone());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Engulfy"},"content":"        String expectedOutput \u003d \"Aww, it\u0027s ok! You got this!\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Engulfy"},"content":"                + \"    \" + unmarkedTask;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Engulfy"},"content":"        String actualOutput \u003d outContent.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Engulfy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Engulfy"},"content":"     * Tests that the execute method throws an exception when the task index is invalid.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Engulfy"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Engulfy"},"content":"    void testExecuteInvalidIndex() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Engulfy"},"content":"        UnmarkCommand command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Engulfy"},"content":"            command \u003d new UnmarkCommand(\"10\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Engulfy"},"content":"        } catch (EngulfyError e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Engulfy"},"content":"            fail(\"Unexpected EngulfyError during UnmarkCommand creation: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Engulfy"},"content":"            return;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Engulfy"},"content":"        EngulfyError exception \u003d assertThrows(EngulfyError.class, () -\u003e command.execute(taskList, ui, storage));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Engulfy"},"content":"        assertEquals(\"Your task number is a little TOOOO big or small! try again :D\", exception.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Engulfy"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Engulfy"},"content":"     * Tests that the isExit method returns false for UnmarkCommand (indicating it does not exit the program).","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Engulfy"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Engulfy"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Engulfy"},"content":"    void testIsExit() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Engulfy"},"content":"        UnmarkCommand command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Engulfy"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Engulfy"},"content":"            command \u003d new UnmarkCommand(\"1\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Engulfy"},"content":"        } catch (EngulfyError e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Engulfy"},"content":"            fail(\"Unexpected EngulfyError during UnmarkCommand creation: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Engulfy"},"content":"            return;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Engulfy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Engulfy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Engulfy"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Engulfy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Engulfy"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Engulfy":164}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Engulfy"},"content":"todo borrow book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Engulfy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Engulfy"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Engulfy"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Engulfy"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Engulfy"},"content":"unmark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Engulfy"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Engulfy":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Engulfy"},"content":"java -classpath ..\\bin Engulfy.Command.Engulfy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Engulfy":1,"-":20}}]
