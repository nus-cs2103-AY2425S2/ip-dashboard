[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"    implementation group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.13\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"    mainClass.set(\"Launcher\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darrenchooji"},"content":"    archiveFileName \u003d \u0027fiona.jar\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darrenchooji"},"content":"checkstyle {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darrenchooji"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"darrenchooji":15,"-":38}},{"path":"data/fiona.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"T | 0 | CS2103T iP","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"T | 0 | CS2103T iP","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"E | 0 | CSA Interview | 2025-02-20 1400 | 2025-02-20 1500","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"D | 0 | CS3230 Assignment 3 | 2025-02-16 2359","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"darrenchooji":4}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darrenchooji"},"content":"    private void flip() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darrenchooji"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darrenchooji"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darrenchooji"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darrenchooji"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darrenchooji"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darrenchooji"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darrenchooji"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darrenchooji"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darrenchooji"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darrenchooji"},"content":"        db.flip();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darrenchooji"},"content":"        return db;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"darrenchooji":59}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"public class Launcher {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"darrenchooji":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"import fiona.command.Fiona;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"    private Fiona fiona \u003d new Fiona(\"./data/fiona.txt\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"            // inject the Duke instance","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(fiona);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"            stage.show();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"darrenchooji":31}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"import fiona.command.Fiona;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"    private Fiona fiona;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"    private Image fionaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"    /** Injects the Duke instance and displays welcome message. */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"    public void setDuke(Fiona f) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"        fiona \u003d f;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"        String welcomeMessage \u003d fiona.getWelcomeMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"                DialogBox.getDukeDialog(welcomeMessage, fionaImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"     * Initializes the GUI.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darrenchooji"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darrenchooji"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darrenchooji"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darrenchooji"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darrenchooji"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darrenchooji"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darrenchooji"},"content":"        String response \u003d fiona.getResponse(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darrenchooji"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darrenchooji"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darrenchooji"},"content":"                DialogBox.getDukeDialog(response, fionaImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darrenchooji"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darrenchooji"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"darrenchooji":58}},{"path":"src/main/java/fiona/command/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":" * The {@code Action} enum represents the different types of commands","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":" * that can be executed in the Fiona chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"public enum Action {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"    /** Represents the action to add a \"todo\" task. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"    TODO,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"    /** Represents the action to add a \"deadline\" task. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"    /** Represents the action to add an \"event\" task. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"    EVENT,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"    /** Represents the action to list all tasks. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"    LIST,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"    /** Represents the action to mark a task as completed. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"    MARK,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"    /** Represents the action to unmark a task (mark as not done). */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"    UNMARK,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"    /** Represents the action to delete a task. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"    DELETE,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"    /** Represents the action to exit the program. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"    BYE,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"    /** Represents the action to find tasks based on a date. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"    FIND,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"    /** Represents the action to find tasks based on keyword(s). */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"    FIND_KEYWORD,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"    /** Represents an unknown or invalid action. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"    UNKNOWN;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darrenchooji"},"content":"     * Converts a string into an {@code Action} enum value.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darrenchooji"},"content":"     * If the provided string does not match any known action, {@code UNKNOWN} is returned.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darrenchooji"},"content":"     * @param action The string representation of an action.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darrenchooji"},"content":"     * @return The corresponding {@code Action} enum value, or {@code UNKNOWN} if invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darrenchooji"},"content":"    public static Action fromString(String action) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darrenchooji"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darrenchooji"},"content":"            return Action.valueOf(action.toUpperCase());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darrenchooji"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darrenchooji"},"content":"            return UNKNOWN;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"darrenchooji":56}},{"path":"src/main/java/fiona/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":" * The {@code Command} class represents a user command in the Fiona chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":" * It encapsulates an {@code Action} and any associated arguments.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"public class Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"    /** The action associated with the command. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"    private Action action;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"    /** The arguments provided with the command. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"    private String args;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"     * Constructs a {@code Command} object with the specified action and arguments.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"     * @param action The action to be performed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"     * @param args The arguments associated with the action, if any.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"    public Command(Action action, String args) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"        this.action \u003d action;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"        this.args \u003d args;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"     * Returns the action associated with this command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"     * @return The {@code Action} of the command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"    public Action getAction() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"        return action;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"     * Returns the arguments associated with this command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"     * @return The arguments as a string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"    public String getArgs() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"        return args;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"darrenchooji":42}},{"path":"src/main/java/fiona/command/Fiona.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"import java.util.List;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"import fiona.task.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"import fiona.task.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"import fiona.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"import fiona.task.Todo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":" * The {@code Fiona} class represents a chatbot that helps users manage tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":" * It supports adding, listing, marking, unmarking, deleting, and finding tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":" * Tasks can be of type {@code Todo}, {@code Deadline}, or {@code Event}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"public class Fiona {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"     * Constructs a {@code Fiona} chatbot that loads tasks from the specified file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"    public Fiona(String filePath) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"            ui.showWelcome();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"            listTasks();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darrenchooji"},"content":"        ui.showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darrenchooji"},"content":"     * Constructs a {@code Fiona} chatbot with the given {@code Storage}, {@code TaskList}, and {@code Ui} components.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darrenchooji"},"content":"     * This constructor is used for testing.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darrenchooji"},"content":"     * @param storage The storage system for saving and loading tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darrenchooji"},"content":"     * @param tasks   The task list containing the user\u0027s tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darrenchooji"},"content":"     * @param ui      The user interface for interaction.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darrenchooji"},"content":"    public Fiona(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darrenchooji"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darrenchooji"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darrenchooji"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darrenchooji"},"content":"     * Runs the chatbot. It continuously processes user commands until the \"bye\" command is given.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darrenchooji"},"content":"    public void run() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darrenchooji"},"content":"        while (true) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darrenchooji"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darrenchooji"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darrenchooji"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darrenchooji"},"content":"                Action action \u003d command.getAction();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darrenchooji"},"content":"                if (action \u003d\u003d Action.BYE) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darrenchooji"},"content":"                    ui.showBye();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darrenchooji"},"content":"                    break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darrenchooji"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darrenchooji"},"content":"                ui.showLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darrenchooji"},"content":"                handleCommand(command);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darrenchooji"},"content":"                ui.showLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darrenchooji"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darrenchooji"},"content":"                ui.showMessage(\"Error reading input: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darrenchooji"},"content":"            } catch (FionaException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darrenchooji"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darrenchooji"},"content":"                ui.showLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darrenchooji"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darrenchooji"},"content":"     * Handles the given user command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darrenchooji"},"content":"     * @param command The command to process.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If any command format is invalid.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darrenchooji"},"content":"     * @throws IOException    If there is an error accessing the specified file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darrenchooji"},"content":"    private void handleCommand(Command command) throws FionaException, IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darrenchooji"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darrenchooji"},"content":"            runAction(command.getAction(), command.getArgs());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darrenchooji"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"The task number you specified must be a valid integer!\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darrenchooji"},"content":"     * Executes the appropriate action based on the given Action and args.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darrenchooji"},"content":"     * @param action The Action to perform (e.g., TODO, LIST, etc.).","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darrenchooji"},"content":"     * @param args   The arguments passed to that action.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the command format is invalid.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darrenchooji"},"content":"     * @throws IOException    If there is an error accessing the file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darrenchooji"},"content":"    private void runAction(Action action, String args) throws FionaException, IOException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darrenchooji"},"content":"        switch (action) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darrenchooji"},"content":"        case TODO:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"darrenchooji"},"content":"            addTodo(args);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"darrenchooji"},"content":"            break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"darrenchooji"},"content":"        case DEADLINE:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"darrenchooji"},"content":"            addDeadline(args);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"darrenchooji"},"content":"            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"darrenchooji"},"content":"        case EVENT:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"darrenchooji"},"content":"            addEvent(args);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"darrenchooji"},"content":"            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"darrenchooji"},"content":"        case LIST:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"darrenchooji"},"content":"            listTasks();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"darrenchooji"},"content":"            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"darrenchooji"},"content":"        case MARK:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"darrenchooji"},"content":"            markTask(args);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"darrenchooji"},"content":"            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"darrenchooji"},"content":"        case UNMARK:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"darrenchooji"},"content":"            unmarkTask(args);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"darrenchooji"},"content":"            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"darrenchooji"},"content":"        case DELETE:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"darrenchooji"},"content":"            deleteTask(args);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"darrenchooji"},"content":"            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"darrenchooji"},"content":"        case FIND:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"darrenchooji"},"content":"            findTasks(args);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"darrenchooji"},"content":"            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"darrenchooji"},"content":"        case FIND_KEYWORD:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"darrenchooji"},"content":"            findTasksByKeyword(args);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"darrenchooji"},"content":"            break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"darrenchooji"},"content":"        default:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"darrenchooji"},"content":"     * Adds a new {@code Todo} task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"darrenchooji"},"content":"     * @param args The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the description is empty.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"darrenchooji"},"content":"     * @throws IOException    If there is an error saving to the specified file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"darrenchooji"},"content":"    private void addTodo(String args) throws FionaException, IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"darrenchooji"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"darrenchooji"},"content":"        Task todo \u003d new Todo(args);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"darrenchooji"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"darrenchooji"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(todo.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"darrenchooji"},"content":"     * Adds a new {@code Deadline} task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"darrenchooji"},"content":"     * @param args The task description and deadline, formatted as \"description /by deadline\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the input format is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"darrenchooji"},"content":"     * @throws IOException    If there is an error saving to the specified file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"darrenchooji"},"content":"    private void addDeadline(String args) throws FionaException, IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"darrenchooji"},"content":"        if (!args.contains(\"/by\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"The description of a deadline must include a \u0027/by\u0027 clause.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"darrenchooji"},"content":"        String[] parts \u003d args.split(\"/by\", 2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"darrenchooji"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"Invalid format for deadline. Use: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"darrenchooji"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"darrenchooji"},"content":"        String deadline \u003d parts[1].trim();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"darrenchooji"},"content":"        Task deadlineTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"darrenchooji"},"content":"        tasks.add(deadlineTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"darrenchooji"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(deadlineTask.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"darrenchooji"},"content":"     * Adds a new {@code Event} task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"darrenchooji"},"content":"     * @param args The task description, from, and to, formatted as \"description \\from from \\to to\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the input format is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"darrenchooji"},"content":"     * @throws IOException    If there is an error saving to the specified file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"darrenchooji"},"content":"    private void addEvent(String args) throws FionaException, IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"darrenchooji"},"content":"        if (!args.contains(\"/from\") || !args.contains(\"/to\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"The description of an event must include \u0027/from\u0027 and \u0027/to\u0027 clauses.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"darrenchooji"},"content":"        String[] fromSplit \u003d args.split(\"/from\", 2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"darrenchooji"},"content":"        if (fromSplit.length \u003c 2 || fromSplit[0].trim().isEmpty() || fromSplit[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"Invalid format for event. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"darrenchooji"},"content":"        String description \u003d fromSplit[0].trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"darrenchooji"},"content":"        String[] toSplit \u003d fromSplit[1].split(\"/to\", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"darrenchooji"},"content":"        if (toSplit.length \u003c 2 || toSplit[0].trim().isEmpty() || toSplit[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"Invalid format for event. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"darrenchooji"},"content":"        String from \u003d toSplit[0].trim();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"darrenchooji"},"content":"        String to \u003d toSplit[1].trim();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"darrenchooji"},"content":"        Task event \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"darrenchooji"},"content":"        tasks.add(event);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"darrenchooji"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(event.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"darrenchooji"},"content":"     * Lists all tasks currently stored.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"darrenchooji"},"content":"    private void listTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"darrenchooji"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"darrenchooji"},"content":"            ui.showMessage(\"Your task list is empty!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"darrenchooji"},"content":"        } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"darrenchooji"},"content":"            ui.showMessage(\"Here are your existing tasks:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"darrenchooji"},"content":"            List\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"darrenchooji"},"content":"            java.util.concurrent.atomic.AtomicInteger counter \u003d new java.util.concurrent.atomic.AtomicInteger(1);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"darrenchooji"},"content":"            taskList.forEach(task -\u003e {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"darrenchooji"},"content":"                ui.showMessage(counter.getAndIncrement() + \". \" + task);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"darrenchooji"},"content":"            });","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"darrenchooji"},"content":"     * Marks a task as completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"darrenchooji"},"content":"     * @param args The task number to mark.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the task number is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"darrenchooji"},"content":"     * @throws IOException    If there is an error saving to specified file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"darrenchooji"},"content":"    private void markTask(String args) throws FionaException, IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"darrenchooji"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"You must specify a valid task number to mark as done.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"darrenchooji"},"content":"        int id \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"darrenchooji"},"content":"        Task task \u003d tasks.mark(id);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"darrenchooji"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(task.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"darrenchooji"},"content":"     * Unmarks a task as not completed yet.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"darrenchooji"},"content":"     * @param args The task number to mark.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the task number is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"darrenchooji"},"content":"     * @throws IOException    If there is an error saving to specified file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"darrenchooji"},"content":"    private void unmarkTask(String args) throws FionaException, IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"darrenchooji"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"You must specify a valid task number to mark as not done yet.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"darrenchooji"},"content":"        int id \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"darrenchooji"},"content":"        Task task \u003d tasks.unmark(id);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"darrenchooji"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(task.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"darrenchooji"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"darrenchooji"},"content":"     * @param args The task number to delete.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the task number is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"darrenchooji"},"content":"     * @throws IOException    If there is an error saving to specified file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"darrenchooji"},"content":"    private void deleteTask(String args) throws FionaException, IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"darrenchooji"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"You must specify a valid task number to delete.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"darrenchooji"},"content":"        int id \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"darrenchooji"},"content":"        Task task \u003d tasks.getTasks().remove(id);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"darrenchooji"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(task.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"darrenchooji"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"darrenchooji"},"content":"    private void findTasks(String args) throws FionaException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"darrenchooji"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"You must specify a date or date-time in the correct format to find tasks.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"darrenchooji"},"content":"        LocalDateTime start;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"darrenchooji"},"content":"        LocalDateTime end;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"darrenchooji"},"content":"        if (isDateOnly(args)) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"darrenchooji"},"content":"            LocalDate date \u003d parseLocalDate(args);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"darrenchooji"},"content":"            start \u003d date.atStartOfDay();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"darrenchooji"},"content":"            end \u003d date.atTime(23, 59);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"darrenchooji"},"content":"        } else if (isDateTime(args)) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"darrenchooji"},"content":"            LocalDateTime dateTime \u003d parseLocalDateTime(args);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"darrenchooji"},"content":"            start \u003d dateTime;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"darrenchooji"},"content":"            end \u003d dateTime;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"darrenchooji"},"content":"        } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"Invalid date/time format. Please use yyyy-MM-dd or yyyy-MM-dd HHmm.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"darrenchooji"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.getTasks().stream()","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"darrenchooji"},"content":"                .filter(task -\u003e isTaskInRange(task, start, end))","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"darrenchooji"},"content":"                .toList();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"darrenchooji"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"darrenchooji"},"content":"            ui.showMessage(\"No tasks found matching the date/date-time you provided\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"darrenchooji"},"content":"        } else {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"darrenchooji"},"content":"            ui.showMessage(\"Here are the matching tasks:\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"darrenchooji"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"darrenchooji"},"content":"                ui.showMessage((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"darrenchooji"},"content":"            }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"darrenchooji"},"content":"    private boolean isDateOnly(String input) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"darrenchooji"},"content":"        return input.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"darrenchooji"},"content":"    private boolean isDateTime(String input) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"darrenchooji"},"content":"        return input.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s+\\\\d{4}\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"darrenchooji"},"content":"    private LocalDate parseLocalDate(String dateStr) throws FionaException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"darrenchooji"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"darrenchooji"},"content":"            return LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"darrenchooji"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"Invalid date format. Please use yyyy-MM-dd (e.g., 2025-02-13).\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"darrenchooji"},"content":"    private LocalDateTime parseLocalDateTime(String dateTimeStr) throws FionaException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"darrenchooji"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"darrenchooji"},"content":"            return LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"darrenchooji"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"Invalid date-time format. Please use yyyy-MM-dd HHmm (e.g., 2025-02-13 1800).\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"darrenchooji"},"content":"    private boolean isTaskInRange(Task task, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"darrenchooji"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"darrenchooji"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"darrenchooji"},"content":"            LocalDateTime dl \u003d deadlineTask.getDeadline();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"darrenchooji"},"content":"            return !dl.isBefore(start) \u0026\u0026 !dl.isAfter(end);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"darrenchooji"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"darrenchooji"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"darrenchooji"},"content":"            return !eventTask.getTo().isBefore(start) \u0026\u0026 !eventTask.getFrom().isAfter(end);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"darrenchooji"},"content":"        return false;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"darrenchooji"},"content":"     * Parses a date-time string in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"darrenchooji"},"content":"     * @param dateTimeStr The date-time string to parse.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"darrenchooji"},"content":"     * @return The corresponding LocalDateTime object.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the string is not in the correct format.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"darrenchooji"},"content":"    private LocalDateTime parseDate(String dateTimeStr) throws FionaException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"darrenchooji"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"darrenchooji"},"content":"            return LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"darrenchooji"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"Invalid date-time format. Please use yyyy-MM-dd HHmm (e.g., 2019-12-02 1800).\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"darrenchooji"},"content":"     * Determines if a given task matches the specified date-time.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"darrenchooji"},"content":"     * For a Deadline, we check equality.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"darrenchooji"},"content":"     * For an Event, we check whether the date-time falls within the event\u0027s range.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"darrenchooji"},"content":"     * @param task           The task to check.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"darrenchooji"},"content":"     * @param targetDateTime The date-time we want to match.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"darrenchooji"},"content":"     * @return True if the task matches, false otherwise.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"darrenchooji"},"content":"    private boolean isTaskMatchingDate(Task task, LocalDateTime targetDateTime) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"darrenchooji"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"darrenchooji"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"darrenchooji"},"content":"            return deadlineTask.getDeadline().equals(targetDateTime);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"darrenchooji"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"darrenchooji"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"darrenchooji"},"content":"            return !eventTask.getFrom().isAfter(targetDateTime)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"darrenchooji"},"content":"                    \u0026\u0026 !eventTask.getTo().isBefore(targetDateTime);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"darrenchooji"},"content":"        return false;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"darrenchooji"},"content":"     * Finds tasks containing the given keyword in their description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"darrenchooji"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the keyword is empty.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"darrenchooji"},"content":"    private void findTasksByKeyword(String keyword) throws FionaException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"darrenchooji"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"You must specify a keyword to search for.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"darrenchooji"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.getTasks().stream()","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"darrenchooji"},"content":"                .filter(t -\u003e t.getName().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"darrenchooji"},"content":"                .toList();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"darrenchooji"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"darrenchooji"},"content":"            ui.showMessage(\"No tasks found containing the keyword: \" + keyword);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"darrenchooji"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"darrenchooji"},"content":"            ui.showMessage(\"Here are the tasks containing \\\"\" + keyword + \"\\\":\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"darrenchooji"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); ++i) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"darrenchooji"},"content":"                ui.showMessage((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"darrenchooji"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"darrenchooji"},"content":"     * Processes a single user command. Used for testing.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"darrenchooji"},"content":"     * @param fullCommand The full command entered by the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the command format is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"darrenchooji"},"content":"     * @throws IOException    If there is an error accessing storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"darrenchooji"},"content":"    public void processCommand(String fullCommand) throws FionaException, IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"darrenchooji"},"content":"        Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"darrenchooji"},"content":"        handleCommand(command);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"darrenchooji"},"content":"     * The main entry point of the Fiona chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"darrenchooji"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"darrenchooji"},"content":"    public static void main(String... args) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"darrenchooji"},"content":"        new Fiona(\"./data/fiona.txt\").run();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"darrenchooji"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"darrenchooji"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"darrenchooji"},"content":"            // Parse the command first","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"darrenchooji"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"darrenchooji"},"content":"            if (command.getAction() \u003d\u003d Action.BYE) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"darrenchooji"},"content":"                ui.showBye();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"darrenchooji"},"content":"                String farewell \u003d ui.getMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"darrenchooji"},"content":"                // Exit the JavaFX application","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"darrenchooji"},"content":"                Platform.exit();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"darrenchooji"},"content":"                return farewell;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"darrenchooji"},"content":"            } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"darrenchooji"},"content":"                handleCommand(command);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"darrenchooji"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"darrenchooji"},"content":"        } catch (FionaException | IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"darrenchooji"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"darrenchooji"},"content":"        return ui.getMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"darrenchooji"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"darrenchooji"},"content":"        return ui.getMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"darrenchooji":459}},{"path":"src/main/java/fiona/command/FionaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":" * The {@code FionaException} class represents a custom exception used in the Fiona chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":" * It is thrown when an invalid user input or an error occurs within the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"public class FionaException extends Exception {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"     * Constructs a {@code FionaException} with the specified error message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"     * @param message The detailed error message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"    public FionaException(String message) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"        super(message);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"darrenchooji":17}},{"path":"src/main/java/fiona/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":" * The {@code Parser} class is responsible for interpreting user input and converting it into a {@code Command} object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"public class Parser {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"     * Parses a user command string and converts it into a {@code Command} object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"     * @param fullCommand The full user input string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"     * @return A {@code Command} object representing the parsed action and arguments.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If there is an issue parsing the command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"    public static Command parse(String fullCommand) throws FionaException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"        // Split the input into the command keyword and arguments (if any)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"        String[] inputs \u003d fullCommand.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"        Action action \u003d Action.fromString(inputs[0]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"        // Extract arguments if exist","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"        String args \u003d \"\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"            args \u003d inputs[1].trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"        if (action \u003d\u003d Action.FIND) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"            if (args.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\") || args.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s+\\\\d{4}\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"            } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"                action \u003d Action.FIND_KEYWORD;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"        return new Command(action, args);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"darrenchooji":35}},{"path":"src/main/java/fiona/command/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"import java.io.File;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"import fiona.task.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"import fiona.task.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"import fiona.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"import fiona.task.Todo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":" * The {@code Storage} class is responsible for reading and writing tasks to a file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":" * It allows loading tasks from a file at startup and saving tasks whenever changes occur.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"public class Storage {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"    /** The file path where tasks are stored. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"     * Constructs a {@code Storage} object with the specified file path.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"     * @throws IOException If an error occurs while reading the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darrenchooji"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darrenchooji"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darrenchooji"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darrenchooji"},"content":"            return taskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darrenchooji"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darrenchooji"},"content":"            String line;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darrenchooji"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darrenchooji"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darrenchooji"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darrenchooji"},"content":"                    taskList.add(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darrenchooji"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darrenchooji"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darrenchooji"},"content":"        return taskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darrenchooji"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darrenchooji"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darrenchooji"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darrenchooji"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darrenchooji"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darrenchooji"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darrenchooji"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darrenchooji"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darrenchooji"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darrenchooji"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darrenchooji"},"content":"                writer.write(serializeTask(task));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darrenchooji"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darrenchooji"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darrenchooji"},"content":"     * Parses a task from a line of text stored in the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darrenchooji"},"content":"     * @param line The line representing a task in the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darrenchooji"},"content":"     * @return The corresponding {@code Task} object, or {@code null} if the line is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darrenchooji"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darrenchooji"},"content":"        System.out.println(\"Parsing line: \" + line); // Debug statement","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darrenchooji"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darrenchooji"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darrenchooji"},"content":"            System.out.println(\"Skipping malformed line (insufficient parts): \" + line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darrenchooji"},"content":"            return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darrenchooji"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darrenchooji"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darrenchooji"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darrenchooji"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darrenchooji"},"content":"            switch (type) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darrenchooji"},"content":"            case \"T\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darrenchooji"},"content":"                Task todo \u003d new Todo(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darrenchooji"},"content":"                if (isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darrenchooji"},"content":"                    todo.setDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darrenchooji"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darrenchooji"},"content":"                return todo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darrenchooji"},"content":"            case \"D\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darrenchooji"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"darrenchooji"},"content":"                    System.out.println(\"Skipping malformed Deadline task (missing \u0027by\u0027 field): \" + line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"darrenchooji"},"content":"                    return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"darrenchooji"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"darrenchooji"},"content":"                String deadline \u003d parts[3];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"darrenchooji"},"content":"                Task deadlineTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"darrenchooji"},"content":"                if (isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"darrenchooji"},"content":"                    deadlineTask.setDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"darrenchooji"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"darrenchooji"},"content":"                return deadlineTask;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"darrenchooji"},"content":"            case \"E\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"darrenchooji"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"darrenchooji"},"content":"                    System.out.println(\"Skipping malformed Event task (missing \u0027from\u0027 or \u0027to\u0027 fields): \" + line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"darrenchooji"},"content":"                    return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"darrenchooji"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"darrenchooji"},"content":"                String from \u003d parts[3];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"darrenchooji"},"content":"                String to \u003d parts[4];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"darrenchooji"},"content":"                Task event \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"darrenchooji"},"content":"                if (isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"darrenchooji"},"content":"                    event.setDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"darrenchooji"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"darrenchooji"},"content":"                return event;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"darrenchooji"},"content":"            default:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"darrenchooji"},"content":"                System.out.println(\"Unknown task type: \" + type + \" in line: \" + line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"darrenchooji"},"content":"                return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"darrenchooji"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"darrenchooji"},"content":"        } catch (FionaException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"darrenchooji"},"content":"            System.out.println(\"Error parsing task: \" + e.getMessage() + \" in line: \" + line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"darrenchooji"},"content":"            return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"darrenchooji"},"content":"     * Serializes a task into a string format suitable for storage in a file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"darrenchooji"},"content":"     * @param task The task to serialize.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"darrenchooji"},"content":"     * @return A string representation of the task for storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"darrenchooji"},"content":"    private String serializeTask(Task task) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"darrenchooji"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"darrenchooji"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"darrenchooji"},"content":"            sb.append(\"T | \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"darrenchooji"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"darrenchooji"},"content":"            sb.append(\"D | \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"darrenchooji"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"darrenchooji"},"content":"            sb.append(\"E | \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"darrenchooji"},"content":"        sb.append(task.getIsDone() ? \"1 | \" : \"0 | \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"darrenchooji"},"content":"        sb.append(task.getName());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"darrenchooji"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"darrenchooji"},"content":"            sb.append(\" | \").append(((Deadline) task).getByForStorage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"darrenchooji"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"darrenchooji"},"content":"            sb.append(\" | \").append(((Event) task).getFromForStorage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"darrenchooji"},"content":"            sb.append(\" | \").append(((Event) task).getToForStorage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"darrenchooji"},"content":"        return sb.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"darrenchooji":169}},{"path":"src/main/java/fiona/command/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"import fiona.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":" * The {@code TaskList} class represents a list of tasks managed by the Fiona chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":" * It provides methods for adding, retrieving, marking, and unmarking tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"public class TaskList {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"    /** The list of tasks managed by this {@code TaskList}. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"     * Constructs a {@code TaskList} with a given list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"     * @param loadedTasks The list of tasks to initialize the task list with.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"    public TaskList(List\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"        this.tasks \u003d loadedTasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"     * @param t The task to be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"    public void add(Task t) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"        this.tasks.add(t);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darrenchooji"},"content":"     * Marks a task as done based on its index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darrenchooji"},"content":"     * @param index The index of the task to mark as done (0-based index).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darrenchooji"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the specified index is out of bounds.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darrenchooji"},"content":"    public Task mark(int index) throws FionaException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darrenchooji"},"content":"        if (index \u003c 0 || index \u003e\u003d this.size()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"You must specify a valid task number to mark as done.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darrenchooji"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darrenchooji"},"content":"        task.setDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darrenchooji"},"content":"        return task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darrenchooji"},"content":"     * Marks a task as not done based on its index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darrenchooji"},"content":"     * @param index The index of the task to mark as not done (0-based index).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darrenchooji"},"content":"     * @return The task that was marked as not done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the specified index is out of bounds.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darrenchooji"},"content":"    public Task unmark(int index) throws FionaException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darrenchooji"},"content":"        if (index \u003c 0 || index \u003e\u003d this.size()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"You must specify a valid task number to mark as not done yet.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darrenchooji"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darrenchooji"},"content":"        task.setUndone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darrenchooji"},"content":"        return task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darrenchooji"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darrenchooji"},"content":"     * @return A {@code List} containing all tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darrenchooji"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darrenchooji"},"content":"        return this.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darrenchooji"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darrenchooji"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darrenchooji"},"content":"    public int size() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darrenchooji"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"darrenchooji":90}},{"path":"src/main/java/fiona/command/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":" *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"public class Ui {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"    private static final String LINE \u003d \"-------------------------------------------------------------\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"    private BufferedReader reader;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"    private StringBuilder messageLog;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"     * Constructs a {@code Ui} object and initializes the input reader.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"    public Ui() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"        reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"        messageLog \u003d new StringBuilder();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"     * Displays a horizontal line for visual separation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"    public void showLine() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"        // Instead of printing directly, append to the log.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"        messageLog.append(LINE).append(\"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"     * Displays the welcome message when the chatbot starts.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"        showLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"        showMessage(\"Hello! I\u0027m Fiona.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"        showMessage(\"What can I do for you?\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"        showLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darrenchooji"},"content":"     * Displays an error message when there is an issue loading tasks from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darrenchooji"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darrenchooji"},"content":"        showLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darrenchooji"},"content":"        showMessage(\"Error loading tasks from file. Starting with an empty task list.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darrenchooji"},"content":"        showLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darrenchooji"},"content":"     * Reads a command from the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darrenchooji"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darrenchooji"},"content":"     * @throws IOException If an I/O error occurs while reading input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darrenchooji"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darrenchooji"},"content":"        return reader.readLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darrenchooji"},"content":"     * Displays a message to the user by appending it to the message log.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darrenchooji"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darrenchooji"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darrenchooji"},"content":"        messageLog.append(message).append(\"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darrenchooji"},"content":"     * Returns the accumulated messages as a single string and clears the log.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darrenchooji"},"content":"     * @return The output message string.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darrenchooji"},"content":"    public String getMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darrenchooji"},"content":"        String output \u003d messageLog.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darrenchooji"},"content":"        // Clear the log after retrieving the messages.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darrenchooji"},"content":"        messageLog.setLength(0);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darrenchooji"},"content":"        return output;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darrenchooji"},"content":"     * Displays the goodbye message when the chatbot exits.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darrenchooji"},"content":"    public void showBye() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darrenchooji"},"content":"        showLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darrenchooji"},"content":"        showMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darrenchooji"},"content":"        showLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"darrenchooji":90}},{"path":"src/main/java/fiona/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"import fiona.command.FionaException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":" * The {@code Deadline} class represents a task that has a specific due date and time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":" * It extends the {@code Task} class and includes a deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"    /** Formatter for displaying dates in a user-friendly format. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"    private static final DateTimeFormatter DISPLAY_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"    /** Formatter for parsing and storing dates in a standardized format. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"    private static final DateTimeFormatter STORAGE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"     * Constructs a {@code Deadline} task with the specified description and due date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"     * @param name The description of the deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"     * @param deadline The due date and time in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the date-time format is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"    public Deadline(String name, String deadline) throws FionaException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"        super(name);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, STORAGE_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"Invalid date-time format for deadline. \"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"                    + \"Please use yyyy-MM-dd HHmm (e.g., 2019-12-02 1800).\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darrenchooji"},"content":"     * @return The deadline as a {@code LocalDateTime} object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darrenchooji"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darrenchooji"},"content":"        return this.deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darrenchooji"},"content":"     * Returns the deadline formatted for storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darrenchooji"},"content":"     * @return The deadline as a string in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darrenchooji"},"content":"    public String getByForStorage() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darrenchooji"},"content":"        return this.deadline.format(STORAGE_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darrenchooji"},"content":"     * Returns a string representation of the deadline task, including its status, description,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darrenchooji"},"content":"     * and deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darrenchooji"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darrenchooji"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darrenchooji"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darrenchooji"},"content":"        String doneIndicator \u003d super.getIsDone() ? \"X\" : \" \";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darrenchooji"},"content":"        return \"[D][\" + doneIndicator + \"] \" + super.getName()","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darrenchooji"},"content":"                + \" (by: \" + this.deadline.format(DISPLAY_FORMAT) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"darrenchooji":69}},{"path":"src/main/java/fiona/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"import fiona.command.FionaException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":" * The {@code Event} class represents a task that occurs within a specific time frame.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":" * It extends the {@code Task} class and includes a start time (\"from\") and an end time (\"to\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"    /** Formatter for displaying dates in a user-friendly format. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"    private static final DateTimeFormatter DISPLAY_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"    /** Formatter for parsing and storing dates in a standardized format. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"    private static final DateTimeFormatter STORAGE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"     * Constructs an {@code Event} task with the specified description, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"     * @param from The start time of the event in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"     * @param to The end time of the event in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"     * @throws FionaException If the date-time format is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"    public Event(String description, String from, String to) throws FionaException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"            this.from \u003d LocalDateTime.parse(from, STORAGE_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"            this.to \u003d LocalDateTime.parse(to, STORAGE_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"            throw new FionaException(\"Invalid date-time format for event. \"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"                    + \"Please use yyyy-MM-dd HHmm (e.g., 2019-12-02 1800).\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darrenchooji"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darrenchooji"},"content":"     * @return The start time as a {@code LocalDateTime} object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darrenchooji"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darrenchooji"},"content":"        return this.from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darrenchooji"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darrenchooji"},"content":"     * @return The end time as a {@code LocalDateTime} object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darrenchooji"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darrenchooji"},"content":"        return this.to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darrenchooji"},"content":"     * Returns the start time formatted for storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darrenchooji"},"content":"     * @return The start time as a string in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darrenchooji"},"content":"    public String getFromForStorage() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darrenchooji"},"content":"        return this.from.format(STORAGE_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darrenchooji"},"content":"     * Returns the end time formatted for storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darrenchooji"},"content":"     * @return The end time as a string in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darrenchooji"},"content":"    public String getToForStorage() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darrenchooji"},"content":"        return this.to.format(STORAGE_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darrenchooji"},"content":"     * Returns a string representation of the event task, including its status, description,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darrenchooji"},"content":"     * start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darrenchooji"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darrenchooji"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darrenchooji"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darrenchooji"},"content":"        String doneIndicator \u003d super.getIsDone() ? \"X\" : \" \";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darrenchooji"},"content":"        return \"[E][\" + doneIndicator + \"] \" + super.getName()","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darrenchooji"},"content":"                + \" (from: \" + this.from.format(DISPLAY_FORMAT) + \" to: \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darrenchooji"},"content":"                + this.to.format(DISPLAY_FORMAT) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"darrenchooji":91}},{"path":"src/main/java/fiona/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":" * The {@code Task} class represents a general task with an ID, name, and completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":" * It serves as an abstract base class for specific task types such as {@code Todo},","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":" * {@code Deadline}, and {@code Event}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"    private static int numOfTask \u003d 0;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"    private int id;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"    private String name;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"     * Constructs a new {@code Task} with the specified name.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"     * Each task is assigned a unique ID based on the number of tasks created.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"    public Task(String name) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"        assert name !\u003d null : \"Task name cannot be null\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"        assert !name.isEmpty() : \"Task name cannot be empty\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"        ++numOfTask;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"        this.id \u003d numOfTask;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"     * Returns the unique ID of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"     * @return The task ID.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"    public int getId() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"        return this.id;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"     * Returns the name or description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darrenchooji"},"content":"     * @return The task name.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darrenchooji"},"content":"    public String getName() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darrenchooji"},"content":"        return this.name;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darrenchooji"},"content":"     * Checks whether the task is marked as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darrenchooji"},"content":"     * @return {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darrenchooji"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darrenchooji"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darrenchooji"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darrenchooji"},"content":"    public void setDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darrenchooji"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darrenchooji"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darrenchooji"},"content":"    public void setUndone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darrenchooji"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"darrenchooji":70}},{"path":"src/main/java/fiona/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":" * The {@code Todo} class represents a task that does not have a specific deadline or time frame.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":" * It extends the {@code Task} class and provides a string representation for display.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"     * Constructs a {@code Todo} task with the specified name.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"     * @param name The name or description of the todo task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"    public Todo(String name) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"        super(name);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"     * Returns a string representation of the todo task, including its status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"     * @return A formatted string representing the todo task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"        String doneIndicator \u003d super.getIsDone() ? \"X\" : \" \";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"        return \"[T][\" + doneIndicator + \"] \" + super.getName();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"darrenchooji":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"darrenchooji":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"darrenchooji":19}},{"path":"src/test/java/fiona/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"import fiona.command.FionaException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"    void constructor_validFormat_success() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"        Assertions.assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"            Deadline deadline \u003d new Deadline(\"Finish CS2103T iP\", \"2025-01-31 1600\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"            Assertions.assertEquals(\"[D][ ] Finish CS2103T iP (by: Jan 31 2025 16:00)\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"                    deadline.toString(),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"                    \"Expected a correct format for toString() method\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"            );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"    void constructor_invalidFormat_throwsException() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"        FionaException ex \u003d Assertions.assertThrows(FionaException.class, () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"            new Deadline(\"Finish iP\", \"2025-31-01 1600\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"        Assertions.assertTrue(ex.getMessage().contains(\"Invalid date-time format for deadline.\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"                \"Should throw invalid date-time format error.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"    void getDeadline_validFormat_correctParsing() throws FionaException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"        Deadline deadline \u003d new Deadline(\"Finish CS2103T iP\", \"2025-01-31 1600\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"        Assertions.assertEquals(2025, deadline.getDeadline().getYear());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"        Assertions.assertEquals(1, deadline.getDeadline().getMonthValue());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"        Assertions.assertEquals(31, deadline.getDeadline().getDayOfMonth());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"        Assertions.assertEquals(16, deadline.getDeadline().getHour());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"        Assertions.assertEquals(0, deadline.getDeadline().getMinute());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"darrenchooji":39}},{"path":"src/test/java/fiona/task/FionaTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"package fiona.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darrenchooji"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darrenchooji"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darrenchooji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darrenchooji"},"content":"import fiona.command.Fiona;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darrenchooji"},"content":"import fiona.command.FionaException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darrenchooji"},"content":"import fiona.command.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darrenchooji"},"content":"import fiona.command.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darrenchooji"},"content":"import fiona.command.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darrenchooji"},"content":"public class FionaTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darrenchooji"},"content":"    private Fiona fiona;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darrenchooji"},"content":"    private TaskList testTaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darrenchooji"},"content":"    static class DummyStorage extends Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darrenchooji"},"content":"        private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darrenchooji"},"content":"        public DummyStorage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darrenchooji"},"content":"            super(\"dummyPath\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darrenchooji"},"content":"        @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darrenchooji"},"content":"        public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darrenchooji"},"content":"            return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darrenchooji"},"content":"        @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darrenchooji"},"content":"        public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darrenchooji"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darrenchooji"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darrenchooji"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darrenchooji"},"content":"    void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darrenchooji"},"content":"        Storage dummyStorage \u003d new DummyStorage();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darrenchooji"},"content":"        testTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darrenchooji"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darrenchooji"},"content":"        fiona \u003d new Fiona(dummyStorage, testTaskList, ui);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darrenchooji"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darrenchooji"},"content":"    void addDeadline_validArgs_success() throws IOException, FionaException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darrenchooji"},"content":"        String input \u003d \"deadline submit assignment /by 2025-01-31 2359\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darrenchooji"},"content":"        fiona.processCommand(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darrenchooji"},"content":"        Assertions.assertEquals(1, testTaskList.size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darrenchooji"},"content":"        Task addedTask \u003d testTaskList.getTasks().get(0);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darrenchooji"},"content":"        Assertions.assertTrue(addedTask instanceof Deadline, \"The added task should be a Deadline.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darrenchooji"},"content":"        Assertions.assertTrue(addedTask.toString().contains(\"submit assignment\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darrenchooji"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darrenchooji"},"content":"    void addDeadline_missingByClause_throwsException() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darrenchooji"},"content":"        String input \u003d \"deadline submit assignment\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darrenchooji"},"content":"        FionaException ex \u003d Assertions.assertThrows(FionaException.class, () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darrenchooji"},"content":"            fiona.processCommand(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darrenchooji"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darrenchooji"},"content":"        Assertions.assertTrue(ex.getMessage().contains(\"/by\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darrenchooji"},"content":"                \"Error message should mention missing /by clause.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darrenchooji"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darrenchooji"},"content":"    void addDeadline_invalidDateFormat_throwsException() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darrenchooji"},"content":"        // Should be \"yyyy-MM-dd HHmm\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darrenchooji"},"content":"        String input \u003d \"deadline submit assignment /by 2025-01-31T2359\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darrenchooji"},"content":"        FionaException ex \u003d Assertions.assertThrows(FionaException.class, () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darrenchooji"},"content":"            fiona.processCommand(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darrenchooji"},"content":"        });","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darrenchooji"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darrenchooji"},"content":"        Assertions.assertTrue(ex.getMessage().contains(\"Invalid date-time format for deadline.\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darrenchooji"},"content":"                \"Expected invalid date-time format error message.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darrenchooji"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darrenchooji"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"darrenchooji":84}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenchooji"},"content":"todo borrow book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darrenchooji"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darrenchooji"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darrenchooji"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darrenchooji"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"darrenchooji":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darrenchooji"},"content":"java -classpath ../bin Fiona \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"darrenchooji":1,"-":37}}]
