[{"path":"data/alpha.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gandwarf"},"content":"T | 0 | go","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gandwarf"},"content":"T | 0 | bye","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gandwarf"},"content":"D | 0 | if | 2025-07-19 1900","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gandwarf"},"content":"E | 0 | party | 2025-07-19 1900 | 2025-07-19 2100","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gandwarf"},"content":"E | 0 | error | 2025-07-19 2100 | 2025-07-19 1900","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"gandwarf":5}},{"path":"src/main/java/Alpha.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gandwarf"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gandwarf"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gandwarf"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gandwarf"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gandwarf"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gandwarf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gandwarf"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gandwarf"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gandwarf"},"content":" * The {@code Alpha} class is a console-based task manager application. It supports","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gandwarf"},"content":" * creating, listing, marking, unmarking, and deleting different types of tasks","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gandwarf"},"content":" * (ToDo, Deadline, Event). Tasks are persisted to and loaded from a file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gandwarf"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gandwarf"},"content":"public class Alpha {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gandwarf"},"content":"     * The absolute path to the current project directory.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gandwarf"},"content":"    private static final Path HOME \u003d Paths.get(\"\").toAbsolutePath();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gandwarf"},"content":"     * The path to the data directory under the current project directory.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gandwarf"},"content":"    private static final Path DATA_PATH \u003d HOME.resolve(\"data\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gandwarf"},"content":"     * The path to the file where tasks are saved.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gandwarf"},"content":"    private static final Path FILE_PATH \u003d DATA_PATH.resolve(\"alpha.txt\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gandwarf"},"content":"     * An {@code ArrayList} holding all the tasks managed by this application.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gandwarf"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gandwarf"},"content":"     * Constructs an {@code Alpha} instance. Initializes the internal task list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gandwarf"},"content":"     * and loads existing tasks from the data file if present.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gandwarf"},"content":"    public Alpha() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gandwarf"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gandwarf"},"content":"        loadTasksFromFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gandwarf"},"content":"     * Saves all tasks in the task list to the file specified by {@code FILE_PATH}.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gandwarf"},"content":"     * Creates the data directory if it does not exist.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gandwarf"},"content":"    private void saveTasksToFile() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gandwarf"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gandwarf"},"content":"            if (!Files.exists(DATA_PATH)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gandwarf"},"content":"                Files.createDirectories(DATA_PATH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gandwarf"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gandwarf"},"content":"            BufferedWriter writer \u003d Files.newBufferedWriter(FILE_PATH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gandwarf"},"content":"            for (Task task : list) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gandwarf"},"content":"                writer.write(taskToFileFormat(task));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gandwarf"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gandwarf"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gandwarf"},"content":"            writer.close();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gandwarf"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gandwarf"},"content":"     * Loads tasks from the file specified by {@code FILE_PATH}. If the file does","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gandwarf"},"content":"     * not exist, it does nothing. Corrupted lines are skipped.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gandwarf"},"content":"    private void loadTasksFromFile() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gandwarf"},"content":"        if (!Files.exists(FILE_PATH)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gandwarf"},"content":"            return;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gandwarf"},"content":"        try (Scanner scanner \u003d new Scanner(Files.newBufferedReader(FILE_PATH))) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gandwarf"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gandwarf"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gandwarf"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gandwarf"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gandwarf"},"content":"                    list.add(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gandwarf"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gandwarf"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gandwarf"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gandwarf"},"content":"     * Parses a line from the saved file into a {@link Task} object. The file line","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gandwarf"},"content":"     * is expected to be in the format: \u003cbr\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gandwarf"},"content":"     * \u003ccode\u003e[TaskType] | [isDone] | [description] | [additional fields...]\u003c/code\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gandwarf"},"content":"     * @param line The line read from the file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gandwarf"},"content":"     * @return A {@code Task} object if parsing is successful, or {@code null} otherwise.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gandwarf"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gandwarf"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gandwarf"},"content":"            String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gandwarf"},"content":"            String type \u003d parts[0].trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gandwarf"},"content":"            boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gandwarf"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gandwarf"},"content":"            Task task \u003d switch (type) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gandwarf"},"content":"                case \"T\" -\u003e new ToDo(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gandwarf"},"content":"                case \"D\" -\u003e new Deadline(description, parts[3].trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gandwarf"},"content":"                case \"E\" -\u003e new Event(description, parts[3].trim(), parts[4].trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gandwarf"},"content":"                default -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gandwarf"},"content":"                    System.out.println(\"Unknown task type: \" + type);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gandwarf"},"content":"                    yield null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gandwarf"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gandwarf"},"content":"            };","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gandwarf"},"content":"            if (isDone \u0026\u0026 task !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gandwarf"},"content":"                task.mark();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gandwarf"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gandwarf"},"content":"            return task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gandwarf"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\"Skipping corrupted line: \" + line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gandwarf"},"content":"            return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gandwarf"},"content":"     * Converts a {@link Task} into its file storage string representation.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gandwarf"},"content":"     * @param task The {@code Task} to be converted.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gandwarf"},"content":"     * @return A string representing this {@code Task} in file format.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gandwarf"},"content":"    private String taskToFileFormat(Task task) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gandwarf"},"content":"        String done \u003d task.isMarked() ? \"1\" : \"0\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gandwarf"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gandwarf"},"content":"            return \"T | \" + done + \" | \" + ((ToDo) task).getFileFormat();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gandwarf"},"content":"        } else if (task instanceof Deadline d) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gandwarf"},"content":"            return \"D | \" + done + \" | \" + d.getFileFormat();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gandwarf"},"content":"        } else if (task instanceof Event e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gandwarf"},"content":"            return \"E | \" + done + \" | \" + e.getFileFormat();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gandwarf"},"content":"        return \"\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gandwarf"},"content":"     * Adds a new {@link Task} to the internal list and prints a confirmation message.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gandwarf"},"content":"     * @param task The {@code Task} to add.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gandwarf"},"content":"    private void add(Task task) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gandwarf"},"content":"        list.add(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\" Now you ave \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gandwarf"},"content":"     * Displays the current list of tasks. If the list is empty, notifies the user.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gandwarf"},"content":"    private void showList() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gandwarf"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\" The list is empty.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gandwarf"},"content":"        } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\" Here are the todo borrow book\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gandwarf"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + list.get(i));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gandwarf"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gandwarf"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"gandwarf"},"content":"     * @param index The zero-based index of the task to mark.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"gandwarf"},"content":"    private void markTask(int index) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"gandwarf"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c list.size()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"gandwarf"},"content":"            Task task \u003d list.get(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"gandwarf"},"content":"            if (task.isMarked()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\" This task has been marked.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"gandwarf"},"content":"            } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"gandwarf"},"content":"                task.mark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\"   \" + task);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"gandwarf"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"gandwarf"},"content":"        } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\" Invalid index: \" + (index + 1));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"gandwarf"},"content":"     * Unmarks the task at the specified index as not done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"gandwarf"},"content":"     * @param index The zero-based index of the task to unmark.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"gandwarf"},"content":"    private void unmarkTask(int index) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"gandwarf"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c list.size()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"gandwarf"},"content":"            Task task \u003d list.get(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"gandwarf"},"content":"            if (!task.isMarked()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\" This task has been unmarked.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"gandwarf"},"content":"            } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"gandwarf"},"content":"                task.unMark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\"   \" + task);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"gandwarf"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"gandwarf"},"content":"        } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\" Invalid index: \" + (index + 1));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"gandwarf"},"content":"     * Prints a greeting message at the start of the application.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"gandwarf"},"content":"    private void greeting() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\" Hello! I\u0027m Alpha\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"gandwarf"},"content":"     * Prints a farewell message before the application terminates.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"gandwarf"},"content":"    private void exit() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\" Bye. Hope to see you soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"gandwarf"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"gandwarf"},"content":"     * Deletes the task at the specified index from the internal list and","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"gandwarf"},"content":"     * prints a confirmation message.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"gandwarf"},"content":"     * @param index The zero-based index of the task to delete.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"gandwarf"},"content":"    private void deleteTask(int index) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"gandwarf"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c list.size()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"gandwarf"},"content":"            Task removedTask \u003d list.remove(index); // Remove the task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\"   \" + removedTask);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\" Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"gandwarf"},"content":"        } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\" Invalid index: \" + (index + 1));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"gandwarf"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"gandwarf"},"content":"     * The main loop of the program that processes user commands from standard input:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"gandwarf"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"gandwarf"},"content":"     *   \u003cli\u003e\u003cb\u003elist\u003c/b\u003e - Show all tasks.\u003c/li\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"gandwarf"},"content":"     *   \u003cli\u003e\u003cb\u003emark\u003c/b\u003e \u003ci\u003eindex\u003c/i\u003e - Mark the task at the given index.\u003c/li\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"gandwarf"},"content":"     *   \u003cli\u003e\u003cb\u003eunmark\u003c/b\u003e \u003ci\u003eindex\u003c/i\u003e - Unmark the task at the given index.\u003c/li\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"gandwarf"},"content":"     *   \u003cli\u003e\u003cb\u003etodo\u003c/b\u003e \u003ci\u003edescription\u003c/i\u003e - Add a ToDo task.\u003c/li\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"gandwarf"},"content":"     *   \u003cli\u003e\u003cb\u003edeadline\u003c/b\u003e \u003ci\u003edescription\u003c/i\u003e /by \u003ci\u003edeadline\u003c/i\u003e - Add a Deadline task.\u003c/li\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"gandwarf"},"content":"     *   \u003cli\u003e\u003cb\u003eevent\u003c/b\u003e \u003ci\u003edescription\u003c/i\u003e /from \u003ci\u003estart\u003c/i\u003e /to \u003ci\u003eend\u003c/i\u003e - Add an Event task.\u003c/li\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"gandwarf"},"content":"     *   \u003cli\u003e\u003cb\u003edelete\u003c/b\u003e \u003ci\u003eindex\u003c/i\u003e - Delete the task at the given index.\u003c/li\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"gandwarf"},"content":"     *   \u003cli\u003e\u003cb\u003ebye\u003c/b\u003e - Exit the program.\u003c/li\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"gandwarf"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"gandwarf"},"content":"    private void run() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"gandwarf"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"gandwarf"},"content":"        greeting();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"gandwarf"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"gandwarf"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"gandwarf"},"content":"            String[] words \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"gandwarf"},"content":"            try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"gandwarf"},"content":"                switch (words[0]) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"gandwarf"},"content":"                    case \"list\" -\u003e showList();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"gandwarf"},"content":"                    case \"mark\" -\u003e markTask(Integer.parseInt(words[1]) - 1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"gandwarf"},"content":"                    case \"unmark\" -\u003e unmarkTask(Integer.parseInt(words[1]) - 1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"gandwarf"},"content":"                    case \"todo\" -\u003e add(new ToDo(words[1]));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"gandwarf"},"content":"                    case \"deadline\" -\u003e {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"gandwarf"},"content":"                        String[] parts \u003d words[1].split(\" /by \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"gandwarf"},"content":"                        add(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"gandwarf"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"gandwarf"},"content":"                    case \"event\" -\u003e {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"gandwarf"},"content":"                        String[] parts \u003d words[1].split(\" /from \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"gandwarf"},"content":"                        String[] times \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"gandwarf"},"content":"                        add(new Event(parts[0], times[0], times[1]));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"gandwarf"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"gandwarf"},"content":"                    case \"delete\" -\u003e deleteTask(Integer.parseInt(words[1]) - 1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"gandwarf"},"content":"                    default -\u003e {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"gandwarf"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"gandwarf"},"content":"                        System.out.println(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"gandwarf"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"gandwarf"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"gandwarf"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"gandwarf"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"gandwarf"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"gandwarf"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"gandwarf"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"gandwarf"},"content":"        saveTasksToFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"gandwarf"},"content":"        exit();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"gandwarf"},"content":"     * The application\u0027s entry point. Creates an {@code Alpha} instance and runs it.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"gandwarf"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"gandwarf"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"gandwarf"},"content":"        Alpha alpha \u003d new Alpha();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"gandwarf"},"content":"        alpha.run();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"gandwarf"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"gandwarf":324}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gandwarf"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gandwarf"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gandwarf"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gandwarf"},"content":"import java.util.Locale;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gandwarf"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gandwarf"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gandwarf"},"content":" * In addition to a name (inherited from {@link Task}),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gandwarf"},"content":" * this class maintains a {@code deadline} string.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gandwarf"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gandwarf"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gandwarf"},"content":"     * The deadline or due date associated with this task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gandwarf"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gandwarf"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gandwarf"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gandwarf"},"content":"            Locale.ENGLISH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gandwarf"},"content":"     * Constructs a new {@code Deadline} task with the specified","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gandwarf"},"content":"     * task name and deadline string.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gandwarf"},"content":"     * @param taskName The name or description of the task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gandwarf"},"content":"     * @param deadline The deadline or due date for the task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gandwarf"},"content":"    Deadline(String taskName, String deadline) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gandwarf"},"content":"        super(taskName);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gandwarf"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gandwarf"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, INPUT_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gandwarf"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gandwarf"},"content":"            throw new IllegalArgumentException(\"Invalid date format. Use yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gandwarf"},"content":"     * Returns a string representation of this deadline task,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gandwarf"},"content":"     * including the task type indicator \u003cb\u003e[D]\u003c/b\u003e, the base task","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gandwarf"},"content":"     * description (from {@link Task#toString()}), and the deadline","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gandwarf"},"content":"     * in a \u003ccode\u003e(by: ...)\u003c/code\u003e format.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gandwarf"},"content":"     * @return A string describing this deadline task, for example:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gandwarf"},"content":"     *         \u003ccode\u003e[D][X] Finish project (by: Friday)\u003c/code\u003e.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gandwarf"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gandwarf"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gandwarf"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gandwarf"},"content":"     * Returns a string in the format used to store this task in a file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gandwarf"},"content":"     * Typically used by the application to save tasks to disk.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gandwarf"},"content":"     * @return A string combining the task name and deadline, separated by \" | \".","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gandwarf"},"content":"    public String getFileFormat() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gandwarf"},"content":"        return this.taskName + \" | \" + this.deadline.format(INPUT_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gandwarf"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"gandwarf":60}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gandwarf"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gandwarf"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gandwarf"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gandwarf"},"content":"import java.util.Locale;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gandwarf"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gandwarf"},"content":" * Represents an event which occurs within a specific time range.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gandwarf"},"content":" * In addition to a name (inherited from {@link Task}),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gandwarf"},"content":" * this class maintains a start time and an end time.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gandwarf"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gandwarf"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gandwarf"},"content":"     * The start time of this event.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gandwarf"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gandwarf"},"content":"     * The end time of this event.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gandwarf"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gandwarf"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gandwarf"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gandwarf"},"content":"            Locale.ENGLISH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gandwarf"},"content":"     * Constructs a new {@code Event} task with the specified","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gandwarf"},"content":"     * task name, start time, and end time.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gandwarf"},"content":"     * @param taskName The name or description of the event.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gandwarf"},"content":"     * @param from The starting time of the event.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gandwarf"},"content":"     * @param to The ending time of the event.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gandwarf"},"content":"    Event(String taskName, String from, String to) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gandwarf"},"content":"        super(taskName);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gandwarf"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gandwarf"},"content":"            this.from \u003d LocalDateTime.parse(from, INPUT_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gandwarf"},"content":"            this.to \u003d LocalDateTime.parse(to, INPUT_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gandwarf"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gandwarf"},"content":"            throw new IllegalArgumentException(\"Invalid date format. Use yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gandwarf"},"content":"     * Returns a string representation of this event, including","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gandwarf"},"content":"     * the task type indicator \u003cb\u003e[E]\u003c/b\u003e, the base task description","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gandwarf"},"content":"     * (from {@link Task#toString()}), and the time range in a","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gandwarf"},"content":"     * \u003ccode\u003e(from: ... to: ...)\u003c/code\u003e format.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gandwarf"},"content":"     * @return A string describing this event, for example:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gandwarf"},"content":"     *         \u003ccode\u003e[E][ ] Attend meeting (from: 2pm to: 4pm)\u003c/code\u003e.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gandwarf"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gandwarf"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gandwarf"},"content":"        return \"[E]\" + super.toString() + \" (from: \" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gandwarf"},"content":"                from.format(OUTPUT_FORMAT) + \" to: \" + to.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gandwarf"},"content":"     * Returns a string in the format used to store this event in a file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gandwarf"},"content":"     * Typically used by the application to save tasks to disk.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gandwarf"},"content":"     * @return A string combining the task name, start time, and end time,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gandwarf"},"content":"     *         each separated by \u003ccode\u003e\" | \"\u003c/code\u003e.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gandwarf"},"content":"    public String getFileFormat() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gandwarf"},"content":"        return this.taskName + \" | \" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gandwarf"},"content":"                this.from.format(INPUT_FORMAT) + \" | \" + this.to.format(INPUT_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gandwarf"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"gandwarf":69}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gandwarf"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gandwarf"},"content":" * Represents a generic task with a name and a completion status.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gandwarf"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gandwarf"},"content":"public class Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gandwarf"},"content":"     * The name or description of this task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gandwarf"},"content":"    protected final String taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gandwarf"},"content":"     * Indicates whether this task is marked as done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gandwarf"},"content":"    protected boolean done;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gandwarf"},"content":"     * Constructs a new {@code Task} with the specified name.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gandwarf"},"content":"     * The task is initially not done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gandwarf"},"content":"     * @param taskName The name or description of the task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gandwarf"},"content":"    Task(String taskName) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gandwarf"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gandwarf"},"content":"        done \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gandwarf"},"content":"     * Returns whether this task is marked as done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gandwarf"},"content":"     * @return {@code true} if the task is marked as done; {@code false} otherwise.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gandwarf"},"content":"    protected boolean isMarked() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gandwarf"},"content":"        return done;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gandwarf"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gandwarf"},"content":"    protected void mark() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gandwarf"},"content":"        done \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gandwarf"},"content":"     * Unmarks this task (marks it as not done).","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gandwarf"},"content":"    protected void unMark() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gandwarf"},"content":"        done \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gandwarf"},"content":"     * Returns a string representation of this task, indicating","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gandwarf"},"content":"     * whether it is done or not.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gandwarf"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gandwarf"},"content":"     * For example:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gandwarf"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gandwarf"},"content":"     *   \u003cli\u003e{@code \"[X] Task Name\"} if it is done.\u003c/li\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gandwarf"},"content":"     *   \u003cli\u003e{@code \"[ ] Task Name\"} if it is not done.\u003c/li\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gandwarf"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gandwarf"},"content":"     * @return A string describing this task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gandwarf"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gandwarf"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gandwarf"},"content":"        if (done) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gandwarf"},"content":"            return \"[X] \" + taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gandwarf"},"content":"        } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gandwarf"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gandwarf"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gandwarf"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"gandwarf":70}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gandwarf"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gandwarf"},"content":" * Represents a simple to-do task without a specific deadline or time range.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gandwarf"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gandwarf"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gandwarf"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gandwarf"},"content":"     * Constructs a new {@code ToDo} task with the specified name.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gandwarf"},"content":"     * @param taskName The name or description of the to-do task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gandwarf"},"content":"    ToDo(String taskName) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gandwarf"},"content":"        super(taskName);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gandwarf"},"content":"     * Returns a string representation of this to-do task,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gandwarf"},"content":"     * including the task type indicator \u003cb\u003e[T]\u003c/b\u003e followed","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gandwarf"},"content":"     * by the base task description (from {@link Task#toString()}).","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gandwarf"},"content":"     * @return A string describing this to-do task, for example:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gandwarf"},"content":"     *         \u003ccode\u003e[T][ ] Buy groceries\u003c/code\u003e.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gandwarf"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gandwarf"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gandwarf"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gandwarf"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gandwarf"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gandwarf"},"content":"     * Returns a string in the format used to store this to-do task in a file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gandwarf"},"content":"     * Typically used by the application to save tasks to disk.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gandwarf"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gandwarf"},"content":"     * @return A string containing only the task name.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gandwarf"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gandwarf"},"content":"    public String getFileFormat() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gandwarf"},"content":"        return this.taskName;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gandwarf"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gandwarf"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"gandwarf":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gandwarf"},"content":"todo read book","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gandwarf"},"content":"deadline submit report /by 2025-01-31","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gandwarf"},"content":"event meeting /from 10:00 /to 12:00","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gandwarf"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gandwarf"},"content":"mark 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gandwarf"},"content":"delete 1","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gandwarf"},"content":"bye","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"gandwarf":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gandwarf"},"content":"java -classpath ..\\bin Alpha \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"gandwarf":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gandwarf"},"content":"java -classpath ../bin Alpha \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"gandwarf":1}}]
