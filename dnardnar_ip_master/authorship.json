[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dnardnar"},"content":"    mainClass.set(\"dnar.DNar\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dnardnar"},"content":"    archiveBaseName \u003d \"dnar\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"dnardnar":2,"-":39}},{"path":"data/DNar.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"T | 0 | book","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"T | 0 | borrow book","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"T | 0 | book borrow","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"T | 0 | boo borow","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"dnardnar":4}},{"path":"src/main/java/dnar/DNar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"public class DNar {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"    private final UI ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"    public DNar(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"            taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"    public void run() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"        ui.greet();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"        while (isRunning) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"            String command \u003d ui.readCommand();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dnardnar"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dnardnar"},"content":"                isRunning \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dnardnar"},"content":"                ui.exit();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dnardnar"},"content":"            } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dnardnar"},"content":"                Parser.parse(command, taskList, ui, storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dnardnar"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dnardnar"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dnardnar"},"content":"        new DNar(\"data/DNar.txt\").run();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"dnardnar":36}},{"path":"src/main/java/dnar/DNarException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":" * Represents exceptions specific to the DNar chatbot.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"class DNarException extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"     * Constructs a new DNarException with the specified error message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"     * @param message The detail message explaining the exception.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"    public DNarException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"        super(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"dnardnar":16}},{"path":"src/main/java/dnar/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"    public static LocalDate parseDate(String date) throws DateTimeParseException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"        return LocalDate.parse(date, INPUT_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"    public static String formatDate(LocalDate date) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"        return date.format(OUTPUT_FORMAT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"    public static String unparseDate(String formattedDate) throws DateTimeParseException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"        LocalDate date \u003d LocalDate.parse(formattedDate, OUTPUT_FORMAT);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"        return date.format(INPUT_FORMAT);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"dnardnar":23}},{"path":"src/main/java/dnar/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"    private final LocalDate end;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"     * Constructs a Deadline task with a description and an end date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"     * @param end         The deadline date in string format.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"    public Deadline(String description, String end) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"        this.end \u003d DateTimeParser.parseDate(end);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"     * Constructs a Deadline task with a description, an end date, and a completion status.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dnardnar"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dnardnar"},"content":"     * @param end         The deadline date in string format.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dnardnar"},"content":"     * @param isDone      Whether the task is marked as done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dnardnar"},"content":"    public Deadline(String description, String end, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dnardnar"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dnardnar"},"content":"        this.end \u003d DateTimeParser.parseDate(end);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dnardnar"},"content":"     * Converts the Deadline task to a data string for file storage.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dnardnar"},"content":"     * @return A formatted string representation of the deadline task for storage.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dnardnar"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dnardnar"},"content":"    public String toDataString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dnardnar"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + DateTimeParser.formatDate(end);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dnardnar"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dnardnar"},"content":"     * @return A formatted string showing the task type, status, and deadline.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dnardnar"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dnardnar"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dnardnar"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateTimeParser.formatDate(end) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"dnardnar":53}},{"path":"src/main/java/dnar/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":" * Represents an event task with a start and end date/time.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":"    private final String start;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"    private final String end;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"     * Constructs an Event task with a description, start, and end date/time.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"     * @param start The start date/time of the event.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"     * @param end The end date/time of the event.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dnardnar"},"content":"     * Constructs an Event task with a description, start and end date/time, and completion status.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dnardnar"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dnardnar"},"content":"     * @param start The start date/time of the event.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dnardnar"},"content":"     * @param end The end date/time of the event.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dnardnar"},"content":"     * @param isDone Whether the event task is completed.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dnardnar"},"content":"    public Event(String description, String start, String end, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dnardnar"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dnardnar"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dnardnar"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dnardnar"},"content":"     * Converts the event into a string format suitable for storage.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dnardnar"},"content":"     * @return A formatted string representing the event for file storage.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dnardnar"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dnardnar"},"content":"    public String toDataString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dnardnar"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + start + \" | \" + end;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dnardnar"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dnardnar"},"content":"     * @return A formatted string showing the event details.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dnardnar"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dnardnar"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dnardnar"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"dnardnar":56}},{"path":"src/main/java/dnar/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"import java.util.List;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"public class Parser {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":"    public static void parse(String command, TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"                ui.exit();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"                ui.listTasks(taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"            } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"                int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"                taskList.validateIndex(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"                taskList.getTask(index).markDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"                storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"                ui.showMarkDone(taskList.getTask(index));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"            } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"                int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"                taskList.validateIndex(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"                taskList.getTask(index).markNotDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"                storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dnardnar"},"content":"                ui.showUnmarkDone(taskList.getTask(index));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dnardnar"},"content":"            } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dnardnar"},"content":"                String description \u003d command.substring(4).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dnardnar"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dnardnar"},"content":"                    throw new DNarException(\"NOOO!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dnardnar"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dnardnar"},"content":"                Task task \u003d new ToDo(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dnardnar"},"content":"                taskList.addTask(task, storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dnardnar"},"content":"                ui.showAddedTask(task, taskList.size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dnardnar"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dnardnar"},"content":"                String[] parts \u003d command.substring(8).split(\" /by \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dnardnar"},"content":"                if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dnardnar"},"content":"                    throw new DNarException(\"NOOO!!! Both description and deadline time cannot be empty.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dnardnar"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dnardnar"},"content":"                try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dnardnar"},"content":"                    Task task \u003d new Deadline(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dnardnar"},"content":"                    taskList.addTask(task, storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dnardnar"},"content":"                    ui.showAddedTask(task, taskList.size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dnardnar"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dnardnar"},"content":"                    throw new DNarException(\"Invalid date format! Please use yyyy-MM-dd.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dnardnar"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dnardnar"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dnardnar"},"content":"                String[] parts \u003d command.substring(5).split(\" /\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dnardnar"},"content":"                if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dnardnar"},"content":"                    throw new DNarException(\"NOOO!!! All fields for the event must be filled in.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dnardnar"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dnardnar"},"content":"                Task task \u003d new Event(parts[0], parts[1].substring(4), parts[2].substring(3));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dnardnar"},"content":"                taskList.addTask(task, storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dnardnar"},"content":"                ui.showAddedTask(task, taskList.size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dnardnar"},"content":"            } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dnardnar"},"content":"                int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dnardnar"},"content":"                Task removedTask \u003d taskList.deleteTask(index, storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dnardnar"},"content":"                ui.showDeletedTask(removedTask, taskList.size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dnardnar"},"content":"            } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dnardnar"},"content":"                String keyword \u003d command.substring(4).trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dnardnar"},"content":"                if (keyword.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dnardnar"},"content":"                    throw new DNarException(\"NOOO!!! The search keyword cannot be empty.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dnardnar"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dnardnar"},"content":"                List\u003cTask\u003e matchingTasks \u003d taskList.findTasksByKeyword(keyword);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dnardnar"},"content":"                if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dnardnar"},"content":"                    ui.showError(\"No tasks found with the keyword: \" + keyword);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dnardnar"},"content":"                } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dnardnar"},"content":"                    ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dnardnar"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dnardnar"},"content":"            } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dnardnar"},"content":"                throw new DNarException(\"HUHH!!! WDYM :-(\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dnardnar"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dnardnar"},"content":"        } catch (DNarException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dnardnar"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"dnardnar":75}},{"path":"src/main/java/dnar/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"import java.io.File;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":" * Handles the saving and loading of tasks from a file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"public class Storage {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"     * Constructs a Storage object with the given file path.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"     * Ensures the file and its parent directory exist.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"     * @param filePath The relative or absolute path to the storage file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dnardnar"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dnardnar"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dnardnar"},"content":"        ensureFileExists();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dnardnar"},"content":"     * Ensures that the storage file and its parent directory exist.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dnardnar"},"content":"     * Creates them if they do not exist.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dnardnar"},"content":"    private void ensureFileExists() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dnardnar"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dnardnar"},"content":"        File directory \u003d file.getParentFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dnardnar"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dnardnar"},"content":"            if (directory !\u003d null \u0026\u0026 !directory.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dnardnar"},"content":"                directory.mkdirs();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dnardnar"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dnardnar"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dnardnar"},"content":"                file.createNewFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dnardnar"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dnardnar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dnardnar"},"content":"            System.out.println(\"Error creating storage file: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dnardnar"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dnardnar"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dnardnar"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dnardnar"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dnardnar"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dnardnar"},"content":"                writer.write(task.toDataString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dnardnar"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dnardnar"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dnardnar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dnardnar"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dnardnar"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dnardnar"},"content":"     * @return A list of tasks retrieved from the file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dnardnar"},"content":"    public List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dnardnar"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dnardnar"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dnardnar"},"content":"            String line;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dnardnar"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dnardnar"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dnardnar"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dnardnar"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dnardnar"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dnardnar"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dnardnar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dnardnar"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dnardnar"},"content":"        return tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dnardnar"},"content":"     * Parses a line from the storage file and converts it into a Task object.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dnardnar"},"content":"     * Handles different task types such as ToDo, Deadline, and Event.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dnardnar"},"content":"     * @param line The line from the file to parse.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dnardnar"},"content":"     * @return A Task object, or null if the line is corrupted or invalid.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dnardnar"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dnardnar"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dnardnar"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dnardnar"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dnardnar"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dnardnar"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dnardnar"},"content":"            switch (type) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dnardnar"},"content":"                case \"T\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dnardnar"},"content":"                    return new ToDo(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dnardnar"},"content":"                case \"D\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dnardnar"},"content":"                    String deadlineDate \u003d DateTimeParser.unparseDate(parts[3]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dnardnar"},"content":"                    return new Deadline(description, deadlineDate, isDone);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dnardnar"},"content":"                case \"E\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dnardnar"},"content":"                    return new Event(description, parts[3], parts[4], isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dnardnar"},"content":"                default:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dnardnar"},"content":"                    System.out.println(\"Skipping corrupted entry: \" + line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dnardnar"},"content":"                    return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dnardnar"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dnardnar"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dnardnar"},"content":"            System.out.println(\"Skipping corrupted entry: \" + line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dnardnar"},"content":"            return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"dnardnar":118}},{"path":"src/main/java/dnar/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"    protected String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"    public void markDone() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"    public void markNotDone() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dnardnar"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dnardnar"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dnardnar"},"content":"    public abstract String toDataString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dnardnar"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dnardnar"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dnardnar"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"dnardnar":35}},{"path":"src/main/java/dnar/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":" * Manages a list of tasks, providing operations to add, delete, and retrieve tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"public class TaskList {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"     * Constructs a TaskList with a given list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dnardnar"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dnardnar"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dnardnar"},"content":"     * Adds a task to the list and saves the updated task list to storage.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dnardnar"},"content":"     * @param task     The task to be added.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dnardnar"},"content":"     * @param storage  The storage to save the updated task list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dnardnar"},"content":"    public void addTask(Task task, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dnardnar"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dnardnar"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dnardnar"},"content":"     * Deletes a task at the specified index and saves the updated task list to storage.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dnardnar"},"content":"     * @param index    The index of the task to be deleted.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dnardnar"},"content":"     * @param storage  The storage to save the updated task list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dnardnar"},"content":"     * @return The deleted task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dnardnar"},"content":"    public Task deleteTask(int index, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dnardnar"},"content":"        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dnardnar"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dnardnar"},"content":"        return removedTask;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dnardnar"},"content":"     * Retrieves a task from the list at the specified index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dnardnar"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dnardnar"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dnardnar"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dnardnar"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dnardnar"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dnardnar"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dnardnar"},"content":"    public int size() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dnardnar"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dnardnar"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dnardnar"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dnardnar"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dnardnar"},"content":"        return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dnardnar"},"content":"     * Validates whether the given index is within the valid range of task indices.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dnardnar"},"content":"     * @param index The index to validate.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dnardnar"},"content":"     * @throws DNarException If the index is out of bounds.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dnardnar"},"content":"    public void validateIndex(int index) throws DNarException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dnardnar"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) { // Changed to 0-based index","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dnardnar"},"content":"            throw new DNarException(\"This does not exist!! Try 1 to \" + tasks.size() + \" instead:D\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dnardnar"},"content":"    public List\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dnardnar"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dnardnar"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dnardnar"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dnardnar"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dnardnar"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dnardnar"},"content":"        return matchingTasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"dnardnar":102}},{"path":"src/main/java/dnar/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":" * Represents a ToDo task, which is a simple task without a specific date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"class ToDo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"     * Constructs a new ToDo task with the given description.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"     * Constructs a new ToDo task with the given description and completion status.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"     * @param isDone      Whether the task is marked as done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dnardnar"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dnardnar"},"content":"     * Returns a formatted string representation of the ToDo task for data storage.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dnardnar"},"content":"     * @return A string formatted as \"T | {status} | {description}\".","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dnardnar"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dnardnar"},"content":"    public String toDataString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dnardnar"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dnardnar"},"content":"     * Returns a string representation of the ToDo task, including its type and status.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dnardnar"},"content":"     * @return A string formatted as \"[T]{task description}\".","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dnardnar"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dnardnar"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dnardnar"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"dnardnar":46}},{"path":"src/main/java/dnar/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"import java.util.List;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":" * Handles interactions with the user, including displaying messages","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":" * and reading user input.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"public class UI {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"     * Constructs a new UI instance with a scanner for user input.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"    public UI() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"     * Prints a horizontal line for formatting output.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"    public void showLine() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dnardnar"},"content":"     * Displays the welcome message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dnardnar"},"content":"    public void greet() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\" Yo! I\u0027m DNar\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\" Can you?\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dnardnar"},"content":"     * Displays the exit message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dnardnar"},"content":"    public void exit() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\" Bye. Don\u0027t come back!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dnardnar"},"content":"     * Reads and returns the next user input command.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dnardnar"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dnardnar"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dnardnar"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dnardnar"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dnardnar"},"content":"     * @param taskList The TaskList containing the user\u0027s tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dnardnar"},"content":"    public void listTasks(TaskList taskList) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dnardnar"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dnardnar"},"content":"            System.out.println(\" Your task list is empty!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dnardnar"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dnardnar"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dnardnar"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dnardnar"},"content":"                System.out.println((i + 1) + \". \" + taskList.getTask(i));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dnardnar"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dnardnar"},"content":"     * Displays a message confirming that a task has been added.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dnardnar"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dnardnar"},"content":"     * @param size The total number of tasks after adding.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dnardnar"},"content":"    public void showAddedTask(Task task, int size) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\" Got ya.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\" More??? Added: \" + task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dnardnar"},"content":"        System.out.println(size + \" tasks in the list. Do you have more?\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dnardnar"},"content":"     * Displays a message confirming that a task has been deleted.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dnardnar"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dnardnar"},"content":"     * @param size The total number of tasks after deletion.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dnardnar"},"content":"    public void showDeletedTask(Task task, int size) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\" Shhh.. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dnardnar"},"content":"        System.out.println(size + \" tasks in the list. Delete more?\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dnardnar"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dnardnar"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dnardnar"},"content":"    public void showMarkDone(Task task) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\" That\u0027s crazyy!! Marking this task as done:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dnardnar"},"content":"     * Displays a message confirming that a task has been unmarked as done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dnardnar"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dnardnar"},"content":"    public void showUnmarkDone(Task task) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\" What have you done!! This task is undone:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dnardnar"},"content":"    public void showMatchingTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dnardnar"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dnardnar"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dnardnar"},"content":"     * Displays an error message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dnardnar"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dnardnar"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dnardnar"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\" \" + message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dnardnar"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dnardnar"},"content":"     * Displays an error message when loading tasks fails.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dnardnar"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dnardnar"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dnardnar"},"content":"        System.out.println(\" Error loading tasks. Starting with an empty list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dnardnar"},"content":"        showLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"dnardnar":153}},{"path":"src/test/java/dnar/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"import org.junit.jupiter.api.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"import java.io.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"    private static final String TEST_FILE_PATH \u003d \"data/test_DNar.txt\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"    @AfterEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"    public void tearDown() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"            file.delete();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dnardnar"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dnardnar"},"content":"    public void testSaveAndLoadTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dnardnar"},"content":"        Task task1 \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dnardnar"},"content":"        Task task2 \u003d new Deadline(\"Test Deadline\", \"2025-12-31\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dnardnar"},"content":"        Task task3 \u003d new Event(\"Test Event\", \"from Mon 2pm\", \"4pm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dnardnar"},"content":"        List\u003cTask\u003e tasksToSave \u003d List.of(task1, task2, task3);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dnardnar"},"content":"        System.out.println(task1.toDataString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dnardnar"},"content":"        System.out.println(task2.toDataString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dnardnar"},"content":"        System.out.println(task3.toDataString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dnardnar"},"content":"        storage.saveTasks(tasksToSave);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dnardnar"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dnardnar"},"content":"        assertEquals(3, loadedTasks.size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dnardnar"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dnardnar"},"content":"    public void testLoadEmptyFile() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dnardnar"},"content":"        storage.saveTasks(List.of()); // Save an empty list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dnardnar"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dnardnar"},"content":"        assertTrue(loadedTasks.isEmpty());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dnardnar"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dnardnar"},"content":"    public void testLoadCorruptedFile() throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dnardnar"},"content":"        // Write a corrupted entry to the test file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dnardnar"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(TEST_FILE_PATH))) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dnardnar"},"content":"            writer.write(\"INVALID DATA\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dnardnar"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dnardnar"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dnardnar"},"content":"        assertTrue(loadedTasks.isEmpty()); // Should skip corrupted data and return an empty list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"dnardnar":63}},{"path":"src/test/java/dnar/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"        storage \u003d new Storage(\"testData.txt\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"    public void testAddTask() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"        Task task \u003d new ToDo(\"Test ToDo Task\"); // Use a concrete subclass","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"        taskList.addTask(task, storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dnardnar"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dnardnar"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dnardnar"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dnardnar"},"content":"        Task task \u003d new ToDo(\"Test ToDo Task\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dnardnar"},"content":"        taskList.addTask(task, storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dnardnar"},"content":"        Task deletedTask \u003d taskList.deleteTask(0, storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dnardnar"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dnardnar"},"content":"        assertEquals(task, deletedTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dnardnar"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dnardnar"},"content":"    public void testValidateIndex() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dnardnar"},"content":"        Task task \u003d new ToDo(\"Test ToDo Task\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dnardnar"},"content":"        taskList.addTask(task, storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dnardnar"},"content":"        assertDoesNotThrow(() -\u003e taskList.validateIndex(0));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dnardnar"},"content":"        assertThrows(DNarException.class, () -\u003e taskList.validateIndex(1));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"dnardnar":45}},{"path":"src/test/java/dnar/UITest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"package dnar;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"public class UITest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"    private UI ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dnardnar"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dnardnar"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dnardnar"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dnardnar"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dnardnar"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"    public void testListTasksWithNoTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dnardnar"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dnardnar"},"content":"        ui.listTasks(taskList);  // Should print \"Your task list is empty!\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dnardnar"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dnardnar"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dnardnar"},"content":"    public void testListTasksWithTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dnardnar"},"content":"        Task task \u003d new ToDo(\"Test ToDo Task\");;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dnardnar"},"content":"        taskList.addTask(task, new Storage(\"testData.txt\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dnardnar"},"content":"        ui.listTasks(taskList);  // Should list the task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dnardnar"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dnardnar"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"dnardnar":29}},{"path":"testData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"T | 0 | Test ToDo Task","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"dnardnar":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dnardnar"},"content":"todo borrow book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dnardnar"},"content":"deadline return book /by 2025-02-15","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dnardnar"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dnardnar"},"content":"mark 0","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dnardnar"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dnardnar"},"content":"unmark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dnardnar"},"content":"mark 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dnardnar"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dnardnar"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"dnardnar":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dnardnar"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\dnar\\*.java","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dnardnar"},"content":"java -classpath ..\\bin DNar \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"dnardnar":2,"-":19}}]
