[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"checkstyle {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"sourceSets {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"    test {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"        java.srcDirs \u003d [\u0027src/test/java\u0027] // Ensure test sources are recognized","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jonzyyyy"},"content":"//    mainClass.set(\"yapper.Yapper\") // Updated main class","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jonzyyyy"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jonzyyyy"},"content":"    archiveBaseName \u003d \"yapper\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jonzyyyy"},"content":"    archiveFileName \u003d \"yapper.jar\"  // Custom JAR file name","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jonzyyyy"},"content":"    manifest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jonzyyyy"},"content":"        attributes \u0027Main-Class\u0027: \u0027yapper.Yapper\u0027 // Ensures correct entry point for JAR","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":33,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"# Yapper User Guide","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"![img.png](Ui.png)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"Yapper is a lightweight and intuitive list-tracking application designed to help users stay organised. Whether you need to manage tasks, events, or deadlines, ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"Yapper provides a simple yet powerful way to track your items efficiently.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"## Adding tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"Yapper provides functionality for 3 types of tasks:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"1. `todo`: This command adds a basic task to your list.  ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"    * Format: `todo {taskname}`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"2. `deadline`: This command adds a task with a deadline.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"    * Format: `deadline {deadline name} /by YYYY/MM/DD.` ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"3. `event`: This command adds a task with a start and end time.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"    * Format: `event (event name) /from YYYY/MM/DD HHMM /to YYYY/MM/DD HHMM`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    * Note: HHMM is in 24-hr format (e.g. 1559)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"Example: `event Annual Meeting /from 2025/02/01 1500 /to 2025/02/01 1700`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"Expected outcome:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"   [E](] Annual Meeting (from: 2025-02-01 15:00 to: 2025-02-01 17:00)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"## Listing Tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"Here\u0027s how you can list your tasks: `list`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"Expected output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"1.[E][] Annual Meeting (from: 2025-02-01 15:00 to: 2025-02-01 17:00)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"## Mark / Unmark tasks as completed","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"Here\u0027s how you can mark / unmark your tasks using `mark` and `unmark`:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"For `mark 1` where `1` refers to the index referenced by `list`:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"   [E][X] Annual Meeting (from: 2025-02-01 15:00 to: 2025-02-01 17:00)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"For `unmark 1` where `1` refers to the index referenced by `list`:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"   [E][] Annual Meeting (from: 2025-02-01 15:00 to: 2025-02-01 17:00)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"## Delete","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jonzyyyy"},"content":"Here\u0027s how you can delete your tasks using `delete`:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jonzyyyy"},"content":"Input: `delete 1` where `1` refers to the index referenced by `list`:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jonzyyyy"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jonzyyyy"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jonzyyyy"},"content":"   [E][] Annual Meeting (from: 2025-02-01 15:00 to: 2025-02-01 17:00)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jonzyyyy"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jonzyyyy"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":45,"-":18}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"    private void flip() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jonzyyyy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jonzyyyy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jonzyyyy"},"content":"        db.flip();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jonzyyyy"},"content":"        return db;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":60}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"public class Launcher {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"import yapper.Yapper;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"    private Yapper yapper;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"     * Constructs a Main instance and initializes the Yapper instance.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"     * The Yapper instance is created with a file path pointing to \"data/YapperTasks.txt\",","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"     * ensuring that task data is stored persistently in the project\u0027s data directory.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"    public Main() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"        String filePath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"YapperTasks.txt\").toString();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"        yapper \u003d new Yapper(filePath);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"            stage.setMinHeight(600);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"            stage.setMinWidth(700);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setYapper(yapper); // inject the Duke instance","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"            stage.show();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":42}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import yapper.Yapper;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"    private Yapper yapper;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    private Image yapperImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"    public void setYapper(Yapper y) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"        yapper \u003d y;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"                DialogBox.getDukeDialog(y.getIntroduction(), yapperImage)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"        );","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"    @FXML","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d yapper.getResponse(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"                DialogBox.getDukeDialog(response, yapperImage)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"        );","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":55}},{"path":"src/main/java/yapper/Yapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import yapper.datastorage.DataStorage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import yapper.parser.Parser;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import yapper.ui.UI;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":" * The main class for the Yapper chatbot, which manages task storage, user interactions, and command execution.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"public class Yapper {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"    private DataStorage dataStorage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"    private UI ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"     * Constructs a {@code Yapper} chatbot instance. Initializes data storage, loads existing tasks, and sets up user","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"     * interaction.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"    public Yapper(String filePath) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"        dataStorage \u003d new DataStorage(filePath);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"        taskList \u003d dataStorage.loadData();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"        taskList.activateToPrint();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"    public String getIntroduction() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"        return ui.getIntroduction();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"     * Runs the chatbot, handling user input, executing commands, and managing task persistence. The chatbot","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"     * continues running until the user enters the \"bye\" command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"        String request \u003d input.trim();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"        String command \u003d Parser.parseCommand(request);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"            return ui.getExit();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"        // Modifies `taskList` directly","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d Parser.executeCommand(request, taskList);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"        dataStorage.saveData(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"        return response;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":47}},{"path":"src/main/java/yapper/datastorage/DataStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.datastorage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import java.io.File;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"import yapper.parser.Parser;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":" * Handles loading and saving of tasks from a data file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"public class DataStorage {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"    private File file;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"     * Constructs a DataStorage instance with the given file path.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"     * @param filePath The path to the file used for storing task data.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"    public DataStorage(String filePath) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"File path must not be null or empty\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"     * Loads tasks from the data file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"     * If the file does not exist, it is created, and an empty task list is returned.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"     * @return A TaskList containing the tasks loaded from the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"    public TaskList loadData() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"            // Ensure the parent directory exists","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"            File parentDir \u003d this.file.getParentFile();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"            if (!parentDir.exists() \u0026\u0026 !parentDir.mkdirs()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"                System.out.println(\"Failed to create directory: \" + parentDir.getAbsolutePath());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"            // Create file if it does not exist","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"            assert this.file !\u003d null : \"File object is not initialized properly\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"            if (!this.file.exists() \u0026\u0026 !this.file.createNewFile()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"                System.out.println(\"Error: Failed to create file.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"                return taskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"            if (!this.file.exists() \u0026\u0026 !this.file.createNewFile()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"                System.out.println(\"Error: Failed to create file.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"                return taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jonzyyyy"},"content":"            // Read the file","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jonzyyyy"},"content":"            try (Scanner scanner \u003d new Scanner(this.file)) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jonzyyyy"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jonzyyyy"},"content":"                    String line \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jonzyyyy"},"content":"                    if (!line.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jonzyyyy"},"content":"                        Parser.executeCommand(line, taskList);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jonzyyyy"},"content":"                    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jonzyyyy"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jonzyyyy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jonzyyyy"},"content":"            System.out.println(\"Error: File not found. \" + e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jonzyyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jonzyyyy"},"content":"            System.out.println(\"An IO error occurred: \" + e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jonzyyyy"},"content":"        return taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jonzyyyy"},"content":"     * Saves the current list of tasks to the data file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jonzyyyy"},"content":"     * If the parent directory does not exist, it is created before writing to the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jonzyyyy"},"content":"     * @param taskList The list of tasks to be saved to the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jonzyyyy"},"content":"    public void saveData(TaskList taskList) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jonzyyyy"},"content":"        assert this.file !\u003d null \u0026\u0026 this.file.canWrite() : \"File must be writable before saving data\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jonzyyyy"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(this.file)) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jonzyyyy"},"content":"            assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jonzyyyy"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jonzyyyy"},"content":"            assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jonzyyyy"},"content":"            // Ensure the parent directory exists","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jonzyyyy"},"content":"            File parentDir \u003d this.file.getParentFile();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jonzyyyy"},"content":"            if (!parentDir.exists() \u0026\u0026 !parentDir.mkdirs()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jonzyyyy"},"content":"                System.out.println(\"Failed to create directory: \" + parentDir.getAbsolutePath());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jonzyyyy"},"content":"            // Write to file","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jonzyyyy"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jonzyyyy"},"content":"                fileWriter.write(task.getUserInput() + \"\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jonzyyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jonzyyyy"},"content":"            System.out.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":100}},{"path":"src/main/java/yapper/exceptions/InvalidTaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.exceptions;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":" * Exception thrown when an invalid task type is encountered.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"public class InvalidTaskType extends RuntimeException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"     * Constructs a new {@code InvalidTaskType} exception with the specified detail message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"     * @param message The detail message explaining the reason for the exception.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"    public InvalidTaskType(String message) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"        super(message);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":16}},{"path":"src/main/java/yapper/exceptions/MissingTaskArgs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.exceptions;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":" * Exception thrown when a required argument for a task is missing.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"public class MissingTaskArgs extends RuntimeException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"     * Constructs a new {@code MissingTaskArgs} exception with the specified detail message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"     * @param message The detail message explaining the reason for the exception.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"    public MissingTaskArgs(String message) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"        super(message);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":16}},{"path":"src/main/java/yapper/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.parser;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import yapper.exceptions.MissingTaskArgs;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.Deadline;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.Event;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.ToDo;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":" * The {@code Parser} class is responsible for interpreting user commands","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":" * and executing the corresponding actions on the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"public class Parser {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"     * Private constructor to prevent instantiation of the {@code Parser} class.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"    private Parser() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"     * @param request The user input string containing command and relevant task details.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"     * @return The command word extracted from the user input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    public static String parseCommand(String request) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"        return request.split(\" \")[0];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"     * Executes the user input request on the provided {@code TaskList}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"     * Supported commands:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"     *   \u003cli\u003e{@code list} - Prints the task list.\u003c/li\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"     *   \u003cli\u003e{@code todo} - Adds a new ToDo task.\u003c/li\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"     *   \u003cli\u003e{@code deadline} - Adds a new Deadline task.\u003c/li\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"     *   \u003cli\u003e{@code event} - Adds a new Event task.\u003c/li\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"     *   \u003cli\u003e{@code mark} - Marks a task as completed.\u003c/li\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"     *   \u003cli\u003e{@code unmark} - Unmarks a completed task.\u003c/li\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"     *   \u003cli\u003e{@code delete} - Deletes a task from the list.\u003c/li\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"     * If an unsupported command is entered, an error message is displayed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"     * @param request  The user input command string.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"     * @return The updated task list after executing the command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"    public static String executeCommand(String request, TaskList taskList) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"        String[] splitRequest \u003d request.split(\" \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"        String command \u003d splitRequest[0];","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d \"\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"            switch (command) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jonzyyyy"},"content":"            case \"list\" -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jonzyyyy"},"content":"                response \u003d taskList.toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jonzyyyy"},"content":"            case \"todo\" -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jonzyyyy"},"content":"                Task newTask \u003d new ToDo(request);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jonzyyyy"},"content":"                response \u003d taskList.addTask(newTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jonzyyyy"},"content":"            case \"deadline\" -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jonzyyyy"},"content":"                Task newTask \u003d new Deadline(request);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jonzyyyy"},"content":"                response \u003d taskList.addTask(newTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jonzyyyy"},"content":"            case \"event\" -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jonzyyyy"},"content":"                Task newTask \u003d new Event(request);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jonzyyyy"},"content":"                response \u003d taskList.addTask(newTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jonzyyyy"},"content":"            case \"mark\" -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jonzyyyy"},"content":"                int index \u003d splitRequest[1].charAt(0) - \u00270\u0027 - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jonzyyyy"},"content":"                response \u003d taskList.markItem(index);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jonzyyyy"},"content":"            case \"unmark\" -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jonzyyyy"},"content":"                int index \u003d splitRequest[1].charAt(0) - \u00270\u0027 - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jonzyyyy"},"content":"                response \u003d taskList.unmarkItem(index);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jonzyyyy"},"content":"            case \"delete\" -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jonzyyyy"},"content":"                response \u003d taskList.deleteTask(splitRequest[1]);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jonzyyyy"},"content":"            case \"find\" -\u003e {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jonzyyyy"},"content":"                // Splits the request into \"find\" \"Keyword / keywords\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jonzyyyy"},"content":"                String keyword \u003d request.split(\" \", 2)[1];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jonzyyyy"},"content":"                response \u003d taskList.findTask(keyword);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jonzyyyy"},"content":"            case \"reset\" -\u003e {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jonzyyyy"},"content":"                response \u003d taskList.deleteAllTasks();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jonzyyyy"},"content":"            default -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jonzyyyy"},"content":"                response \u003d \"Come on we\u0027ve been through this. \"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jonzyyyy"},"content":"                        + \"I only understand these 3 commands: \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027.\\n\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jonzyyyy"},"content":"                        + \"Please give it in this format {Command taskname}\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jonzyyyy"},"content":"        } catch (MissingTaskArgs e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jonzyyyy"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jonzyyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jonzyyyy"},"content":"            response \u003d \"Please enter a valid index to remove task according to the list.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jonzyyyy"},"content":"        return response;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":102}},{"path":"src/main/java/yapper/tasktypes/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.tasktypes;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import yapper.exceptions.InvalidTaskType;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"import yapper.exceptions.MissingTaskArgs;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":" * Represents a deadline task with a specific date and time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"    private final LocalDate date;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    private final LocalTime time;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"     * Constructs a {@code Deadline} task from the given user request. The request must be formatted as: {@code","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"     * deadline task_name /by yyyy/MM/dd HHmm}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"     * @param request The user input containing the task name and deadline details.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"     * @throws MissingTaskArgs If the required arguments are missing or incorrectly formatted.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    public Deadline(String request) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"        this.request \u003d request;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"        String[] splitString \u003d request.split(\" /by \", 2);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"        if (splitString.length \u003c 2) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"            throw new MissingTaskArgs(\"\\tHey! I don\u0027t quite understand you. \"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"                    + \"Remember for Deadline \"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"                    + \"Give it in this format: command name /by date\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"        // Extract task name","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"        this.taskName \u003d splitString[0].replace(\"deadline\", \"\").trim();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"        // Split date and time separately","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"        String[] dateTimeParts \u003d splitString[1].trim().split(\" \", 2);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"        if (dateTimeParts.length \u003c 2) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"            throw new MissingTaskArgs(\"\\tHey! I don\u0027t quite understand you. \"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"                    + \"Remember for Deadline Give it in this format: \"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"                    + \"command name /by YYYY/MM/DD HHmm\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"            DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"            this.date \u003d LocalDate.parse(dateTimeParts[0].trim(), dateFormatter);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"            this.time \u003d LocalTime.parse(dateTimeParts[1].trim(), timeFormatter);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jonzyyyy"},"content":"            throw new InvalidTaskType(\"\\tHey! I don\u0027t quite understand you. \"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jonzyyyy"},"content":"                    + \"Remember for Deadline Give it in this format: \"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jonzyyyy"},"content":"                    + \"command name /by YYYY/MM/DD HHmm\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jonzyyyy"},"content":"     * Returns a string representation of the deadline task, including the date and time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jonzyyyy"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jonzyyyy"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jonzyyyy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jonzyyyy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date + \" \" + this.time + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":70}},{"path":"src/main/java/yapper/tasktypes/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.tasktypes;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import yapper.exceptions.InvalidTaskType;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"import yapper.exceptions.MissingTaskArgs;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":" * Represents an event task with a specific start and end date/time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    private LocalTime fromTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"    private LocalDate toDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"    private LocalTime toTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"     * Constructs an {@code Event} task from the given user request.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"     * The request must be formatted as: {@code event task_name /from YYYY/MM/DD HHmm /to YYYY/MM/DD HHmm}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"     * @param request The user input containing the task name, start time, and end time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"     * @throws MissingTaskArgs If the required arguments are missing or incorrectly formatted.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"    public Event(String request) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"        this.request \u003d request;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"        String[] splitString \u003d request.split(\"event | /from | /to \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"        if (splitString.length \u003c 4) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"            throw new MissingTaskArgs(\"\\tHey! I don\u0027t quite understand you. Remember for Events \"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"                    + \"Give it in this format: command name /from {YYYY/MM/DD} {0000} /to {YYYY/MM/DD} {2359}\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"        this.taskName \u003d splitString[1].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"            // Split date and time separately","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"            String[] fromDateTime \u003d splitString[2].trim().split(\" \");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"            String[] toDateTime \u003d splitString[3].trim().split(\" \");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"            this.fromDate \u003d LocalDate.parse(fromDateTime[0], dateFormatter);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"            this.fromTime \u003d LocalTime.parse(fromDateTime[1], timeFormatter);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"            this.toDate \u003d LocalDate.parse(toDateTime[0], dateFormatter);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"            this.toTime \u003d LocalTime.parse(toDateTime[1], timeFormatter);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"            throw new InvalidTaskType(\"\\tHey! I don\u0027t quite understand you. \"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"                    + \"Give it in this format: command name /from {YYYY/MM/DD} {0000} \"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"                    + \"/to {YYYY/MM/DD} {2359}\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jonzyyyy"},"content":"     * Returns a string representation of the event task, including start and end date/time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jonzyyyy"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jonzyyyy"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jonzyyyy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jonzyyyy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.fromDate + \" \" + this.fromTime","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jonzyyyy"},"content":"                + \" to: \" + this.toDate + \" \" + this.toTime + \")\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":64}},{"path":"src/main/java/yapper/tasktypes/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.tasktypes;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":" * Represents an abstract task that can be marked as completed or not completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":" * It serves as a base class for different types of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"    protected String request;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"    protected String taskName;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"    private boolean isCompleted \u003d false;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"     * Returns a string representation of the task, indicating its completion status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"     * @return A formatted string showing whether the task is completed or not.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"        if (isCompleted) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"            return \"[X] \" + this.taskName;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"        return \"[ ] \" + taskName;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"    public void setCompleted() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"    public void setNotCompleted() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"     * Returns the original user input associated with this task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"     * @return The user input string used to create this task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"    public String getUserInput() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"        return this.request;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"    public boolean getIsCompleted() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"        return this.isCompleted;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"    protected String getTaskName() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"        return this.taskName;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":56}},{"path":"src/main/java/yapper/tasktypes/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.tasktypes;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":" * Represents a list of tasks that can be manipulated by adding, removing,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":" * marking, and unmarking tasks. Supports optional printing of operations.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"public class TaskList {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"    private boolean isPrintEnabled \u003d false;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"     * Activates printing of messages when tasks are added, removed, or modified.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"    public void activateToPrint() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"        this.isPrintEnabled \u003d true;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"     * Deactivates printing of messages when tasks are added, removed, or modified.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"    public void deactivateToPrint() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"        this.isPrintEnabled \u003d false;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"     * If printing is enabled, a confirmation message is displayed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"    public String addTask(Task newTask) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"        String str \u003d \"\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"            if (Objects.equals(this.tasks.get(i).taskName, newTask.taskName)) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"                return \"Sorry, you already have a task with the same name in the list!\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"        if (this.isPrintEnabled) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"            str \u003d (\"Got it. I\u0027ve added this task:\\n\\t\" + newTask","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"                + \"\\nNow you have \" + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"        return str;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jonzyyyy"},"content":"     * Deletes a task from the task list based on its index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jonzyyyy"},"content":"     * If printing is enabled, a confirmation message is displayed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jonzyyyy"},"content":"     * @param strIndex The index of the task to be removed (1-based).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jonzyyyy"},"content":"    public String deleteTask(String strIndex) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jonzyyyy"},"content":"        String str \u003d \"\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jonzyyyy"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jonzyyyy"},"content":"            int index \u003d Integer.parseInt(strIndex) - 1;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jonzyyyy"},"content":"            if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jonzyyyy"},"content":"                str \u003d \"Error: Invalid index. Please enter a number between 1 and \" + this.tasks.size();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jonzyyyy"},"content":"            Task task \u003d this.tasks.remove(index);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jonzyyyy"},"content":"            if (this.isPrintEnabled) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jonzyyyy"},"content":"                str \u003d \"Noted. I\u0027ve removed this task:\\n\\t\" + task","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jonzyyyy"},"content":"                    + \"\\nNow you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jonzyyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jonzyyyy"},"content":"            return \"Please enter a valid index to remove task according to the list.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jonzyyyy"},"content":"        return str;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jonzyyyy"},"content":"     * Finds respective tasks from the task list based on string matching.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jonzyyyy"},"content":"     * @param keyword The keyword(s) that may be found in a task name","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jonzyyyy"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jonzyyyy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jonzyyyy"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jonzyyyy"},"content":"        boolean hasFoundTask \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jonzyyyy"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jonzyyyy"},"content":"            if (task.taskName.contains(keyword)) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jonzyyyy"},"content":"                if (!hasFoundTask) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jonzyyyy"},"content":"                    sb.append(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jonzyyyy"},"content":"                    hasFoundTask \u003d true;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jonzyyyy"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jonzyyyy"},"content":"                sb.append(\"\\n\\t\" + index + \".\" + task);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jonzyyyy"},"content":"                index++;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jonzyyyy"},"content":"        if (!hasFoundTask) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jonzyyyy"},"content":"            sb.append(\"There are no matching tasks in your list containing: \" + keyword);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jonzyyyy"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jonzyyyy"},"content":"    private String toggleTaskCompletion(int index, boolean completed) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jonzyyyy"},"content":"        String str \u003d \"\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jonzyyyy"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jonzyyyy"},"content":"            str \u003d \"Please enter a valid index to remove task according to the list.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jonzyyyy"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jonzyyyy"},"content":"        if (completed) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jonzyyyy"},"content":"            task.setCompleted();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jonzyyyy"},"content":"            if (isPrintEnabled) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jonzyyyy"},"content":"                str \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jonzyyyy"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jonzyyyy"},"content":"            task.setNotCompleted();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jonzyyyy"},"content":"            if (isPrintEnabled) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jonzyyyy"},"content":"                str \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jonzyyyy"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jonzyyyy"},"content":"        if (isPrintEnabled) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jonzyyyy"},"content":"            str +\u003d \"\\n\\t\" + task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jonzyyyy"},"content":"        return str;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jonzyyyy"},"content":"     * Marks a task as completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jonzyyyy"},"content":"     * If printing is enabled, a confirmation message is displayed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jonzyyyy"},"content":"     * @param index The zero-based index of the task to be marked as done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jonzyyyy"},"content":"    public String markItem(int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jonzyyyy"},"content":"        return toggleTaskCompletion(index, true);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jonzyyyy"},"content":"     * Unmarks a completed task, setting it back to not completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jonzyyyy"},"content":"     * If printing is enabled, a confirmation message is displayed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jonzyyyy"},"content":"     * @param index The zero-based index of the task to be unmarked.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jonzyyyy"},"content":"    public String unmarkItem(int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jonzyyyy"},"content":"        return toggleTaskCompletion(index, false);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jonzyyyy"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jonzyyyy"},"content":"     * @return An {@code ArrayList} containing all tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jonzyyyy"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jonzyyyy"},"content":"        return this.tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jonzyyyy"},"content":"     * Deletes all tasks.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jonzyyyy"},"content":"     * @return A {@code String} responding to request.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jonzyyyy"},"content":"    public String deleteAllTasks() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jonzyyyy"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jonzyyyy"},"content":"        return \"All tasks deleted.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jonzyyyy"},"content":"     * Returns a string representation of the task list, displaying all tasks in order.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jonzyyyy"},"content":"     * @return A formatted string representing the list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jonzyyyy"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jonzyyyy"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jonzyyyy"},"content":"        StringBuilder sb \u003d new StringBuilder(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jonzyyyy"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jonzyyyy"},"content":"            sb.append(\"\\n\\t\").append(i + 1).append(\".\").append(tasks.get(i));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jonzyyyy"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":181}},{"path":"src/main/java/yapper/tasktypes/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.tasktypes;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import yapper.exceptions.MissingTaskArgs;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":" * Represents a ToDo task, which consists only of a task name without any date or time constraints.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"     * Constructs a {@code ToDo} task from the given user request.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"     * The request must be formatted as: {@code todo task_name}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"     * @param request The user input containing the task name.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"     * @throws MissingTaskArgs If the task name is missing from the request.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    public ToDo(String request) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"        this.request \u003d request;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"        String[] splitString \u003d request.split(\" \", 2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"        if (splitString.length \u003c 2 || splitString[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"            throw new MissingTaskArgs(\"\\tHey! Don\u0027t just tell me the type of command, tell me \"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"                    + \"what your task is. And leave a space between words, will ya.\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"        this.taskName \u003d splitString[1];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"     * @return A formatted string representing the ToDo task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":36}},{"path":"src/main/java/yapper/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":" * Handles the user interface for the Yapper chatbot,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":" * including displaying messages and formatting output.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"public class UI {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"    private static final int HORIZONTAL_LINE_LENGTH \u003d 80;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"    private static final String NAME \u003d \"Yapper\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"     * Constructs a {@code UI} instance with the chatbot\u0027s name.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"    public UI() {}","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"     * Prints the chatbot\u0027s introduction message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"    public String getIntroduction() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"        return \"Hello! I\u0027m \" + NAME + \". What can I do for you?\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"     * Prints the chatbot\u0027s exit message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    public String getExit() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":29}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":19}},{"path":"src/test/java/yapper/YapperTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"import yapper.ui.UI;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"class YapperTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"    private Yapper yapper;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"    void setUp() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"        try (FileWriter writer \u003d new FileWriter(\"../testData/YapperTasks.txt\", false)) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"            // Writing nothing to the file clears it","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"            System.out.println(\"File reset successfully.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"            System.err.println(\"Error resetting file: \" + e.getMessage());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"        yapper \u003d new Yapper(\"../testData/YapperTasks.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"    void testGetIntroduction() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"        String expectedIntroduction \u003d ui.getIntroduction();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(expectedIntroduction, yapper.getIntroduction(), \"Introduction message should match UI class output.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"    void testGetResponse_listCommand() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d yapper.getResponse(\"list\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"        String expectedResponse \u003d \"\\tHere are the tasks in your list:\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(expectedResponse, response, \"List command should return a response with no items .\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"    void testGetResponse_addToDo() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d yapper.getResponse(\"todo Read a book\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"        String expectedResponse \u003d \"Got it. I\u0027ve added this task:\\n\\t[T][ ] Read a book\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"                + \"\\nNow you have 1 tasks in the list.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(expectedResponse, response, \"ToDo task should be added correctly.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"    void testGetResponse_markTask() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"        yapper.getResponse(\"todo Read a book\"); // Add task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d yapper.getResponse(\"mark 1\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"        String expectedResponse \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t[T][X] Read a book\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(expectedResponse, response, \"Task should be marked as completed.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jonzyyyy"},"content":"    void testGetResponse_unmarkTask() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jonzyyyy"},"content":"        yapper.getResponse(\"todo Read a book\"); // Add task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jonzyyyy"},"content":"        yapper.getResponse(\"mark 1\"); // Mark task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d yapper.getResponse(\"unmark 1\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jonzyyyy"},"content":"        String expectedResponse \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\\t[T][ ] Read a book\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(expectedResponse, response, \"Task should be unmarked correctly.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jonzyyyy"},"content":"    void testGetResponse_deleteTask() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jonzyyyy"},"content":"        yapper.getResponse(\"todo Read a book\"); // Add task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d yapper.getResponse(\"delete 1\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jonzyyyy"},"content":"        String expectedResponse \u003d \"Noted. I\u0027ve removed this task:\\n\\t[T][ ] Read a book\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jonzyyyy"},"content":"                + \"\\nNow you have 0 tasks in the list.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(expectedResponse, response, \"Task should be deleted correctly.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jonzyyyy"},"content":"    void testGetResponse_invalidCommand() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d yapper.getResponse(\"invalidCommand\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jonzyyyy"},"content":"        String expectedResponse \u003d \"Come on we\u0027ve been through this. I only understand these 3 commands: \u0027todo\u0027, \"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jonzyyyy"},"content":"                + \"\u0027deadline\u0027, \u0027event\u0027.\\nPlease give it in this format {Command taskname}\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(expectedResponse, response, \"Invalid command should return the expected error message.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jonzyyyy"},"content":"    void testGetResponse_byeCommand() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d yapper.getResponse(\"bye\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jonzyyyy"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(ui.getExit(), response, \"Exit message should match UI class output.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":90}},{"path":"src/test/java/yapper/datastorage/DataStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.datastorage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import java.io.File;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"class DataStorageTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"    private DataStorage dataStorage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    private final String testFilePath \u003d \"test_data/YapperTest.txt\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"    void setUp() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"        dataStorage \u003d new DataStorage(testFilePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"    void testLoadDataEmptyFile() throws IOException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"        // Ensure test file is empty","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"        File file \u003d new File(testFilePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"        file.getParentFile().mkdirs(); // Ensure directory exists","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"        file.createNewFile();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"        new FileWriter(file, false).close(); // Clear file contents","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"        TaskList taskList \u003d dataStorage.loadData();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"        assertNotNull(taskList, \"TaskList should not be null\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(0, taskList.getList().size(), \"TaskList should be empty for an empty file\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"    void testLoadDataWithTasks() throws IOException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"        // Prepare test file with mock task data","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"        File file \u003d new File(testFilePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"        try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"            writer.write(\"todo Read a book\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"            writer.write(\"deadline Submit assignment /by 2024/02/05 0000\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"        TaskList taskList \u003d dataStorage.loadData();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(2, taskList.getList().size(), \"TaskList should contain 2 tasks\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"todo Read a book\", taskList.getList().get(0).getUserInput(), \"First task should match\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"deadline Submit assignment /by 2024/02/05 0000\", taskList.getList().get(1).getUserInput(),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"                \"Second task should match\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":52}},{"path":"src/test/java/yapper/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.parser;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import yapper.exceptions.MissingTaskArgs;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.ToDo;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"class ParserTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"    void testValidToDoCreation() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"        ToDo todo \u003d new ToDo(\"todo Read a book\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"[T][ ] Read a book\", todo.toString(), \"String representation should be formatted correctly.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"    void testToDoMissingTaskArgs() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"        Exception exception \u003d assertThrows(MissingTaskArgs.class, () -\u003e new ToDo(\"todo\"),","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"                \"Should throw MissingTaskArgs exception when no task name is provided.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"\\tHey! Don\u0027t just tell me the type of command, tell me what your task is. And leave a space between words, will ya.\",","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"                exception.getMessage(), \"Error message should match expected output.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"    void testToDoWhitespaceTaskName() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"        Exception exception \u003d assertThrows(MissingTaskArgs.class, () -\u003e new ToDo(\"todo \"),","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"                \"Should throw MissingTaskArgs exception when task name is only whitespace.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"\\tHey! Don\u0027t just tell me the type of command, tell me what your task is. And leave a space between words, will ya.\",","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"                exception.getMessage(), \"Error message should match expected output.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"    void testToDoToString() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"        ToDo todo \u003d new ToDo(\"todo Finish homework\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"[T][ ] Finish homework\", todo.toString(), \"ToString should return formatted ToDo task.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":41}},{"path":"src/test/java/yapper/taskTypes/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.taskTypes;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.ToDo;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"class TaskListTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"    void setUp() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"        taskList \u003d new TaskList(); // Initialize a new TaskList before each test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"    void testAddTask() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"        Task task \u003d new ToDo(\"todo Read a book\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(1, taskList.getList().size(), \"TaskList should contain 1 task.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"[T][ ] Read a book\", taskList.getList().get(0).toString(),","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"                \"Task should be correctly added.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"    void testDeleteTask_validIndex() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"        Task task \u003d new ToDo(\"todo Read a book\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"        taskList.activateToPrint();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d taskList.deleteTask(\"1\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(0, taskList.getList().size(), \"TaskList should be empty after deletion.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n\\t[T][ ] Read a book\\nNow you have 0 tasks in the list.\",","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"                response, \"Delete confirmation message should match.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"    void testDeleteTask_invalidIndex() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jonzyyyy"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.deleteTask(\"1\"),","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"                \"Should throw an exception for invalid index.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"    void testFindTask_found() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jonzyyyy"},"content":"        Task task \u003d new ToDo(\"todo Read a book\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jonzyyyy"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d taskList.findTask(\"Read\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"Here are the matching tasks in your list:\\n\\t1.[T][ ] Read a book\", response,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jonzyyyy"},"content":"                \"Search should return the correct task.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jonzyyyy"},"content":"    void testFindTask_notFound() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jonzyyyy"},"content":"        Task task \u003d new ToDo(\"todo Read a book\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jonzyyyy"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d taskList.findTask(\"Write\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"There are no matching tasks in your list containing: Write\", response,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jonzyyyy"},"content":"                \"Search should return a not found message.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jonzyyyy"},"content":"    void testMarkItem_validIndex() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jonzyyyy"},"content":"        Task task \u003d new ToDo(\"todo Read a book\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jonzyyyy"},"content":"        taskList.activateToPrint();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jonzyyyy"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d taskList.markItem(0);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jonzyyyy"},"content":"        assertTrue(taskList.getList().get(0).getIsCompleted(), \"Task should be marked as completed.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"Nice! I\u0027ve marked this task as done:\\n\\t[T][X] Read a book\", response,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jonzyyyy"},"content":"                \"Mark confirmation message should match.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jonzyyyy"},"content":"    void testUnmarkItem_validIndex() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jonzyyyy"},"content":"        Task task \u003d new ToDo(\"todo Read a book\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jonzyyyy"},"content":"        taskList.activateToPrint();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jonzyyyy"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jonzyyyy"},"content":"        taskList.markItem(0);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d taskList.unmarkItem(0);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jonzyyyy"},"content":"        assertFalse(taskList.getList().get(0).getIsCompleted(), \"Task should be unmarked as not completed.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"OK, I\u0027ve marked this task as not done yet:\\n\\t[T][ ] Read a book\", response,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jonzyyyy"},"content":"                \"Unmark confirmation message should match.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jonzyyyy"},"content":"    void testToString_emptyList() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jonzyyyy"},"content":"        String response \u003d taskList.toString();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"\\tHere are the tasks in your list:\", response,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jonzyyyy"},"content":"                \"Empty task list should return correct message.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jonzyyyy"},"content":"    void testToString_withTasks() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jonzyyyy"},"content":"        taskList.addTask(new ToDo(\"todo Read a book\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jonzyyyy"},"content":"        taskList.addTask(new ToDo(\"todo Write notes\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jonzyyyy"},"content":"        String expected \u003d \"\\tHere are the tasks in your list:\\n\\t1.[T][ ] Read a book\\n\\t2.[T][ ] Write notes\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(expected, taskList.toString(), \"TaskList should return the correctly formatted string.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jonzyyyy"},"content":"    void testAddDuplicateTask() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jonzyyyy"},"content":"        Task task1 \u003d new ToDo(\"todo Read a book\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jonzyyyy"},"content":"        Task task2 \u003d new ToDo(\"todo Read a book\"); // Duplicate task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jonzyyyy"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jonzyyyy"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(1, taskList.getList().size(), \"TaskList should allow duplicate tasks.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"[T][ ] Read a book\", taskList.getList().get(0).toString(), \"First task should match.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":116}},{"path":"src/test/java/yapper/taskTypes/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.taskTypes;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"import yapper.exceptions.MissingTaskArgs;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"import yapper.tasktypes.ToDo;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"class ToDoTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"    void testValidToDoCreation() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"        ToDo todo \u003d new ToDo(\"todo Read a book\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"[T][ ] Read a book\", todo.toString(), \"ToDo string representation should match expected format.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"    void testToDoWhitespaceTaskName() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"        Exception exception \u003d assertThrows(MissingTaskArgs.class, () -\u003e {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"            new ToDo(\" \");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"        });","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"\\tHey! Don\u0027t just tell me the type of command, tell me what your task is.\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"                        + \" And leave a space between words, will ya.\",","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"                exception.getMessage(), \"Expected exception message for whitespace task name.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"    void testToDoMissingTaskArgs() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"        Exception exception \u003d assertThrows(MissingTaskArgs.class, () -\u003e {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"            new ToDo(\"\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"        });","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"\\tHey! Don\u0027t just tell me the type of command, tell me what your task is. \"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"                        + \"And leave a space between words, will ya.\",","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"                exception.getMessage(), \"Expected exception message for missing task name.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"    void testToDoToString() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jonzyyyy"},"content":"        ToDo todo \u003d new ToDo(\"todo Write a report\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(\"[T][ ] Write a report\", todo.toString(), \"ToDo string representation should match.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":44}},{"path":"src/test/java/yapper/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"package yapper.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"class UiTest {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"    private UI ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"    void setUp() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"        // Create the UI object with a placeholder name","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"    void testGetIntroduction() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"        String actualOutput \u003d ui.getIntroduction();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"        String expectedOutput \u003d \"Hello! I\u0027m Yapper. What can I do for you?\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(expectedOutput, actualOutput, \"Introduction message should match expected output.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    void testGetExit() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"        String actualOutput \u003d ui.getExit();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"        String expectedOutput \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"        assertEquals(expectedOutput, actualOutput, \"Exit message should match expected output.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":32}},{"path":"text-ui-test/EXPECTED-DATAFILE.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"todo return book","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"deadline return book /by 2025/01/01 0000","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"event project meeting /from 2025/01/02 1200 /to 2025/01/01 1400","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"todo run","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"todo walk","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"event fly /from 2025/02/02 1800 /to 2025/02/01 1900","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":6}},{"path":"text-ui-test/input1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"todo read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"todo return book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"mark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"unmark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"deadline return book /by 2025/01/01 0000","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"event project meeting /from 2025/01/02 1200 /to 2025/01/01 1400","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"delete task","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"delete 1","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"todo","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"deadline","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"event","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"event fakeEvent","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"invalidcommand","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"mark 2","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"find book","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"find nonexistent task","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":21}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"todo run","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"todo walk","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"event fly /from 2025/02/02 1800 /to 2025/02/01 1900","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"bye","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":4}},{"path":"text-ui-test/oldruntest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"jonzyyyy"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"then","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"    mkdir ../bin","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"fi","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"# delete output from previous run","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jonzyyyy"},"content":"then","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jonzyyyy"},"content":"fi","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java ../src/main/java/exceptions/*.java ../src/main/java/categories/*.java","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"then","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"    exit 1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"fi","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"# run the program, feed commands from input2.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"java -classpath ../bin main.java.Yapper \u003c input1.txt \u003e ACTUAL1.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"# convert to UNIX format","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"cp EXPECTED1.TXT EXPECTED-UNIX1.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"#dos2unix ACTUAL.TXT EXPECTED2.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jonzyyyy"},"content":"# compare the output to the expected output","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"diff ACTUAL1.TXT EXPECTED-UNIX1.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jonzyyyy"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"then","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jonzyyyy"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jonzyyyy"},"content":"    exit 0","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jonzyyyy"},"content":"else","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jonzyyyy"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jonzyyyy"},"content":"    exit 1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"fi","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":38}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jonzyyyy"},"content":"# Function to run the test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jonzyyyy"},"content":"run_test() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jonzyyyy"},"content":"    local input_file\u003d$1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jonzyyyy"},"content":"    local expected_file\u003d$2","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jonzyyyy"},"content":"    local actual_file\u003d$3","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jonzyyyy"},"content":"    # Delete output from previous run","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jonzyyyy"},"content":"    if [ -e \"$actual_file\" ]","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jonzyyyy"},"content":"        rm \"$actual_file\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jonzyyyy"},"content":"    # Run the program, feed commands from input file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jonzyyyy"},"content":"    java -classpath ../bin yapper.Yapper \u003c \"$input_file\" \u003e \"$actual_file\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jonzyyyy"},"content":"    # Convert to UNIX format","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jonzyyyy"},"content":"    cp \"$expected_file\" EXPECTED-UNIX.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jonzyyyy"},"content":"    # Compare the output to the expected output","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jonzyyyy"},"content":"    diff \"$actual_file\" EXPECTED-UNIX.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jonzyyyy"},"content":"    if [ $? -eq 0 ]","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jonzyyyy"},"content":"        echo \"Test result: PASSED ✅ \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jonzyyyy"},"content":"    else","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jonzyyyy"},"content":"        echo \"Test result: FAILED ❌ \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jonzyyyy"},"content":"        exit 1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jonzyyyy"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jonzyyyy"},"content":"# Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jonzyyyy"},"content":"# Compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jonzyyyy"},"content":"echo \"......................................................NEW TEST......................................................\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jonzyyyy"},"content":"if ! javac -cp ../src/main/java/yapper -Xlint:none -d ../bin $(find ../src/main/java/yapper -name \"*.java\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jonzyyyy"},"content":"# Reset data before the runs","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jonzyyyy"},"content":"echo \"Resetting data files........................\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jonzyyyy"},"content":"if [ -e \"../data/YapperTasks.txt\" ]","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jonzyyyy"},"content":"    rm \"../data/YapperTasks.txt\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jonzyyyy"},"content":"# First run","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jonzyyyy"},"content":"echo \"Running first test..........................\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jonzyyyy"},"content":"run_test \"input1.txt\" \"EXPECTED1.TXT\" \"ACTUAL1.TXT\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jonzyyyy"},"content":"# Second run","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jonzyyyy"},"content":"echo \"Running second test..........................\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jonzyyyy"},"content":"run_test \"input2.txt\" \"EXPECTED2.TXT\" \"ACTUAL2.TXT\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jonzyyyy"},"content":"# Compare YapperTasks.txt with expected_datafile.txt","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jonzyyyy"},"content":"echo \"Comparing YapperTasks.txt with expected_datafile.txt...\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jonzyyyy"},"content":"if [ -e \"../data/YapperTasks.txt\" ] \u0026\u0026 [ -e \"EXPECTED-DATAFILE.txt\" ]","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jonzyyyy"},"content":"    diff \"../data/YapperTasks.txt\" \"EXPECTED-DATAFILE.txt\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jonzyyyy"},"content":"        echo \"YapperTasks.txt matches expected_datafile.txt. ✅ \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jonzyyyy"},"content":"        echo \"YapperTasks.txt does not match expected_datafile.txt. ❌ \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jonzyyyy"},"content":"    echo \"YapperTasks.txt or expected_datafile.txt not found. ❌ \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jonzyyyy"},"content":"fi","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jonzyyyy"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jonzyyyy"},"content":"echo \"All tests completed.\"","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"jonzyyyy":47,"-":31}}]
