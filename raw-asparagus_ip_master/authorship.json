[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"# AI.md","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"## [2025-01-24] Learned Logging with AI Assistance","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"I discovered how to implement robust logging in Java by consulting a generative AI tool. Previously, I had been using","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"`e.printStackTrace()`, but IntelliJ IDEA alerted me that this method should be replaced with a more sophisticated","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"logging technique.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"Guided by ChatGPT, I transitioned to using `java.util.logging`, employing classes such as `Logger` and `Level` for a","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"more reliable and maintainable logging solution.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"## [2025-02-22] Enhanced Documentation \u0026 Unit Testing with AI Assistance","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"(After iP submission)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"I leveraged ChatGPT o3 Mini and Claude 3.5 Sonnet to improve my project in two significant ways:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"- **Javadoc Enhancement:**  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"  The AI tools provided guidance on writing comprehensive Javadocs, ensuring that my methods, parameters, and return","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"  values are clearly documented. This effort helped in making the codebase more maintainable and understandable for both","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"  current and future developers.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"- **Improved Unit Testing with Mockito:**  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"  By following the insightful suggestions from the AI, I refined the unit tests by effectively incorporating Mockito for","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"  mocking dependencies. This led to more robust tests that accurately simulate different scenarios, improving the","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"  overall reliability of the tests.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"These enhancements have contributed to a well-documented and thoroughly tested codebase.","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":28}},{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":" Display                                                      |        Name         |            Github Profile             |                      Homepage                      ","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"--------------------------------------------------------------|:-------------------:|:-------------------------------------:|:--------------------------------------------------:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" ![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Jeffry Lum      |  [Github](https://github.com/j-lum/)  |        [Homepage](https://se.kasugano.moe)         ","lastModifiedDate":"2019-08-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" ![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100)  | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/) ","lastModifiedDate":"2019-08-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":2,"-":8}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"# Dusk - Task Management Application","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"A Java-based task management application that helps you organize and track your tasks efficiently.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"## Prerequisites","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"- JDK 17","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"- IntelliJ IDEA (latest version recommended)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"## Project Setup in IntelliJ IDEA","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"1. Open IntelliJ IDEA (if you\u0027re not in the welcome screen, click `File` \u003e `Close Project` to close any existing project)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"2. Open the project:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"   1. Click `Open`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"   2. Select the project directory","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"   3. Click `OK`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"   4. Accept defaults for any additional prompts","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"3. Configure JDK:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"   - Set project SDK to JDK 17 as explained [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"   - Set **Project language level** to `SDK default`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"## Project Structure","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"- `src/main/java`: Contains all source code","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"   - Primary entry point: `dusk/Dusk.java`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"- `src/test/java`: Contains test cases","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"   - Comprehensive unit tests for tasks, storage, and commands","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"## Building the Project","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"The project uses Gradle for build automation. Key details:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"- Java version: 17","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"- JavaFX version: 17.0.10","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"- JUnit version: 5.10.2","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"To build the project:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"```bash","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"./gradlew build","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"To create an executable JAR:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"```bash","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"./gradlew shadowJar","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"## Running the Application","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"1. Locate `src/main/java/dusk/Dusk.java`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"2. Right-click and select `Run dusk.Dusk.main()`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"3. If configured correctly, you should see:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"![User Interface](docs/Ui.png)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"## Development Guidelines","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"- Keep Java source files within `src/main/java` folder structure","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"- Follow the test-driven development approach with comprehensive unit tests","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"- Maintain code quality standards using Checkstyle (version 10.2)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"## Current Version","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"0.3.0","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":58,"-":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"ext {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"    javaFxVersion \u003d \u002717.0.9\u0027  // Updated to latest Java 17 compatible version","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"    mockitoVersion \u003d \u00275.11.0\u0027","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"    junitVersion \u003d \u00275.10.0\u0027","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"    checkstyleVersion \u003d \u002710.21.2\u0027","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"java {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    // Testing","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    testImplementation \"org.junit.jupiter:junit-jupiter-api:${junitVersion}\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    testImplementation \"org.mockito:mockito-core:${mockitoVersion}\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    testRuntimeOnly \"org.junit.jupiter:junit-jupiter-engine:${junitVersion}\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    // JavaFX - Platform specific dependencies","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"    [\u0027win\u0027, \u0027mac\u0027, \u0027linux\u0027].each { platform -\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"        [\u0027base\u0027, \u0027controls\u0027, \u0027fxml\u0027, \u0027graphics\u0027].each { module -\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"            implementation \"org.openjfx:javafx-${module}:${javaFxVersion}:${platform}\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"application {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    mainClass \u003d \"Launcher\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"shadowJar {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"    archiveBaseName \u003d \"dusk\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"    archiveVersion \u003d \"0.1.0\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"checkstyle {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"    toolVersion \u003d checkstyleVersion","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":38,"-":30}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"# Dusk Task Manager - User Guide","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"## Table of Contents","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"- [Command Format](#command-format)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"- [Basic Commands](#basic-commands)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"    - [Viewing Tasks](#viewing-tasks)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"    - [Finding Tasks](#finding-tasks)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"    - [Managing Task Status](#managing-task-status)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"    - [Deleting Tasks](#deleting-tasks)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"- [Creating Tasks](#creating-tasks)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"    - [Simple Tasks](#simple-tasks)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"    - [Deadlines](#deadlines)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"    - [Events](#events)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"- [Date and Time Format](#date-and-time-format)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"![User Interface](Ui.png)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"## Introduction","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"Dusk is a command-line task manager that helps you keep track of your todos, deadlines, and events. This guide will help","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"you understand how to use all available commands :DD","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"### How to Use","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"To run Dusk, use the following command in your terminal:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"```bash","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"java -jar dusk.jar","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"### Requirements","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"- **macOS**: Java 17 Azure edition","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"- **Windows/Linux**: Java 17 SDK","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"### Exiting the Program","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"To exit Dusk, type:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"bye","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"💡 **Tip**: Tasks are automatically saved and loaded between sessions, so exiting the program (even accidentally) will","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"not result in data loss.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"## Command Format","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"Commands follow this general structure:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"\u003ccommand_word\u003e [description] [flags]","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"💡 **Note**:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"- Words in `\u003cangle brackets\u003e` are required","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"- Words in `[square brackets]` are optional","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"- Flags start with `/` followed by the flag name","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"## Basic Commands","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"### Viewing Tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"To view your tasks, use the `list` command:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"list // Shows all tasks list /on 2024-03-15 // Shows tasks for specific date","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"### Finding Tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"To search for specific tasks:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"find \u003csearch_term\u003e // Searches for tasks containing the search term","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"Example:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"find project // Finds all tasks containing the word \"project\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"### Managing Task Status","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"Mark tasks as done or undone:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"mark \u003ctask_number\u003e // Marks a task as complete","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"unmark \u003ctask_number\u003e // Marks a task as incomplete","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"Example:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"mark 1 // Marks the first task as complete","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"unmark 2 // Marks the second task as incomplete","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"### Deleting Tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"raw-asparagus"},"content":"Remove tasks from your list:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"raw-asparagus"},"content":"delete \u003ctask_number\u003e // Deletes the specified task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"raw-asparagus"},"content":"Example:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"raw-asparagus"},"content":"delete 3 // Deletes the third task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"raw-asparagus"},"content":"## Creating Tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"raw-asparagus"},"content":"### Simple Tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"raw-asparagus"},"content":"For basic todos without deadlines:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"raw-asparagus"},"content":"todo","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"raw-asparagus"},"content":"Example:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"raw-asparagus"},"content":"todo Buy groceries","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"raw-asparagus"},"content":"### Deadlines","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"raw-asparagus"},"content":"For tasks with a due date:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"raw-asparagus"},"content":"deadline  /by","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"raw-asparagus"},"content":"Example:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"raw-asparagus"},"content":"deadline Submit report /by 2024-03-15 1700","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"raw-asparagus"},"content":"### Events","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"raw-asparagus"},"content":"For events with start and end times:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"raw-asparagus"},"content":"event  /from \u003cstart_datetime\u003e /to \u003cend_datetime\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"raw-asparagus"},"content":"Example:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"raw-asparagus"},"content":"event Team meeting /from 2024-03-15 1400 /to 2024-03-15 1500","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"raw-asparagus"},"content":"## Date and Time Format","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"raw-asparagus"},"content":"Dates and times should be specified in the following format:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"raw-asparagus"},"content":"- **Date**: `yyyy-MM-dd` (required)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"raw-asparagus"},"content":"- **Time**: `HHmm` (optional, 24-hour format)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"raw-asparagus"},"content":"Examples:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"raw-asparagus"},"content":"```text","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"raw-asparagus"},"content":"2024-03-15 // March 15, 2024 (defaults to 00:00) 2024-03-15 1430 // March 15, 2024, 2:30 PM","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"raw-asparagus"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"raw-asparagus"},"content":"💡 **Tips**:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"raw-asparagus"},"content":"- If time is not specified, it defaults to midnight (00:00)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"raw-asparagus"},"content":"- Use 24-hour format for times (e.g., 1430 for 2:30 PM)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"raw-asparagus"},"content":"- All dates must be in the format YYYY-MM-DD","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":162,"-":16}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"import dusk.Main;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":" * Launcher class to bypass classpath issues.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"public class Launcher {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"     * The main entry point for the application.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"     * @param args command line arguments.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":17}},{"path":"src/main/java/dusk/Dusk.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.io.StringReader;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import java.io.StringWriter;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.CompletionException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.ExecutionException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import dusk.command.Command;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import dusk.command.InputException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import dusk.command.Parser;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.StorageException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskResponse;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskResponseType;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":" * The main application class for Dusk. This class is responsible for initializing tasks,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":" * managing user commands, and handling responses.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"public class Dusk {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    /** Greeting messages displayed upon application launch. */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    public static final String[] GREETING_MESSAGES \u003d {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"            \"Hello! I\u0027m Dusk!\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"            \"Anything you want me to do for you? :D\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    };","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"    /** Farewell message displayed when the application terminates. */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"    public static final String FAREWELL_MESSAGE \u003d \"See ya! Hope to see you again soon! :3\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Dusk.class.getName());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    private static final Storage STORAGE \u003d new Storage();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    private static TaskList taskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a new Dusk instance and loads the task list from storage.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"     * @throws StorageException if an error occurs during task loading.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"    public Dusk() throws StorageException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        loadTasksFromStorage();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the greeting message.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"     * @return the greeting message.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"    public String getGreeting() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"        return new DuskResponse(String.join(\"\\n\", GREETING_MESSAGES),","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"                DuskResponseType.NORMAL).getMessage();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"     * Loads tasks asynchronously from storage.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"     * @throws StorageException if there is an error loading tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"    private void loadTasksFromStorage() throws StorageException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"        CompletableFuture\u003cTaskList\u003e loadFuture \u003d STORAGE.loadTasksAsync();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"            taskList \u003d loadFuture.get();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"        } catch (InterruptedException | ExecutionException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"            LOGGER.log(Level.SEVERE, \"Error loading tasks asynchronously.\", e);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"            throw new StorageException(\"Failed to load tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"        } catch (CompletionException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"            LOGGER.log(Level.SEVERE, e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"            throw new StorageException(\"Failed to complete task loading: \" + e.getMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"     * Processes the user input and returns the corresponding response.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"     * @param input the user\u0027s input command.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"     * @return a DuskResponse based on the command execution.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"    public DuskResponse getResponse(String input) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"        StringWriter stringWriter \u003d new StringWriter();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"        try (DuskIO duskIO \u003d new DuskIO(new StringReader(\"\"), stringWriter)) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"            if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"                throw new InputException(\"Please enter a command.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"            Command command \u003d Parser.parse(duskIO, STORAGE, taskList, input);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"            command.execute();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"            return new DuskResponse(stringWriter.toString(), DuskResponseType.NORMAL);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"        } catch (DuskException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"            return new DuskResponse(","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"                    String.format(\"❌\\t%s:\\n\\t%s\", e.getErrorType().getLabel(), e.getMessage()),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"                    DuskResponseType.ERROR","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"raw-asparagus"},"content":"            );","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"            LOGGER.log(Level.SEVERE, \"Unexpected error\", e);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"            return new DuskResponse(","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"raw-asparagus"},"content":"                    String.format(\"⚠️\\tSystem Error:\\n\\t%s\", e.getMessage()),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"                    DuskResponseType.SYSTEM_ERROR","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"            );","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":106}},{"path":"src/main/java/dusk/DuskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":" * Represents exceptions specific to Dusk application logic.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"public class DuskException extends Exception {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"    private final DuskExceptionType duskExceptionType;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a new DuskException with the specified detail message and exception type.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"     * @param message the detail message.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskExceptionType the type of exception.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    public DuskException(String message, DuskExceptionType duskExceptionType) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"        super(message);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"        this.duskExceptionType \u003d duskExceptionType;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the type of the exception.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     * @return the dusk exception type.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    public DuskExceptionType getErrorType() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"        return duskExceptionType;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":29}},{"path":"src/main/java/dusk/DuskExceptionType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":" * Enumerates the types of exceptions that can be thrown in the Dusk application.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"public enum DuskExceptionType {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"    INPUT_ERROR(\"Input Error\"),","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"    STORAGE_ERROR(\"Storage Error\"),","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"    TASK_ERROR(\"Task Error\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"    private final String label;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs an exception type with the specified label.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"     * @param label the label for the exception type.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"    DuskExceptionType(String label) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"        this.label \u003d label;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the label associated with the exception type.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     * @return the label for the exception type.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    public String getLabel() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"        return label;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":30}},{"path":"src/main/java/dusk/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import dusk.gui.MainWindow;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.StorageException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":" * The entry point of the Dusk GUI application.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"    private final Dusk dusk \u003d new Dusk();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Main.class.getName());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a new Main instance and initializes the Dusk application.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"     * @throws StorageException if there is an error during initialization.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    public Main() throws StorageException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"        // Initialization handled in field declaration.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"     * Starts the JavaFX application by setting up the primary stage with the main window.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"     * @param stage the primary stage for this application.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"            AnchorPane root \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"            controller.setDusk(dusk);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"            Scene scene \u003d new Scene(root);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"            var stylesheetUrl \u003d getClass().getResource(\"/css/styles.css\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"            scene.getStylesheets().add(Objects.requireNonNull(stylesheetUrl).toExternalForm());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"            stage.setTitle(\"Dusk\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"            stage.show();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"            LOGGER.log(Level.SEVERE, \"Error starting the application.\", e);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":56}},{"path":"src/main/java/dusk/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.MarkTaskException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskListException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":" * Represents an abstract command.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"     * Executes the command.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"     * @throws InputException    if there is an issue with user input","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"     * @throws IOException       if an I/O error occurs","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"     * @throws TaskListException if task list operations fail","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"     * @throws MarkTaskException if task marking fails","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"    public abstract void execute() throws InputException, IOException, TaskListException, MarkTaskException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"     * Asynchronously saves tasks to storage and handles any exceptions.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"     * @param storage the storage used for saving tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks   the task list to save","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"    protected void saveAsync(Storage storage, TaskList tasks) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"        CompletableFuture\u003cVoid\u003e future \u003d storage.saveTasksAsync(tasks)","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"                .exceptionally(exception -\u003e {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"                    throw new RuntimeException(exception);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"                });","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"        future.join();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":39}},{"path":"src/main/java/dusk/command/CreateDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":" * Command to create a {@link Deadline} task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"public class CreateDeadlineCommand extends CreateTaskCommand {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a CreateDeadlineCommand.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks      the task list","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskIO     the UI interface","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"     * @param storage    the storage handler","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the task description","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     * @param deadline   the deadline of the task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    public CreateDeadlineCommand(TaskList tasks, DuskIO duskIO,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"                                 Storage storage, String description, LocalDateTime deadline) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"        super(tasks, duskIO, storage, description);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"     * Creates a Deadline task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"     * @return a new {@link Deadline} instance","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    protected dusk.task.Task createTask() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"        return new Deadline(description, deadline);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the validation message for a deadline command.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"     * @return the validation message","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"    protected String getValidationMessage() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"        return \"A deadline command must include a description.\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":51}},{"path":"src/main/java/dusk/command/CreateEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Event;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":" * Command to create an {@link Event} task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"public class CreateEventCommand extends CreateTaskCommand {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a CreateEventCommand.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks       the task list","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskIO      the UI interface","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     * @param storage     the storage handler","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the task description","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     * @param startTime   the start time of the event","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"     * @param endTime     the end time of the event","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    public CreateEventCommand(TaskList tasks, DuskIO duskIO, Storage storage,","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"                              String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"        super(tasks, duskIO, storage, description);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"     * Creates an Event task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"     * @return a new {@link Event} instance","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"    protected dusk.task.Task createTask() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"        return new Event(description, startTime, endTime);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the validation message for an event command.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"     * @return the validation message","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"    protected String getValidationMessage() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"        return \"An event command must include a description.\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":54}},{"path":"src/main/java/dusk/command/CreateTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":" * Abstract command for creating tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"public abstract class CreateTaskCommand extends Command {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"    protected final TaskList tasks;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"    protected final DuskIO duskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    protected final Storage storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    protected final String description;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a CreateTaskCommand.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks       the task list","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskIO      the UI interface","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     * @param storage     the storage handler","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the task description","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    protected CreateTaskCommand(TaskList tasks, DuskIO duskIO, Storage storage, String description) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"        this.duskIO \u003d duskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"     * Executes the command to create a task and persists the change.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"     * @throws IOException     if an I/O error occurs","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"     * @throws InputException if the input is invalid","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"    public void execute() throws IOException, InputException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"        validateDescription();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        var newTask \u003d createTask();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"        printConfirmation(newTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        saveAsync(storage, tasks);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     * Validates the task description.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"     * @throws InputException if the description is empty","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"    protected void validateDescription() throws InputException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"            throw new InputException(getValidationMessage());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"     * Prints a confirmation message after adding the task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"     * @param newTask the newly created task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"     * @throws IOException if an I/O error occurs while printing","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"    protected void printConfirmation(dusk.task.Task newTask) throws IOException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"        duskIO.print(","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"                \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"                \"  \" + newTask,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"        );","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"     * Creates a task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"     * @return the created task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"    protected abstract dusk.task.Task createTask();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the validation message for an empty description.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"     * @return the validation message","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"    protected abstract String getValidationMessage();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":87}},{"path":"src/main/java/dusk/command/CreateTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Todo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":" * Command to create a {@link Todo} task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"public class CreateTodoCommand extends CreateTaskCommand {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a CreateTodoCommand.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks       the task list","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskIO      the UI interface","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"     * @param storage     the storage handler","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the task description","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"    public CreateTodoCommand(TaskList tasks, DuskIO duskIO, Storage storage, String description) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"        super(tasks, duskIO, storage, description);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"     * Creates a Todo task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"     * @return a new {@link Todo} instance","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    protected dusk.task.Task createTask() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"        return new Todo(description);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the validation message for a todo command.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"     * @return the validation message","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"    protected String getValidationMessage() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"        return \"A todo command must include a description.\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":44}},{"path":"src/main/java/dusk/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskListException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":" * Command for deleting a specified task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    private final DuskIO duskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"    private final String description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a DeleteCommand.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks       the current task list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskIO      the I/O interface","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"     * @param storage     the storage handler","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the command description containing the task index to delete","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    public DeleteCommand(TaskList tasks, DuskIO duskIO, Storage storage, String description) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"        this.duskIO \u003d duskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    public void execute() throws IOException, InputException, TaskListException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"        int taskIndex;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"            taskIndex \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"            throw new InputException(\"Task number cannot be empty or invalid for a delete command!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"        Task removedTask \u003d tasks.removeTask(taskIndex);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        duskIO.print(","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"                \"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"                \"  \" + removedTask,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"        );","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"        saveAsync(storage, tasks);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":53}},{"path":"src/main/java/dusk/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskListException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":" * Command that searches through tasks for descriptions matching","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":" * a specified keyword (both exact and partial matches).","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    private final DuskIO duskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"    private final String keyword;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a FindCommand.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskIO  the I/O interface","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     * @param keyword the keyword to search for","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    public FindCommand(TaskList tasks, DuskIO duskIO, String keyword) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"        this.duskIO \u003d duskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"    public void execute() throws IOException, TaskListException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"        // Search for exact matches.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"        TaskList exactMatches \u003d tasks.search(keyword, null, null, null);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"        // Search for partial matches.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"        TaskList partialMatches \u003d tasks.search(keyword.toLowerCase(), null, null, null);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"        TaskList combinedResults \u003d new TaskList();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"        // Add exact matches.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        for (int i \u003d 0; i \u003c exactMatches.size(); i++) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"            combinedResults.addTask(exactMatches.getTask(i));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"        // Add partial matches not already included.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"        for (int i \u003d 0; i \u003c partialMatches.size(); i++) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"            Task task \u003d partialMatches.getTask(i);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"            boolean isNewMatch \u003d true;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"            for (int j \u003d 0; j \u003c exactMatches.size(); j++) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"                if (task.equals(exactMatches.getTask(j))) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"                    isNewMatch \u003d false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"                    break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"            if (isNewMatch) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"                combinedResults.addTask(task);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"        if (combinedResults.isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"            duskIO.print(\"No matching tasks found!\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"        } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"            String header \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"            String[] messages \u003d new String[combinedResults.size() + 1];","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"            messages[0] \u003d header;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"            for (int i \u003d 0; i \u003c combinedResults.size(); i++) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"                messages[i + 1] \u003d (i + 1) + \". \" + combinedResults.getTask(i);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"            duskIO.print(messages);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":74}},{"path":"src/main/java/dusk/command/InputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import dusk.DuskException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import dusk.DuskExceptionType;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":" * Exception thrown when there is an error in user input.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"public class InputException extends DuskException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs an InputException with the specified detail message.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"     * @param message the error detail message","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    public InputException(String message) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"        super(message, DuskExceptionType.INPUT_ERROR);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":19}},{"path":"src/main/java/dusk/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskListException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":" * Command for listing tasks according to various date filters.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    private final DuskIO duskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    private final LocalDateTime onDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"    private final LocalDateTime fromDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"    private final LocalDateTime toDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a ListCommand.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks    the current task list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskIO   the I/O interface","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"     * @param onDate   filter tasks on this specific date (nullable)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"     * @param fromDate filter tasks from this start date (nullable)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"     * @param toDate   filter tasks until this end date (nullable)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    public ListCommand(TaskList tasks, DuskIO duskIO, LocalDateTime onDate,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"                       LocalDateTime fromDate, LocalDateTime toDate) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"        this.duskIO \u003d duskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"        this.onDate \u003d onDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    public void execute() throws IOException, TaskListException, InputException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"            duskIO.print(\"Task list is empty!\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"            return;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        TaskList filteredTasks;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"        String header;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"        if (onDate !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"            filteredTasks \u003d tasks.search(null, onDate, null, null);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"            header \u003d \"Here are the tasks on \" + onDate.toLocalDate() + \":\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"        } else if (fromDate !\u003d null \u0026\u0026 toDate !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"            filteredTasks \u003d tasks.search(null, null, fromDate, toDate);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"            header \u003d \"Here are the tasks between \" + fromDate + \" and \" + toDate + \":\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"        } else if (fromDate !\u003d null || toDate !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"            throw new InputException(\"Both /from and /to must be specified together.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"        } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"            filteredTasks \u003d tasks;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"            header \u003d \"Here are all the tasks:\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"        printTasks(filteredTasks, header);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"     * Prints the provided task list with a header.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"     * @param list   the task list to print","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"     * @param header the header message to display","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"     * @throws IOException       if an I/O error occurs","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"     * @throws TaskListException if task retrieval fails","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"    private void printTasks(TaskList list, String header) throws IOException, TaskListException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"            duskIO.print(\"No matching tasks found!\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"            return;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"        String[] messages \u003d new String[list.size() + 1];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"        messages[0] \u003d header;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"            messages[i + 1] \u003d (i + 1) + \". \" + list.getTask(i);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"        duskIO.print(messages);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":85}},{"path":"src/main/java/dusk/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.MarkTaskException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskListException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":" * Command for marking or unmarking a task as done.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    private final DuskIO duskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"    private final String description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"    private final boolean isMarkedAsDone;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a MarkCommand.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks       the current task list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskIO      the I/O interface","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"     * @param storage     the storage handler","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the command description containing the task index","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"     * @param isMarkedAsDone  true to mark as done, false to unmark","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    public MarkCommand(TaskList tasks, DuskIO duskIO, Storage storage,","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"                       String description, boolean isMarkedAsDone) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"        this.duskIO \u003d duskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"        this.isMarkedAsDone \u003d isMarkedAsDone;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"    public void execute() throws TaskListException, InputException, MarkTaskException, IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"        int taskIndex;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"            taskIndex \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"            throw new InputException(\"Task number cannot be empty or invalid for a mark/unmark command!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"        if (isMarkedAsDone) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"            tasks.markTask(taskIndex);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"            duskIO.print(\"Nice! I\u0027ve marked this task as done:\", \"  \" + tasks.getTask(taskIndex));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"            tasks.unmarkTask(taskIndex);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"            duskIO.print(\"OK! I\u0027ve updated this task to not done:\", \"  \" + tasks.getTask(taskIndex));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"        saveAsync(storage, tasks);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":58}},{"path":"src/main/java/dusk/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":" * Parses user input strings and returns the corresponding command object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"public class Parser {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"    // Pattern to match flags (on, from, to, by) and their corresponding values.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"    private static final Pattern FLAGS_PATTERN \u003d Pattern.compile(","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"            \"/(?\u003cflag\u003eon|from|to|by)\\\\s*(?\u003cvalue\u003e[^/]+)?\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"            Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"    // Pattern to match the complete user input: command with optional description and arguments.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    private static final Pattern INPUT_PATTERN \u003d Pattern.compile(","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"            \"^(?\u003ccommand\u003elist|find|mark|unmark|delete|todo|deadline|event)\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"                    + \"(?:\\\\s+(?\u003cdescription\u003e[^/]+)(?\u003carguments\u003e.*))?$\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"            Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    // Formatter for parsing date and time strings.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"            .appendPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"            .optionalStart()","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"            .appendLiteral(\u0027 \u0027)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"            .appendPattern(\"HHmm\")","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"            .optionalEnd()","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"            .toFormatter();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"     * Parses a user input string and constructs the appropriate command object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskIO  the console I/O","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"     * @param storage the storage object","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"     * @param input   the raw user input string","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"     * @return the command object corresponding to the user input","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     * @throws InputException if the command is invalid or incorrectly formatted","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"    public static Command parse(final DuskIO duskIO, final Storage storage,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"                                final TaskList tasks, final String input) throws InputException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"        final Matcher matcher \u003d INPUT_PATTERN.matcher(input.trim());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"            throw new InputException(\"Invalid command format!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"        final String command \u003d matcher.group(\"command\").toLowerCase().trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"        final String description \u003d matcher.group(\"description\") !\u003d null","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"                ? matcher.group(\"description\").trim() : \"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"        final String arguments \u003d matcher.group(\"arguments\") !\u003d null","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"                ? matcher.group(\"arguments\").trim() : \"\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"        validateCommand(command, description, arguments);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"        return switch (command) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"            case \"list\" -\u003e parseListCommand(duskIO, tasks, arguments);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"            case \"deadline\" -\u003e parseDeadlineCommand(duskIO, storage, tasks, description, arguments);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"            case \"event\" -\u003e parseEventCommand(duskIO, storage, tasks, description, arguments);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"            case \"find\" -\u003e new FindCommand(tasks, duskIO, description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"            case \"delete\" -\u003e new DeleteCommand(tasks, duskIO, storage, description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"            case \"mark\" -\u003e new MarkCommand(tasks, duskIO, storage, description, true);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"            case \"unmark\" -\u003e new MarkCommand(tasks, duskIO, storage, description, false);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"            case \"todo\" -\u003e new CreateTodoCommand(tasks, duskIO, storage, description);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"            default -\u003e throw new InputException(\"Unknown command: \" + command);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"        };","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"     * Validates the command and its arguments.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"     * @param command     the command string","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the command description","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"     * @param arguments   the command arguments","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"     * @throws InputException if validation fails","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"    private static void validateCommand(final String command, final String description,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"                                        final String arguments) throws InputException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"        if (command \u003d\u003d null || command.isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"            throw new InputException(\"Command cannot be empty.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"        // Commands that require a non-empty description.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"        if ((command.equals(\"delete\") || command.equals(\"mark\") || command.equals(\"unmark\") ||","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"                command.equals(\"find\") || command.equals(\"todo\") || command.equals(\"deadline\") ||","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"                command.equals(\"event\")) \u0026\u0026 description.isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"raw-asparagus"},"content":"            throw new InputException(\"Missing description for command: \" + command);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"        // For list command, validate any date/time flags.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"        if (command.equals(\"list\") \u0026\u0026 !arguments.isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"raw-asparagus"},"content":"            validateDateTimeFlags(arguments);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"raw-asparagus"},"content":"     * Validates date/time flags contained in the arguments.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"raw-asparagus"},"content":"     * @param arguments the raw arguments string","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"raw-asparagus"},"content":"     * @throws InputException if any flag value is missing or invalid","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"raw-asparagus"},"content":"    private static void validateDateTimeFlags(final String arguments) throws InputException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"raw-asparagus"},"content":"        final Matcher flagMatcher \u003d FLAGS_PATTERN.matcher(arguments);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"raw-asparagus"},"content":"        while (flagMatcher.find()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"raw-asparagus"},"content":"            final String flag \u003d flagMatcher.group(\"flag\").toLowerCase();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"raw-asparagus"},"content":"            final String value \u003d flagMatcher.group(\"value\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"raw-asparagus"},"content":"            if (value \u003d\u003d null || value.trim().isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"raw-asparagus"},"content":"                throw new InputException(\"Flag /\" + flag + \" must have a value.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"raw-asparagus"},"content":"     * Parses a date/time string into a LocalDateTime object.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"raw-asparagus"},"content":"     * @param dateTimeStr the raw date/time string","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"raw-asparagus"},"content":"     * @return the parsed LocalDateTime object","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"raw-asparagus"},"content":"     * @throws InputException if the date/time format is invalid","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"raw-asparagus"},"content":"    private static LocalDateTime parseDateTime(final String dateTimeStr) throws InputException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"raw-asparagus"},"content":"            return LocalDateTime.parse(dateTimeStr.trim(), DATE_TIME_FORMATTER);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"raw-asparagus"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"raw-asparagus"},"content":"            throw new InputException(\"Invalid date/time format: \" + dateTimeStr);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"raw-asparagus"},"content":"     * Parses the input as a list command.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskIO    the console I/O","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks     the current task list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"raw-asparagus"},"content":"     * @param arguments the arguments portion of the input","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"raw-asparagus"},"content":"     * @return the ListCommand corresponding to the input","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"raw-asparagus"},"content":"     * @throws InputException if the arguments are invalid","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"raw-asparagus"},"content":"    private static Command parseListCommand(final DuskIO duskIO, final TaskList tasks,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"raw-asparagus"},"content":"                                            final String arguments) throws InputException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime onDate \u003d null;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime fromDate \u003d null;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime toDate \u003d null;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"raw-asparagus"},"content":"        final Matcher flagMatcher \u003d FLAGS_PATTERN.matcher(arguments);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"raw-asparagus"},"content":"        while (flagMatcher.find()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"raw-asparagus"},"content":"            final String flag \u003d flagMatcher.group(\"flag\").toLowerCase();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"raw-asparagus"},"content":"            final String value \u003d flagMatcher.group(\"value\").trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"raw-asparagus"},"content":"            switch (flag) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"raw-asparagus"},"content":"            case \"on\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"raw-asparagus"},"content":"                if (onDate !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"raw-asparagus"},"content":"                    throw new InputException(\"Duplicate /on flag.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"raw-asparagus"},"content":"                onDate \u003d parseDateTime(value);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"raw-asparagus"},"content":"                break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"raw-asparagus"},"content":"            case \"from\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"raw-asparagus"},"content":"                if (fromDate !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"raw-asparagus"},"content":"                    throw new InputException(\"Duplicate /from flag.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"raw-asparagus"},"content":"                fromDate \u003d parseDateTime(value);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"raw-asparagus"},"content":"                break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"raw-asparagus"},"content":"            case \"to\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"raw-asparagus"},"content":"                if (toDate !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"raw-asparagus"},"content":"                    throw new InputException(\"Duplicate /to flag.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"raw-asparagus"},"content":"                toDate \u003d parseDateTime(value);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"raw-asparagus"},"content":"                break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"raw-asparagus"},"content":"            default:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"raw-asparagus"},"content":"                throw new InputException(\"Unknown flag: /\" + flag);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"raw-asparagus"},"content":"        if ((fromDate !\u003d null \u0026\u0026 toDate \u003d\u003d null) || (fromDate \u003d\u003d null \u0026\u0026 toDate !\u003d null)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"raw-asparagus"},"content":"            throw new InputException(\"Both /from and /to must be specified together.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"raw-asparagus"},"content":"        return new ListCommand(tasks, duskIO, onDate, fromDate, toDate);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"raw-asparagus"},"content":"     * Parses the input as a deadline command.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskIO      the console I/O","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"raw-asparagus"},"content":"     * @param storage     the storage object","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks       the current task list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the command description","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"raw-asparagus"},"content":"     * @param arguments   the additional arguments","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"raw-asparagus"},"content":"     * @return the DeadlineCommand corresponding to the input","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"raw-asparagus"},"content":"     * @throws InputException if the arguments are invalid","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"raw-asparagus"},"content":"    private static Command parseDeadlineCommand(final DuskIO duskIO, final Storage storage,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"raw-asparagus"},"content":"                                                final TaskList tasks, final String description,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"raw-asparagus"},"content":"                                                final String arguments) throws InputException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"raw-asparagus"},"content":"        final Matcher flagMatcher \u003d FLAGS_PATTERN.matcher(arguments);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"raw-asparagus"},"content":"        String byValue \u003d null;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"raw-asparagus"},"content":"        while (flagMatcher.find()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"raw-asparagus"},"content":"            final String flag \u003d flagMatcher.group(\"flag\").toLowerCase();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"raw-asparagus"},"content":"            if (\"by\".equals(flag)) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"raw-asparagus"},"content":"                if (byValue !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"raw-asparagus"},"content":"                    throw new InputException(\"Duplicate /by flag.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"raw-asparagus"},"content":"                byValue \u003d flagMatcher.group(\"value\").trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"raw-asparagus"},"content":"            } else {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"raw-asparagus"},"content":"                throw new InputException(\"Unexpected flag /\" + flag + \" in deadline command.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"raw-asparagus"},"content":"        if (byValue \u003d\u003d null || byValue.isEmpty()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"raw-asparagus"},"content":"            throw new InputException(\"Deadline command requires a /by flag with a valid date/time.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime byDateTime \u003d parseDateTime(byValue);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"raw-asparagus"},"content":"        return new CreateDeadlineCommand(tasks, duskIO, storage, description, byDateTime);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"raw-asparagus"},"content":"     * Parses the input as an event command.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"raw-asparagus"},"content":"     * @param duskIO      the console I/O","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"raw-asparagus"},"content":"     * @param storage     the storage object","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks       the current task list","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the command description","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"raw-asparagus"},"content":"     * @param arguments   the additional arguments","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"raw-asparagus"},"content":"     * @return the EventCommand corresponding to the input","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"raw-asparagus"},"content":"     * @throws InputException if the arguments are invalid","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"raw-asparagus"},"content":"    private static Command parseEventCommand(final DuskIO duskIO, final Storage storage,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"raw-asparagus"},"content":"                                             final TaskList tasks, final String description,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"raw-asparagus"},"content":"                                             final String arguments) throws InputException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime fromDate \u003d null;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime toDate \u003d null;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"raw-asparagus"},"content":"        final Matcher flagMatcher \u003d FLAGS_PATTERN.matcher(arguments);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"raw-asparagus"},"content":"        while (flagMatcher.find()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"raw-asparagus"},"content":"            final String flag \u003d flagMatcher.group(\"flag\").toLowerCase();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"raw-asparagus"},"content":"            final String value \u003d flagMatcher.group(\"value\").trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"raw-asparagus"},"content":"            switch (flag) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"raw-asparagus"},"content":"            case \"from\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"raw-asparagus"},"content":"                if (fromDate !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"raw-asparagus"},"content":"                    throw new InputException(\"Duplicate /from flag.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"raw-asparagus"},"content":"                fromDate \u003d parseDateTime(value);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"raw-asparagus"},"content":"                break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"raw-asparagus"},"content":"            case \"to\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"raw-asparagus"},"content":"                if (toDate !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"raw-asparagus"},"content":"                    throw new InputException(\"Duplicate /to flag.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"raw-asparagus"},"content":"                toDate \u003d parseDateTime(value);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"raw-asparagus"},"content":"                break;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"raw-asparagus"},"content":"            default:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"raw-asparagus"},"content":"                throw new InputException(\"Unexpected flag /\" + flag + \" in event command.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"raw-asparagus"},"content":"        if (fromDate \u003d\u003d null || toDate \u003d\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"raw-asparagus"},"content":"            throw new InputException(\"Event command requires both /from and /to flags with valid date/time values.\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"raw-asparagus"},"content":"        return new CreateEventCommand(tasks, duskIO, storage, description, fromDate, toDate);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":262}},{"path":"src/main/java/dusk/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.gui;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskResponseType;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":" * A custom dialog box for the chat interface that displays user or system messages.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(DialogBox.class.getName());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"    private static final String DIALOG_BOX_FXML \u003d \"/view/DialogBox.fxml\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"    private static final String ERROR_DIALOG_BOX_FXML \u003d \"/view/ErrorDialogBox.fxml\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    @FXML","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    @FXML","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    private ProfilePicture profilePicture;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a DialogBox with the specified text, image, and error flag.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"     * @param text    the text to display.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"     * @param img     the image (can be null).","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"     * @param isError {@code true} if this dialog represents an error message.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    private DialogBox(String text, Image img, boolean isError) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"        dialog \u003d new Label();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"            loadFxml(isError);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"            if (profilePicture \u003d\u003d null) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"                profilePicture \u003d new ProfilePicture(img);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"            configureDialog(text, img);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"            LOGGER.log(Level.SEVERE, \"Error loading FXML\", e);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a DialogBox for non-error messages with the specified text and image.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"     * @param text the text to display.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"     * @param img  the image (can be null).","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"        this(text, img, false);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"     * Creates a dialog box for user messages.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"     * @param text the user\u0027s message.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"     * @param img  the user\u0027s avatar image.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"     * @return a DialogBox configured for user messages.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"        DialogBox dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"        dialogBox.flip();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"        return dialogBox;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"     * Creates a dialog box for system messages with styling based on the response type.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"     * @param text the message to display.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"     * @param img  the system avatar image.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"     * @param type the type of response.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"     * @return a DialogBox configured for system messages.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"    public static DialogBox getDuskDialog(String text, Image img, DuskResponseType type) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"        return type \u003d\u003d DuskResponseType.ERROR","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"                ? new DialogBox(text, img, true)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"                : new DialogBox(text, img);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"     * Loads the appropriate FXML layout.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"     * @param isError {@code true} to load the error-specific layout.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"     * @throws IOException if the FXML file cannot be loaded.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"    private void loadFxml(boolean isError) throws IOException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"                isError ? ERROR_DIALOG_BOX_FXML : DIALOG_BOX_FXML));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"raw-asparagus"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"        fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"        fxmlLoader.load();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"     * Configures the dialog with the specified text and image.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"raw-asparagus"},"content":"     * @param text the text to display.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"raw-asparagus"},"content":"     * @param img  the image to display; if null, the image view is hidden.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"raw-asparagus"},"content":"    private void configureDialog(String text, Image img) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"raw-asparagus"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"raw-asparagus"},"content":"        if (img !\u003d null) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"raw-asparagus"},"content":"            profilePicture.setImage(img);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"raw-asparagus"},"content":"     * Flips the dialog box so that the image appears on the left.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"raw-asparagus"},"content":"    private void flip() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"raw-asparagus"},"content":"        ObservableList\u003cNode\u003e children \u003d FXCollections.observableArrayList(getChildren());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"raw-asparagus"},"content":"        Collections.reverse(children);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"raw-asparagus"},"content":"        getChildren().setAll(children);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"raw-asparagus"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":124}},{"path":"src/main/java/dusk/gui/ErrorBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.gui;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":" * An error message box that spans the width of the chat container.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"public class ErrorBox extends HBox {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"    private static final String ERROR_STYLE_CLASS \u003d \"error-box\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs an ErrorBox displaying the specified error message.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"     * @param errorMessage the error message to display.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"    public ErrorBox(String errorMessage) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"        TextFlow textFlow \u003d new TextFlow();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"        Text text \u003d new Text(errorMessage);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"        text.getStyleClass().add(\"error-text\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"        textFlow.getChildren().add(text);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"        getChildren().add(textFlow);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"        getStyleClass().add(ERROR_STYLE_CLASS);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"        setMaxWidth(Double.MAX_VALUE);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":27}},{"path":"src/main/java/dusk/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.gui;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import dusk.Dusk;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskResponse;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskResponseType;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":" * The primary user interface component that handles user interactions for the Dusk application.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"    private static final String USER_IMAGE_PATH \u003d \"/images/surtr.png\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"    private static final String DUSK_IMAGE_PATH \u003d \"/images/dusk.png\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    private final Image userImage;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    private final Image duskImage;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    private Dusk dusk;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    @FXML","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"    @FXML","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"    @FXML","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    @FXML","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a MainWindow.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"    public MainWindow() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        // Constructor implementation.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"        userImage \u003d loadImage(USER_IMAGE_PATH);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        duskImage \u003d loadImage(DUSK_IMAGE_PATH);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     * Loads an image from the specified path.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"     * @param path the image path.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"     * @return the loaded image.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"    private Image loadImage(String path) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"        return new Image(Objects.requireNonNull(","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"                this.getClass().getResourceAsStream(path)));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"     * Initializes the user interface components.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"    @FXML","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"     * Injects the Dusk instance.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"     * @param d the Dusk instance.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"    public void setDusk(Dusk d) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"        assert d !\u003d null : \"Dusk instance cannot be null\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"        dusk \u003d d;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"        displayDuskResponse(new DuskResponse(dusk.getGreeting(),","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"                DuskResponseType.NORMAL));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"     * Processes the user input and handles the corresponding response.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"    @FXML","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"        String trimmedInput \u003d userInput.getText().trim();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"        if (trimmedInput.isEmpty()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"            clearUserInput();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"        } else if (isExitCommand(trimmedInput)) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"            processExitCommand();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"        } else {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"            processUserMessage(trimmedInput);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"     * Determines whether the provided input is an exit command.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"     * @param input the user input.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"raw-asparagus"},"content":"     * @return {@code true} if the input is an exit command, otherwise {@code false}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"    private boolean isExitCommand(String input) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"raw-asparagus"},"content":"        return \"bye\".equalsIgnoreCase(input);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"raw-asparagus"},"content":"     * Processes an exit command.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"raw-asparagus"},"content":"    private void processExitCommand() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"raw-asparagus"},"content":"        displayDuskResponse(new DuskResponse(Dusk.FAREWELL_MESSAGE, DuskResponseType.NORMAL));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"raw-asparagus"},"content":"        handleTermination();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"raw-asparagus"},"content":"     * Displays Dusk\u0027s response in the dialog container.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"raw-asparagus"},"content":"     * @param response the response to display.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"raw-asparagus"},"content":"    private void displayDuskResponse(DuskResponse response) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"raw-asparagus"},"content":"        if (response.getType() \u003d\u003d DuskResponseType.ERROR) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"raw-asparagus"},"content":"            displayError(response.getMessage());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"raw-asparagus"},"content":"        } else {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"raw-asparagus"},"content":"            DialogBox duskDialog \u003d DialogBox.getDuskDialog(response.getMessage(), duskImage, response.getType());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"raw-asparagus"},"content":"            // Add the dialog and wait for it to be properly added","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"raw-asparagus"},"content":"            dialogContainer.getChildren().add(duskDialog);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"raw-asparagus"},"content":"            // Wait for layout to complete before scrolling","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"raw-asparagus"},"content":"            duskDialog.needsLayoutProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"raw-asparagus"},"content":"                if (!newValue) {  // Layout is complete","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"raw-asparagus"},"content":"                    scrollToBottom();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"raw-asparagus"},"content":"            });","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"raw-asparagus"},"content":"     * Processes a user message.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"raw-asparagus"},"content":"     * @param message the user message.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"raw-asparagus"},"content":"    private void processUserMessage(String message) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"raw-asparagus"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(message, userImage);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"raw-asparagus"},"content":"        dialogContainer.getChildren().add(userDialog);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"raw-asparagus"},"content":"        if (dusk !\u003d null) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"raw-asparagus"},"content":"            CompletableFuture.supplyAsync(() -\u003e dusk.getResponse(message))","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"raw-asparagus"},"content":"                    .thenAccept(response -\u003e Platform.runLater(() -\u003e displayDuskResponse(response)))","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"raw-asparagus"},"content":"                    .exceptionally(error -\u003e {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"raw-asparagus"},"content":"                        Platform.runLater(() -\u003e displayError(\"An unexpected error occurred: \" + error.getMessage()));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"raw-asparagus"},"content":"                        return null;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"raw-asparagus"},"content":"                    });","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"raw-asparagus"},"content":"        userDialog.needsLayoutProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"raw-asparagus"},"content":"            if (!newValue) {  // Layout is complete","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"raw-asparagus"},"content":"                scrollToBottom();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"raw-asparagus"},"content":"        });","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"raw-asparagus"},"content":"        clearUserInput();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"raw-asparagus"},"content":"     * Clears the user input field.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"raw-asparagus"},"content":"    private void clearUserInput() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"raw-asparagus"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"raw-asparagus"},"content":"     * Displays an error message in the dialog container.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"raw-asparagus"},"content":"     * @param errorMessage the error message to display.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"raw-asparagus"},"content":"    private void displayError(String errorMessage) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"raw-asparagus"},"content":"        ErrorBox errorBox \u003d new ErrorBox(errorMessage);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"raw-asparagus"},"content":"        dialogContainer.getChildren().add(errorBox);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"raw-asparagus"},"content":"        errorBox.needsLayoutProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"raw-asparagus"},"content":"            if (!newValue) {  // Layout is complete","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"raw-asparagus"},"content":"                scrollToBottom();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"raw-asparagus"},"content":"        });","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"raw-asparagus"},"content":"     * Terminates the application after a delay.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"raw-asparagus"},"content":"    private void handleTermination() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"raw-asparagus"},"content":"        // Disable input controls","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"raw-asparagus"},"content":"        userInput.setDisable(true);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"raw-asparagus"},"content":"        sendButton.setDisable(true);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"raw-asparagus"},"content":"        // Schedule application termination","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"raw-asparagus"},"content":"        CompletableFuture.delayedExecutor(5000, TimeUnit.MILLISECONDS)","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"raw-asparagus"},"content":"                .execute(() -\u003e Platform.runLater(() -\u003e {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"raw-asparagus"},"content":"                    // Get the scene safely","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"raw-asparagus"},"content":"                    if (this.getScene() !\u003d null \u0026\u0026 this.getScene().getWindow() !\u003d null) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"raw-asparagus"},"content":"                        Stage stage \u003d (Stage) this.getScene().getWindow();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"raw-asparagus"},"content":"                        stage.close();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"raw-asparagus"},"content":"                    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"raw-asparagus"},"content":"                    Platform.exit();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"raw-asparagus"},"content":"                    System.exit(0);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"raw-asparagus"},"content":"                }));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"raw-asparagus"},"content":"     * Scrolls the dialog container to the bottom.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"raw-asparagus"},"content":"    private void scrollToBottom() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"raw-asparagus"},"content":"        // Request layout pass to ensure all elements are properly sized","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"raw-asparagus"},"content":"        dialogContainer.requestLayout();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"raw-asparagus"},"content":"        // Use Platform.runLater to ensure scroll happens after layout","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"raw-asparagus"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"raw-asparagus"},"content":"            // Wait for next layout pass","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"raw-asparagus"},"content":"            dialogContainer.layout();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"raw-asparagus"},"content":"            // Scroll to bottom","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"raw-asparagus"},"content":"            scrollPane.setVvalue(1.0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"raw-asparagus"},"content":"            // Double-check scroll in case of dynamic content loading","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"raw-asparagus"},"content":"            Platform.runLater(() -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"raw-asparagus"},"content":"        });","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":226}},{"path":"src/main/java/dusk/gui/ProfilePicture.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.gui;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":" * A component that displays a circular profile picture.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"public class ProfilePicture extends StackPane {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"    private static final double DEFAULT_SIZE \u003d 45.0;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"    private final ImageView imageView;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a ProfilePicture with no image and default size.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    public ProfilePicture() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"        this(null, DEFAULT_SIZE);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a ProfilePicture with the specified image and default size.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     * @param image the image to display.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    public ProfilePicture(Image image) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"        this(image, DEFAULT_SIZE);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a ProfilePicture with the specified image and size.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"     * @param image the image to display.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"     * @param size  the size for the profile picture.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    public ProfilePicture(Image image, double size) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"        imageView \u003d new ImageView(image);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"        imageView.setFitWidth(size);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"        imageView.setFitHeight(size);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"        imageView.setPreserveRatio(true);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"        imageView.setSmooth(true);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"        getChildren().add(imageView);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        getStyleClass().add(\"profile-picture\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        setPrefSize(size, size);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"        setMaxSize(size, size);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        setMinSize(size, size);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     * Updates the profile picture with a new image.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"     * @param image the new image to display.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"    public void setImage(Image image) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"        imageView.setImage(image);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":57}},{"path":"src/main/java/dusk/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.CompletionException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.ExecutorService;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Deadline;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Event;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Task;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskListException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Todo;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":" * Manages read and write operations for task data in persistent storage.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":" * Provides synchronous and asynchronous methods to load and save a TaskList.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"public class Storage {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    private static final DateTimeFormatter STORAGE_FORMATTER \u003d","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd[ HHmm]\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"    private static final Path DATA_FILE \u003d Paths.get(\"data\", \"data.txt\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    private static final ExecutorService EXECUTOR_SERVICE \u003d Executors.newSingleThreadExecutor();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the data file path.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"     * @return the path to the data file","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"    protected Path getDataFile() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        return DATA_FILE;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"     * Asynchronously saves all tasks in the given TaskList.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks the TaskList to be saved","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"     * @return a CompletableFuture representing the save operation","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"     * @throws CompletionException if a StorageException occurs during saving","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"    public CompletableFuture\u003cVoid\u003e saveTasksAsync(TaskList tasks) throws CompletionException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"        return CompletableFuture.runAsync(() -\u003e {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"            try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"                saveTasks(tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"            } catch (StorageException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"                throw new CompletionException(e);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"        }, EXECUTOR_SERVICE);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"     * Asynchronously loads tasks from the data file into a TaskList.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"     * @return a CompletableFuture resolving to the loaded TaskList","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"     * @throws CompletionException if a StorageException occurs during loading","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"    public CompletableFuture\u003cTaskList\u003e loadTasksAsync() throws CompletionException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"        return CompletableFuture.supplyAsync(() -\u003e {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"            try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"                return loadTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"            } catch (StorageException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"                throw new CompletionException(e);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"        }, EXECUTOR_SERVICE);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"     * Saves all tasks from the given TaskList to the data file.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"     * @param tasks the TaskList containing tasks to be saved","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"     * @throws StorageException if an I/O error occurs or tasks cannot be saved properly","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"    public void saveTasks(TaskList tasks) throws StorageException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"        Path dataFile \u003d getDataFile();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"            Files.createDirectories(dataFile.getParent());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"            try (BufferedWriter writer \u003d Files.newBufferedWriter(dataFile, StandardCharsets.UTF_8)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"                    Task task \u003d tasks.getTask(i);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"                    String line \u003d stringify(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"                    writer.write(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"                    writer.newLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"            throw new StorageException(\"An error occurred while handling I/O operations.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"        } catch (IllegalArgumentException | TaskListException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"raw-asparagus"},"content":"            throw new StorageException(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"raw-asparagus"},"content":"     * Loads tasks from the data file into a new TaskList.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"raw-asparagus"},"content":"     * @return the TaskList containing the loaded tasks","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"raw-asparagus"},"content":"     * @throws StorageException if an I/O error occurs during loading","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"raw-asparagus"},"content":"    public TaskList loadTasks() throws StorageException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"raw-asparagus"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"raw-asparagus"},"content":"        Path dataFile \u003d getDataFile();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"raw-asparagus"},"content":"            Files.createDirectories(dataFile.getParent());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"raw-asparagus"},"content":"            if (!Files.exists(dataFile)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"raw-asparagus"},"content":"                return tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"raw-asparagus"},"content":"            try (BufferedReader reader \u003d Files.newBufferedReader(dataFile, StandardCharsets.UTF_8)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"raw-asparagus"},"content":"                String line;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"raw-asparagus"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"raw-asparagus"},"content":"                    Task task \u003d parseTask(line);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"raw-asparagus"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"raw-asparagus"},"content":"            return tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"raw-asparagus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"raw-asparagus"},"content":"            throw new StorageException(\"An error occurred while handling I/O operations.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"raw-asparagus"},"content":"     * Shuts down the executor service used for asynchronous operations.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"raw-asparagus"},"content":"    public void shutdownExecutor() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"raw-asparagus"},"content":"        EXECUTOR_SERVICE.shutdown();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"raw-asparagus"},"content":"     * Converts a Task to its string representation for storage.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"raw-asparagus"},"content":"     * @param task the Task to convert","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"raw-asparagus"},"content":"     * @return the storage representation of the Task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"raw-asparagus"},"content":"     * @throws StorageException if the Task type is unrecognized","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"raw-asparagus"},"content":"    private String stringify(Task task) throws StorageException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"raw-asparagus"},"content":"        String taskType;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"raw-asparagus"},"content":"        String taskDetails \u003d \"\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"raw-asparagus"},"content":"        boolean isDone \u003d task.getDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"raw-asparagus"},"content":"        String name \u003d task.getDescription();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"raw-asparagus"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"raw-asparagus"},"content":"            taskType \u003d \"T\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"raw-asparagus"},"content":"        } else if (task instanceof Deadline d) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"raw-asparagus"},"content":"            taskType \u003d \"D\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"raw-asparagus"},"content":"            String byString \u003d (d.getBy() \u003d\u003d null) ? \"\" : d.getBy().format(STORAGE_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"raw-asparagus"},"content":"            taskDetails \u003d \"|\" + byString;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"raw-asparagus"},"content":"        } else if (task instanceof Event e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"raw-asparagus"},"content":"            taskType \u003d \"E\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"raw-asparagus"},"content":"            String fromString \u003d (e.getFrom() \u003d\u003d null) ? \"\" : e.getFrom().format(STORAGE_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"raw-asparagus"},"content":"            String toString \u003d (e.getTo() \u003d\u003d null) ? \"\" : e.getTo().format(STORAGE_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"raw-asparagus"},"content":"            taskDetails \u003d \"|\" + fromString + \"|\" + toString;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"raw-asparagus"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"raw-asparagus"},"content":"            throw new StorageException(\"Unknown Task type\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"raw-asparagus"},"content":"        return taskType + \"|\" + isDone + \"|\" + name + taskDetails;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"raw-asparagus"},"content":"     * Parses a line of stored data into a Task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"raw-asparagus"},"content":"     * @param taskLine the string representation of the task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"raw-asparagus"},"content":"     * @return the parsed Task object","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"raw-asparagus"},"content":"     * @throws StorageException if the data is invalid or corrupted","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"raw-asparagus"},"content":"    private Task parseTask(String taskLine) throws StorageException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"raw-asparagus"},"content":"        String[] parts \u003d taskLine.split(\"\\\\|\", -1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"raw-asparagus"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"raw-asparagus"},"content":"            throw new StorageException(\"Data corrupted: \u003c 3 fields!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"raw-asparagus"},"content":"        Task task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"raw-asparagus"},"content":"            task \u003d parseTaskParts(parts);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"raw-asparagus"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"raw-asparagus"},"content":"            throw new StorageException(\"Data corrupted: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"raw-asparagus"},"content":"        return task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"raw-asparagus"},"content":"     * Splits the given task line into its components.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"raw-asparagus"},"content":"     * @param parts the substrings representing a task\u0027s data","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"raw-asparagus"},"content":"     * @return an array of strings representing each part of the task data","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"raw-asparagus"},"content":"     * @throws StorageException if the taskLine is null or in an invalid format","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"raw-asparagus"},"content":"    private Task parseTaskParts(String[] parts) throws StorageException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"raw-asparagus"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"raw-asparagus"},"content":"        boolean isDone \u003d Boolean.parseBoolean(parts[1]);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"raw-asparagus"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"raw-asparagus"},"content":"        Task task \u003d switch (taskType) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"raw-asparagus"},"content":"            case \"E\" -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"raw-asparagus"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"raw-asparagus"},"content":"                    throw new StorageException(\"Event data missing fields: \" + String.join(\"|\", parts));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"raw-asparagus"},"content":"                LocalDateTime from \u003d parseDateTime(parts[3]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"raw-asparagus"},"content":"                LocalDateTime to \u003d parseDateTime(parts[4]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"raw-asparagus"},"content":"                yield new Event(description, from, to);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"raw-asparagus"},"content":"            case \"D\" -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"raw-asparagus"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"raw-asparagus"},"content":"                    throw new StorageException(\"Deadline data missing fields: \" + String.join(\"|\", parts));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"raw-asparagus"},"content":"                LocalDateTime by \u003d parseDateTime(parts[3]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"raw-asparagus"},"content":"                yield new Deadline(description, by);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"raw-asparagus"},"content":"            case \"T\" -\u003e new Todo(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"raw-asparagus"},"content":"            default -\u003e null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"raw-asparagus"},"content":"        };","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"raw-asparagus"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"raw-asparagus"},"content":"            throw new StorageException(\"Unknown task type: \" + taskType + \"|\" + description + \"|\" + isDone);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"raw-asparagus"},"content":"        if (isDone) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"raw-asparagus"},"content":"            task.markDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"raw-asparagus"},"content":"        return task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"raw-asparagus"},"content":"     * Parses a date and time string into a LocalDateTime object.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"raw-asparagus"},"content":"     * @param dateTimeString the string representing date and time","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"raw-asparagus"},"content":"     * @return the LocalDateTime object derived from the string","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"raw-asparagus"},"content":"     * @throws StorageException if the provided date time string is invalid","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"raw-asparagus"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) throws StorageException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"raw-asparagus"},"content":"        if (dateTimeString.isBlank()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"raw-asparagus"},"content":"            return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"raw-asparagus"},"content":"            return LocalDateTime.parse(dateTimeString, STORAGE_FORMATTER);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"raw-asparagus"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"raw-asparagus"},"content":"            throw new StorageException(\"Invalid date format: \\\"\" + dateTimeString + \"\\\"\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":252}},{"path":"src/main/java/dusk/storage/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import dusk.DuskException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import dusk.DuskExceptionType;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":" * Indicates an exception that occurs during storage operations,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":" * including loading and saving tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"public class StorageException extends DuskException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a StorageException with the specified detail message.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     * @param message the detail message describing the exception","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    public StorageException(String message) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"        super(message, DuskExceptionType.STORAGE_ERROR);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":20}},{"path":"src/main/java/dusk/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the task description","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"     * @param by          the deadline date and time","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"        super(description);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"     * Retrieves the deadline date and time.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"     * @return the deadline as a LocalDateTime","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"        return by;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"     * Checks if the deadline falls within the specified range.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"     * @param start the range start","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"     * @param end   the range end","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"     * @return true if the deadline is within the range; false otherwise","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"    public boolean isWithinRange(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        return by !\u003d null \u0026\u0026 !by.isBefore(start) \u0026\u0026 !by.isAfter(end);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"     * Checks if the deadline is on the specified date.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     * @param date the date to check","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"     * @return true if the deadline falls on the given date; false otherwise","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"    public boolean isOnDate(LocalDateTime date) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"        return by !\u003d null \u0026\u0026 by.toLocalDate().isEqual(date.toLocalDate());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the string representation of this deadline.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"     * @return a formatted string with task type, status, and deadline","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"        String formatted \u003d (by \u003d\u003d null) ? \"N/A\" : by.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"        return \"[D]\" + super.toString() + \" (by \" + formatted + \")\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":67}},{"path":"src/main/java/dusk/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs an Event.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the event description","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"     * @param from        the start date and time","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"     * @param to          the end date and time","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"        super(description);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"     * Retrieves the start date and time.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"     * @return the event start as a LocalDateTime","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"        return from;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"     * Retrieves the end date and time.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"     * @return the event end as a LocalDateTime","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"        return to;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"     * Checks if any part of the event falls within the specified time range.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"     * @param start the range start","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"     * @param end   the range end","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"     * @return true if any part of the event is within the range; false otherwise","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"    public boolean isWithinRange(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"        if (from !\u003d null \u0026\u0026 to !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"            return (from.isAfter(start) \u0026\u0026 from.isBefore(end))","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"                    || (to.isAfter(start) \u0026\u0026 to.isBefore(end));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"        } else if (from !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"            return from.isAfter(start) \u0026\u0026 from.isBefore(end);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"        } else if (to !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"            return to.isAfter(start) \u0026\u0026 to.isBefore(end);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"        return false;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"     * Checks if the event occurs on the specified date.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"     * @param date the date to check","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"     * @return true if the event spans the specified date; false otherwise","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"    public boolean isOnDate(LocalDateTime date) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"        if (from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"            return false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"        var dayStart \u003d date.toLocalDate().atStartOfDay();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"        var dayEnd \u003d dayStart.plusDays(1).minusNanos(1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"        return !from.isAfter(dayEnd) \u0026\u0026 !to.isBefore(dayStart);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the string representation of this event.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"     * @return a formatted string with task type, status, and event time range","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"        String fromStr \u003d (from \u003d\u003d null) ? \"\" : from.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"        String toStr \u003d (to \u003d\u003d null) ? \"\" : to.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"        String message \u003d \"\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"        if (fromStr.isEmpty() \u0026\u0026 !toStr.isEmpty()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"            message \u003d \" (until \" + toStr + \")\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"        } else if (!fromStr.isEmpty() \u0026\u0026 toStr.isEmpty()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"            message \u003d \" (from \" + fromStr + \")\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"raw-asparagus"},"content":"        } else if (!fromStr.isEmpty()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"            message \u003d \" (\" + fromStr + \" to \" + toStr + \")\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"raw-asparagus"},"content":"        return \"[E]\" + super.toString() + message;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":103}},{"path":"src/main/java/dusk/task/MarkTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import dusk.DuskException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import dusk.DuskExceptionType;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":" * Exception thrown when an error occurs while marking a task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"public class MarkTaskException extends DuskException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a MarkTaskException with the specified message.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"     * @param message the detail message","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    public MarkTaskException(String message) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"        super(message, DuskExceptionType.TASK_ERROR);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":19}},{"path":"src/main/java/dusk/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":" * Abstract representation of a task with a description and completion status.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"    private final String description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the task description","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"    public void markDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    public void markUndone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"     * Retrieves the task description.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"     * @return the description text","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"        return description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"     * Checks whether the task is completed.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"     * @return true if done, false otherwise","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"    public boolean getDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"        return isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the string representation of this task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"     * @return a formatted string indicating completion status and description","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"        return \"[\" + (isDone ? \"✗\" : \" \") + \"] \" + description;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":62}},{"path":"src/main/java/dusk/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import java.util.List;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":" * Manages a collection of tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"public class TaskList {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     * @param task the task to add","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"     * Removes the task at the specified index.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"     * @param index the index of the task to remove (0-based)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"     * @return the removed task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"     * @throws TaskListException if the index is out of bounds","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    public Task removeTask(int index) throws TaskListException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"            throw new TaskListException(\"Invalid task index.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"     * @param index the index of the task to mark (0-based)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"     * @throws TaskListException if the index is out of bounds","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"     * @throws MarkTaskException if the task is already marked as done","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"    public void markTask(int index) throws TaskListException, MarkTaskException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"        if (task.getDone()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"            throw new MarkTaskException(\"Task is already marked as done.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"        task.markDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"     * Marks the task at the specified index as not done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"     * @param index the index of the task to unmark (0-based)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"     * @throws TaskListException if the index is out of bounds","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"     * @throws MarkTaskException if the task is already unmarked","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"    public void unmarkTask(int index) throws TaskListException, MarkTaskException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"        if (!task.getDone()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"            throw new MarkTaskException(\"Task is already unmarked.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"        task.markUndone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"     * @param index the index of the task (0-based)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"     * @return the task at the given index","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"     * @throws TaskListException if the index is out of bounds","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"    public Task getTask(int index) throws TaskListException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"            throw new TaskListException(\"Invalid task index.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the total number of tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"    public int size() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"     * Checks whether the task list is empty.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"     * @return true if there are no tasks; false otherwise","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"raw-asparagus"},"content":"     * Searches for tasks that match the given criteria.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"raw-asparagus"},"content":"     * If a keyword is provided, only tasks whose descriptions contain the keyword are returned.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"raw-asparagus"},"content":"     * If a specific date is provided, only tasks on that date (via isOnDate) are returned.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"raw-asparagus"},"content":"     * If both fromDate and toDate are provided, only tasks within the date range (via isWithinRange) are returned.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"raw-asparagus"},"content":"     * @param keyword  search keyword (optional)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"raw-asparagus"},"content":"     * @param date     specific date to search for (optional)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"raw-asparagus"},"content":"     * @param fromDate start date of the range (optional)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"raw-asparagus"},"content":"     * @param toDate   end date of the range (optional)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"raw-asparagus"},"content":"     * @return a TaskList of tasks matching the criteria","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"raw-asparagus"},"content":"    public TaskList search(String keyword, LocalDateTime date,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"raw-asparagus"},"content":"                           LocalDateTime fromDate, LocalDateTime toDate) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"raw-asparagus"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"raw-asparagus"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"raw-asparagus"},"content":"            boolean matches \u003d keyword \u003d\u003d null || task.getDescription().toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"raw-asparagus"},"content":"            if (date !\u003d null) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"raw-asparagus"},"content":"                boolean onDate \u003d false;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"raw-asparagus"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"raw-asparagus"},"content":"                    onDate \u003d ((Deadline) task).isOnDate(date);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"raw-asparagus"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"raw-asparagus"},"content":"                    onDate \u003d ((Event) task).isOnDate(date);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"raw-asparagus"},"content":"                if (!onDate) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"raw-asparagus"},"content":"                    matches \u003d false;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"raw-asparagus"},"content":"            if (fromDate !\u003d null \u0026\u0026 toDate !\u003d null) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"raw-asparagus"},"content":"                boolean withinRange \u003d false;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"raw-asparagus"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"raw-asparagus"},"content":"                    withinRange \u003d ((Deadline) task).isWithinRange(fromDate, toDate);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"raw-asparagus"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"raw-asparagus"},"content":"                    withinRange \u003d ((Event) task).isWithinRange(fromDate, toDate);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"raw-asparagus"},"content":"                if (!withinRange) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"raw-asparagus"},"content":"                    matches \u003d false;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"raw-asparagus"},"content":"                }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"raw-asparagus"},"content":"            if (matches) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"raw-asparagus"},"content":"                result.addTask(task);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"raw-asparagus"},"content":"        return result;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":151}},{"path":"src/main/java/dusk/task/TaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import dusk.DuskException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import dusk.DuskExceptionType;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":" * Exception thrown when processing tasks in the TaskList.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"public class TaskListException extends DuskException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a TaskListException with the specified detail message.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"     * @param message the detail message","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    public TaskListException(String message) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"        super(message, DuskExceptionType.TASK_ERROR);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":19}},{"path":"src/main/java/dusk/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":" * Represents a basic to-do task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a Todo task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"     * @param description the task description","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"        super(description);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the string representation of this to-do.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"     * @return a formatted string with task type and status","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":26}},{"path":"src/main/java/dusk/ui/DuskIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import java.io.Closeable;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import java.io.OutputStream;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import java.io.OutputStreamWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import java.io.Reader;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import java.io.Writer;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":" * Provides console-based input/output functionality.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"public class DuskIO implements Closeable {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"    private final BufferedReader bufferedReader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"    private final BufferedWriter bufferedWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a DuskIO instance with the specified input and output streams.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"     * @param inputStream  the InputStream used for input operations","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"     * @param outputStream the OutputStream used for output operations","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    @Deprecated","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    public DuskIO(InputStream inputStream, OutputStream outputStream) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"        this.bufferedReader \u003d new BufferedReader(new InputStreamReader(inputStream));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"        this.bufferedWriter \u003d new BufferedWriter(new OutputStreamWriter(outputStream));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a DuskIO instance with the specified reader and writer.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"     * @param reader the Reader used for input operations","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"     * @param writer the Writer used for output operations","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"     * @throws NullPointerException if either reader or writer is null","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"    public DuskIO(Reader reader, Writer writer) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        this.bufferedReader \u003d new BufferedReader(Objects.requireNonNull(reader, \"Reader cannot be null\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        this.bufferedWriter \u003d new BufferedWriter(Objects.requireNonNull(writer, \"Writer cannot be null\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"     * Prints one or more messages to the output, each prefixed with a tab and followed by a newline.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     * @param messages an array of messages to be printed","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"     * @throws IOException if an I/O error occurs during writing","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"    public void print(String... messages) throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"            bufferedWriter.write(message);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"        bufferedWriter.flush();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"     * Closes the input and output resources.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"     * @throws IOException if an I/O error occurs during closing","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"    public void close() throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"        bufferedReader.close();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"        bufferedWriter.close();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":71}},{"path":"src/main/java/dusk/ui/DuskResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.ui;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":" * Represents a response containing a message and a response type.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"public class DuskResponse {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"    private final String message;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"    private final DuskResponseType type;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"     * Constructs a DuskResponse with the specified message and response type.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"     * @param message the response message","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     * @param type    the type of the response","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    public DuskResponse(String message, DuskResponseType type) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the response message.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     * @return the message","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    public String getMessage() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"        return message;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"     * Returns the response type.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"     * @return the type of the response","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    public DuskResponseType getType() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"        return type;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":39}},{"path":"src/main/java/dusk/ui/DuskResponseType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.ui;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":" * Enumeration of response types.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"public enum DuskResponseType {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"    NORMAL,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"    ERROR,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"    SYSTEM_ERROR","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":10}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"\u003c?import dusk.gui.ProfilePicture?\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"\u003cfx:root type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"         alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"         maxHeight\u003d\"Infinity\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"         maxWidth\u003d\"Infinity\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"         prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"    \u003cLabel fx:id\u003d\"dialog\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"           minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"           text\u003d\"Label\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"           wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"        \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    \u003cProfilePicture fx:id\u003d\"profilePicture\"/\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":23}},{"path":"src/main/resources/view/ErrorDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"\u003cfx:root type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"         alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"         maxHeight\u003d\"Infinity\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"         maxWidth\u003d\"Infinity\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"         prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"    \u003cLabel fx:id\u003d\"dialog\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"           HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"           minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"           styleClass\u003d\"error-box\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"           text\u003d\"Label\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"           wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"        \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"            fx:controller\u003d\"dusk.gui.MainWindow\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"            minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"            minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"            maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"            maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"            prefHeight\u003d\"600.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"            prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"            style\u003d\"-fx-background-color: #f0f0f0;\"\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"    \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"               AnchorPane.bottomAnchor\u003d\"10.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"               AnchorPane.leftAnchor\u003d\"10.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"               AnchorPane.rightAnchor\u003d\"96.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"               layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"               onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"               prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"               prefWidth\u003d\"299.0\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"               style\u003d\"-fx-background-radius: 20; -fx-border-radius: 20;\"/\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"            AnchorPane.bottomAnchor\u003d\"10.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"            AnchorPane.rightAnchor\u003d\"10.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"            layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"            layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"            mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"            onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"            prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"            prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"            style\u003d\"-fx-background-radius: 20; -fx-background-color: #4a90e2; -fx-text-fill: white;\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"            text\u003d\"Send\"/\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"                AnchorPane.topAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"                AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"                AnchorPane.bottomAnchor\u003d\"61.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"                hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"                hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"                vvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"                prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"                prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"                style\u003d\"-fx-background: #f0f0f0; -fx-border-color: transparent;\"\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"              prefHeight\u003d\"502.0\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"              prefWidth\u003d\"388.0\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"              spacing\u003d\"10\"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"              style\u003d\"-fx-padding: 10;\"/\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":55}},{"path":"src/test/java/dusk/command/CreateDeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.ArgumentMatchers.contains;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.ArgumentMatchers.eq;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":" * Tests the functionality of the CreateDeadlineCommand.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"public class CreateDeadlineCommandTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    private DuskIO duskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"        duskIO \u003d mock(DuskIO.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that a valid deadline task is successfully added.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"    public void executeValidDeadlineTaskAdded() throws IOException, InputException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime deadline \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        CreateDeadlineCommand command \u003d new CreateDeadlineCommand(taskList, duskIO, storage, \"Test deadline\", deadline);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"        when(storage.saveTasksAsync(taskList)).thenReturn(CompletableFuture.completedFuture(null));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(eq(\"Got it. I\u0027ve added this task:\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"                contains(\"  [D][ ] Test deadline (by \"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"Now you have 1 tasks in the list.\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"        verify(storage).saveTasksAsync(taskList);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that executing the command with an empty description throws an InputException.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"    public void executeEmptyDescriptionThrowsInputException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime deadline \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"        CreateDeadlineCommand command \u003d new CreateDeadlineCommand(taskList, duskIO, storage, \"\", deadline);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(InputException.class, command::execute);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":66}},{"path":"src/test/java/dusk/command/CreateEventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.ArgumentMatchers.contains;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.ArgumentMatchers.eq;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":" * Tests the functionality of the CreateEventCommand.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"public class CreateEventCommandTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    private DuskIO duskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"        duskIO \u003d mock(DuskIO.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that a valid event task is successfully added.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"    public void executeValidEventTaskAdded() throws IOException, InputException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime startTime \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime endTime \u003d startTime.plusHours(2);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        CreateEventCommand command \u003d new CreateEventCommand(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"                taskList, duskIO, storage, \"Test event\", startTime, endTime","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        );","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"        when(storage.saveTasksAsync(taskList)).thenReturn(CompletableFuture.completedFuture(null));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(eq(\"Got it. I\u0027ve added this task:\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"                contains(\"  [E][ ] Test event (\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"Now you have 1 tasks in the list.\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"        verify(storage).saveTasksAsync(taskList);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that executing the command with an empty description throws an InputException.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"    public void executeEmptyDescriptionThrowsInputException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime startTime \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime endTime \u003d startTime.plusHours(2);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"        CreateEventCommand command \u003d new CreateEventCommand(taskList, duskIO, storage, \"\", startTime, endTime);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(InputException.class, command::execute);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":69}},{"path":"src/test/java/dusk/command/CreateTodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.ArgumentMatchers.contains;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.ArgumentMatchers.eq;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":" * Tests the functionality of the CreateTodoCommand.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"public class CreateTodoCommandTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    private DuskIO duskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"        duskIO \u003d mock(DuskIO.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that a valid todo task is successfully added.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    public void executeValidTodoTaskAdded() throws IOException, InputException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"        CreateTodoCommand command \u003d new CreateTodoCommand(taskList, duskIO, storage, \"Test todo\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        when(storage.saveTasksAsync(taskList)).thenReturn(CompletableFuture.completedFuture(null));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(eq(\"Got it. I\u0027ve added this task:\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"                contains(\"  [T][ ] Test todo\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"Now you have 1 tasks in the list.\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"        verify(storage).saveTasksAsync(taskList);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that executing the command with an empty description throws an InputException.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"    public void executeEmptyDescriptionThrowsInputException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"        CreateTodoCommand command \u003d new CreateTodoCommand(taskList, duskIO, storage, \"\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(InputException.class, command::execute);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":62}},{"path":"src/test/java/dusk/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskListException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Todo;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.ArgumentMatchers.eq;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":" * Tests the functionality of the DeleteCommand.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    private DuskIO duskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"        duskIO \u003d mock(DuskIO.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that the task is deleted when a valid index is provided.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"    public void executeValidIndexDeletesTask() throws TaskListException, InputException, IOException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"test task\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        when(storage.saveTasksAsync(taskList)).thenReturn(CompletableFuture.completedFuture(null));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        DeleteCommand command \u003d new DeleteCommand(taskList, duskIO, storage, \"1\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"        verify(storage).saveTasksAsync(taskList);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"Noted. I\u0027ve removed this task:\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"  [T][ ] test task\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"Now you have 0 tasks in the list.\")","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"        );","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that an invalid index throws a TaskListException.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"    public void executeInvalidIndexThrowsTaskListException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"        DeleteCommand command \u003d new DeleteCommand(taskList, duskIO, storage, \"1\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(TaskListException.class, command::execute);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that an invalid input format throws an InputException.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"    public void executeInvalidInputFormatThrowsInputException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"        DeleteCommand command \u003d new DeleteCommand(taskList, duskIO, storage, \"invalid\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(InputException.class, command::execute);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that the correct task is deleted when multiple tasks exist.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"    public void executeDeletesCorrectTaskWhenMultipleTasksExist()","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"            throws TaskListException, InputException, IOException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"        Todo task1 \u003d new Todo(\"first task\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"        Todo task2 \u003d new Todo(\"second task\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"        when(storage.saveTasksAsync(taskList)).thenReturn(CompletableFuture.completedFuture(null));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"        when(storage.saveTasksAsync(taskList)).thenReturn(CompletableFuture.completedFuture(null));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"        DeleteCommand command \u003d new DeleteCommand(taskList, duskIO, storage, \"1\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(task2, taskList.getTask(0));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"        verify(storage).saveTasksAsync(taskList);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":94}},{"path":"src/test/java/dusk/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.ArgumentMatchers.eq;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskListException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Todo;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":" * Test cases for {@link FindCommand}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"public class FindCommandTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"    private DuskIO duskIO;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"     * Initializes test fixtures before each test.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"        duskIO \u003d mock(DuskIO.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"     * Tests executing the find command on an empty task list.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    public void executeEmptyTaskList() throws IOException, TaskListException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"        FindCommand command \u003d new FindCommand(taskList, duskIO, \"test\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(\"No matching tasks found!\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"     * Tests executing the find command with an exact match.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"    public void executeExactMatch() throws IOException, TaskListException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"Do homework\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"        FindCommand command \u003d new FindCommand(taskList, duskIO, \"Buy groceries\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"Here are the matching tasks in your list:\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"1. [T][ ] Buy groceries\")","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"        );","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"     * Tests executing the find command with a partial match.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"    public void executePartialMatch() throws IOException, TaskListException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"Must buy fruits\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"Do homework\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"        FindCommand command \u003d new FindCommand(taskList, duskIO, \"buy\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"Here are the matching tasks in your list:\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"1. [T][ ] Buy groceries\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"2. [T][ ] Must buy fruits\")","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"        );","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"     * Tests executing the find command with combined exact and partial matches.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"    public void executeCombinedExactAndPartialMatches() throws IOException, TaskListException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"Buy fruits\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"Must Buy vegetables\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"        FindCommand command \u003d new FindCommand(taskList, duskIO, \"Buy\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"Here are the matching tasks in your list:\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"1. [T][ ] Buy groceries\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"2. [T][ ] Buy fruits\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"3. [T][ ] Must Buy vegetables\")","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"        );","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"     * Tests executing the find command when no tasks match.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"raw-asparagus"},"content":"    public void executeNoMatchingTasks() throws IOException, TaskListException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"Do homework\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"raw-asparagus"},"content":"        FindCommand command \u003d new FindCommand(taskList, duskIO, \"study\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(\"No matching tasks found!\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"raw-asparagus"},"content":"     * Tests executing the find command to ensure the search is case-sensitive.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"raw-asparagus"},"content":"    public void executeCaseSensitiveSearch() throws IOException, TaskListException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"Buy GROCERIES\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"buy fruits\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"raw-asparagus"},"content":"        FindCommand command \u003d new FindCommand(taskList, duskIO, \"Buy\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"Here are the matching tasks in your list:\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"1. [T][ ] Buy GROCERIES\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"2. [T][ ] buy fruits\")","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"raw-asparagus"},"content":"        );","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":132}},{"path":"src/test/java/dusk/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.ArgumentMatchers.contains;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.ArgumentMatchers.eq;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Deadline;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Event;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskListException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Todo;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":" * Test cases for {@link ListCommand}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"public class ListCommandTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    private DuskIO duskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"     * Initializes test fixtures before each test.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"        duskIO \u003d mock(DuskIO.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"     * Tests executing the list command with an empty task list.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"    public void executeEmptyTaskList() throws IOException, TaskListException, InputException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        ListCommand command \u003d new ListCommand(taskList, duskIO, null, null, null);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(\"Task list is empty!\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     * Tests executing the list command with tasks present.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"    public void executeListAllTasks() throws IOException, TaskListException, InputException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"test task 1\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"test task 2\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"        ListCommand command \u003d new ListCommand(taskList, duskIO, null, null, null);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"Here are all the tasks:\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"1. [T][ ] test task 1\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"                eq(\"2. [T][ ] test task 2\")","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"        );","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"     * Tests executing the list command to retrieve tasks within a specified date range.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"    public void executeListTasksWithinDateRange() throws IOException, TaskListException, InputException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime tomorrow \u003d now.plusDays(1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime dayAfterTomorrow \u003d tomorrow.plusDays(1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime nextWeek \u003d now.plusWeeks(1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Event(\"event 1\", now, now.plusHours(2)));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Deadline(\"deadline 1\", tomorrow));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Event(\"event 2\", nextWeek, nextWeek.plusHours(1)));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Deadline(\"deadline 2\", nextWeek));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"        ListCommand command \u003d new ListCommand(taskList, duskIO, null, now, dayAfterTomorrow);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"                contains(\"Here are the tasks between \"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"                contains(\"1. [E][ ] event 1 (\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"                contains(\"2. [D][ ] deadline 1 (by \")","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"        );","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"     * Tests executing the list command when no tasks match the specified date range.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"    public void executeListTasksNoMatchInDateRange() throws IOException, TaskListException, InputException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime nextWeek \u003d now.plusWeeks(1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Event(\"future event\", nextWeek, nextWeek.plusHours(1)));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"        ListCommand command \u003d new ListCommand(taskList, duskIO, null, now, now.plusDays(1));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(\"No matching tasks found!\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"raw-asparagus"},"content":"     * Tests executing the list command with a specific date filter.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"raw-asparagus"},"content":"    public void executeListTasksWithSpecificDateOnly() throws IOException, TaskListException, InputException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime tomorrow \u003d now.plusDays(1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime dayAfterTomorrow \u003d tomorrow.plusDays(1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime nextWeek \u003d now.plusWeeks(1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Event(\"past event\", now.minusDays(1), now));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Event(\"event 1\", now, dayAfterTomorrow.plusHours(2)));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Event(\"event 2\", nextWeek, nextWeek.plusHours(1)));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"raw-asparagus"},"content":"        ListCommand command \u003d new ListCommand(taskList, duskIO, now, null, null);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"raw-asparagus"},"content":"                contains(\"Here are the tasks on \"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"raw-asparagus"},"content":"                contains(\"1. [E][ ] past event (\"),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"raw-asparagus"},"content":"                contains(\"2. [E][ ] event 1 (\")","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"raw-asparagus"},"content":"        );","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":131}},{"path":"src/test/java/dusk/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.MarkTaskException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskListException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Todo;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.ArgumentMatchers.eq;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":" * Tests the functionality of the MarkCommand.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"public class MarkCommandTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    private DuskIO duskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"        duskIO \u003d mock(DuskIO.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that executing the command with a valid index marks the task as done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"    public void executeValidIndexMarksTaskAsDone() throws TaskListException,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"            InputException, MarkTaskException, IOException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"test task\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        when(storage.saveTasksAsync(taskList)).thenReturn(CompletableFuture.completedFuture(null));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"        MarkCommand command \u003d new MarkCommand(taskList, duskIO, storage, \"1\", true);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"        assertTrue(taskList.getTask(0).getDone());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"        verify(storage).saveTasksAsync(taskList);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(eq(\"Nice! I\u0027ve marked this task as done:\"), eq(\"  [T][✗] test task\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that an invalid index throws a TaskListException.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"    public void executeInvalidIndexThrowsTaskListException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"        MarkCommand command \u003d new MarkCommand(taskList, duskIO, storage, \"1\", true);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(TaskListException.class, command::execute);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that an invalid input format throws an InputException.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"    public void executeInvalidInputFormatThrowsInputException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"        MarkCommand command \u003d new MarkCommand(taskList, duskIO, storage, \"invalid\", true);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(InputException.class, command::execute);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that executing the command with a flag to unmark updates the task properly.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"    public void executeUnmarkTaskUnmarksTask() throws TaskListException,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"            InputException, MarkTaskException, IOException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"        Todo todo \u003d new Todo(\"test task\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"        todo.markDone();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"        when(storage.saveTasksAsync(taskList)).thenReturn(CompletableFuture.completedFuture(null));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"        MarkCommand command \u003d new MarkCommand(taskList, duskIO, storage, \"1\", false);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"        command.execute();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"        assertFalse(taskList.getTask(0).getDone());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"        verify(storage).saveTasksAsync(taskList);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"        verify(duskIO).print(eq(\"OK! I\u0027ve updated this task to not done:\"), eq(\"  [T][ ] test task\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":92}},{"path":"src/test/java/dusk/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import java.io.StringReader;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import java.io.StringWriter;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"import dusk.ui.DuskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"import dusk.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":" * Test cases for verifying the functionality of the Parser component.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    private DuskIO duskIO;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"     * Sets up the test environment before each test.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"        duskIO \u003d new DuskIO(new StringReader(\"\"), new StringWriter());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that parsing a valid todo command works correctly.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"    public void parseTodoCommandSuccess() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"            Command cmd \u003d Parser.parse(duskIO, storage, tasks, \"todo Read book\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"            assertInstanceOf(CreateTodoCommand.class, cmd);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        });","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that parsing a valid deadline command works correctly.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"    public void parseDeadlineCommandSuccess() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"            Command cmd \u003d Parser.parse(duskIO, storage, tasks,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"                    \"deadline Submit report /by 2024-03-20 1400\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"            assertInstanceOf(CreateDeadlineCommand.class, cmd);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"        });","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that parsing a valid event command works correctly.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"    public void parseEventCommandSuccess() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"            Command cmd \u003d Parser.parse(duskIO, storage, tasks,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"                    \"event Team meeting /from 2024-03-20 1400 /to 2024-03-20 1500\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"            assertInstanceOf(CreateEventCommand.class, cmd);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"        });","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that parsing a valid list command works correctly.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"    public void parseListCommandSuccess() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"            Command cmd \u003d Parser.parse(duskIO, storage, tasks, \"list\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"            assertInstanceOf(ListCommand.class, cmd);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"        });","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that a missing description triggers an InputException.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"    public void parseCommandNoDescriptionThrowsInputException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(InputException.class, () -\u003e Parser.parse(duskIO, storage, tasks, \"todo\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that a deadline command with an invalid datetime format triggers an InputException.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"    public void parseDeadlineInvalidDateTimeThrowsInputException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(InputException.class, () -\u003e Parser.parse(duskIO, storage, tasks,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"                \"deadline Submit report /by invalid-date\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that an event command missing required flags triggers an InputException.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"    public void parseEventMissingFlagsThrowsInputException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(InputException.class, () -\u003e Parser.parse(duskIO, storage, tasks,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"raw-asparagus"},"content":"                \"event Team meeting /from 2024-03-20 1400\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that an invalid command type triggers an InputException.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"raw-asparagus"},"content":"    public void parseInvalidCommandTypeThrowsInputException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(InputException.class, () -\u003e Parser.parse(duskIO, storage, tasks, \"invalid command\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that parsing a valid find command works correctly.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"raw-asparagus"},"content":"    public void parseFindCommandSuccess() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"raw-asparagus"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"raw-asparagus"},"content":"            Command cmd \u003d Parser.parse(duskIO, storage, tasks, \"find book\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"raw-asparagus"},"content":"            assertInstanceOf(FindCommand.class, cmd);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"raw-asparagus"},"content":"        });","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that mark and unmark commands are parsed correctly.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"raw-asparagus"},"content":"    public void parseMarkUnmarkCommandsSuccess() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"raw-asparagus"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"raw-asparagus"},"content":"            Command markCmd \u003d Parser.parse(duskIO, storage, tasks, \"mark 1\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"raw-asparagus"},"content":"            Command unmarkCmd \u003d Parser.parse(duskIO, storage, tasks, \"unmark 1\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"raw-asparagus"},"content":"            assertInstanceOf(MarkCommand.class, markCmd);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"raw-asparagus"},"content":"            assertInstanceOf(MarkCommand.class, unmarkCmd);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"raw-asparagus"},"content":"        });","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":139}},{"path":"src/test/java/dusk/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Deadline;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.TaskList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"import dusk.task.Todo;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":" * Tests for verifying the functionality of the Storage component.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    private Path tempDataFile;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"     * Sets up the test environment by creating a temporary data file and ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"     * initializing the {@code Storage} instance.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"     * @param tempDir the temporary directory provided by JUnit","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"     * @throws IOException if an I/O error occurs while creating the file","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"    public void setUp(@TempDir final Path tempDir) throws IOException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"        // Setup temporary data file and initialize storage.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"        this.tempDataFile \u003d tempDir.resolve(\"data.txt\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        storage \u003d new Storage() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"            @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"            protected Path getDataFile() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"                return tempDataFile;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"        };","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"     * Cleans up resources after each test.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"    @AfterEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"    public void tearDown() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"        storage.shutdownExecutor();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that saving and then loading tasks causes the same task list to be retrieved.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"     * @throws Exception if an error occurs during the save or load operations","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"    public void saveTasksLoadTasksRoundTripSuccess() throws Exception {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"        tasks.addTask(new Todo(\"Test Todo\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"        tasks.addTask(new Deadline(\"Test Deadline\", LocalDateTime.of(2024, 1, 1, 12, 0)));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"        TaskList loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(tasks.size(), loadedTasks.size(),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"                \"Loaded tasks should match the count of saved tasks\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(\"Test Todo\", loadedTasks.getTask(0).getDescription(),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"                \"First task description matches after load\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"        assertFalse(loadedTasks.getTask(0).getDone(),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"                \"First task should remain unmarked by default\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(\"Test Deadline\", loadedTasks.getTask(1).getDescription(),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"                \"Second task description matches after load\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"        assertFalse(loadedTasks.getTask(1).getDone(),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"                \"Second task should remain unmarked by default\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that an invalid task line in the data file causes a {@code StorageException}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"     * @throws Exception if an I/O error occurs while writing to the file","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"    public void invalidTaskLineParseTaskThrowsStorageException() throws Exception {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"        Files.writeString(tempDataFile, \"X|false|InvalidLine\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(StorageException.class, () -\u003e storage.loadTasks(),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"raw-asparagus"},"content":"                \"Corrupted or unrecognized data should throw a StorageException\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that incomplete event data triggers a {@code StorageException}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"     * @throws Exception if an I/O error occurs while writing to the file","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"raw-asparagus"},"content":"    public void incompleteDataForEventThrowsStorageException() throws Exception {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"raw-asparagus"},"content":"        Files.writeString(tempDataFile, \"E|false|IncompleteEvent|2024-01-01\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(StorageException.class, () -\u003e storage.loadTasks(),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"raw-asparagus"},"content":"                \"Event missing required fields should cause a StorageException\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that an invalid date/time format triggers a {@code StorageException}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"raw-asparagus"},"content":"     * @throws Exception if an I/O error occurs while writing to the file","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"raw-asparagus"},"content":"    public void parseDateTimeInvalidFormatThrowsStorageException() throws Exception {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"raw-asparagus"},"content":"        Files.writeString(tempDataFile, \"D|true|BadDate|2024/01/01\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(StorageException.class, () -\u003e storage.loadTasks(),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"raw-asparagus"},"content":"                \"Invalid date format should throw a StorageException\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that saving tasks does not throw an exception when no I/O errors occur.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"raw-asparagus"},"content":"    public void saveTasksIoErrorThrowsStorageException() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"raw-asparagus"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"raw-asparagus"},"content":"        tasks.addTask(new Todo(\"Unwritable Directory Test\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"raw-asparagus"},"content":"        assertDoesNotThrow(() -\u003e storage.saveTasks(tasks),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"raw-asparagus"},"content":"                \"If the path is writable, saving should succeed.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that saving and loading an empty task list works correctly.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"raw-asparagus"},"content":"     * @throws Exception if an error occurs during the operations","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"raw-asparagus"},"content":"    public void emptyTaskListSaveLoadSuccess() throws Exception {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"raw-asparagus"},"content":"        TaskList emptyList \u003d new TaskList();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"raw-asparagus"},"content":"        assertDoesNotThrow(() -\u003e storage.saveTasks(emptyList));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"raw-asparagus"},"content":"        TaskList loadedList \u003d storage.loadTasks();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(0, loadedList.size(), \"Loaded task list should be empty\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that saving and loading multiple task types works as expected.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"raw-asparagus"},"content":"     * @throws Exception if an error occurs during the operations","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"raw-asparagus"},"content":"    public void multipleTaskTypesSaveLoadSuccess() throws Exception {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"raw-asparagus"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(new Deadline(\"Submit assignment\",","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"raw-asparagus"},"content":"                LocalDateTime.now().plusDays(1)));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"raw-asparagus"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"raw-asparagus"},"content":"        TaskList loadedList \u003d storage.loadTasks();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(taskList.size(), loadedList.size(),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"raw-asparagus"},"content":"                \"Loaded list should have same number of tasks\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(taskList.getTask(0).getDescription(),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"raw-asparagus"},"content":"                loadedList.getTask(0).getDescription(),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"raw-asparagus"},"content":"                \"Task descriptions should match\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that loading a non-existent file returns an empty task list.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"raw-asparagus"},"content":"     * @throws Exception if an error occurs during the load operation","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"raw-asparagus"},"content":"    public void nonExistentFileLoadReturnsEmptyList() throws Exception {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"raw-asparagus"},"content":"        // Delete the file if it exists","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"raw-asparagus"},"content":"        Files.deleteIfExists(tempDataFile);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"raw-asparagus"},"content":"        TaskList loadedList \u003d storage.loadTasks();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"raw-asparagus"},"content":"        assertTrue(loadedList.isEmpty(),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"raw-asparagus"},"content":"                \"Loading from non-existent file should return empty list\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that the state of tasks is preserved after a full storage cycle.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"raw-asparagus"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"raw-asparagus"},"content":"     * @throws Exception if an error occurs during the operations","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"raw-asparagus"},"content":"    public void taskStatePreservation() throws Exception {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"raw-asparagus"},"content":"        TaskList originalList \u003d new TaskList();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"raw-asparagus"},"content":"        Todo todo \u003d new Todo(\"Complete task\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"raw-asparagus"},"content":"        todo.markDone();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"raw-asparagus"},"content":"        originalList.addTask(todo);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"raw-asparagus"},"content":"        storage.saveTasks(originalList);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"raw-asparagus"},"content":"        TaskList loadedList \u003d storage.loadTasks();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"raw-asparagus"},"content":"        Todo loadedTodo \u003d (Todo) loadedList.getTask(0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"raw-asparagus"},"content":"        assertTrue(loadedTodo.getDone(),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"raw-asparagus"},"content":"                \"Task done state should be preserved after save/load\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":208}},{"path":"src/test/java/dusk/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":" * Unit tests for the {@code Deadline} class.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"class DeadlineTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"    private final LocalDateTime deadline \u003d LocalDateTime.of(2024, 3, 15, 23, 59);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that the {@code Deadline} constructor correctly sets the description, deadline, and done status.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"    void constructorValidInputsCreatesCorrectDeadline() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"        Deadline task \u003d new Deadline(\"Submit report\", deadline);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(\"Submit report\", task.getDescription());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(deadline, task.getBy());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"        assertFalse(task.getDone());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that {@code isWithinRange} returns {@code true} when the deadline is within the specified range.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    void isWithinRangeDeadlineInRangeReturnsTrue() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"        Deadline task \u003d new Deadline(\"Submit report\", deadline);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime rangeStart \u003d LocalDateTime.of(2024, 3, 15, 0, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime rangeEnd \u003d LocalDateTime.of(2024, 3, 16, 0, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"        assertTrue(task.isWithinRange(rangeStart, rangeEnd));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that {@code isWithinRange} returns {@code false} for a deadline outside the range.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"    void isWithinRangeDeadlineOutsideRangeReturnsFalse() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        Deadline task \u003d new Deadline(\"Submit report\", deadline);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime rangeStart \u003d LocalDateTime.of(2024, 3, 16, 0, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime rangeEnd \u003d LocalDateTime.of(2024, 3, 17, 0, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        assertFalse(task.isWithinRange(rangeStart, rangeEnd));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that {@code isOnDate} returns {@code true} when the deadline falls on the specified date.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"    void isOnDateDeadlineOnSameDateReturnsTrue() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"        Deadline task \u003d new Deadline(\"Submit report\", deadline);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime date \u003d LocalDateTime.of(2024, 3, 15, 0, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"        assertTrue(task.isOnDate(date));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that {@code isOnDate} returns {@code false} when the deadline is not on the specified date.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"    void isOnDateDeadlineOnDifferentDateReturnsFalse() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"        Deadline task \u003d new Deadline(\"Submit report\", deadline);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime date \u003d LocalDateTime.of(2024, 3, 16, 0, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"        assertFalse(task.isOnDate(date));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies the string representation of a new {@code Deadline}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"    void toStringNewDeadlineReturnsCorrectFormat() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"        Deadline task \u003d new Deadline(\"Submit report\", deadline);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"        String expected \u003d \"[D][ ] Submit report (by Mar 15 2024 23:59)\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(expected, task.toString());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies the string representation of a completed {@code Deadline}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"    void toStringCompletedDeadlineReturnsCorrectFormat() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"        Deadline task \u003d new Deadline(\"Submit report\", deadline);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"        task.markDone();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"        String expected \u003d \"[D][✗] Submit report (by Mar 15 2024 23:59)\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(expected, task.toString());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":89}},{"path":"src/test/java/dusk/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":" * Unit tests for the {@code Event} class.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"class EventTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"    private final LocalDateTime from \u003d LocalDateTime.of(2024, 3, 15, 14, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"    private final LocalDateTime to \u003d LocalDateTime.of(2024, 3, 15, 16, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that the {@code Event} constructor correctly sets the description, start time, end time, and done","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"     * status.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    void constructorValidInputsCreatesCorrectEvent() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"        Event event \u003d new Event(\"Team meeting\", from, to);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(\"Team meeting\", event.getDescription());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(from, event.getFrom());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(to, event.getTo());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"        assertFalse(event.getDone());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that {@code isWithinRange} returns {@code true} when the event is completely within the specified range.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"    void isWithinRangeEventCompletelyInRangeReturnsTrue() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"        Event event \u003d new Event(\"Team meeting\", from, to);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime rangeStart \u003d LocalDateTime.of(2024, 3, 15, 13, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime rangeEnd \u003d LocalDateTime.of(2024, 3, 15, 17, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"        assertTrue(event.isWithinRange(rangeStart, rangeEnd));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that {@code isWithinRange} returns {@code false} when the event is outside the specified range.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"    void isWithinRangeEventOutsideRangeReturnsFalse() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"        Event event \u003d new Event(\"Team meeting\", from, to);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime rangeStart \u003d LocalDateTime.of(2024, 3, 16, 14, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime rangeEnd \u003d LocalDateTime.of(2024, 3, 16, 16, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"        assertFalse(event.isWithinRange(rangeStart, rangeEnd));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that {@code isOnDate} returns {@code true} when the event occurs on the specified date.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"    void isOnDateEventOnSameDateReturnsTrue() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"        Event event \u003d new Event(\"Team meeting\", from, to);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime date \u003d LocalDateTime.of(2024, 3, 15, 0, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"        assertTrue(event.isOnDate(date));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that {@code isOnDate} returns {@code false} when the event does not occur on the specified date.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"    void isOnDateEventOnDifferentDateReturnsFalse() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"        Event event \u003d new Event(\"Team meeting\", from, to);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime date \u003d LocalDateTime.of(2024, 3, 16, 0, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"        assertFalse(event.isOnDate(date));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies the string representation of a new {@code Event}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"    void toStringNewEventReturnsCorrectFormat() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"        Event event \u003d new Event(\"Team meeting\", from, to);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"        String expected \u003d \"[E][ ] Team meeting (Mar 15 2024 14:00 to Mar 15 2024 16:00)\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies the string representation of a completed {@code Event}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"    void toStringCompletedEventReturnsCorrectFormat() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"        Event event \u003d new Event(\"Team meeting\", from, to);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"        event.markDone();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"        String expected \u003d \"[E][✗] Team meeting (Mar 15 2024 14:00 to Mar 15 2024 16:00)\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":92}},{"path":"src/test/java/dusk/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":" * Unit tests for the {@code TaskList} class.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"class TaskListTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"    private Task mockTask;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"     * Sets up test fixtures before each test.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    void setUp() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"        // Using an anonymous class since Task is abstract","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"        mockTask \u003d new Task(\"Test task\") {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"            // No need to implement additional methods as we\u0027re only testing TaskList","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"        };","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that adding a single task succeeds.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"    void addTaskSingleTaskSuccess() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(mockTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"            assertEquals(mockTask, taskList.getTask(0));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"        } catch (TaskListException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"raw-asparagus"},"content":"            fail(\"Unexpected TaskListException\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that removing a task with a valid index returns the removed task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"raw-asparagus"},"content":"    void removeTaskValidIndexReturnsRemovedTask() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(mockTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"raw-asparagus"},"content":"            Task removedTask \u003d taskList.removeTask(0);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"raw-asparagus"},"content":"            assertEquals(mockTask, removedTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"raw-asparagus"},"content":"            assertEquals(0, taskList.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"raw-asparagus"},"content":"        } catch (TaskListException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"raw-asparagus"},"content":"            fail(\"Unexpected TaskListException\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that removing a task with an invalid index throws an exception.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"raw-asparagus"},"content":"    void removeTaskInvalidIndexThrowsException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(TaskListException.class, () -\u003e taskList.removeTask(0));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that marking a task with a valid index succeeds.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"raw-asparagus"},"content":"    void markTaskValidIndexSuccess() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(mockTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"raw-asparagus"},"content":"            taskList.markTask(0);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"raw-asparagus"},"content":"            assertTrue(taskList.getTask(0).getDone());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"raw-asparagus"},"content":"        } catch (TaskListException | MarkTaskException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"raw-asparagus"},"content":"            fail(\"Unexpected exception: \" + e.getMessage());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that attempting to mark an already marked task throws an exception.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"raw-asparagus"},"content":"    void markTaskAlreadyMarkedTaskThrowsException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(mockTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"raw-asparagus"},"content":"            taskList.markTask(0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"raw-asparagus"},"content":"            assertThrows(MarkTaskException.class, () -\u003e taskList.markTask(0));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"raw-asparagus"},"content":"        } catch (TaskListException | MarkTaskException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"raw-asparagus"},"content":"            fail(\"Unexpected exception during test setup: \" + e.getMessage());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that unmarking a task with a valid index succeeds.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"raw-asparagus"},"content":"    void unmarkTaskValidIndexSuccess() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(mockTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"raw-asparagus"},"content":"            taskList.markTask(0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"raw-asparagus"},"content":"            taskList.unmarkTask(0);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"raw-asparagus"},"content":"            assertFalse(taskList.getTask(0).getDone());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"raw-asparagus"},"content":"        } catch (TaskListException | MarkTaskException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"raw-asparagus"},"content":"            fail(\"Unexpected exception: \" + e.getMessage());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that attempting to unmark an already unmarked task throws an exception.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"raw-asparagus"},"content":"    void unmarkTaskAlreadyUnmarkedTaskThrowsException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(mockTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(MarkTaskException.class, () -\u003e taskList.unmarkTask(0));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that obtaining a task with a valid index returns the task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"raw-asparagus"},"content":"    void getTaskValidIndexReturnsTask() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(mockTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"raw-asparagus"},"content":"            assertEquals(mockTask, taskList.getTask(0));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"raw-asparagus"},"content":"        } catch (TaskListException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"raw-asparagus"},"content":"            fail(\"Unexpected TaskListException\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that obtaining a task with an invalid index throws an exception.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"raw-asparagus"},"content":"    void getTaskInvalidIndexThrowsException() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"raw-asparagus"},"content":"        assertThrows(TaskListException.class, () -\u003e taskList.getTask(0));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that the size of an empty {@code TaskList} is zero.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"raw-asparagus"},"content":"    void sizeEmptyListReturnsZero() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that the size of a non-empty {@code TaskList} returns the correct count.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"raw-asparagus"},"content":"    void sizeNonEmptyListReturnsCorrectSize() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(mockTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(mockTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that {@code isEmpty} returns {@code true} for an empty {@code TaskList}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"raw-asparagus"},"content":"    void isEmptyEmptyListReturnsTrue() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"raw-asparagus"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that {@code isEmpty} returns {@code false} for a non-empty {@code TaskList}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"raw-asparagus"},"content":"    void isEmptyNonEmptyListReturnsFalse() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(mockTask);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"raw-asparagus"},"content":"        assertFalse(taskList.isEmpty());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that searching with a keyword returns the matching tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"raw-asparagus"},"content":"    void searchWithKeywordReturnsMatchingTasks() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"raw-asparagus"},"content":"        Task task1 \u003d new Task(\"Meeting with team\") {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"raw-asparagus"},"content":"        };","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"raw-asparagus"},"content":"        Task task2 \u003d new Task(\"Call client\") {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"raw-asparagus"},"content":"        };","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"raw-asparagus"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"raw-asparagus"},"content":"        TaskList results \u003d taskList.search(\"team\", null, null, null);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(1, results.size());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"raw-asparagus"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"raw-asparagus"},"content":"            assertEquals(\"Meeting with team\", results.getTask(0).getDescription());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"raw-asparagus"},"content":"        } catch (TaskListException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"raw-asparagus"},"content":"            fail(\"Unexpected TaskListException\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"raw-asparagus"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that searching with a date returns the matching tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"raw-asparagus"},"content":"    void searchWithDateReturnsMatchingTasks() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"raw-asparagus"},"content":"        LocalDateTime testDate \u003d LocalDateTime.now();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"raw-asparagus"},"content":"        TaskList results \u003d taskList.search(null, testDate, null, null);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"raw-asparagus"},"content":"        // Note: Specific date-based testing would depend on your Task implementation","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"raw-asparagus"},"content":"        assertNotNull(results);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":210}},{"path":"src/test/java/dusk/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raw-asparagus"},"content":"package dusk.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"raw-asparagus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"raw-asparagus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"raw-asparagus"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"raw-asparagus"},"content":" * Unit tests for the {@code Todo} class.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"raw-asparagus"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"raw-asparagus"},"content":"class TodoTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies that the {@code Todo} constructor correctly sets the description and the default done status.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"raw-asparagus"},"content":"    void constructorValidDescriptionCreatesCorrectTodo() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"raw-asparagus"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(\"Read book\", todo.getDescription());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"raw-asparagus"},"content":"        assertFalse(todo.getDone());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies the string representation of a new {@code Todo}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"raw-asparagus"},"content":"    void toStringNewTodoReturnsCorrectFormat() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"raw-asparagus"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"raw-asparagus"},"content":"        String expected \u003d \"[T][ ] Read book\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"raw-asparagus"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"raw-asparagus"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"raw-asparagus"},"content":"     * Verifies the string representation of a completed {@code Todo}.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"raw-asparagus"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"raw-asparagus"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"raw-asparagus"},"content":"    void toStringCompletedTodoReturnsCorrectFormat() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"raw-asparagus"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"raw-asparagus"},"content":"        todo.markDone();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"raw-asparagus"},"content":"        String expected \u003d \"[T][✗] Read book\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"raw-asparagus"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"raw-asparagus"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"raw-asparagus"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"raw-asparagus":43}}]
