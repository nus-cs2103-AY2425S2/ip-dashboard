[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"checkstyle {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"    archiveBaseName \u003d \"Botling\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"    archiveFileName \u003d \u0027botling.jar\u0027","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ChinZJ":25,"-":39}},{"path":"data/history.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"deadline","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"123","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"true","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"ChinZJ":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"import botling.Main;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"public class Launcher {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"ChinZJ":11}},{"path":"src/main/java/botling/Botling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import botling.commands.CommandColor;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import botling.commands.CommandParser;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":" * Main class where application starts.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"public class Botling {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    private CommandColor cmdColor;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    public Botling() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"        cmdColor \u003d new CommandColor(new Integer[0]);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"     * Generates the start message.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"     * Includes loading of history with user.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    public String startUp() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"        return CommandParser.start(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"     * Generates a response for the user\u0027s chat message","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"     * Adapted from main method.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"        return CommandParser.parse(input, tasks, cmdColor);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"     * Getter for messages in CommandColor.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"     * Carrying forward to MainWindow.java","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    public String[] getMessages() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"        return cmdColor.getMessages();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"     * Getter for lines in CommandColor.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"     * Carrying forward to MainWindow.java","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"    public Integer[] getLines() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"        return cmdColor.getLines();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":52}},{"path":"src/main/java/botling/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":" * Check if user input is valid as a date object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"public class DateParser {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    private static final DateTimeFormatter PREFERRED_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"            .ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"    private static final DateTimeFormatter SAVED_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"            .ofPattern(\"dd MMM yyyy HHmm\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"    private static final DateTimeFormatter NO_TIME_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"            .ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"     * Checks if given input matches date time syntax required.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"     * If successfully parsed, returns an Optional with a LocalDate object inside it.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    public static Optional\u003cLocalDateTime\u003e parseDateTime(String input) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"            LocalDateTime parsed \u003d LocalDateTime.parse(input, PREFERRED_FORMAT);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"            return Optional.of(parsed);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"            // Do nothing","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"            LocalDateTime parsed \u003d LocalDateTime.parse(input, SAVED_FORMAT);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"            return Optional.of(parsed);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"            // Do nothing","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"            LocalDate parsed \u003d LocalDate.parse(input, NO_TIME_FORMAT);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"            return Optional.of(parsed.atStartOfDay());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"                // Do nothing.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"        return Optional.empty();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"ChinZJ":50}},{"path":"src/main/java/botling/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import botling.gui.MainWindow;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":" * A GUI for Botling using FXML.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"public class Main extends Application {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    private Botling botling \u003d new Botling();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"            // Load up Botling start message","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"            // inject the Botling instance - from demo","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"            // fxmlLoader.\u003cMainWindow\u003egetController().setBotling(botling);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"            MainWindow mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"            mainWindow.setBotling(botling);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"            mainWindow.startUp(botling.startUp());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"            stage.show();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"ChinZJ":42}},{"path":"src/main/java/botling/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":" * Stores all \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":" * Possesses core list related functionality required to interact with \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"public class TaskList {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    private static final boolean TASK_IS_DONE \u003d true;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"    private boolean isActive;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"     * Constructor, always assumes to be active.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"     * Loading history will be handled by a method separately.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"        isActive \u003d TaskList.TASK_IS_DONE;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    public void clear() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"        tasks.clear();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"     * Scans through all tasks present in the list, and returns them in String format.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"    public String[] list() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"        String[] items \u003d new String[this.size()];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"            String entry \u003d \" \" + (i + 1) + \". \" + this.get(i).getTaskStatus();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"            if (i !\u003d this.size() - 1) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"                entry +\u003d \"\\n\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"            items[i] \u003d entry;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"        return items;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"     * Scans through all tasks and returns only those that matches the input String.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"    public String[] find(String input) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"        String[] items \u003d new String[this.size()];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"        Task task;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"        boolean isNotFirst \u003d false;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"            task \u003d this.get(i);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"            String entry \u003d \"\"; // Dummy initialization.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"            if (task.toString().toLowerCase().contains(input.toLowerCase())) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"                if (!isNotFirst) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"                    isNotFirst \u003d true;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"                } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"                    items[i - 1] +\u003d \"\\n\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"                entry +\u003d \" \" + (i + 1) + \". \" + this.get(i).getTaskStatus();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"            items[i] \u003d entry;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"        return items;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"     * Opens the TaskList and allows for actions.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"    public void hasOpen() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"        isActive \u003d true;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"     * Closes the TaskList and prevents further actions.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"    public void hasClose() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"        isActive \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"     * Checks if the TaskList is open for further actions.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"    public boolean isOpen() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"        return isActive;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"     * Returns the Task in the relative index position in the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChinZJ"},"content":"     * Returns the current size of the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChinZJ"},"content":"    public int size() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChinZJ"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChinZJ"},"content":"     * Finds the indexed Task to be marked.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChinZJ"},"content":"     * @return The Task that has been marked.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChinZJ"},"content":"    public String mark(int index) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChinZJ"},"content":"        return tasks.get(index).updateTask(TASK_IS_DONE);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChinZJ"},"content":"     * Finds the indexed Task to be unmarked.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChinZJ"},"content":"     * @return The Task that has been unmarked.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChinZJ"},"content":"    public String unmark(int index) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChinZJ"},"content":"        return tasks.get(index).updateTask(!TASK_IS_DONE);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChinZJ"},"content":"     * Adds a new Task to the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChinZJ"},"content":"     * @return The new Task that has been added, as well as the new size of the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChinZJ"},"content":"    public String add(Task newTask) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChinZJ"},"content":"        return \" \" + newTask.getTaskStatus();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChinZJ"},"content":"     * Removes the Task indexed in the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChinZJ"},"content":"     * @return The Task that has been removed, as well as the new size of the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChinZJ"},"content":"    public String remove(int index) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChinZJ"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChinZJ"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChinZJ"},"content":"        return \" \" + task.getTaskStatus();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChinZJ"},"content":"     * Generates a String format of all tasks to be read by \u003ccode\u003eTaskListWriter\u003c/code\u003e object.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChinZJ"},"content":"    public String fileString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChinZJ"},"content":"        StringBuilder strCreator \u003d new StringBuilder();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChinZJ"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChinZJ"},"content":"            strCreator.append(this.get(i).getTaskData());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChinZJ"},"content":"            if (i !\u003d this.size() - 1) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChinZJ"},"content":"                strCreator.append(\"\\n\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChinZJ"},"content":"        return strCreator.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":156}},{"path":"src/main/java/botling/TaskListWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import java.io.File;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"import botling.exceptions.InvalidInputException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.DeadlineDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.Deadlines;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.EventDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.Events;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.ToDo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":" * Used to perform I/O actions for \u003ccode\u003eTaskList\u003c/code\u003e objects to hard disk where appropriate.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"public class TaskListWriter {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    private static final String HISTORY_DATA_FOLDER \u003d \"./data\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    private static final String HISTORY_DATA_PATH \u003d \"./data/history.txt\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"     * Checks if the TaskList has been instantiated before.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"     * If so, load the previous history of the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"     * Else generate a new history of the TaskList","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"     * @return Any relevant logs of trying to generate / retrieve the history of the task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"    public static String restore(TaskList tasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d \"Attempting to retrieve history...\\n\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"        File dataDir \u003d new File(TaskListWriter.HISTORY_DATA_FOLDER);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"            message +\u003d \"No data folder found! Creating data folder...\\n\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"            dataDir.mkdir();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"            message +\u003d \"Data folder found!\\n\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"        File historyFile \u003d new File(TaskListWriter.HISTORY_DATA_PATH);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"        if (!historyFile.exists()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"            message +\u003d \"No history file found! Creating history file...\\n\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"                historyFile.createNewFile();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"                System.out.println(\"Error creating history file: \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"            message +\u003d \"History file found! Restoring data...\\n\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"            tasks \u003d TaskListWriter.read(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"            // If tasks is closed, then the history file is corrupt.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"            // Push the error message back","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"            if (!tasks.isOpen()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"                message +\u003d \"An error occurred while trying to read\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"                        + \" the history.txt file.\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"                        + \"Do you wish to delete it and start again? (y/n)\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"     * Reads the history file and generates a \u003ccode\u003eTaskList\u003c/code\u003e object off of it.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"    private static TaskList read(TaskList tasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"        try (BufferedReader reader \u003d new BufferedReader(","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"                new FileReader(TaskListWriter.HISTORY_DATA_PATH))) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"            String cmd;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"            String name;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"            String arg1;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"            String arg2;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"            boolean mark;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"            boolean isValid \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"            Task task;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"            while (isValid) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"                cmd \u003d reader.readLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"                if (cmd !\u003d null) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"                    if (!cmd.isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"                        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"                            switch (cmd) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"                            case \"todo\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"                                name \u003d reader.readLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"                                mark \u003d validateAndParseBool(reader.readLine());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"                                task \u003d new ToDo(name, mark);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"                                tasks.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"                                break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"                            case \"deadline\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"                                arg1 \u003d reader.readLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChinZJ"},"content":"                                name \u003d reader.readLine();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChinZJ"},"content":"                                mark \u003d validateAndParseBool(reader.readLine());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChinZJ"},"content":"                                // Check deadline is a valid LocalDateTime object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChinZJ"},"content":"                                Optional\u003cLocalDateTime\u003e byDateTime \u003d DateParser.parseDateTime(arg1);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChinZJ"},"content":"                                if (byDateTime.isPresent()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChinZJ"},"content":"                                    task \u003d new DeadlineDate(name, mark, byDateTime.get());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChinZJ"},"content":"                                } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChinZJ"},"content":"                                    task \u003d new Deadlines(name, mark, arg1);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChinZJ"},"content":"                                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChinZJ"},"content":"                                // Add task","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChinZJ"},"content":"                                tasks.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChinZJ"},"content":"                                break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChinZJ"},"content":"                            case \"event\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChinZJ"},"content":"                                arg1 \u003d reader.readLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChinZJ"},"content":"                                arg2 \u003d reader.readLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChinZJ"},"content":"                                name \u003d reader.readLine();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChinZJ"},"content":"                                mark \u003d validateAndParseBool(reader.readLine());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChinZJ"},"content":"                                // Check if eventFrom and eventTo are valid LocalDateTime objects.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChinZJ"},"content":"                                Optional\u003cLocalDateTime\u003e startDateTimeOpt \u003d DateParser","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChinZJ"},"content":"                                        .parseDateTime(arg1);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChinZJ"},"content":"                                Optional\u003cLocalDateTime\u003e endDateTimeOpt \u003d DateParser","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChinZJ"},"content":"                                        .parseDateTime(arg2);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChinZJ"},"content":"                                if (startDateTimeOpt.isPresent() \u0026\u0026 endDateTimeOpt.isPresent()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChinZJ"},"content":"                                    LocalDateTime startDateTime \u003d startDateTimeOpt.get();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChinZJ"},"content":"                                    LocalDateTime endDateTime \u003d endDateTimeOpt.get();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChinZJ"},"content":"                                    if (startDateTime.isBefore(endDateTime)","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChinZJ"},"content":"                                            || startDateTime.isEqual(endDateTime)) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChinZJ"},"content":"                                        task \u003d new EventDate(","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChinZJ"},"content":"                                                name, mark, startDateTime, endDateTime);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChinZJ"},"content":"                                    } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChinZJ"},"content":"                                        throw new InvalidInputException();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChinZJ"},"content":"                                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChinZJ"},"content":"                                } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChinZJ"},"content":"                                    task \u003d new Events(name, mark, arg1, arg2);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChinZJ"},"content":"                                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChinZJ"},"content":"                                tasks.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChinZJ"},"content":"                                break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChinZJ"},"content":"                            default:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChinZJ"},"content":"                                throw new InvalidInputException();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChinZJ"},"content":"                            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChinZJ"},"content":"                        } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChinZJ"},"content":"                            tasks.hasClose();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChinZJ"},"content":"                        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChinZJ"},"content":"                } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChinZJ"},"content":"                    isValid \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChinZJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChinZJ"},"content":"            System.out.println(\"Error reading history file: \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChinZJ"},"content":"        return tasks;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChinZJ"},"content":"     * Checks if the input aligns with a boolean.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChinZJ"},"content":"     * Due to the fact that \u003ccode\u003eBoolean.parseBoolean()\u003c/code\u003e does not distinguish invalid inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException An arbitrary exception thrown when there is no boolean String.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChinZJ"},"content":"    private static boolean validateAndParseBool(String input) throws InvalidInputException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChinZJ"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChinZJ"},"content":"        } else if (!input.equalsIgnoreCase(\"true\")","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChinZJ"},"content":"                \u0026\u0026 !input.equalsIgnoreCase(\"false\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChinZJ"},"content":"        return Boolean.parseBoolean(input);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChinZJ"},"content":"     * Writes to file to save tasks.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChinZJ"},"content":"    public static void write(TaskList tasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChinZJ"},"content":"        try (PrintWriter writer \u003d new PrintWriter(","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ChinZJ"},"content":"                new FileWriter(TaskListWriter.HISTORY_DATA_PATH))) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ChinZJ"},"content":"            writer.print(tasks.fileString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ChinZJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ChinZJ"},"content":"            System.out.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ChinZJ"},"content":"     * Deletes and creates a new history.txt file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ChinZJ"},"content":"    public static void recreateFile() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ChinZJ"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ChinZJ"},"content":"            File file \u003d new File(TaskListWriter.HISTORY_DATA_PATH);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ChinZJ"},"content":"            file.delete();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ChinZJ"},"content":"            file.createNewFile();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ChinZJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ChinZJ"},"content":"            System.out.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"ChinZJ":191}},{"path":"src/main/java/botling/commands/CmdConst.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * Commands used by Botling.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" * Used in parsing commands.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"public enum CmdConst {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    // Unique commands.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    CMD_BY(\" /by \"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"    CMD_BYE(\"bye\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    CMD_DEADLINE(\"deadline\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    CMD_DELETE(\"delete\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    CMD_EVENT(\"event\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    CMD_FIND(\"find\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"    CMD_FROM(\" /from \"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    CMD_HELP(\"help\"),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"    CMD_LIST(\"list\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    CMD_MARK(\"mark\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    CMD_TO(\" /to \"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"    CMD_TODO(\"todo\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    CMD_UNMARK(\"unmark\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    // Tasks regex.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    TASK_DEADLINE(\"deadline .+ /by .+\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    TASK_DELETE(\"delete -?\\\\d+\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    TASK_EVENT(\"event .+ /from .+ /to .+\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    TASK_FIND(\"find .+\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    TASK_MARK(\"mark -?\\\\d+\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    TASK_TODO(\"todo .+\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    TASK_UNMARK(\"unmark -?\\\\d+\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    // Expected Syntax.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_DATE(\"Date: \u0027yyyy-MM-dd HHmm\u0027, \u0027yyyy-MM-dd\u0027 or \u0027dd MMM yyyy HHmm\u0027\"),","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_DEADLINE(\" \u003cname\u003e /by \u003cdeadline\u003e.\\n\"),","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_EVENT(\" \u003cname\u003e /from \u003cstart\u003e /to \u003cend\u003e.\\n\"),","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_EVENT_DATE(\" \u003cstart\u003e should be before or equal to \u003cend\u003e\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"            + \" if dates are inputs.\\n\"),","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_MARK(\" \u003cX\u003e, where X is a positive integer \u003c\u003d \"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_TODO(\" \u003cname\u003e.\"),","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    // For corrupted files.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"    CORRUPT_DELETE(\"History data has been reset!\"),","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"    CORRUPT_PAUSE(\"Program will now terminate. Please check the file.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"    private final String message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"    CmdConst(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"     * Returns message in String type.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"    public String getString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"ChinZJ":61}},{"path":"src/main/java/botling/commands/CommandColor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * Deconstructs messages created by the CommandParser.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" * Used by the GUI to color relevant text.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"public class CommandColor {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    private String[] messages;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    private Integer[] lines;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"     * Additional constructor.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"     * Used in tests.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"    public CommandColor() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"        this(new Integer[0]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"     * @param messages that are separated by lines.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"     * @param lines that need to be colored","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    public CommandColor(Integer[] lines, String... messages) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"        this.messages \u003d messages;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"        this.lines \u003d lines;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"     * Resets messages and lines.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"      */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    public void reset() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"        messages \u003d new String[0];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"        lines \u003d new Integer[0];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"     * Returns true if contains lines to be colored.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"    public boolean hasColorLines() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"        if (lines.length \u003e 0) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"            return true;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"        return false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"    // Getter for messages","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"    public String[] getMessages() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"        return messages;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"    // Setter for messages","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"    public void setMessages(String[] messages) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"        this.messages \u003d messages;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"    // Getter for lines","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"    public Integer[] getLines() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"        return lines;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"    // Setter for lines","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"    public void setLines(Integer[] lines) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"        this.lines \u003d lines;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"    // Setter for all. Wrapper for above setters.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"    public void setAll(String[] messages, Integer[] lines) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"        setMessages(messages);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"        setLines(lines);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"ChinZJ":72}},{"path":"src/main/java/botling/commands/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import botling.DateParser;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"import botling.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"import botling.TaskListWriter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"import botling.exceptions.InvalidInputException;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"import botling.messagegenerator.MsgGen;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.DeadlineDate;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.Deadlines;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.EventDate;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.Events;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.Task;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.ToDo;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":" * Parses user input and uses \u003ccode\u003eMsgGen\u003c/code\u003e to generate messages appropriately.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"public class CommandParser {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"     * Generates start up message and checks for any history.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"     * @param tasks TaskList to restore progress if any.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"     * @return message for Botling, inclusive of startup amd if any history is recovered.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    public static String start(TaskList tasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d TaskListWriter.restore(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"        if (tasks.isOpen()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"            return (message + \"\\n\" + MsgGen.greet());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"     * Main method for parsing user input.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"     * Invalid inputs will throw a InvalidInputException.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"     * @param input User input. May be valid or invalid","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"     * @param tasks TaskList containing list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"     * @return message for Botling to pass messages to UI object to handle.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"    public static String parse(String input, TaskList tasks, CommandColor cmdColor) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"        String message; // Dummy initialization","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"        cmdColor.reset(); // Refresh the instantiation","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"        if (tasks.isOpen()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"            // TaskList is open means that there are no issues.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"            try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"                if (input.startsWith(CmdConst.CMD_HELP.getString())) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"                    // \"help\" command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"                    try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d CommandParser.help(input, tasks);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"                    } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.unknownCmd();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"                } else if (input.startsWith(CmdConst.CMD_BYE.getString())) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"                    // \"bye\" command.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"                    try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d CommandParser.bye(input, tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"                    } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.unknownCmd();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"                } else if (input.startsWith(CmdConst.CMD_LIST.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"                    // \"list\" command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"                    // todo Add color to GUI next time","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"                    try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.list(list(input, tasks), cmdColor);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"                    } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.unknownCmd();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"                } else if (input.startsWith(CmdConst.CMD_FIND.getString())) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"                    // \"find\" command.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"                    try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.find(find(input, tasks), cmdColor);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"                    } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.unknownCmd();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"                } else if (input.startsWith(CmdConst.CMD_MARK.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"                    // \"mark\" command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"                    try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.mark(CommandParser.mark(input, tasks), cmdColor);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"                    } catch (NumberFormatException | InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.unknownSyntax(CmdConst.CMD_MARK.getString(),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"                                CmdConst.MSG_INVALID_CMD_MARK.getString()","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"                                        + String.valueOf(tasks.size()));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"                } else if (input.startsWith(CmdConst.CMD_UNMARK.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"                    // \"unmark\" command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"                    try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.unmark(CommandParser.unmark(input, tasks), cmdColor);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChinZJ"},"content":"                    } catch (NumberFormatException | InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.unknownSyntax(CmdConst.CMD_UNMARK.getString(),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChinZJ"},"content":"                                CmdConst.MSG_INVALID_CMD_MARK.getString()","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChinZJ"},"content":"                                        + String.valueOf(tasks.size()));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChinZJ"},"content":"                } else if (input.startsWith(CmdConst.CMD_DELETE.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChinZJ"},"content":"                    // \"delete\" command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChinZJ"},"content":"                    try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d CommandParser.delete(input, tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.delete(message, tasks.size(), cmdColor);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChinZJ"},"content":"                    } catch (NumberFormatException | InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.unknownSyntax(CmdConst.CMD_DELETE.getString(),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChinZJ"},"content":"                                CmdConst.MSG_INVALID_CMD_MARK.getString()","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChinZJ"},"content":"                                        + String.valueOf(tasks.size()));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChinZJ"},"content":"                } else if (input.startsWith(CmdConst.CMD_TODO.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChinZJ"},"content":"                    // \"todo\" command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChinZJ"},"content":"                    try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d CommandParser.todo(input, tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.add(message, tasks.size(), cmdColor);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChinZJ"},"content":"                    } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.unknownSyntax(CmdConst.CMD_TODO.getString(),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChinZJ"},"content":"                                CmdConst.MSG_INVALID_CMD_TODO.getString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChinZJ"},"content":"                } else if (input.startsWith(CmdConst.CMD_DEADLINE.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChinZJ"},"content":"                    // \"deadline\" command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChinZJ"},"content":"                    try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d CommandParser.deadline(input, tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.add(message, tasks.size(), cmdColor);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChinZJ"},"content":"                    } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.unknownSyntax(CmdConst.CMD_DEADLINE.getString(),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChinZJ"},"content":"                                CmdConst.MSG_INVALID_CMD_DEADLINE.getString()","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChinZJ"},"content":"                                        + CmdConst.MSG_INVALID_CMD_DATE.getString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChinZJ"},"content":"                } else if (input.startsWith(CmdConst.CMD_EVENT.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChinZJ"},"content":"                    try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d CommandParser.event(input, tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.add(message, tasks.size(), cmdColor);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChinZJ"},"content":"                    } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.unknownSyntax(CmdConst.CMD_EVENT.getString(),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChinZJ"},"content":"                                CmdConst.MSG_INVALID_CMD_EVENT.getString()","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChinZJ"},"content":"                                        + CmdConst.MSG_INVALID_CMD_EVENT_DATE.getString()","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChinZJ"},"content":"                                        + CmdConst.MSG_INVALID_CMD_DATE.getString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChinZJ"},"content":"                } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChinZJ"},"content":"                    throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChinZJ"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChinZJ"},"content":"                message \u003d MsgGen.unknownCmd();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChinZJ"},"content":"            // TaskList is not open means that there are issues.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChinZJ"},"content":"            // Accept only \u0027y\u0027 or \u0027n\u0027","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChinZJ"},"content":"            if (input.equals(\"y\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChinZJ"},"content":"                tasks.clear();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChinZJ"},"content":"                TaskListWriter.recreateFile();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChinZJ"},"content":"                tasks.hasOpen();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChinZJ"},"content":"                message \u003d CmdConst.CORRUPT_DELETE.getString() + \"\\n\" + MsgGen.greet();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChinZJ"},"content":"            } else if (input.equals(\"n\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChinZJ"},"content":"                message \u003d CmdConst.CORRUPT_PAUSE.getString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChinZJ"},"content":"            } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChinZJ"},"content":"                message \u003d MsgGen.unknownCorrupt();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing bye inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChinZJ"},"content":"    private static String bye(String input, TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChinZJ"},"content":"        if (input.equals(CmdConst.CMD_BYE.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChinZJ"},"content":"            tasks.hasClose();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChinZJ"},"content":"            return MsgGen.bye();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ChinZJ"},"content":"    private static String[] list(String input, TaskList tasks)","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ChinZJ"},"content":"            throws InvalidInputException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ChinZJ"},"content":"        if (input.equals(CmdConst.CMD_LIST.getString())) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ChinZJ"},"content":"            return tasks.list();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing find inputs.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ChinZJ"},"content":"    private static String[] find(String input, TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_FIND.getString())) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ChinZJ"},"content":"            return tasks.find(input.substring(ValConstants.TASK_FIND.getVal()));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing mark inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ChinZJ"},"content":"     * Despite their similarities, mark() and unmark() will not have a common method base","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ChinZJ"},"content":"     * due to the fact that the final method call to TaskList is different.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ChinZJ"},"content":"     * This results in unnecessary if else block statements.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ChinZJ"},"content":"    private static String mark(String input, TaskList tasks)","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ChinZJ"},"content":"            throws NumberFormatException, InvalidInputException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_MARK.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ChinZJ"},"content":"            int index \u003d Integer.parseInt(input.substring(ValConstants.TASK_MARK_IDX.getVal()))","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ChinZJ"},"content":"                    - ValConstants.TASK_FIX_IDX.getVal();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ChinZJ"},"content":"            if ((index \u003e\u003d 0) \u0026\u0026 (index \u003c tasks.size())) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ChinZJ"},"content":"                String message \u003d tasks.mark(index);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ChinZJ"},"content":"                TaskListWriter.write(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ChinZJ"},"content":"                return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ChinZJ"},"content":"            } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ChinZJ"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ChinZJ"},"content":"    * Method for parsing unmark inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ChinZJ"},"content":"     * Despite their similarities, mark() and unmark() will not have a common method base","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ChinZJ"},"content":"     * due to the fact that the final method call to TaskList is different.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ChinZJ"},"content":"     * This results in unnecessary if else block statements.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ChinZJ"},"content":"     * @throws NumberFormatException if syntax is correct but input is not an integer.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ChinZJ"},"content":"    */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ChinZJ"},"content":"    private static String unmark(String input, TaskList tasks)","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ChinZJ"},"content":"            throws NumberFormatException, InvalidInputException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_UNMARK.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ChinZJ"},"content":"            int index \u003d Integer.parseInt(input.substring(ValConstants.TASK_UNMARK_IDX.getVal()))","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ChinZJ"},"content":"                    - ValConstants.TASK_FIX_IDX.getVal();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ChinZJ"},"content":"            if ((index \u003e\u003d 0) \u0026\u0026 (index \u003c tasks.size())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ChinZJ"},"content":"                String message \u003d tasks.unmark(index);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ChinZJ"},"content":"                TaskListWriter.write(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ChinZJ"},"content":"                return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ChinZJ"},"content":"            } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ChinZJ"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing delete inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ChinZJ"},"content":"     * @throws NumberFormatException if syntax is correct but input is not an integer.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ChinZJ"},"content":"    private static String delete(String input, TaskList tasks)","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ChinZJ"},"content":"            throws NumberFormatException, InvalidInputException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_DELETE.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ChinZJ"},"content":"            // Recall to convert to 1 based indexing","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ChinZJ"},"content":"            // NumberFormatException may be thrown here during int parsing","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ChinZJ"},"content":"            int index \u003d Integer.parseInt(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ChinZJ"},"content":"                    input.substring(ValConstants.TASK_DELETE_IDX.getVal()))","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ChinZJ"},"content":"                    - ValConstants.TASK_FIX_IDX.getVal();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ChinZJ"},"content":"            // Ensure integer is valid","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"ChinZJ"},"content":"            if ((index \u003e\u003d 0) \u0026\u0026 (index \u003c tasks.size())) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"ChinZJ"},"content":"                String message \u003d tasks.remove(index);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"ChinZJ"},"content":"                TaskListWriter.write(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"ChinZJ"},"content":"                return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"ChinZJ"},"content":"            } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"ChinZJ"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing todo inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"ChinZJ"},"content":"    private static String todo(String input, TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_TODO.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"ChinZJ"},"content":"            Task newTask \u003d new ToDo(input.substring(ValConstants.TASK_TODO_IDX.getVal()));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"ChinZJ"},"content":"            String message \u003d tasks.add(newTask);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"ChinZJ"},"content":"            TaskListWriter.write(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"ChinZJ"},"content":"            return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing deadline inputs.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"ChinZJ"},"content":"    private static String deadline(String input, TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_DEADLINE.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"ChinZJ"},"content":"            // Deadline has a /by specification, greedily take the first in sequence.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"ChinZJ"},"content":"            String withoutDeadline \u003d input.substring(ValConstants.TASK_DEADLINE_IDX.getVal());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"ChinZJ"},"content":"            int byIdx \u003d withoutDeadline.indexOf(CmdConst.CMD_BY.getString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"ChinZJ"},"content":"            String deadlineName \u003d withoutDeadline.substring(0, byIdx);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"ChinZJ"},"content":"            String by \u003d withoutDeadline.substring(byIdx","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"ChinZJ"},"content":"                    + ValConstants.TASK_BY_IDX.getVal());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"ChinZJ"},"content":"            Task newTask;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"ChinZJ"},"content":"            // Check deadline is a valid LocalDateTime object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"ChinZJ"},"content":"            Optional\u003cLocalDateTime\u003e byDateTime \u003d DateParser.parseDateTime(by);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"ChinZJ"},"content":"            if (byDateTime.isPresent()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"ChinZJ"},"content":"                newTask \u003d new DeadlineDate(deadlineName, byDateTime.get());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"ChinZJ"},"content":"            } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"ChinZJ"},"content":"                newTask \u003d new Deadlines(deadlineName, by);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"ChinZJ"},"content":"            // Add task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"ChinZJ"},"content":"            String message \u003d tasks.add(newTask);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"ChinZJ"},"content":"            TaskListWriter.write(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"ChinZJ"},"content":"            return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing event inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"ChinZJ"},"content":"    private static String event(String input, TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_EVENT.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"ChinZJ"},"content":"            // Event has /from and /to specification.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"ChinZJ"},"content":"            // Greedily take the first in sequential order.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"ChinZJ"},"content":"            String withoutEvent \u003d input.substring(ValConstants.TASK_EVENT_IDX.getVal());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"ChinZJ"},"content":"            int fromIdx \u003d withoutEvent.indexOf(CmdConst.CMD_FROM.getString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"ChinZJ"},"content":"            String eventName \u003d withoutEvent.substring(0, fromIdx);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"ChinZJ"},"content":"            String remainingSplit \u003d withoutEvent.substring(fromIdx","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"ChinZJ"},"content":"                    + ValConstants.TASK_FROM_IDX.getVal());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"ChinZJ"},"content":"            int toIdx \u003d remainingSplit.indexOf(CmdConst.CMD_TO.getString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"ChinZJ"},"content":"            String eventFrom \u003d remainingSplit.substring(0, toIdx);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"ChinZJ"},"content":"            String eventTo \u003d remainingSplit.substring(toIdx","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"ChinZJ"},"content":"                    + ValConstants.TASK_TO_IDX.getVal());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"ChinZJ"},"content":"            Task newTask;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"ChinZJ"},"content":"            // Check if eventFrom and eventTo are of valid LocalDateTime objects.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"ChinZJ"},"content":"            Optional\u003cLocalDateTime\u003e startDateTimeOpt \u003d DateParser.parseDateTime(eventFrom);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"ChinZJ"},"content":"            Optional\u003cLocalDateTime\u003e endDateTimeOpt \u003d DateParser.parseDateTime(eventTo);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"ChinZJ"},"content":"            if (startDateTimeOpt.isPresent() \u0026\u0026 endDateTimeOpt.isPresent()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"ChinZJ"},"content":"                LocalDateTime startDateTime \u003d startDateTimeOpt.get();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"ChinZJ"},"content":"                LocalDateTime endDateTime \u003d endDateTimeOpt.get();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"ChinZJ"},"content":"                if (startDateTime.isBefore(endDateTime) || startDateTime.isEqual(endDateTime)) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"ChinZJ"},"content":"                    newTask \u003d new EventDate(eventName, startDateTime, endDateTime);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"ChinZJ"},"content":"                } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"ChinZJ"},"content":"                    throw new InvalidInputException();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"ChinZJ"},"content":"            } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"ChinZJ"},"content":"                newTask \u003d new Events(eventName, eventFrom, eventTo);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"ChinZJ"},"content":"            // Add task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"ChinZJ"},"content":"            String message \u003d tasks.add(newTask);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"ChinZJ"},"content":"            TaskListWriter.write(tasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"ChinZJ"},"content":"            return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"ChinZJ"},"content":"     * Returns a list of all available commands.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"ChinZJ"},"content":"    public static String help(String input, TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"ChinZJ"},"content":"        if (input.equals(CmdConst.CMD_HELP.getString())) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"ChinZJ"},"content":"            return CmdConst.CMD_BYE.getString() + \"\\n\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"ChinZJ"},"content":"                    + CmdConst.CMD_LIST.getString() + \"\\n\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"ChinZJ"},"content":"                    + CmdConst.CMD_FIND.getString() + CmdConst.MSG_INVALID_CMD_TODO.getString()","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"ChinZJ"},"content":"                    + \"\\n\\n\" + CmdConst.CMD_MARK.getString() + \" / \"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"ChinZJ"},"content":"                    + CmdConst.CMD_UNMARK.getString()","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"ChinZJ"},"content":"                    + \" / \" + CmdConst.CMD_DELETE.getString()","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"ChinZJ"},"content":"                    + CmdConst.MSG_INVALID_CMD_MARK.getString() + tasks.size() + \"\\n\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"ChinZJ"},"content":"                    + CmdConst.CMD_TODO.getString() + CmdConst.MSG_INVALID_CMD_TODO.getString()","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"ChinZJ"},"content":"                    + \"\\n\\n\" + CmdConst.CMD_DEADLINE.getString()","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"ChinZJ"},"content":"                    + CmdConst.MSG_INVALID_CMD_DEADLINE.getString() + \"\\n\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"ChinZJ"},"content":"                    + CmdConst.CMD_EVENT.getString() + CmdConst.MSG_INVALID_CMD_EVENT.getString();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":387}},{"path":"src/main/java/botling/commands/ValConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * Value constants to be used to parse user input commands.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"public enum ValConstants {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"    // Tasks constants.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    TASK_BY_IDX(5),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    TASK_DEADLINE_IDX(9),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"    TASK_DELETE_IDX(7),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    TASK_EVENT_IDX(6),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    TASK_FROM_IDX(7),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    TASK_FIND(5),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    TASK_FIX_IDX(1),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"    TASK_MARK_IDX(5),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    TASK_TO_IDX(5),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"    TASK_TODO_IDX(5),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    TASK_UNMARK_IDX(7);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"    private final int val;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    ValConstants(int val) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"        this.val \u003d val;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"     * Returns value in int type.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    public int getVal() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"        return val;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":35}},{"path":"src/main/java/botling/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.exceptions;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * Dummy exception for catching and throwing.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"    public InvalidInputException() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"        super();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":11}},{"path":"src/main/java/botling/gui/ColorNames.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.gui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":" * Constants for colors for TextFlow object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":" * Since manipulation is reuqired, a custom class is created instead.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"public enum ColorNames {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    COLOR_BLACK(0),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    COLOR_STRIKETHROUGH(-1),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    COLOR_GREEN(1),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    COLOR_RED(2);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    private static final Color[] COLORS \u003d new Color[]{Color.BLACK,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"            Color.rgb(0, 100, 0), // Pastel green","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"            Color.rgb(139, 34, 34)}; // Pastel red","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    private final int index;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    ColorNames(int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"     * Returns color in String type.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"    public static Color getColor(int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"        return ColorNames.COLORS[index];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    public int getIndex() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"        return index;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"ChinZJ":38}},{"path":"src/main/java/botling/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.gui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import java.util.Collections;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    @FXML","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    private SelectableTextFlow textFlow;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    @FXML","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    private DialogBox(String text, Image img, Integer[] colorCodes, String[] coloredText) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"                    MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"        // Establish TextFlow","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"        if (colorCodes.length !\u003d 0 \u0026\u0026 colorCodes.length \u003d\u003d coloredText.length) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"            try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"                List\u003cText\u003e styledTexts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"                for (int i \u003d 0; i \u003c coloredText.length; i++) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"                    Text styledText \u003d new Text(coloredText[i]);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"                    if (colorCodes[i] \u003d\u003d ColorNames.COLOR_STRIKETHROUGH.getIndex()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"                        styledText.setStrikethrough(true);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"                    } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"                        styledText.setFill(ColorNames.getColor(colorCodes[i]));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"                    styledTexts.add(styledText);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"                textFlow.getChildren().addAll(styledTexts);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"                System.out.println(\"Check code!\" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"                System.out.println(\"Check code!\" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"            Text styledText \u003d new Text(text);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"            textFlow.getChildren().add(styledText);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"     * Part of processing for Botling\u0027s DialogBox.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"    private void flip() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"        setAlignment(Pos.BOTTOM_LEFT);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"        textFlow.getStyleClass().add(\"reply-text-area\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"        // Flip margins for both TextArea and TextFlow","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"        Insets originalMargins \u003d HBox.getMargin(textFlow);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"        Insets flippedMargins \u003d new Insets(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"                originalMargins.getTop(),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"                originalMargins.getLeft(), // Swap left and right","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"                originalMargins.getBottom(),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"                originalMargins.getRight());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"        HBox.setMargin(textFlow, flippedMargins);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChinZJ"},"content":"     * Generates a DialogBox object for the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChinZJ"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChinZJ"},"content":"        Integer[] dummyInt \u003d new Integer[0];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChinZJ"},"content":"        String[] dummyString \u003d new String[0];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChinZJ"},"content":"        return new DialogBox(text, img, dummyInt, dummyString);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChinZJ"},"content":"     * Generates DialogBox object for Botling.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChinZJ"},"content":"    public static DialogBox getBotlingDialog(String text, Image img,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChinZJ"},"content":"                                             Integer[] lines, String[] messages) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChinZJ"},"content":"        var db \u003d new DialogBox(text, img, lines, messages);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChinZJ"},"content":"        db.flip();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChinZJ"},"content":"        return db;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"ChinZJ":112}},{"path":"src/main/java/botling/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.gui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import botling.Botling;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    @FXML","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    @FXML","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    @FXML","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    private TextArea userInput;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    @FXML","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    private Button sendButton;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    private Botling botling;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    private Image userImage \u003d new Image(this.getClass()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"            .getResourceAsStream(\"/images/MantaRayUser.png\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"    private Image botlingImage \u003d new Image(this.getClass()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"            .getResourceAsStream(\"/images/TurtleBot.png\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"     * Used to initialize the main window of the GUI.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"    @FXML","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    public void initialize() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"    /** Injects the Botling instance. */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"    public void setBotling(Botling d) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"        botling \u003d d;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"     * Displays the starting message from Botling.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"    public void startUp(String message) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"            DialogBox.getBotlingDialog(message, botlingImage,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"                    botling.getLines(), botling.getMessages()));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"     * Creates two dialog boxes","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"     * one echoing user input","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"     * and the other containing Botling\u0027s reply and then appends them to","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"    @FXML","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"        // Handles the \\n that comes with the input","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"        input \u003d input.substring(0, input.length() - 1);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"        String response \u003d botling.getResponse(input);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"                DialogBox.getBotlingDialog(response, botlingImage,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"                        botling.getLines(), botling.getMessages()));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"        userInput.clear();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"            delay.play();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"     * Keypress for TextArea.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"    @FXML","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"    private void handleKeyPress(KeyEvent event) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"        if (event.getCode() \u003d\u003d KeyCode.ENTER \u0026\u0026 !event.isShiftDown()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"            event.consume();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"            handleUserInput();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"ChinZJ":96}},{"path":"src/main/java/botling/gui/SelectableTextFlow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.gui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":" * Adapted from:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":" * https://stackoverflow.com/questions/79395124/","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":" * javafx-overlaying-textflow-with-textarea?noredirect\u003d1#comment140023326_79395124","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"public class SelectableTextFlow extends TextFlow {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    private TextArea textArea;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"     * Programmatically creates textArea.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"     * A .fxml file is not created due to the hardcoding required (see layoutChildren()).","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    public SelectableTextFlow() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"        getStyleClass().add(\"selectable-text-flow\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"        getStylesheets().add(getClass()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"                .getResource(\"/CSS/selectable-text-flow.css\").toExternalForm());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"        textArea \u003d new TextArea();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"        textArea.setWrapText(true);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"        textArea.setManaged(false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"        textArea.setEditable(false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        getChildren().add(textArea);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"     * Used to make text selectable.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"     * Copies all text and overlays the TextFlow object.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"    protected void layoutChildren() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"        StringBuilder txt \u003d new StringBuilder();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"        List\u003cNode\u003e managed \u003d getManagedChildren();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"        for (Node node : managed) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"            if (node instanceof Text) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"                Text text \u003d (Text) node;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"                txt.append(text.getText());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"        textArea.setText(txt.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"        textArea.toFront();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"        super.layoutChildren();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"        textArea.setLayoutX(6); // hardcoded","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"        textArea.setLayoutY(6); // hardcoded","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"        textArea.resize(getWidth(), getHeight());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ChinZJ":56}},{"path":"src/main/java/botling/messagegenerator/MsgGen.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.messagegenerator;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import botling.commands.CommandColor;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"import botling.gui.ColorNames;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":" * Responsible for generating all messages where appropriate.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"public class MsgGen {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"     * Generates greeting message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"    public static String greet() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"        return MsgGenConst.MSG_GREET.getString();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"     * Generates farewell message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    public static String bye() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"        return MsgGenConst.MSG_FAREWELL.getString();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"     * Provides a wrapper for TaskList list() message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"    public static String list(String[] message, CommandColor cmdColor) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"        if (message.length \u003d\u003d 0) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"            return MsgGenConst.MSG_EMPTY_LIST.getString();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"            /*","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"             Adapted from","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"             https://stackoverflow.com/questions/23079003/how-to-convert-a-java-8-stream-to-an-array","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"             */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"            String[] start \u003d new String[]{MsgGenConst.MSG_CURRENT_TASKS.getString()};","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"            String[] merge \u003d Stream.concat(Arrays.stream(start), Arrays.stream(message))","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"                    .toArray(String[]::new);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"            Integer[] lines \u003d new Integer[merge.length];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"            // Not necessary, but for clarity.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"            Arrays.fill(lines, ColorNames.COLOR_BLACK.getIndex());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"            // Skip first element.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"            for (int i \u003d 1; i \u003c merge.length; i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"                if (merge[i].matches(MsgGenConst.REGEX_MARK.getString())) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"                    lines[i] \u003d ColorNames.COLOR_GREEN.getIndex();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"                } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"                    lines[i] \u003d ColorNames.COLOR_RED.getIndex();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"            cmdColor.setAll(merge, lines);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"            return MsgGenConst.MSG_CURRENT_TASKS.getString() + String.join(\"\", message);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"     * Provides a wrapper for TaskList find() message.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"    public static String find(String[] message, CommandColor cmdColor) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"        if (message.length \u003d\u003d 0 || Arrays.stream(message)","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"                .distinct()","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"                .count() \u003d\u003d 1) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"            return MsgGenConst.MSG_NO_TASKS.getString();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"            String[] start \u003d new String[]{MsgGenConst.MSG_FIND_TASKS.getString()};","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"            String[] merge \u003d Stream.concat(Arrays.stream(start), Arrays.stream(message))","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"                    .filter(s -\u003e !s.equals(\"\"))","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"                    .toArray(String[]::new);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"            Integer[] lines \u003d new Integer[merge.length];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"            Arrays.fill(lines, ColorNames.COLOR_BLACK.getIndex());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"            for (int i \u003d 1; i \u003c merge.length; i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"                if (merge[i].matches(MsgGenConst.REGEX_MARK.getString())) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"                    lines[i] \u003d ColorNames.COLOR_GREEN.getIndex();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"                } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"                    lines[i] \u003d ColorNames.COLOR_RED.getIndex();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"            cmdColor.setAll(merge, lines);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"            return MsgGenConst.MSG_FIND_TASKS.getString() + String.join(\"\", message);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"     * Provides a wrapper for TaskList mark() message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"    public static String mark(String message, CommandColor cmdColor) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"        String[] messages \u003d new String[]{MsgGenConst.MSG_TASK_DONE.getString(), message};","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"        Integer[] lines \u003d new Integer[]{ColorNames.COLOR_BLACK.getIndex(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"                ColorNames.COLOR_GREEN.getIndex()};","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"        cmdColor.setAll(messages, lines);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChinZJ"},"content":"        return MsgGenConst.MSG_TASK_DONE.getString() + message;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChinZJ"},"content":"     * Provides a wrapper for TaskList unmark() message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChinZJ"},"content":"    public static String unmark(String message, CommandColor cmdColor) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChinZJ"},"content":"        String[] messages \u003d new String[]{MsgGenConst.MSG_TASK_UNDONE.getString(), message};","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChinZJ"},"content":"        Integer[] lines \u003d new Integer[]{ColorNames.COLOR_BLACK.getIndex(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChinZJ"},"content":"                ColorNames.COLOR_RED.getIndex()};","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChinZJ"},"content":"        cmdColor.setAll(messages, lines);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChinZJ"},"content":"        return MsgGenConst.MSG_TASK_UNDONE.getString() + message;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChinZJ"},"content":"     * Provides aa wrapper for TaskList add() message.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChinZJ"},"content":"     * @param message Message generated from TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChinZJ"},"content":"     * @param size Size of TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChinZJ"},"content":"    public static String add(String message, int size, CommandColor cmdColor) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChinZJ"},"content":"        String[] messages \u003d new String[]{MsgGenConst.MSG_ADD.getString(), message,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChinZJ"},"content":"                MsgGenConst.MSG_CURRENT_SIZE_P1.getString() + size,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChinZJ"},"content":"                MsgGenConst.MSG_CURRENT_SIZE_P2.getString()};","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChinZJ"},"content":"        Integer[] lines \u003d new Integer[]{ColorNames.COLOR_BLACK.getIndex(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChinZJ"},"content":"                ColorNames.COLOR_RED.getIndex(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChinZJ"},"content":"                ColorNames.COLOR_BLACK.getIndex(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChinZJ"},"content":"                ColorNames.COLOR_BLACK.getIndex()};","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChinZJ"},"content":"        cmdColor.setAll(messages, lines);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChinZJ"},"content":"        return MsgGenConst.MSG_ADD.getString()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChinZJ"},"content":"                + message","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChinZJ"},"content":"                + MsgGenConst.MSG_CURRENT_SIZE_P1.getString() + size","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChinZJ"},"content":"                + MsgGenConst.MSG_CURRENT_SIZE_P2.getString();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChinZJ"},"content":"     * Provides aa wrapper for TaskList remove() message.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChinZJ"},"content":"     * @param message Message generated from TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChinZJ"},"content":"     * @param size Size of TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChinZJ"},"content":"    public static String delete(String message, int size, CommandColor cmdColor) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChinZJ"},"content":"        String[] messages \u003d new String[]{MsgGenConst.MSG_TASK_DELETE.getString(), message,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChinZJ"},"content":"                MsgGenConst.MSG_CURRENT_SIZE_P1.getString() + size,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChinZJ"},"content":"                MsgGenConst.MSG_CURRENT_SIZE_P2.getString()};","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChinZJ"},"content":"        Integer[] lines \u003d new Integer[]{ColorNames.COLOR_BLACK.getIndex(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChinZJ"},"content":"                ColorNames.COLOR_STRIKETHROUGH.getIndex(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChinZJ"},"content":"                ColorNames.COLOR_BLACK.getIndex(),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChinZJ"},"content":"                ColorNames.COLOR_BLACK.getIndex()};","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChinZJ"},"content":"        cmdColor.setAll(messages, lines);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChinZJ"},"content":"        return MsgGenConst.MSG_TASK_DELETE.getString()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChinZJ"},"content":"                + message + MsgGenConst.MSG_CURRENT_SIZE_P1.getString() + size","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChinZJ"},"content":"                + MsgGenConst.MSG_CURRENT_SIZE_P2.getString();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChinZJ"},"content":"     * Message when command is unknown.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChinZJ"},"content":"    public static String unknownCmd() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChinZJ"},"content":"        return MsgGenConst.MSG_INVALID_UNKNOWN.getString();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChinZJ"},"content":"     * Message when command syntax is not fulfilled.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChinZJ"},"content":"    public static String unknownSyntax(String cmd, String syntax) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChinZJ"},"content":"        return MsgGenConst.MSG_INVALID_CMD_P1.getString()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChinZJ"},"content":"                + cmd","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChinZJ"},"content":"                + MsgGenConst.MSG_INVALID_CMD_P2.getString()","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChinZJ"},"content":"                + cmd + syntax;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChinZJ"},"content":"     * Message when looking for \u0027y\u0027 or \u0027n\u0027 inputs.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChinZJ"},"content":"     * Used when history file is corrupted and checking to delete or exit the program.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChinZJ"},"content":"    public static String unknownCorrupt() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChinZJ"},"content":"        return MsgGenConst.CORRUPT_FILE.getString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"ChinZJ":174}},{"path":"src/main/java/botling/messagegenerator/MsgGenConst.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.messagegenerator;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * Message constants used to generate Botling\u0027s replies.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"public enum MsgGenConst {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    // For greetings and farewells.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    MSG_FAREWELL(\"Bye. Hope to see you again soon!\"),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"    MSG_GREET(\"Hello! I\u0027m Botling!\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"            + \"What can I do for you?\"),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    // For list / find.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    MSG_ADD(\"Got it. I\u0027ve added this task: \\n\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"    MSG_CURRENT_SIZE_P1(\"\\nNow you have \"),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    MSG_CURRENT_SIZE_P2(\" tasks in the list.\"),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"    MSG_CURRENT_TASKS(\"Here are the tasks in your list:\\n\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    MSG_EMPTY_LIST(\"There are currently no tasks!\"),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    MSG_FIND_TASKS(\"Here are the matching tasks in your list:\\n\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"    MSG_NO_TASKS(\"There are currently no matching tasks!\"),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"    // For mark / unmark / delete.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    MSG_TASK_DELETE(\"Noted. I\u0027ve removed this task: \\n\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    MSG_TASK_DONE(\"Nice! I\u0027ve marked this task as done:\\n\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    MSG_TASK_UNDONE(\"Ok, I\u0027ve marked this task as not done yet:\\n\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    // Regex for mark and unmark tasks","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    REGEX_MARK(\" \\\\d+\\\\. \\\\[[TDE]\\\\]\\\\[X\\\\](?s).*\"),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    REGEX_UNMARK(\" \\\\d+\\\\. \\\\[[TDE]\\\\]\\\\[ \\\\](?s).*\"),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"    // For unexpected inputs","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_P1(\"OOPS!!! The format of \"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_P2(\" should be \"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_UNKNOWN(\"OOPS!!! This command does not exist (yet). \\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"            + \"Type \u0027help\u0027 for a list of commands and their syntax!\"),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"    // For corrupt files","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    CORRUPT_FILE(\"Please enter \u0027y\u0027 for yes and \u0027n\u0027 for no.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"    private final String message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"    MsgGenConst(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"     * Returns message in String type.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"    public String getString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":56}},{"path":"src/main/java/botling/tasks/DeadlineDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.tasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":" * \u003ccode\u003eDeadline\u003c/code\u003e object that also has a \u003ccode\u003edate\u003c/code\u003e for a deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":" * \u003ccode\u003edate\u003c/code\u003es are in the format yyyy-mm-dd HHmm (24-hour format).","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"public class DeadlineDate extends Deadlines {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    public DeadlineDate(String name, LocalDateTime dateTime) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"        super(name, dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")).toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"     * Alternative constructor for full specification of attributes.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    public DeadlineDate(String name, boolean isDone, LocalDateTime dateTime) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"        super(name, isDone, dateTime","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"                .format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")).toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"     * Updates parent method since it has a \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"    public boolean hasDate() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"        return true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"     * Generates message to be printed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"        return super.getTaskStatus() + \" (date)\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"ChinZJ":46}},{"path":"src/main/java/botling/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.tasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e object that has a deadline.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    private final String by;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    public Deadlines(String name, String by) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"        super(name);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"     * Alternative constructor for full specification of attributes.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    public Deadlines(String name, boolean isDone, String by) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"        super(name, isDone);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"     * Generates message to be printed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        return \"[D]\" + super.getTaskStatus() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"     * Generates the data version of the task status.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskData() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"        return \"deadline\\n\" + by + \"\\n\" + super.getTaskData();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":42}},{"path":"src/main/java/botling/tasks/EventDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.tasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":" * \u003ccode\u003eEvent\u003c/code\u003e object that has a \u003ccode\u003edate\u003c/code\u003e for a start and end time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":" * \u003ccode\u003edate\u003c/code\u003es are in the format yyyy-mm-dd HHmm (24-hour format).","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"public class EventDate extends Events {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"    public EventDate(String name, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"        super(name, startDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"                        .toString(),","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"                endDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"                        .toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"     * Alternative constructor for full specification of attributes.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    public EventDate(String name, boolean isDone,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"                     LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        super(name, isDone,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"                startDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")).toString(),","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"                endDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")).toString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"     * Updates parent method since it has a \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"    public boolean hasDate() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"        return true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"     * Generates message to be printed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"        return super.getTaskStatus() + \" (date)\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"ChinZJ":54}},{"path":"src/main/java/botling/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.tasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e object that has a \u003ccode\u003estart\u003c/code\u003e and an \u003ccode\u003eend\u003c/code\u003e.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"public class Events extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    private final String from;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    private final String to;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    public Events(String name, String from, String to) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"        super(name);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"     * Alternative constructor for full specification of attributes.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    public Events(String name, boolean isDone, String from, String to) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"        super(name, isDone);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"     * Generates message to be printed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"        return \"[E]\" + super.getTaskStatus() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"     * Generates the data version of the task status.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskData() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"        return \"event\\n\" + from + \"\\n\" + to + \"\\n\" + super.getTaskData();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":45}},{"path":"src/main/java/botling/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.tasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * Parent class for various \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e has a \u003ccode\u003ename\u003c/code\u003e and a \u003ccode\u003estatus\u003c/code\u003e of completion.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    private static final boolean TASK_UNDONE \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"    private final String name;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor for Task object.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"     * Assumes that the task is not done.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"     * Utilizes base constructor (see below).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"     * @param name Name of task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"    public Task(String name) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"        this(name, Task.TASK_UNDONE);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"     * Base constructor for Task object.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"     * Allows for full specification of Task object construction.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"     * @param name Name of task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"     * @param done Status of task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"    public Task(String name, boolean done) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"     * \u003ccode\u003etoString\u003c/code\u003e method.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"        return this.name;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"     * Updates the status of the task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"    public String updateTask(boolean isDone) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"        return \" \" + this.getTaskStatus();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"     * Generates the String of the task status.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"     * To be called by \"list\".","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"     * @return message String containing status of task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"        String message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"            message \u003d (\"[X] \" + name);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"            message \u003d (\"[ ] \" + name);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"     * Generates the data version of the task status.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskData() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d name + \"\\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"            message +\u003d \"true\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"            message +\u003d \"false\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"     * To be overridden by \u003ccode\u003eTask\u003c/code\u003e objects with date.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"    public boolean hasDate() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"        return false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":87}},{"path":"src/main/java/botling/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.tasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * A \"default\" \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" * Does not have additional functionalities.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    public ToDo(String name) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"        super(name);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"     * Alternative constructor for full specification of attributes.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"        super(name, isDone);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"     * Generates message to be printed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d \"[T]\" + super.getTaskStatus();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"     * Generates the data version of the task status.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskData() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"        return \"todo\\n\" + super.getTaskData();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":40}},{"path":"src/main/resources/images/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"https://stock.adobe.com/search?k\u003dmanta+cartoon\u0026asset_id\u003d1024077717","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"https://www.freepik.com/premium-ai-image/cute-cartoon-sea-turtle-swimming-underwater-colorful-coral-reefs_344370416.htm","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"https://www.shutterstock.com/image-vector/seamless-kakau-hawaiian-wave-pattern-tattoo-152529788","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"https://www.freepik.com/premium-ai-image/illustration-with-deep-underwater-ocean-scene_347862215.htm","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"ChinZJ":4}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"\u003c?import botling.gui.SelectableTextFlow?\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"\u003cfx:root alignment\u003d\"BOTTOM_RIGHT\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"         stylesheets\u003d\"@../CSS/dialog-box.css\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17.0.7\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"        \u003cSelectableTextFlow fx:id\u003d\"textFlow\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"                            styleClass\u003d\"text-flow\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"                            lineSpacing\u003d\"1.2\"\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"            \u003cInsets left\u003d\"82.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"                    right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"        \u003c/HBox.margin\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"            \u003cInsets bottom\u003d\"6.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"                    left\u003d\"6.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"                    right\u003d\"6.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"                    top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"        \u003c/padding\u003e\u003c/SelectableTextFlow\u003e","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"                   fitHeight\u003d\"75.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"                   fitWidth\u003d\"75.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"                   pickOnBounds\u003d\"true\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"                   preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"        \u003cInsets bottom\u003d\"15.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"                left\u003d\"5.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"                right\u003d\"5.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"                top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"ChinZJ":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"            maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"            minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"            minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"            prefHeight\u003d\"700.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"            prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"            stylesheets\u003d\"@../CSS/main.css\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17.0.7\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"            fx:controller\u003d\"botling.gui.MainWindow\"\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"        \u003cTextArea fx:id\u003d\"userInput\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"                   prefHeight\u003d\"55.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"                   onKeyPressed\u003d\"#handleKeyPress\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"                   wrapText\u003d\"true\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"                   prefRowCount\u003d\"1\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"                prefHeight\u003d\"55.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"                    prefHeight\u003d\"543.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"                    vvalue\u003d\"1.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"                    AnchorPane.bottomAnchor\u003d\"58.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"                      prefHeight\u003d\"540.0\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"ChinZJ":60}},{"path":"src/test/java/botling/DateParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"public class DateParserTest {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"    public void passFormatTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"        // yyyy-MM-dd HHmm format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"        String preferredFormat \u003d \"2025-12-09 2359\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"        DateTimeFormatter preferredFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"        Optional\u003cLocalDateTime\u003e result \u003d Optional.of(","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"                LocalDateTime.parse(preferredFormat, preferredFormatter));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, DateParser.parseDateTime(preferredFormat));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"        // dd MMM yyyy HHmm format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"        String savedFormat \u003d \"02 Jan 2024 1234\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"        DateTimeFormatter savedFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"        result \u003d Optional.of(LocalDateTime.parse(savedFormat, savedFormatter));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, DateParser.parseDateTime(savedFormat));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"        // yyyy-MM-dd format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"        String noTimeFormat \u003d \"2024-01-04\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        DateTimeFormatter noTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"        result \u003d Optional.of(LocalDate.parse(noTimeFormat, noTimeFormatter).atStartOfDay());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, DateParser.parseDateTime(noTimeFormat));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"        // New day.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"        String newDay \u003d \"02 Jan 2024 2400\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"        DateTimeFormatter newDayFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"        result \u003d Optional.of(LocalDateTime.parse(newDay, newDayFormatter));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, DateParser.parseDateTime(newDay));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"    public void failFormatTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"        // Month does not exist","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"        String invalidMonth \u003d \"2023-99-11\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(Optional.empty(), DateParser.parseDateTime(invalidMonth));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"        // Invalid time.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"        String invalidTime \u003d \"2023-12-03 2500\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(Optional.empty(), DateParser.parseDateTime(invalidTime));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"ChinZJ":53}},{"path":"src/test/java/botling/TaskListWriterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import java.io.File;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.Deadlines;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.EventDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.ToDo;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"public class TaskListWriterTest {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"     * Used to overwrite the history.txt file for each test where applicable.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    public void createTempHistoryFile() throws IOException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"        File dataFolder \u003d new File(\"data\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"        File historyFile \u003d new File(\"./data/history.txt\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"        if (!dataFolder.exists()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"            dataFolder.mkdir();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"        if (!historyFile.exists()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"            historyFile.createNewFile();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"                new FileWriter(\"./data/history.txt\"))) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"            /*","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"             * Test everything in the following order","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"             * ToDo mark","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"             * Deadline by unmark","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"             * Event from to (date) mark","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"             * */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"            String fileHistory \u003d \"todo\\n \\ntrue\\n\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"                    + \"deadline\\ntonight!\\n \\nfalse\\n\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"                    + \"event\\n23 Jan 2025 0000\\n24 Jan 2025 2359\\n \\ntrue\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"            writer.write(fileHistory);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"    public void filePresentTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"        String expectedMsg \u003d \"Attempting to retrieve history...\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"                + \"Data folder found!\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"                + \"History file found! Restoring data...\\n\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"        String expectedFileString \u003d \"todo\\n \\ntrue\\n\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"                + \"deadline\\ntonight!\\n \\nfalse\\n\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"                + \"event\\n23 Jan 2025 0000\\n24 Jan 2025 2359\\n \\ntrue\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"        String expectedListString \u003d \" 1. [T][X]  \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"                + \" 2. [D][ ]   (by: tonight!)\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"                + \" 3. [E][X]   (from: 23 Jan 2025 0000 to: 24 Jan 2025 2359) (date)\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"        ToDo first \u003d new ToDo(\" \", true);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"        Deadlines second \u003d new Deadlines(\" \", \"tonight!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(\"2025-01-23 0000\", format);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"        LocalDateTime endTime \u003d LocalDateTime.parse(\"2025-01-24 2359\", format);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"        EventDate third \u003d new EventDate(\" \", true, startTime, endTime);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"        TaskList expected \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"        expected.add(first);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"        expected.add(second);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"        expected.add(third);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"        TaskListWriter tester \u003d new TaskListWriter();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"        String actual \u003d tester.restore(testList);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(expectedMsg, actual);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(3, testList.size());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(expectedFileString, testList.fileString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(expected.fileString(), testList.fileString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(expectedListString, String.join(\"\", testList.list()));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"    public void folderPresentTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"        File historyFile \u003d new File(\"./data/history.txt\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"        historyFile.delete();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"        String expectedMsg \u003d \"Attempting to retrieve history...\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"                + \"Data folder found!\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"                + \"No history file found! Creating history file...\\n\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"        TaskListWriter tester \u003d new TaskListWriter();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChinZJ"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChinZJ"},"content":"        String actual \u003d tester.restore(testList);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(expectedMsg, actual);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(0, testList.size());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(\"\", testList.fileString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(0, testList.list().length);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChinZJ"},"content":"    public void nonePresentTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChinZJ"},"content":"        File dataFolder \u003d new File(\"data\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChinZJ"},"content":"        File historyFile \u003d new File(\"./data/history.txt\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChinZJ"},"content":"        historyFile.delete();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChinZJ"},"content":"        dataFolder.delete();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChinZJ"},"content":"        String expectedMsg \u003d \"Attempting to retrieve history...\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChinZJ"},"content":"                + \"No data folder found! Creating data folder...\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChinZJ"},"content":"                + \"No history file found! Creating history file...\\n\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChinZJ"},"content":"        TaskListWriter tester \u003d new TaskListWriter();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChinZJ"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChinZJ"},"content":"        String actual \u003d tester.restore(testList);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(expectedMsg, actual);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(0, testList.size());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(\"\", testList.fileString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(0, testList.list().length);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChinZJ"},"content":"    public void failedReadYesTest() throws IOException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChinZJ"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChinZJ"},"content":"                new FileWriter(\"./data/history.txt\"))) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChinZJ"},"content":"            String fileHistory \u003d \"corrupted\\nfile\\n!!!!!!\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChinZJ"},"content":"            writer.write(fileHistory);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChinZJ"},"content":"        String expectedMsg \u003d \"Attempting to retrieve history...\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChinZJ"},"content":"                + \"Data folder found!\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChinZJ"},"content":"                + \"History file found! Restoring data...\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChinZJ"},"content":"                + \"An error occurred while trying to read\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChinZJ"},"content":"                + \" the history.txt file.\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChinZJ"},"content":"                + \"Do you wish to delete it and start again? (y/n)\";;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChinZJ"},"content":"        TaskListWriter tester \u003d new TaskListWriter();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChinZJ"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChinZJ"},"content":"        String actual \u003d tester.restore(testList);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(expectedMsg, actual);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChinZJ"},"content":"        tester.recreateFile();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(0, testList.size());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(\"\", testList.fileString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(0, testList.list().length);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(false, testList.isOpen());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChinZJ"},"content":"        File file \u003d new File(\"./data/history.txt\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(0, file.length());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChinZJ"},"content":"    public void failedReadNoTest() throws IOException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChinZJ"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChinZJ"},"content":"                new FileWriter(\"./data/history.txt\"))) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChinZJ"},"content":"            String fileHistory \u003d \"corrupted\\nfile\\n!!!!!!\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChinZJ"},"content":"            writer.write(fileHistory);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChinZJ"},"content":"        String expectedMsg \u003d \"Attempting to retrieve history...\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChinZJ"},"content":"                + \"Data folder found!\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChinZJ"},"content":"                + \"History file found! Restoring data...\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChinZJ"},"content":"                + \"An error occurred while trying to read\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChinZJ"},"content":"                + \" the history.txt file.\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChinZJ"},"content":"                + \"Do you wish to delete it and start again? (y/n)\";;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChinZJ"},"content":"        TaskListWriter tester \u003d new TaskListWriter();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChinZJ"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ChinZJ"},"content":"        String actual \u003d tester.restore(testList);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(expectedMsg, actual);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"ChinZJ":176}},{"path":"src/test/java/botling/commands/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package botling.commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"import botling.TaskList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"import botling.messagegenerator.MsgGen;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.DeadlineDate;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.Deadlines;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.EventDate;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.Events;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"import botling.tasks.ToDo;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"public class CommandParserTest {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    public void byeTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"        CommandParser cmdParse \u003d new CommandParser();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"        CommandColor cmdColor \u003d new CommandColor();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"        // Valid input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"        String result \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"bye\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"        // Invalid input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        tasks.hasOpen();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"OOPS!!! This command does not exist (yet). \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"            + \"Type \u0027help\u0027 for a list of commands and their syntax!\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"bye \", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    public void listTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"        // Tasks in list are not rigorously tested.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"        // They should be tested in their respective classes.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"        CommandParser cmdParse \u003d new CommandParser();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"        CommandColor cmdColor \u003d new CommandColor();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"        // Empty list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"        String result \u003d \"There are currently no tasks!\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"list\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"        // List with item.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"        ToDo task \u003d new ToDo(\"unmark\", false);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"                + \" 1. [T][ ] unmark\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"list\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"        // List with marked item.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"        tasks.remove(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"        task \u003d new ToDo(\"mark\", true);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"                + \" 1. [T][X] mark\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"list\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"        // Invalid input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"        result \u003d MsgGen.unknownCmd();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"list \", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"    public void findTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"        CommandParser cmdParse \u003d new CommandParser();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"        CommandColor cmdColor \u003d new CommandColor();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"        // Find upper and lower case","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"        // Simultaneously test for special characters and spaces","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"        ToDo task1 \u003d new ToDo(\" \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"        Deadlines task2 \u003d new Deadlines(\" b\", \"cc\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"        Events task3 \u003d new Events(\" B\", \"CC\", \"DD\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(\"2024-01-02 0000\", format);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"        DeadlineDate task4 \u003d new DeadlineDate(\")(*\u0026^%$#@!\", time);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"        EventDate task5 \u003d new EventDate(\"!@#$%^\u0026*(\", time, time);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(task1);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(task2);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(task3);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(task4);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(task5);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"        // Spaces.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"        String result \u003d \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChinZJ"},"content":"                + \" 1. [T][ ]  \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChinZJ"},"content":"                + \" 2. [D][ ]  b (by: cc)\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChinZJ"},"content":"                + \" 3. [E][ ]  B (from: CC to: DD)\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"find  \", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChinZJ"},"content":"        // Upper and lower case.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChinZJ"},"content":"                + \" 2. [D][ ]  b (by: cc)\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChinZJ"},"content":"                + \" 3. [E][ ]  B (from: CC to: DD)\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"find  b\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"find  B\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChinZJ"},"content":"        // Character in other fields.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"There are currently no matching tasks!\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"find c\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChinZJ"},"content":"        // Find special characters","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChinZJ"},"content":"                + \" 4. [D][ ] )(*\u0026^%$#@! (by: 02 Jan 2024 0000) (date)\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChinZJ"},"content":"                + \" 5. [E][ ] !@#$%^\u0026*( (from: 02 Jan 2024 0000 to: 02 Jan 2024 0000) (date)\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"find !\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChinZJ"},"content":"        // Find invalid input","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"OOPS!!! This command does not exist (yet). \\n\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChinZJ"},"content":"                + \"Type \u0027help\u0027 for a list of commands and their syntax!\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"find\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChinZJ"},"content":"    public void markTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChinZJ"},"content":"        CommandParser cmdParse \u003d new CommandParser();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChinZJ"},"content":"        CommandColor cmdColor \u003d new CommandColor();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChinZJ"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChinZJ"},"content":"        ToDo task \u003d new ToDo(\"unmark\", false);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChinZJ"},"content":"        // Correct input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChinZJ"},"content":"        String result \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChinZJ"},"content":"                + \" [T][X] unmark\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChinZJ"},"content":"        tasks.unmark(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"mark 1\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChinZJ"},"content":"        // Marking the same object again.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"mark 1\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChinZJ"},"content":"        // Exceed size.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"OOPS!!! The format of mark should be mark \u003cX\u003e\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChinZJ"},"content":"                + \", where X is a positive integer \u003c\u003d 1\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"mark 9\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChinZJ"},"content":"        // Float.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"mark 92.6\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChinZJ"},"content":"        // Long.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"mark 5147483647\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChinZJ"},"content":"        // Negative integer.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"mark -900\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChinZJ"},"content":"    public void unmarkTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChinZJ"},"content":"        CommandParser cmdParse \u003d new CommandParser();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChinZJ"},"content":"        CommandColor cmdColor \u003d new CommandColor();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChinZJ"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChinZJ"},"content":"        ToDo task \u003d new ToDo(\"unmark\", true);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChinZJ"},"content":"        // Correct input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChinZJ"},"content":"        String result \u003d \"Ok, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChinZJ"},"content":"                + \" [T][ ] unmark\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChinZJ"},"content":"        tasks.mark(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"unmark 1\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChinZJ"},"content":"        // Marking the same object again.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"unmark 1\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChinZJ"},"content":"        // Exceed size.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"OOPS!!! The format of unmark should be unmark \u003cX\u003e\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ChinZJ"},"content":"                + \", where X is a positive integer \u003c\u003d 1\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"unmark 9\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ChinZJ"},"content":"        // Float.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"unmark 92.6\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ChinZJ"},"content":"        // Long.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"unmark 5147483647\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ChinZJ"},"content":"        // Negative integer.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"unmark -900\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ChinZJ"},"content":"    public void deleteTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ChinZJ"},"content":"        CommandParser cmdParse \u003d new CommandParser();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ChinZJ"},"content":"        CommandColor cmdColor \u003d new CommandColor();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ChinZJ"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ChinZJ"},"content":"        ToDo task \u003d new ToDo(\"delete\", false);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ChinZJ"},"content":"        // Correct input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ChinZJ"},"content":"        String result \u003d \"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ChinZJ"},"content":"                + \" [T][ ] delete\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 0 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"delete 1\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ChinZJ"},"content":"        // Exceed size.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"OOPS!!! The format of delete should be delete \u003cX\u003e\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ChinZJ"},"content":"                + \", where X is a positive integer \u003c\u003d 1\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"delete 9\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ChinZJ"},"content":"        // Float.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"delete 92.6\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ChinZJ"},"content":"        // Long.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"delete 5147483647\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ChinZJ"},"content":"        // Negative integer.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"delete -900\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ChinZJ"},"content":"    public void todoTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ChinZJ"},"content":"        CommandParser cmdParse \u003d new CommandParser();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ChinZJ"},"content":"        CommandColor cmdColor \u003d new CommandColor();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ChinZJ"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ChinZJ"},"content":"        // ToDo task \u003d new ToDo(\" \", false);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ChinZJ"},"content":"        // Valid input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ChinZJ"},"content":"        String result \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ChinZJ"},"content":"                + \" [T][ ]  \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"todo  \", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ChinZJ"},"content":"        // No descriptor.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"OOPS!!! The format of todo should be todo \u003cname\u003e.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"todo\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ChinZJ"},"content":"    public void deadlineTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ChinZJ"},"content":"        CommandParser cmdParse \u003d new CommandParser();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ChinZJ"},"content":"        CommandColor cmdColor \u003d new CommandColor();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ChinZJ"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ChinZJ"},"content":"        // Deadlines task \u003d new Deadlines(\" \", \" \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ChinZJ"},"content":"        // Standard input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ChinZJ"},"content":"        String result \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ChinZJ"},"content":"                + \" [D][ ]   (by:  )\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"deadline   /by  \", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ChinZJ"},"content":"        // Multiple /by commands","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ChinZJ"},"content":"        // Nested deadline commands.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ChinZJ"},"content":"        tasks.remove(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ChinZJ"},"content":"        // task \u003d new Deadlines(\"deadline\", \"deadline /by abc\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ChinZJ"},"content":"                + \" [D][ ] deadline (by: deadline /by abc)\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"deadline deadline /by deadline /by abc\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ChinZJ"},"content":"                tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ChinZJ"},"content":"        // deadline with date.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ChinZJ"},"content":"        // deadline with alternate time formats are not tested","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ChinZJ"},"content":"        // because that is the functionality of DateParser object.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ChinZJ"},"content":"        tasks.remove(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ChinZJ"},"content":"        // DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ChinZJ"},"content":"        // LocalDateTime time \u003d LocalDateTime.parse(\"2024-01-02 0000\", format);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ChinZJ"},"content":"        // DeadlineDate taskDate \u003d new DeadlineDate(\" \", time);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"ChinZJ"},"content":"                + \" [D][ ]   (by: 02 Jan 2024 0000) (date)\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"deadline   /by 2024-01-02 0000\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"ChinZJ"},"content":"        // Invalid input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"OOPS!!! The format of deadline should be deadline \u003cname\u003e /by \u003cdeadline\u003e.\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"ChinZJ"},"content":"                + \"Date: \u0027yyyy-MM-dd HHmm\u0027, \u0027yyyy-MM-dd\u0027 or \u0027dd MMM yyyy HHmm\u0027\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"deadline\", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"ChinZJ"},"content":"    @Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"ChinZJ"},"content":"    public void eventTest() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"ChinZJ"},"content":"        CommandParser cmdParse \u003d new CommandParser();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"ChinZJ"},"content":"        CommandColor cmdColor \u003d new CommandColor();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"ChinZJ"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"ChinZJ"},"content":"        // Events task \u003d new Events(\" \", \" \", \" \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"ChinZJ"},"content":"        // Standard input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"ChinZJ"},"content":"        String result \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"ChinZJ"},"content":"                + \" [E][ ]   (from:   to:  )\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"event   /from   /to  \", tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"ChinZJ"},"content":"        // Nested event commands.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"ChinZJ"},"content":"        tasks.remove(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"ChinZJ"},"content":"        // task \u003d new Events(\" \", \"event \", \"/from asd /to asd \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"ChinZJ"},"content":"                + \" [E][ ]   (from: event  to: /from asd /to asd )\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"event   /from event  /to /from asd /to asd \",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"ChinZJ"},"content":"                tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"ChinZJ"},"content":"        // Multiple /from /to commands.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"ChinZJ"},"content":"        tasks.remove(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"ChinZJ"},"content":"        // task \u003d new Events(\"a\", \"b /from c\", \"d /to e\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"ChinZJ"},"content":"                + \" [E][ ] a (from: b /from c to: d /to e)\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"event a /from b /from c /to d /to e\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"ChinZJ"},"content":"                tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"ChinZJ"},"content":"        tasks.remove(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"ChinZJ"},"content":"        // task \u003d new Events(\"a\", \"b\", \"c /from d /to e\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"ChinZJ"},"content":"                + \" [E][ ] a (from: b to: c /from d /to e)\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"event a /from b /to c /from d /to e\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"ChinZJ"},"content":"                tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"ChinZJ"},"content":"        tasks.remove(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"ChinZJ"},"content":"        // task \u003d new Events(\"a\", \"b\", \"c /to d /from e\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"ChinZJ"},"content":"                + \" [E][ ] a (from: b to: c /to d /from e)\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"event a /from b /to c /to d /from e\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"ChinZJ"},"content":"                tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"ChinZJ"},"content":"        tasks.remove(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"ChinZJ"},"content":"        // task \u003d new Events(\"a /to b\", \"c\", \"d /from e\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"ChinZJ"},"content":"                + \" [E][ ] a /to b (from: c to: d /from e)\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"event a /to b /from c /to d /from e\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"ChinZJ"},"content":"                tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"ChinZJ"},"content":"        tasks.remove(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"ChinZJ"},"content":"        // task \u003d new Events(\"a /to b\", \"c /from d\", \"e\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"ChinZJ"},"content":"                + \" [E][ ] a /to b (from: c /from d to: e)\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"event a /to b /from c /from d /to e\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"ChinZJ"},"content":"                tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"ChinZJ"},"content":"        // Doubles as invalid input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"OOPS!!! The format of event should be event \u003cname\u003e /from \u003cstart\u003e /to \u003cend\u003e.\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"ChinZJ"},"content":"                + \" \u003cstart\u003e should be before or equal to \u003cend\u003e if dates are inputs.\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"ChinZJ"},"content":"                + \"Date: \u0027yyyy-MM-dd HHmm\u0027, \u0027yyyy-MM-dd\u0027 or \u0027dd MMM yyyy HHmm\u0027\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"event a /to b /to c /from d /from e\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"ChinZJ"},"content":"                tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"ChinZJ"},"content":"        // event with invalid start and end date","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"ChinZJ"},"content":"                \"event a /from 02 Jan 2024 0000 /to 02 Jan 2022 0000\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"ChinZJ"},"content":"                tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"ChinZJ"},"content":"        // event with date.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"ChinZJ"},"content":"        // Doubles to check that same date works, but not before.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"ChinZJ"},"content":"        tasks.remove(0);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"ChinZJ"},"content":"        // DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"ChinZJ"},"content":"        // LocalDateTime time \u003d LocalDateTime.parse(\"2024-01-02 0000\", format);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"ChinZJ"},"content":"        // EventDate taskDate \u003d new EventDate(\" \", time, time);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"ChinZJ"},"content":"        result \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"ChinZJ"},"content":"                + \" [E][ ]   (from: 02 Jan 2024 0000 to: 02 Jan 2024 0000) (date)\\n\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"ChinZJ"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"ChinZJ"},"content":"        assertEquals(result, cmdParse.parse(\"event   /from 2024-01-02 /to 2024-01-02\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"ChinZJ"},"content":"                tasks, cmdColor));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"ChinZJ":362}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"!\"#$%\u0026\u0027()*+,-./0123456789:;\u003c\u003d\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\n\\t;\\b\\r;_finish","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"mark -99","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"mark 999","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"todo","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"todo !\"#$%\u0026\u0027()*+,-./0123456789:;\u003c\u003d\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\n\\t;\\b\\r;_finish","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"deadline","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by /by hehehehaw","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by/byhehehehaw","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_from_to /from shodif /to saldjfli","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_from_to/fromshodif/tosaldjfli","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_from_to /by /from klasjfd1#$ /to )(*\u0026^%$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_from_to/by/fromklasjfd1#$/to)(*\u0026^%$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_event_from_to /by laksdf event /from alisdjf /to sadkfjlsd","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_event_from_to/bylaksdfevent/fromalisdjf/tosadkfjlsd","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_by /by asldkfjs /by alsdifjli","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_by/byasldkfjs/byalsdifjli","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_deadline_by /by deadline /by deadline","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_deadline_by/bydeadline/bydeadline","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"event","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"event event_from_to /from 324dfudoif /to lasdfj2934i0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"event event_from_to/from324dfudoif/tolasdfj2934i0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"event event_by /by Q#@#$@!%$@","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"event event_by/byQ#@#$@!%$@","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"event event_by_from_to /by flksajfd!@$#%! /from \\t ASDFSF@#$@#$ /to ASDF@#$#$!","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"event event_by_from_to/byflksajfd!@$#%!/from\\tASDFSF@#$@#$/toASDF@#$#$!","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"event event_from_by_to /from deadline /by sladkjf!#$! /to asdf@$%@%\\\\","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"event event_from_by_to/fromdeadline/bysladkjf!#$!/toasdf@$%@%\\\\","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"event event_from_from_to_to /from lksSADFG@$R /from ASDF@$@# /to sdflkjlg#$%@#$ /to SDFGF%@$^$@%","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"event event_from_from_to_to/fromlksSADFG@$R/fromASDF@$@#/tosdflkjlg#$%@#$/toSDFGF%@$^$@%","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"event event_from_to_from_to /from asdljf#!$@ /to ASDOKJASO@#OK$!#$ /from ASDFS SDF W@#$@ /to SADF@#$@#$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"event event_from_to_from_to/from asdljf#!$@/toASDOKJASO@#OK$!#$/fromASDFSSDFW@#$@/toSADF@#$@#$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"event event_from_to_to_from /from SDGK@#$ @$!ASFDS /to ASDF@#$!/WQTQ@$R\\\\qwflkjq /to @#$!ASKDF /from ASDFS #!$!\\\\//sadf","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"event event_from_to_to_from/fromSDGK@#$@$!ASFDS/toASDF@#$!/WQTQ@$R\\\\qwflkjq/to@#$!ASKDF/fromASDFS#!$!\\\\//sadf","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"event event_to_from_from_to /to SFDOGK@!$#% /from assd1#$ /from \\\\lsjdfn\\nq2r /to /sfdlikslf224","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"event event_to_from_from_to/toSFDOGK@!$#%/fromassd1#$/from\\\\lsjdfn\\nq2r/to/sfdlikslf224","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"event event_to_from_to_from /to sadkfj!@#%$ /from \\a/sfdwte\u0027;2 /to \\lasjdf/134sdf kASMDF /from ASDF/.,csxRET","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"event event_to_from_to_from/tosadkfj!@#%$/from\\a/sfdwte\u0027;2/to\\lasjdf/134sdfkASMDF/fromASDF/.,csxRET","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"event event_to_to_from_from /to ASDF!#$/sdf\\dsttmn\\ /to \\n\\n\\t\\t /from /ask;dfjw /from ASDF!#$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"event event_to_to_from_from/toASDF!#$/sdf\\dsttmn\\/to\\n\\n\\t\\t/from/ask;dfjw/fromASDF!#$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"event event_from_to_event_from_to /from alsdjf134 /to saldj1341 event /from @!#SDF /to ASDG!#$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"event event_from_to_event_from_to/fromalsdjf134/tosaldj1341event/from@!#SDF/toASDG!#$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"mark 10","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"mark 20","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"delete","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"delete 5147483647","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"delete -5147483647","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"delete !$12413513sdlkgj 3%#%","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"delete 10","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"delete 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"mark 10","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"mark 20","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"unmark 10","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"unmark 30","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"mark @!#$%^YRTGFSH sdfge245","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"mark 200 2341","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"mark 5147483647","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"mark -5147483647","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"deadline yyyy-mm-dd /by 2024-01-04","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"deadline yyyy-mm-dd HHmm /by 2025-12-09 2359","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"deadline fail /by 2023-99-11","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"deadline fail /by 2023-12-03 2500","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"event pass /from 2024-01-04 /to 2025-12-09 2359","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"event fail (start \u003d end) /from 2024-01-04 0000 /to 2024-01-04","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"event fail (start \u003e end) /from 2025-12-09 2359 /to 2024-01-04","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"event fail /from 2023-99-11 /to 2025-12-09 2359","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"bye","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":80}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"if exist data RMDIR /S /Q data","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\botling\\*.java ..\\src\\main\\java\\botling\\commands\\*.java ..\\src\\main\\java\\botling\\exceptions\\*.java ..\\src\\main\\java\\botling\\messagegenerator\\*.java ..\\src\\main\\java\\botling\\tasks\\*.java","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"java -classpath ..\\bin botling.Botling \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"java -classpath ..\\bin botling.Botling \u003c input.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"pause","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":5,"-":19}}]
