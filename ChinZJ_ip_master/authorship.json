[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"    mainClass.set(\"Botling.Botling\")","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    archiveBaseName \u003d \"Botling\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ChinZJ":2,"-":39}},{"path":"src/main/java/Botling/Botling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import Botling.Commands.CommandParser;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":" * Main class where application starts.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"public class Botling {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"     * Generates objects required for program to function.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"     * Handles the main loop of the program","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"        Scanner reader \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"        CommandParser cmdParse \u003d new CommandParser();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"        // Generates the startup.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"        System.out.println(cmdParse.start(tasks));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"        // User input loop.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"        while (tasks.isOpen()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"            // Leveraging on object pass by reference","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"            System.out.println(cmdParse.parse(reader.nextLine(), tasks));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":29}},{"path":"src/main/java/Botling/Commands/CmdConst.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling.Commands;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"public enum CmdConst {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"    // Unique Commands.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"    CMD_BYE(\"bye\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"    CMD_LIST(\"list\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"    CMD_MARK(\"mark\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    CMD_UNMARK(\"unmark\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    CMD_DELETE(\"delete\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"    CMD_TODO(\"todo\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    CMD_DEADLINE(\"deadline\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    CMD_EVENT(\"event\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    CMD_BY(\" /by \"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    CMD_FROM(\" /from \"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"    CMD_TO(\" /to \"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"    // Tasks regex.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    TASK_MARK(\"mark -?\\\\d+\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    TASK_UNMARK(\"unmark -?\\\\d+\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"    TASK_DELETE(\"delete -?\\\\d+\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    TASK_TODO(\"todo .+\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"    TASK_DEADLINE(\"deadline .+ /by .+\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    TASK_EVENT(\"event .+ /from .+ /to .+\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    // Expected Syntax","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_MARK(\" \u003cX\u003e, where X is a positive integer \u003c\u003d \"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_TODO(\" \u003cname\u003e.\"),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_DEADLINE(\" \u003cname\u003e /by \u003cdeadline\u003e.\\n\"),","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_EVENT(\" \u003cname\u003e /from \u003cstart\u003e /to \u003cend\u003e.\\n\"),","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_EVENT_DATE(\"\\t \u003cstart\u003e should be before or equal to \u003cend\u003e if dates are inputs.\\n\"),","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_DATE(\"\\t Date: \u0027yyyy-MM-dd HHmm\u0027, \u0027yyyy-MM-dd\u0027\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"    private final String message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    CmdConst(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"     * Returns message in String type.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"    public String getString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"ChinZJ":49}},{"path":"src/main/java/Botling/Commands/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling.Commands;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import Botling.DateParser;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import Botling.Exceptions.InvalidInputException;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import Botling.MessageGenerator.MsgGen;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.Task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.Deadlines;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.DeadlineDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.Events;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.EventDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.ToDo;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"import Botling.TaskListWriter;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"import Botling.TaskList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":" * Parses user input and uses \u003ccode\u003eMsgGen\u003c/code\u003e to generate messages appropriately.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"public class CommandParser {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    private TaskListWriter tasksRestore \u003d new TaskListWriter();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"     * Dummy constructor if needed for future extensions.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    public CommandParser() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"     * Generates start up message and checks for any history.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"     * @param tasks TaskList to restore progress if any.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"     * @return message for Botling, inclusive of startup amd if any history is recovered.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    public String start(TaskList tasks) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d tasksRestore.restore(tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"        return (MsgGen.greet() + \"\\n\" + MsgGen.read(message)) ;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"     * Main method for parsing user input.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"     * Invalid inputs will throw a InvalidInputException.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"     * @param input User input. May be valid or invalid","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"     * @param tasks TaskList containing list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"     * @return message for Botling to pass messages to UI object to handle.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"    public String parse(String input, TaskList tasks) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"        String message; // Dummy initialization","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"            if (input.startsWith(CmdConst.CMD_BYE.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"                // \"bye\" command.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"                try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d bye(input, tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"                } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.unknownCmd();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"            } else if (input.startsWith(CmdConst.CMD_LIST.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"                // \"list\" command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"                try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"                    if (input.equals(CmdConst.CMD_LIST.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"                        message \u003d MsgGen.list(tasks.list());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"                    } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"                        throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"                } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.unknownList();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"            } else if (input.startsWith(CmdConst.CMD_MARK.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"                // \"mark\" command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"                try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.mark(mark(input, tasks));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"                } catch (NumberFormatException | InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.unknownSyntax(CmdConst.CMD_MARK.getString(),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"                            CmdConst.MSG_INVALID_CMD_MARK.getString()","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"                                    + String.valueOf(tasks.size()));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"            } else if (input.startsWith(CmdConst.CMD_UNMARK.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"                // \"unmark\" command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"                try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.unmark(unmark(input, tasks));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"                } catch (NumberFormatException | InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.unknownSyntax(CmdConst.CMD_UNMARK.getString(),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"                            CmdConst.MSG_INVALID_CMD_MARK.getString()","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"                                    + String.valueOf(tasks.size()));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"            }  else if (input.startsWith(CmdConst.CMD_DELETE.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"                // \"delete\" command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"                try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d delete(input, tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.delete(message, tasks.size());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChinZJ"},"content":"                } catch (NumberFormatException | InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.unknownSyntax(CmdConst.CMD_DELETE.getString(),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChinZJ"},"content":"                            CmdConst.MSG_INVALID_CMD_MARK.getString()","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChinZJ"},"content":"                                    + String.valueOf(tasks.size()));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChinZJ"},"content":"            } else if (input.startsWith(CmdConst.CMD_TODO.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChinZJ"},"content":"                // \"todo\" command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChinZJ"},"content":"                try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d todo(input, tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.add(message, tasks.size());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChinZJ"},"content":"                } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.unknownSyntax(CmdConst.CMD_TODO.getString(),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChinZJ"},"content":"                            CmdConst.MSG_INVALID_CMD_TODO.getString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChinZJ"},"content":"            } else if (input.startsWith(CmdConst.CMD_DEADLINE.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChinZJ"},"content":"                // \"deadline\" command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChinZJ"},"content":"                try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d deadline(input, tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.add(message, tasks.size());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChinZJ"},"content":"                } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.unknownSyntax(CmdConst.CMD_DEADLINE.getString(),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChinZJ"},"content":"                            CmdConst.MSG_INVALID_CMD_DEADLINE.getString()","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChinZJ"},"content":"                            + CmdConst.MSG_INVALID_CMD_DATE.getString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChinZJ"},"content":"            } else if (input.startsWith(CmdConst.CMD_EVENT.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChinZJ"},"content":"                try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d event(input, tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.add(message,tasks.size());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChinZJ"},"content":"                } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChinZJ"},"content":"                    message \u003d MsgGen.unknownSyntax(CmdConst.CMD_EVENT.getString(),","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChinZJ"},"content":"                            CmdConst.MSG_INVALID_CMD_EVENT.getString()","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChinZJ"},"content":"                            + CmdConst.MSG_INVALID_CMD_EVENT_DATE.getString()","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChinZJ"},"content":"                            + CmdConst.MSG_INVALID_CMD_DATE.getString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChinZJ"},"content":"            } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChinZJ"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChinZJ"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChinZJ"},"content":"            message \u003d MsgGen.unknownCmd();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing bye inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChinZJ"},"content":"    private String bye(String input, TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChinZJ"},"content":"        if (input.equals(CmdConst.CMD_BYE.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChinZJ"},"content":"            tasks.hasClose();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChinZJ"},"content":"            return MsgGen.bye();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing mark inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChinZJ"},"content":"     * Despite their similarities, mark() and unmark() will not have a common method base","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChinZJ"},"content":"     * due to the fact that the final method call to TaskList is different.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChinZJ"},"content":"     * This results in unnecessary if else block statements.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChinZJ"},"content":"    private String mark(String input, TaskList tasks)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChinZJ"},"content":"            throws NumberFormatException, InvalidInputException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_MARK.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChinZJ"},"content":"            int index \u003d Integer.parseInt(input.substring(ValConstants.TASK_MARK_IDX.getVal()))","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChinZJ"},"content":"                    - ValConstants.TASK_FIX_IDX.getVal();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChinZJ"},"content":"            if ((index \u003e\u003d 0) \u0026\u0026 (index \u003c tasks.size())) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChinZJ"},"content":"                String message \u003d tasks.mark(index);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChinZJ"},"content":"                tasksRestore.write(tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChinZJ"},"content":"                return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChinZJ"},"content":"            } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChinZJ"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ChinZJ"},"content":"    * Method for parsing unmark inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ChinZJ"},"content":"     * Despite their similarities, mark() and unmark() will not have a common method base","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ChinZJ"},"content":"     * due to the fact that the final method call to TaskList is different.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ChinZJ"},"content":"     * This results in unnecessary if else block statements.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ChinZJ"},"content":"     * @throws NumberFormatException if syntax is correct but input is not an integer.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ChinZJ"},"content":"    */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ChinZJ"},"content":"    private String unmark(String input, TaskList tasks)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ChinZJ"},"content":"            throws NumberFormatException, InvalidInputException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_UNMARK.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ChinZJ"},"content":"            int index \u003d Integer.parseInt(input.substring(ValConstants.TASK_UNMARK_IDX.getVal()))","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ChinZJ"},"content":"                    - ValConstants.TASK_FIX_IDX.getVal();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ChinZJ"},"content":"            if ((index \u003e\u003d 0) \u0026\u0026 (index \u003c tasks.size())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ChinZJ"},"content":"                String message \u003d tasks.unmark(index);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ChinZJ"},"content":"                tasksRestore.write(tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ChinZJ"},"content":"                return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ChinZJ"},"content":"            } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ChinZJ"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing delete inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ChinZJ"},"content":"     * @throws NumberFormatException if syntax is correct but input is not an integer.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ChinZJ"},"content":"    private String delete(String input, TaskList tasks)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ChinZJ"},"content":"            throws NumberFormatException, InvalidInputException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_DELETE.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ChinZJ"},"content":"            // Recall to convert to 1 based indexing","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ChinZJ"},"content":"            // NumberFormatException may be thrown here during int parsing","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ChinZJ"},"content":"            int index \u003d Integer.parseInt(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ChinZJ"},"content":"                    input.substring(ValConstants.TASK_DELETE_IDX.getVal()))","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ChinZJ"},"content":"                    - ValConstants.TASK_FIX_IDX.getVal();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ChinZJ"},"content":"            // Ensure integer is valid","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ChinZJ"},"content":"            if ((index \u003e\u003d 0) \u0026\u0026 (index \u003c tasks.size())) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ChinZJ"},"content":"                String message \u003d tasks.remove(index);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ChinZJ"},"content":"                tasksRestore.write(tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ChinZJ"},"content":"                return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ChinZJ"},"content":"            } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ChinZJ"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing todo inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ChinZJ"},"content":"    private String todo(String input, TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_TODO.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ChinZJ"},"content":"            Task newTask \u003d new ToDo(input.substring(ValConstants.TASK_TODO_IDX.getVal()));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ChinZJ"},"content":"            String message \u003d tasks.add(newTask);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ChinZJ"},"content":"            tasksRestore.write(tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ChinZJ"},"content":"            return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing deadline inputs","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ChinZJ"},"content":"    private String deadline(String input, TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_DEADLINE.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ChinZJ"},"content":"            // Deadline has a /by specification, greedily take the first in sequence.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ChinZJ"},"content":"            String withoutDeadline \u003d input.substring(ValConstants.TASK_DEADLINE_IDX.getVal());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ChinZJ"},"content":"            int by_idx \u003d withoutDeadline.indexOf(CmdConst.CMD_BY.getString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ChinZJ"},"content":"            String deadlineName \u003d withoutDeadline.substring(0, by_idx);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ChinZJ"},"content":"            String by \u003d withoutDeadline.substring(by_idx","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ChinZJ"},"content":"                    + ValConstants.TASK_BY_IDX.getVal());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ChinZJ"},"content":"            Task newTask;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ChinZJ"},"content":"            // Check deadline is a valid LocalDateTime object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ChinZJ"},"content":"            Optional\u003cLocalDateTime\u003e byDateTime \u003d DateParser.parseDateTime(by);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"ChinZJ"},"content":"            if (byDateTime.isPresent()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"ChinZJ"},"content":"                newTask \u003d new DeadlineDate(deadlineName, byDateTime.get());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"ChinZJ"},"content":"            } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"ChinZJ"},"content":"                newTask \u003d new Deadlines(deadlineName, by);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"ChinZJ"},"content":"            // Add task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"ChinZJ"},"content":"            String message \u003d tasks.add(newTask);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"ChinZJ"},"content":"            tasksRestore.write(tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"ChinZJ"},"content":"            return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"ChinZJ"},"content":"     * Method for parsing event inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException if syntax is not recognized.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"ChinZJ"},"content":"    private String event(String input, TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"ChinZJ"},"content":"        if (input.matches(CmdConst.TASK_EVENT.getString())) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"ChinZJ"},"content":"            // Event has /from and /to specification.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"ChinZJ"},"content":"            // Greedily take the first in sequential order.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"ChinZJ"},"content":"            String withoutEvent \u003d input.substring(ValConstants.TASK_EVENT_IDX.getVal());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"ChinZJ"},"content":"            int from_idx \u003d withoutEvent.indexOf(CmdConst.CMD_FROM.getString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"ChinZJ"},"content":"            String eventName \u003d withoutEvent.substring(0, from_idx);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"ChinZJ"},"content":"            String remainingSplit \u003d withoutEvent.substring(from_idx","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"ChinZJ"},"content":"                    + ValConstants.TASK_FROM_IDX.getVal());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"ChinZJ"},"content":"            int to_idx \u003d remainingSplit.indexOf(CmdConst.CMD_TO.getString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"ChinZJ"},"content":"            String eventFrom \u003d remainingSplit.substring(0, to_idx);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"ChinZJ"},"content":"            String eventTo \u003d remainingSplit.substring(to_idx","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"ChinZJ"},"content":"                    + ValConstants.TASK_TO_IDX.getVal());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"ChinZJ"},"content":"            Task newTask;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"ChinZJ"},"content":"            // Check if eventFrom and eventTo are of valid LocalDateTime objects.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"ChinZJ"},"content":"            Optional\u003cLocalDateTime\u003e startDateTimeOpt \u003d DateParser.parseDateTime(eventFrom);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"ChinZJ"},"content":"            Optional\u003cLocalDateTime\u003e endDateTimeOpt \u003d DateParser.parseDateTime(eventTo);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"ChinZJ"},"content":"            if (startDateTimeOpt.isPresent() \u0026\u0026 endDateTimeOpt.isPresent()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"ChinZJ"},"content":"                LocalDateTime startDateTime \u003d startDateTimeOpt.get();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"ChinZJ"},"content":"                LocalDateTime endDateTime \u003d endDateTimeOpt.get();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"ChinZJ"},"content":"                if (startDateTime.isBefore(endDateTime) || startDateTime.isEqual(endDateTime)) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"ChinZJ"},"content":"                    newTask \u003d new EventDate(eventName, startDateTime, endDateTime);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"ChinZJ"},"content":"                } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"ChinZJ"},"content":"                    throw new InvalidInputException();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"ChinZJ"},"content":"            } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"ChinZJ"},"content":"                newTask \u003d new Events(eventName, eventFrom, eventTo);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"ChinZJ"},"content":"            // Add task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"ChinZJ"},"content":"            String message \u003d tasks.add(newTask);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"ChinZJ"},"content":"            tasksRestore.write(tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"ChinZJ"},"content":"            return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"ChinZJ":324}},{"path":"src/main/java/Botling/Commands/ValConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling.Commands;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"public enum ValConstants {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"    // Tasks constants.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"    TASK_FIX_IDX(1),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"    TASK_MARK_IDX(5),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"    TASK_UNMARK_IDX(7),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    TASK_DELETE_IDX(7),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    TASK_TODO_IDX(5),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"    TASK_EVENT_IDX(6),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    TASK_DEADLINE_IDX(9),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    TASK_BY_IDX(5),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    TASK_FROM_IDX(7),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    TASK_TO_IDX(5);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    private final int val;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    ValConstants(int val) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"        this.val \u003d val;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"     * Returns value in int type.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    public int getVal() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"        return val;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":31}},{"path":"src/main/java/Botling/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":" * Check if user input is valid as a date object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"public class DateParser {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    private static final DateTimeFormatter PREFERRED_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    private static final DateTimeFormatter SAVED_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"    private static final DateTimeFormatter NO_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"     * Checks if given input matches date time syntax required.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"     * If successfully parsed, returns an Optional with a LocalDate object inside it.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"    public static Optional\u003cLocalDateTime\u003e parseDateTime(String input) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"            LocalDateTime parsed \u003d LocalDateTime.parse(input, PREFERRED_FORMAT);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"            return Optional.of(parsed);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"            // Do nothing","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"            LocalDateTime parsed \u003d LocalDateTime.parse(input, SAVED_FORMAT);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"            return Optional.of(parsed);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"            // Do nothing","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"            LocalDate parsed \u003d LocalDate.parse(input, NO_TIME_FORMAT);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"            return Optional.of(parsed.atStartOfDay());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"                // Do nothing.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"        return Optional.empty();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"ChinZJ":47}},{"path":"src/main/java/Botling/Exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling.Exceptions;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.lang.Exception;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":" * Dummy exception for catching and throwing.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    public InvalidInputException() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"        super();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":13}},{"path":"src/main/java/Botling/MessageGenerator/MsgGen.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling.MessageGenerator;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * Responsible for generating all messages where appropriate.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"public class MsgGen {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"    private static final String NO_MSG \u003d \"EMPTY\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"     * Reads the message, wraps it in line.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    public static String read(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"        return MsgGenConst.MSG_LINE.getString()","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"                + message","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"                + MsgGenConst.MSG_LINE.getString();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"     * Generates greeting message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    public static String greet() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"        return MsgGen.read(MsgGenConst.MSG_GREET.getString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"     * Generates farewell message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"    public static String bye() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"        return MsgGen.read(MsgGenConst.MSG_FAREWELL.getString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"     * Provides a wrapper for TaskList list() message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    public static String list(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"        if (message.isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"            return MsgGen.read(MsgGenConst.MSG_EMPTY_LIST.getString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"            return MsgGen.read(MsgGenConst.MSG_CURRENT_TASKS.getString() + message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"     * Provides a wrapper for TaskList mark() message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"    public static String mark(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"        return MsgGen.read(MsgGenConst.MSG_TASK_DONE.getString() + message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"     * Provides a wrapper for TaskList unmark() message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"    public static String unmark(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"        return MsgGen.read(MsgGenConst.MSG_TASK_UNDONE.getString() + message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"     * Provides aa wrapper for Tasklist add() message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"     * @param message Message generated from TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"     * @param size Size of TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"    public static String add(String message, int size) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"        return MsgGen.read(MsgGenConst.MSG_ADD.getString()","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"                + message","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"                + MsgGenConst.MSG_CURRENT_SIZE_P1.getString() + size","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"                + MsgGenConst.MSG_CURRENT_SIZE_P2.getString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"     * Provides aa wrapper for Tasklist remove() message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"     * @param message Message generated from TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"     * @param size Size of TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"    public static String delete(String message, int size) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"        return MsgGen.read(MsgGenConst.MSG_TASK_DELETE.getString()","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"                + message","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"                + MsgGenConst.MSG_CURRENT_SIZE_P1.getString() + size","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"                + MsgGenConst.MSG_CURRENT_SIZE_P2.getString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"     * Message when command is unknown.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"    public static String unknownCmd() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"        return MsgGen.read(MsgGenConst.MSG_INVALID_UNKNOWN.getString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"     * Message when list syntax is not fulfilled.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChinZJ"},"content":"    public static String unknownList() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChinZJ"},"content":"        return MsgGen.read(MsgGenConst.MSG_INVALID_UNKNOWN.getString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChinZJ"},"content":"     * Message when command syntax is not fulfilled.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChinZJ"},"content":"    public static String unknownSyntax(String cmd, String syntax) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChinZJ"},"content":"        return MsgGen.read(MsgGenConst.MSG_INVALID_CMD_P1.getString()","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChinZJ"},"content":"                + cmd","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChinZJ"},"content":"                + MsgGenConst.MSG_INVALID_CMD_P2.getString()","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChinZJ"},"content":"                + cmd + syntax + \"\\n\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"ChinZJ":108}},{"path":"src/main/java/Botling/MessageGenerator/MsgGenConst.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling.MessageGenerator;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"public enum MsgGenConst {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"    // For outputs by Botling.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"    MSG_LINE(\"\\t____________________________________________________________\\n\"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"    MSG_GREET(\"\\t Hello! I\u0027m Botling\\n\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"            + \"\\t What can I do for you?\\n\"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    MSG_FAREWELL(\"\\t Bye. Hope to see you again soon!\\n\"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"    MSG_EMPTY_LIST(\"\\t There are currently no tasks!\\n\"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    MSG_CURRENT_TASKS(\"\\t Here are the tasks in your list:\\n\"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    MSG_ADD(\"\\t Got it. I\u0027ve added this task: \\n\"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    MSG_CURRENT_SIZE_P1(\"\\t Now you have \"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    MSG_CURRENT_SIZE_P2(\" tasks in the list.\\n\"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    MSG_TASK_DONE(\"\\t Nice! I\u0027ve marked this task as done:\\n\"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"    MSG_TASK_UNDONE(\"\\t Ok, I\u0027ve marked this task as not done yet:\\n\"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    MSG_TASK_DELETE(\"\\t Noted. I\u0027ve removed this task: \\n\"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"    // For unexpected inputs","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_P1(\"\\t OOPS!!! The format of \"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_CMD_P2(\" should be \"),","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    MSG_INVALID_UNKNOWN(\"\\t OOPS!!! This command does not exist(yet).\\n\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    private final String message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    MsgGenConst(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"     * Returns message in String type.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"    public String getString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":41}},{"path":"src/main/java/Botling/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.Task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":" * Stores all \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":" * Possesses core list related functionality required to interact with \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"public class TaskList {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    private static final boolean TASK_IS_DONE \u003d true;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    private static final String EMPTY_LIST \u003d \"\\t There are currently no tasks!\\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    private boolean isActive;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"     * Constructor, always assumes to be active.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"     * Loading history will be handled by a method separately.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"        isActive \u003d TaskList.TASK_IS_DONE;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"     * Scans through all tasks present in the list, and returns them in String format.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    public String list() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d \"\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"            return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"            for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"                message +\u003d \"\\t \" + (i + 1) + \". \" + this.get(i).getTaskStatus() + \"\\n\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"     * Closes the TaskList and prevents further actions.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"    public void hasClose() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"        isActive \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"     * Checks if the TaskList is open for further actions.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"    public boolean isOpen() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"        return isActive;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"     * Returns the Task in the relative index position in the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"     * Returns the current size of the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"    public int size() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"     * Finds the indexed Task to be marked.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"     * @return The Task that has been marked.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"    public String mark(int index) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"        return tasks.get(index).updateTask(TASK_IS_DONE);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"     * Finds the indexed Task to be unmarked.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"     * @return The Task that has been unmarked.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"    public String unmark(int index) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"        return tasks.get(index).updateTask(!TASK_IS_DONE);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"     * Adds a new Task to the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"     * @return The new Task that has been added, as well as the new size of the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"    public String add(Task newTask) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChinZJ"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChinZJ"},"content":"        return \"\\t \" + newTask.getTaskStatus() + \"\\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChinZJ"},"content":"     * Removes the Task indexed in the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChinZJ"},"content":"     * @return The Task that has been removed, as well as the new size of the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChinZJ"},"content":"    public String remove(int index) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChinZJ"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChinZJ"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChinZJ"},"content":"        return \"\\t \" + task.getTaskStatus() + \"\\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChinZJ"},"content":"     * Generates a String format of all tasks to be read by \u003ccode\u003eTsakListReader\u003c/code\u003e object.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChinZJ"},"content":"    public String fileString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d \"\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChinZJ"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChinZJ"},"content":"            return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChinZJ"},"content":"            for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChinZJ"},"content":"                message +\u003d this.get(i).getTaskData() + \"\\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":124}},{"path":"src/main/java/Botling/TaskListWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import Botling.Exceptions.InvalidInputException;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.Task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.Deadlines;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.DeadlineDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.Events;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.EventDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"import Botling.Tasks.ToDo;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"import java.io.File;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":" * Used to perform I/O actions for \u003ccode\u003eTaskList\u003c/code\u003e objects to hard disk where appropriate.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"public class TaskListWriter {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    private static final String HISTORY_DATA_FOLDER \u003d \"./data\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    private static final String HISTORY_DATA_PATH \u003d \"./data/history.txt\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    private String logs;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"     * Checks if the TaskList has been instantiated before.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"     * If so, load the previous history of the TaskList.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"     * Else generate a new history of the TaskList","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"     * @return Any relevant logs of trying to generate / retrieve the history of the task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    public String restore(TaskList tasks) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d \"\\t Attempting to retrieve history...\\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"        File dataDir \u003d new File(TaskListWriter.HISTORY_DATA_FOLDER);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"            message +\u003d \"\\t No data folder found! Creating data folder...\\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"            dataDir.mkdir();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"            message +\u003d \"\\t Data folder found!\\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"        File historyFile \u003d new File(TaskListWriter.HISTORY_DATA_PATH);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"        if (!historyFile.exists()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"            message +\u003d \"\\t No history file found! Creating history file...\\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"                historyFile.createNewFile();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"                System.out.println(\"Error creating history file: \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"            message +\u003d \"\\t History file found! Restoring data...\\n\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"            tasks \u003d this.read(tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"     * Reads the history file and generates a \u003ccode\u003eTaskList\u003c/code\u003e object off of it.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"    public TaskList read(TaskList tasks) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(TaskListWriter.HISTORY_DATA_PATH));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"            String cmd, name, arg1, arg2;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"            Optional\u003cLocalDateTime\u003e argTime1, argTime2;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"            boolean mark;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"            boolean isValid \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"            Task task;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"            while (isValid) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"                cmd \u003d reader.readLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"                if (cmd !\u003d null) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"                    if (!cmd.isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"                        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"                            switch (cmd) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"                                case \"todo\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"                                    name \u003d reader.readLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"                                    mark \u003d validateAndParseBool(reader.readLine());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"                                    task \u003d new ToDo(name, mark);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"                                    tasks.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"                                    break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"                                case \"deadline\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"                                    arg1 \u003d reader.readLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"                                    name \u003d reader.readLine();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"                                    mark \u003d validateAndParseBool(reader.readLine());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"                                    // Check deadline is a valid LocalDateTime object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"                                    Optional\u003cLocalDateTime\u003e byDateTime \u003d DateParser.parseDateTime(arg1);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChinZJ"},"content":"                                    if (byDateTime.isPresent()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChinZJ"},"content":"                                        task \u003d new DeadlineDate(name, mark, byDateTime.get());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChinZJ"},"content":"                                    } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChinZJ"},"content":"                                        task \u003d new Deadlines(name, mark, arg1);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChinZJ"},"content":"                                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChinZJ"},"content":"                                    // Add task","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChinZJ"},"content":"                                    tasks.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChinZJ"},"content":"                                    break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChinZJ"},"content":"                                case \"event\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChinZJ"},"content":"                                    arg1 \u003d reader.readLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChinZJ"},"content":"                                    arg2 \u003d reader.readLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChinZJ"},"content":"                                    name \u003d reader.readLine();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChinZJ"},"content":"                                    mark \u003d validateAndParseBool(reader.readLine());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChinZJ"},"content":"                                    // Check if eventFrom and eventTo are of valid LocalDateTime objects.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChinZJ"},"content":"                                    Optional\u003cLocalDateTime\u003e startDateTimeOpt \u003d DateParser.parseDateTime(arg1);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChinZJ"},"content":"                                    Optional\u003cLocalDateTime\u003e endDateTimeOpt \u003d DateParser.parseDateTime(arg2);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChinZJ"},"content":"                                    if (startDateTimeOpt.isPresent() \u0026\u0026 endDateTimeOpt.isPresent()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChinZJ"},"content":"                                        LocalDateTime startDateTime \u003d startDateTimeOpt.get();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChinZJ"},"content":"                                        LocalDateTime endDateTime \u003d endDateTimeOpt.get();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChinZJ"},"content":"                                        if (startDateTime.isBefore(endDateTime) || startDateTime.isEqual(endDateTime)) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChinZJ"},"content":"                                            task \u003d new EventDate(name, mark, startDateTime, endDateTime);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChinZJ"},"content":"                                        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChinZJ"},"content":"                                            throw new InvalidInputException();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChinZJ"},"content":"                                        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChinZJ"},"content":"                                    } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChinZJ"},"content":"                                        task \u003d new Events(name, mark, arg1, arg2);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChinZJ"},"content":"                                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChinZJ"},"content":"                                    tasks.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChinZJ"},"content":"                                    break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChinZJ"},"content":"                            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChinZJ"},"content":"                        } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChinZJ"},"content":"                            System.out.println(\"An error occurred while trying to read\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChinZJ"},"content":"                                    + \"the history.txt file.\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChinZJ"},"content":"                                    + \"Do you wish to delete it and start again? (y/n)\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChinZJ"},"content":"                            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChinZJ"},"content":"                            String response \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChinZJ"},"content":"                            while (!response.equals(\"y\") \u0026\u0026 !response.equals(\"n\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChinZJ"},"content":"                                System.out.println(\"Please enter \u0027y\u0027 for yes and \u0027n\u0027 for no.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChinZJ"},"content":"                                response \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChinZJ"},"content":"                            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChinZJ"},"content":"                            if (response.equals(\"y\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChinZJ"},"content":"                                tasks \u003d new TaskList();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChinZJ"},"content":"                                File file \u003d new File(TaskListWriter.HISTORY_DATA_PATH);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChinZJ"},"content":"                                file.delete();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChinZJ"},"content":"                                file.createNewFile();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChinZJ"},"content":"                            } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChinZJ"},"content":"                                System.out.println(\"Program will now terminate. Please check the file.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChinZJ"},"content":"                                System.exit(0);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChinZJ"},"content":"                                return null;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChinZJ"},"content":"                            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChinZJ"},"content":"                        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChinZJ"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChinZJ"},"content":"                } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChinZJ"},"content":"                    isValid \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChinZJ"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChinZJ"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChinZJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChinZJ"},"content":"            System.out.println(\"Error reading history file: \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChinZJ"},"content":"        return tasks;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChinZJ"},"content":"     * Checks if the input aligns with a boolean.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChinZJ"},"content":"     * Due to the fact that \u003ccode\u003eBoolean.parseBoolean()\u003c/code\u003e does not distinguish invalid inputs.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChinZJ"},"content":"     * @throws InvalidInputException An arbitrary exception thrown when there is no boolean String.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChinZJ"},"content":"    private boolean validateAndParseBool(String input) throws InvalidInputException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChinZJ"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChinZJ"},"content":"        } else if (!input.equalsIgnoreCase(\"true\")","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChinZJ"},"content":"                \u0026\u0026 !input.equalsIgnoreCase(\"false\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChinZJ"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ChinZJ"},"content":"        return Boolean.parseBoolean(input);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ChinZJ"},"content":"    public void write(TaskList tasks) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ChinZJ"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ChinZJ"},"content":"            PrintWriter writer \u003d new PrintWriter(new FileWriter(TaskListWriter.HISTORY_DATA_PATH));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ChinZJ"},"content":"            writer.print(tasks.fileString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ChinZJ"},"content":"            writer.close();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ChinZJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ChinZJ"},"content":"            System.out.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ChinZJ"},"content":"    // Old test code that can be converted into a JUnit in future","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ChinZJ"},"content":"//    public static void main(String[] args) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ChinZJ"},"content":"//        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ChinZJ"},"content":"//        TaskListWriter tw \u003d new TaskListWriter();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ChinZJ"},"content":"//        String message \u003d tw.restore(tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ChinZJ"},"content":"//        System.out.println(message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ChinZJ"},"content":"//        System.out.println(tasks.list());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ChinZJ"},"content":"//        Task task \u003d new ToDo(\"alsdifj\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ChinZJ"},"content":"//        tasks.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ChinZJ"},"content":"//        System.out.println(tasks.fileString());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ChinZJ"},"content":"//        tw.write(tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ChinZJ"},"content":"//    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"ChinZJ":199}},{"path":"src/main/java/Botling/Tasks/DeadlineDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling.Tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":" * \u003ccode\u003eDeadline\u003c/code\u003e object that also has a \u003ccode\u003edate\u003c/code\u003e for a deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":" * \u003ccode\u003edate\u003c/code\u003es are in the format yyyy-mm-dd hhmm (24 hour format).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"public class DeadlineDate extends Deadlines{","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    public DeadlineDate(String name, LocalDateTime dateTime) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"        super(name, dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")).toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"     * Alternative constructor for full specification of attributes.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    public DeadlineDate(String name, boolean isDone, LocalDateTime dateTime) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"        super(name, isDone, dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")).toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"     * Updates parent method since it has a \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"    public boolean hasDate() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"        return true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"     * Generates message to be printed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d super.getTaskStatus() + \" (date)\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"ChinZJ":46}},{"path":"src/main/java/Botling/Tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling.Tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e object that has a deadline.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    private String by;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    public Deadlines(String name, String by) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"        super(name);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"     * Alternative constructor for full specification of attributes.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    public Deadlines(String name, boolean isDone, String by) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"        super(name, isDone);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"     * Generates message to be printed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d \"[D]\" + super.getTaskStatus() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"     * Generates the data version of the task status.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskData() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d \"deadline\\n\" + by + \"\\n\" + super.getTaskData();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":44}},{"path":"src/main/java/Botling/Tasks/EventDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling.Tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":" * \u003ccode\u003eEvent\u003c/code\u003e object that has a \u003ccode\u003edate\u003c/code\u003e for a start and end time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":" * \u003ccode\u003edate\u003c/code\u003es are in the format yyyy-mm-dd hhmm (24 hour format).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"public class EventDate extends Events{","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"    public EventDate(String name, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"        super(name, startDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")).toString()","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"                , endDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")).toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"     * Alternative constructor for full specification of attributes.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    public EventDate(String name, boolean isDone, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"        super(name, isDone, startDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")).toString()","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"                , endDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\")).toString());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"     * Updates parent method since it has a \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    public boolean hasDate() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"        return true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"     * Generates message to be printed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d super.getTaskStatus() + \" (date)\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"ChinZJ":51}},{"path":"src/main/java/Botling/Tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling.Tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e object that has a \u003ccode\u003estart\u003c/code\u003e and an \u003ccode\u003eend\u003c/code\u003e.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"public class Events extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    private String from;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    private String to;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    public Events(String name, String from, String to) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"        super(name);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"     * Alternative constructor for full specification of attributes.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    public Events(String name, boolean isDone, String from, String to) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"        super(name, isDone);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"     * Generates message to be printed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d \"[E]\" + super.getTaskStatus() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"     * Generates the data version of the task status.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskData() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d \"event\\n\" + from + \"\\n\" + to + \"\\n\" + super.getTaskData();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":47}},{"path":"src/main/java/Botling/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling.Tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * Parent class for various \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e has a \u003ccode\u003ename\u003c/code\u003e and a \u003ccode\u003estatus\u003c/code\u003e of completion.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"public class Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"    private static final boolean TASK_UNDONE \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"    private final String name;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor for Task object.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"     * Assumes that the task is not done.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"     * Utilizes base constructor (see below).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"     * @param name Name of task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"    public Task(String name) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"        this(name, Task.TASK_UNDONE);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"     * Base constructor for Task object.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"     * Allows for full specification of Task object construction.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"     * @param name Name of task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"     * @param done Status of task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"    public Task(String name, boolean done) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"     * tostring() method.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"        return this.name;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"     * Updates the status of the task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"    public String updateTask(boolean isDone) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"        String message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"            message \u003d \"\\t\\t \" + this.getTaskStatus() + \"\\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"            message \u003d \"\\t\\t \" + this.getTaskStatus() + \"\\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"     * Generates the String of the task status.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"     * To be called by \"list\".","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"     * @return message String containing status of task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"        String message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"            message \u003d (\"[X] \" + name);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"            message \u003d (\"[ ]\" + name);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"     * Generates the data version of the task status.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskData() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d name + \"\\n\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"            message +\u003d \"true\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChinZJ"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChinZJ"},"content":"            message +\u003d \"false\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChinZJ"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChinZJ"},"content":"     * To be overriden by \u003ccode\u003eTask\u003c/code\u003e objects with date.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChinZJ"},"content":"    public boolean hasDate() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChinZJ"},"content":"        return false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":93}},{"path":"src/main/java/Botling/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"package Botling.Tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":" * A \"default\" \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":" * Does not have additional functionalities.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"     * Default constructor.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"    public ToDo(String name) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"        super(name);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"     * Alternative constructor for full specification of attributes.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"        super(name, isDone);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"     * Generates message to be printed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d \"[T]\" + super.getTaskStatus();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"     * Generates the data version of the task status.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"    public String getTaskData() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"        String message \u003d \"todo\\n\" + super.getTaskData();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"        return message;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChinZJ"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChinZJ"},"content":"!\"#$%\u0026\u0027()*+,-./0123456789:;\u003c\u003d\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\n\\t;\\b\\r;_finish","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChinZJ"},"content":"mark -99","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChinZJ"},"content":"mark 999","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChinZJ"},"content":"todo","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"todo !\"#$%\u0026\u0027()*+,-./0123456789:;\u003c\u003d\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\n\\t;\\b\\r;_finish","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChinZJ"},"content":"deadline","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by /by hehehehaw","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by/byhehehehaw","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_from_to /from shodif /to saldjfli","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_from_to/fromshodif/tosaldjfli","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_from_to /by /from klasjfd1#$ /to )(*\u0026^%$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_from_to/by/fromklasjfd1#$/to)(*\u0026^%$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_event_from_to /by laksdf event /from alisdjf /to sadkfjlsd","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_event_from_to/bylaksdfevent/fromalisdjf/tosadkfjlsd","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_by /by asldkfjs /by alsdifjli","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_by/byasldkfjs/byalsdifjli","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_deadline_by /by deadline /by deadline","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChinZJ"},"content":"deadline deadline_by_deadline_by/bydeadline/bydeadline","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"event","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChinZJ"},"content":"event event_from_to /from 324dfudoif /to lasdfj2934i0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChinZJ"},"content":"event event_from_to/from324dfudoif/tolasdfj2934i0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChinZJ"},"content":"event event_by /by Q#@#$@!%$@","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChinZJ"},"content":"event event_by/byQ#@#$@!%$@","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChinZJ"},"content":"event event_by_from_to /by flksajfd!@$#%! /from \\t ASDFSF@#$@#$ /to ASDF@#$#$!","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChinZJ"},"content":"event event_by_from_to/byflksajfd!@$#%!/from\\tASDFSF@#$@#$/toASDF@#$#$!","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChinZJ"},"content":"event event_from_by_to /from deadline /by sladkjf!#$! /to asdf@$%@%\\\\","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChinZJ"},"content":"event event_from_by_to/fromdeadline/bysladkjf!#$!/toasdf@$%@%\\\\","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChinZJ"},"content":"event event_from_from_to_to /from lksSADFG@$R /from ASDF@$@# /to sdflkjlg#$%@#$ /to SDFGF%@$^$@%","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChinZJ"},"content":"event event_from_from_to_to/fromlksSADFG@$R/fromASDF@$@#/tosdflkjlg#$%@#$/toSDFGF%@$^$@%","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChinZJ"},"content":"event event_from_to_from_to /from asdljf#!$@ /to ASDOKJASO@#OK$!#$ /from ASDFS SDF W@#$@ /to SADF@#$@#$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChinZJ"},"content":"event event_from_to_from_to/from asdljf#!$@/toASDOKJASO@#OK$!#$/fromASDFSSDFW@#$@/toSADF@#$@#$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChinZJ"},"content":"event event_from_to_to_from /from SDGK@#$ @$!ASFDS /to ASDF@#$!/WQTQ@$R\\\\qwflkjq /to @#$!ASKDF /from ASDFS #!$!\\\\//sadf","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChinZJ"},"content":"event event_from_to_to_from/fromSDGK@#$@$!ASFDS/toASDF@#$!/WQTQ@$R\\\\qwflkjq/to@#$!ASKDF/fromASDFS#!$!\\\\//sadf","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChinZJ"},"content":"event event_to_from_from_to /to SFDOGK@!$#% /from assd1#$ /from \\\\lsjdfn\\nq2r /to /sfdlikslf224","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChinZJ"},"content":"event event_to_from_from_to/toSFDOGK@!$#%/fromassd1#$/from\\\\lsjdfn\\nq2r/to/sfdlikslf224","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChinZJ"},"content":"event event_to_from_to_from /to sadkfj!@#%$ /from \\a/sfdwte\u0027;2 /to \\lasjdf/134sdf kASMDF /from ASDF/.,csxRET","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChinZJ"},"content":"event event_to_from_to_from/tosadkfj!@#%$/from\\a/sfdwte\u0027;2/to\\lasjdf/134sdfkASMDF/fromASDF/.,csxRET","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChinZJ"},"content":"event event_to_to_from_from /to ASDF!#$/sdf\\dsttmn\\ /to \\n\\n\\t\\t /from /ask;dfjw /from ASDF!#$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChinZJ"},"content":"event event_to_to_from_from/toASDF!#$/sdf\\dsttmn\\/to\\n\\n\\t\\t/from/ask;dfjw/fromASDF!#$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChinZJ"},"content":"event event_from_to_event_from_to /from alsdjf134 /to saldj1341 event /from @!#SDF /to ASDG!#$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChinZJ"},"content":"event event_from_to_event_from_to/fromalsdjf134/tosaldj1341event/from@!#SDF/toASDG!#$","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChinZJ"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChinZJ"},"content":"mark 10","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChinZJ"},"content":"mark 20","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChinZJ"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChinZJ"},"content":"delete","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChinZJ"},"content":"delete 5147483647","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChinZJ"},"content":"delete -5147483647","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChinZJ"},"content":"delete !$12413513sdlkgj 3%#%","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChinZJ"},"content":"delete 10","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChinZJ"},"content":"delete 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChinZJ"},"content":"mark 10","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChinZJ"},"content":"mark 20","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChinZJ"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChinZJ"},"content":"unmark 10","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChinZJ"},"content":"unmark 30","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChinZJ"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChinZJ"},"content":"mark @!#$%^YRTGFSH sdfge245","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChinZJ"},"content":"mark 200 2341","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChinZJ"},"content":"mark 5147483647","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChinZJ"},"content":"mark -5147483647","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChinZJ"},"content":"deadline yyyy-mm-dd /by 2024-01-04","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChinZJ"},"content":"deadline yyyy-mm-dd HHmm /by 2025-12-09 2359","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChinZJ"},"content":"deadline fail /by 2023-99-11","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChinZJ"},"content":"deadline fail /by 2023-12-03 2500","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChinZJ"},"content":"event pass /from 2024-01-04 /to 2025-12-09 2359","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChinZJ"},"content":"event fail (start \u003d end) /from 2024-01-04 0000 /to 2024-01-04","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChinZJ"},"content":"event fail (start \u003e end) /from 2025-12-09 2359 /to 2024-01-04","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChinZJ"},"content":"event fail /from 2023-99-11 /to 2025-12-09 2359","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChinZJ"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChinZJ"},"content":"bye","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":80}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChinZJ"},"content":"if exist data RMDIR /S /Q data","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChinZJ"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Botling\\*.java ..\\src\\main\\java\\Botling\\Commands\\*.java ..\\src\\main\\java\\Botling\\Exceptions\\*.java ..\\src\\main\\java\\Botling\\MessageGenerator\\*.java ..\\src\\main\\java\\Botling\\Tasks\\*.java","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChinZJ"},"content":"java -classpath ..\\bin Botling \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChinZJ"},"content":"java -classpath ..\\bin Botling \u003c input.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChinZJ"},"content":"pause","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"ChinZJ":5,"-":19}}]
