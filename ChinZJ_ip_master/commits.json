{"authorDailyContributionsMap":{"ChinZJ":[{"date":"2025-01-20","commitResults":[{"hash":"116e7c3104fd6de106e63b6380660264fff2b3d2","isMergeCommit":false,"messageTitle":"Renamed Chatbots and Greetings","messageBody":"The codebase contains Duke as a template placeholder.\n\nThe name of the chatbot needs to be personalized for our chatbot.\n\nLet\u0027s,\n* Remove all Duke references from the source code.\n* Rename chatbot to Botling.\n* Implement basic greeting and exit functionality.\n\nLevel-0 functionality implemented according to requirements.\n","tags":["Rename,Greet,Exit","Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"e6721e988d069f597b1ff433f04321d6c1593dda","isMergeCommit":false,"messageTitle":"Add Echo Functionality","messageBody":"Botling currently greets and exits.\n\nEcho functionality serves as a foundation for basic user interaction.\n\nThe name of the chatbot needs to be personalized for our chatbot.\n\nLet\u0027s,\n* Echo commands from user input.\n* Exit when \"bye\" is given as an input.\n\nLevel-1 functionality implemented according to requirements.\n","tags":["Level-1","Echo"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":7}}},{"hash":"9945a6fd912892babd8437f9f6e459adb9f91d4c","isMergeCommit":false,"messageTitle":"Add List Functionality","messageBody":"Botling currently echoes commands.\n\nList functionality serves as a foundation for tracking tasks.\n\nLet\u0027s,\n* Store all inputs by the user except for \"list\" and \"bye\".\n* Display all inputs by the user when \"list\" is given as an input.\n\nLevel-2 functionality implemented according to requirements.\n","tags":["Level-2","Add,List"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}},{"hash":"49cc905e3d794281a8a417f8497a0a3194bf3ec6","isMergeCommit":false,"messageTitle":"Add Task Class","messageBody":"Botling currently lists tasks.\n\nCreating a class for tasks follows in accordance with OOP.\nAllows for abstraction and better structure.\n\nLet\u0027s,\n* Create a Task class with two attributes - name and isDone.\n* Each Task object is responsible for their own statuses (isDone).\n\nLevel-3 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":0}}},{"hash":"26045e8eca416106560fcbca6bdb8ab22f5e4c07","isMergeCommit":false,"messageTitle":"Add Mark as Done Functionality","messageBody":"Botling currently has a new Task class.\n\nThis allows for tasks to be marked as done depending on their status.\n\nLet\u0027s,\n* Update Botling\u0027s main method to incorporate the mark as done features.\n\nLevel-3 functionality implemented according to requirements.\n","tags":["Mark-As-Done","Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":5}}},{"hash":"5364aa3fe2717d1935c216fcb9dad09cb6fb23d8","isMergeCommit":false,"messageTitle":"Reconfigured Task Constructor","messageBody":"Task class currently has two constructors.\n\nReconfiguring the first constructor to utilize the second constructor.\nThe first constructor is a more specific version of the second.\n\nLet\u0027s,\n* Update Task class first constructor to use the second constructor.\n\nLevel-3 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"928203145d071a4a837e5dd2c205c97effeb9e08","isMergeCommit":false,"messageTitle":"Add Task class : toString() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"60d79ff7d882487c3d840492d678796a699fedb2","isMergeCommit":false,"messageTitle":"Add ToDo class","messageBody":"Currently only Task class exists.\n\nDifferent subtypes of Tasks have different outputs.\n\nLet\u0027s,\n* Create a ToDo class that extends Task class.\n\nLevel-4 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"a8be0d850c20ab605fe541d7a4b743fd611d15bc","isMergeCommit":false,"messageTitle":"Add Deadlines class","messageBody":"Currently only Task and ToDo class exists.\n\nDifferent subtypes of Tasks have different outputs.\n\nLet\u0027s,\n* Create a Deadlines class that extends Task class.\n\nLevel-4 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"bff41b832d0069f1e88c714e72461d65e39030b2","isMergeCommit":false,"messageTitle":"Add Events class","messageBody":"Currently only Task, ToDo and Deadlines class exists.\n\nDifferent subtypes of Tasks have different outputs.\n\nLet\u0027s,\n* Create a Events class that extends Task class.\n\nLevel-4 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"4b6b3f6783a1c86d92f1189554010c38ff82255b","isMergeCommit":false,"messageTitle":"Add ToDos, Deadlines and Events functionality","messageBody":"Currently Task, ToDo Deadlines and Events class exists.\n\nThey have not been implemented into Botling yet.\n\nLet\u0027s,\n* Implement the functionality of the various classes in Botling main().\n\nLevel-4 functionality implemented according to requirements.\n","tags":["ToDos,Events,Deadlines","Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":21}}},{"hash":"5466cf374cfc8c537c0f6e3935510ca0debb560e","isMergeCommit":false,"messageTitle":"Add File to .gitignore","messageBody":"Level-5 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"418c209b30f093f7bf91012b0cc2f671d53f8ed5","isMergeCommit":false,"messageTitle":"Add input.txt, EXPECTED.TXT and runtest.bat","messageBody":"Currently test cases are manually run.\n\nManual testing is prone to human errors and is time consuming.\n\nLet\u0027s,\n* Create a rigorous set of test cases for all current functionality.\n\nLevel-5 functionality implemented according to requirements.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":64,"deletions":0},"bat":{"insertions":2,"deletions":1}}},{"hash":"92b22d17572321ab6b76577568455a98a2ef5dd9","isMergeCommit":false,"messageTitle":"Add MsgConstants and ValConstants Class","messageBody":"Currently all constants are defined under Botling.java.\n\nThere is a long list of constants that should be defined under Enum.\n\nLet\u0027s,\n* Create a MsgConstants Enum class for String constants.\n* Create a ValConstants Enum class for int constants.\n\nLevel-5 functionality implemented according to requirements.\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":0}}},{"hash":"b246012743e04c8c9cc450b3ea43fd597e5eee69","isMergeCommit":false,"messageTitle":"Add TaskList class","messageBody":"Currently all tasks are stored in an ArrayList under Botling.java\n\nThis does not provide task specific functionalities eg. marking a task.\n\nLet\u0027s,\n* Create a TaskList class which wraps the ArrayList\u003cTask\u003e.\n* Add further functionality such as mark(), unmark().\n* Print messages where applicable.\n\nLevel-5 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":0}}},{"hash":"b64711ec7296fd72a950a491a6e92b957bee344d","isMergeCommit":false,"messageTitle":"Add MSG_EMPTY to MsgConstants.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"7e303cbb4dca727127a004441e27b866228d6687","isMergeCommit":false,"messageTitle":"Redirect Print from Task.java and TaskList.java to Botling.java","messageBody":"Currently print statements are created on demand when needed.\n\nThis does not adhere to OOP principles.\nBotling should be handling expected messages.\n\nLets,\n* Switch all method outputs to String where applicable.\n\nLevel-5 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":15}}},{"hash":"80f7bf97a07c7f72d04581778aeef83fb5418588","isMergeCommit":false,"messageTitle":"Add InvalidInputException.java","messageBody":"Currently exceptions are all handled under if else control blocks.\n\nUnexpected inputs should be handled by exceptions.\n\nLets,\n* Create an InvalidInputException class.\n* Create respective methods that would print handled errors.\n\nLevel-5 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":5}}},{"hash":"50a20d9254b355461f6517c92d408cf9d0724698","isMergeCommit":false,"messageTitle":"Add CommandParser.java","messageBody":"Currently all commands are handled by Botling.java.\n\nA separate class should be created to isolate the parsing of commands.\n\nLets,\n* Create a CommandParser.java class that parses all user inputs.\n* Allow the CommandParser to handle all exceptions.\n* Return all correct messages to Botling.java.\n\nLevel-5 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":137,"deletions":0}}},{"hash":"4e1f838f6c441c63de9b7f8a844d9beaa6879f5c","isMergeCommit":false,"messageTitle":"Update Botling.java","messageBody":"Currently Botling.java is outdated with the other classes.\n\nLets,\n* Update the code for Botling.java to utilize all created functionality.\n\nLevel-5 functionality implemented according to requirements.\n","tags":["Level-5","HandleErrors"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":94}}},{"hash":"b30e03ecce0f172f58affcc21f99ae820182ce8d","isMergeCommit":false,"messageTitle":"Update input.txt and EXPECTED.txt for Delete Task Functionality","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0}}},{"hash":"9be82f0ec03cc87082afeee0740c84b5e4f2902e","isMergeCommit":false,"messageTitle":"Updated MsgConstants.java and ValConstants.java for Delete Functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"7d99360913270ca107aef59b03fc71f7b9019ffb","isMergeCommit":false,"messageTitle":"Add Delete Task Functionality to TaskList.java","messageBody":"Currently TaskList can only add tasks.\n\nRemoving completed tasks should be natural for a tasks list.\n\nLets,\n* Add a remove() method for TaskList class.\n\nLevel-6 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"b92a23ee660f7e5a7a1e7677fba8386d4aa6cc27","isMergeCommit":false,"messageTitle":"Add delete Functionality to CommandParser.java","messageBody":"Level-6 functionality implemented according to requirements.\n","tags":["delete","Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":2}}}]},{"date":"2025-01-21","commitResults":[{"hash":"6d4cd393618a0b983904271686bd4958c6cd65bc","isMergeCommit":false,"messageTitle":"Add JavaDocs for all methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":6}}},{"hash":"47ac3eafa97272f67d59a236a0245b42bb231699","isMergeCommit":false,"messageTitle":"Refactor MsgConstants into MsgGenConst and CmdConst","messageBody":"Current MsgConstants contains all String constants.\n\nHowever, different class uses different parts of the constants.\nConstants should be unique to the specific class.\n\nLets,\n* Refactor MsgConstants into MsgGenConst and CmdConst.\n* MsgGenConst will be for messages produced by Botling.\n* CmdConst will be for commands, as well as their expected syntax.\n","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":30}}},{"hash":"4199568a7e76cdc70fe5465d46d6c66ae775afd2","isMergeCommit":false,"messageTitle":"Add MsgGen class","messageBody":"Currently messages are printed immediately when required.\n\nThis goes against OOP practice.\n\nLets,\n* Create a MsgGen class to generate all messages required.\n","fileTypesAndContributionMap":{"java":{"insertions":106,"deletions":0}}},{"hash":"892bf1f01889e19d45d8a0c479f2db7a56260adc","isMergeCommit":false,"messageTitle":"Refactor All Remaining Code","messageBody":"Currently all code in the various classes are outdated.\n\nLets,\n* Refactor all code to utilize the new MsgGen class.\n* Ensure that all messages are generated by MsgGen.\n* Only Botling.java should have print functionality.\n","fileTypesAndContributionMap":{"java":{"insertions":296,"deletions":225}}},{"hash":"51d9665af900204ec9f86394eaa148004063d3f8","isMergeCommit":false,"messageTitle":"Refactor JavaDocs and Code Syntax","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":15}}},{"hash":"222702c45b8da1c86c6f884e13c3007d5fc846db","isMergeCommit":false,"messageTitle":"Update EXPECTED.TXT and runtest.bat","messageBody":"","fileTypesAndContributionMap":{"bat":{"insertions":2,"deletions":0}}},{"hash":"8ed74e3c0c83eaa29ac832b4c604ca4a45061380","isMergeCommit":false,"messageTitle":"Add TaskListWriter.java","messageBody":"Currently there is no functionality for restoring previous tasks.\n\nCreating a file to read and write tasks allows for stored progress.\n\nLets,\n* Create a history.txt file to store progress for the user locally.\n\nLevel-7 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":160,"deletions":0}}},{"hash":"69f51ed4c78ce9ffe0d7c62af21da9540075b08d","isMergeCommit":false,"messageTitle":"Add Read and Write Capabilities for Tasks","messageBody":"Currently TaskListWriter has been implemented.\nHowever it is not being used by other classes.\n\nLets,\n* Create a write version of the tasks for TaskListWriter to store.\n* Ensure the write version is readable and recoverable.\n\nLevel-7 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":89,"deletions":25}}},{"hash":"6781d6e0246ae856c96717ef82ea0288b3a09cf9","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["branch-Level-7","Save"],"fileTypesAndContributionMap":{}}]},{"date":"2025-01-22","commitResults":[{"hash":"5aea08c378ea86df9b0e502e9faab3ab9c6a0bf6","isMergeCommit":false,"messageTitle":"Update text-ui-test","messageBody":"Level-8 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0}}},{"hash":"b5e1be2fd862c3f717def1a4b7aaa66b2036767e","isMergeCommit":false,"messageTitle":"Add Date Functionality and DeadlineDate and EventDate classes","messageBody":"Currently Deadline and Event classes only take in String.\nCreating a subclass that can read dates allows for future functionality\nsuch as sorting Tasks by dates.\n\nHowever, they should be able to recognize dates as well.\n\nLets,\n* Create a child class of Deadlines and Events that can read dates.\n* Create a hasDate() method for all classes to distinguish dates.\n\nLevel-8 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":100,"deletions":0}}},{"hash":"1cdabd758e5d8d942a75a4edecd9a21cfa128304","isMergeCommit":false,"messageTitle":"Add DateParser class","messageBody":"Currently, no class can read dates.\n\nLets,\n* Create a DateParser class to read dates.\n\nLevel-8 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":0}}},{"hash":"f9aa990b7ce4b4531957973446be1e778b93b1f8","isMergeCommit":false,"messageTitle":"Update All Relevant Classes","messageBody":"Currently, all classes have not incorporated the check for dates.\n\nLets,\n* Update the classes respectively\n\nLevel-8 functionality implemented according to requirements.\n","fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":10}}},{"hash":"70eb7e42ddacba477dc77f2fcca6c645454f5868","isMergeCommit":false,"messageTitle":"Package All Files Respectively","messageBody":"Currently all files are under the source root file.\n\nLets,\n* Move all files into their respective packages.\n","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":0}}},{"hash":"f3ec620c860a12416b6d184a6477cf63f2aa730b","isMergeCommit":true,"messageTitle":"Merge pull request #1 from ChinZJ/A-Packages","messageBody":"A-Package","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"36fc5b367e2e10d014df21b67a726b995b5d2de2","isMergeCommit":false,"messageTitle":"Merge Commit branch-Level-8","messageBody":"Updated all files from branch-Level-8 for merge commit.\n","fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":230,"deletions":10}}},{"hash":"23347290f725386a5aa6ef30990a88d486e87708","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["branch-Level-8"],"fileTypesAndContributionMap":{}},{"hash":"b40112c38679d0bbd12f3f531691b7c8c1bf15d5","isMergeCommit":false,"messageTitle":"Update runtest.bat to Accommodate for Packages","messageBody":"","fileTypesAndContributionMap":{"bat":{"insertions":1,"deletions":1}}},{"hash":"69802ec8848e96dea2e93392d4844cd1419718e9","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"8db4a423c37450737f64b1b074dcfb459df0a6cd","isMergeCommit":false,"messageTitle":"Edit build.gradle for Botling","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"d0536d376340cae3f9ca2bf6d681e178e5e9f836","isMergeCommit":true,"messageTitle":"Merge pull request #3 from ChinZJ/A-Gradle","messageBody":"A-Gradle","tags":["A-Gradle"],"fileTypesAndContributionMap":{}}]},{"date":"2025-01-23","commitResults":[{"hash":"a751a5118b1b30bfcff3a30dfe29a488f09bdaf4","isMergeCommit":false,"messageTitle":"Adhere to Coding Standards","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":49,"deletions":62}}},{"hash":"fac32ac95db13c78b5546fbcab9c332317365e69","isMergeCommit":false,"messageTitle":"Add JUnit Tests","messageBody":"Currently tests are done via text-ui-test.\n\nHowever that does not allow for class specific testing.\n\nLet\u0027s,\n* Create JUnit tests for core public methods of the program.\n","fileTypesAndContributionMap":{"java":{"insertions":515,"deletions":0}}},{"hash":"071eb759d7a85285b67158cb8f4d7b7883e5129e","isMergeCommit":true,"messageTitle":"Merge pull request #4 from ChinZJ/A-JUnit","messageBody":"A-JUnit","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"d812eee343f386004e245232a01e8c4e2259a0d6","isMergeCommit":false,"messageTitle":"Remove Capitalization in Package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6},"bat":{"insertions":1,"deletions":1}}},{"hash":"0e71aa94ad9d3a0b36168c79e78e471e5df805a6","isMergeCommit":false,"messageTitle":"Updated runtest.bat and EXPECTED.TXT Accordingly","messageBody":"","fileTypesAndContributionMap":{"bat":{"insertions":2,"deletions":2}}},{"hash":"5bd1ad7c98f23f143246f8cd35d701827bd26791","isMergeCommit":false,"messageTitle":"Updated Configurations for A-Jar","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}},{"hash":"9e59ce1b6e27b167c0b7aa8de69dd5a67facb124","isMergeCommit":true,"messageTitle":"Merge pull request #5 from ChinZJ/A-Jar","messageBody":"A-Jar","tags":["A-MoreOOP","A-Jar"],"fileTypesAndContributionMap":{}},{"hash":"8de27ea0e283c4400a18ea36e5283dd2ef401e3d","isMergeCommit":false,"messageTitle":"Removed unknownList() From MsgGen class.","messageBody":"Currently Two Methods Overlap: unknownList() and unknownCmd().\n\nLets,\n* Remove unknownList().\n* Replace unknownList() with unknownCmd().\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":16}}},{"hash":"7e7ca5e7ae16de8f79156374037798e63481f2ca","isMergeCommit":false,"messageTitle":"Add find Command","messageBody":"Currently Botling has no find functionality.\n\nIt may be difficult to look for a subset of tasks.\n\nLets,\n* Create a \"find\" command for users to search their tasks.\n* Code it such that the find command is case insensitive.\n","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":2}}},{"hash":"254556d59d84d0c61144cecf1af020af0bf14df9","isMergeCommit":false,"messageTitle":"Refactor list() in TaskList class","messageBody":"Currently list() method in TaskList class has an unnecessary if else block.\n\nThis creates unnecessary inefficiencies.\n\nLets,\n* Remove the if else block.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":6}}},{"hash":"82116c893f3a1872029e01bc8c8e732ef0bb3909","isMergeCommit":false,"messageTitle":"Refactored Code to Match Coding Standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":78}}},{"hash":"0e02a19b6a4e1c7cf9ff94948196b0d7352c77c4","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"4adcc39c96000cbbe8ea0891d5b7c4481291d437","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","tags":["branch-Level-9","branch-A-Javadoc","branch-A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"73b56b28cbf9fdf7d9f48778c210ba89152e67ae","isMergeCommit":false,"messageTitle":"Update JUnit Test Cases to be Hardcoded","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":180,"deletions":51}}},{"hash":"315cf6a36ad52ee8d36aef82d0faad729a8143e0","isMergeCommit":false,"messageTitle":"Clean Up Code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":41}}}]},{"date":"2025-01-24","commitResults":[{"hash":"876beb3db5cd0a7e5c0ec2731a7544d8228c54cf","isMergeCommit":false,"messageTitle":"Fix Bug in TaskListWriter class","messageBody":"Buffered reader in TaskListWriter class was not closed.\n\nThis caused issues when trying to delete the `history.txt` file\nduring other test cases.\n\nBug found by seniors on GitHub issues comment.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":16}}}]},{"date":"2025-01-25","commitResults":[{"hash":"3137856c7d7bc95398addf395ebdbe750ce809e4","isMergeCommit":false,"messageTitle":"Add GUI to Botling","messageBody":"Currently Botling is interacted via the CLI.\n\nIt is not user friendly and does not have a visually appealing display.\n\nLets,\n* Follow the Java FX guide to create a GUI for Botling\n\nLevel-10 requirements.\n","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":1},"txt":{"insertions":7,"deletions":0},"fxml":{"insertions":101,"deletions":0},"java":{"insertions":264,"deletions":67}}}]},{"date":"2025-01-27","commitResults":[{"hash":"77fddd90d40702cf46efbba8b868c39c4ea83033","isMergeCommit":false,"messageTitle":"Change Task to abstract class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"40be84f1ba73afb3535738fdbfe08b4c531be08e","isMergeCommit":false,"messageTitle":"Add Checkstyle Configurations","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"7ea9404578c3e4aac38ff6e848455b8fb30703e4","isMergeCommit":false,"messageTitle":"Clean Code to Adhere to Checkstyle Configurations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":102,"deletions":88}}},{"hash":"c312f8e177469bc900560d62a3f8c97462bf5b72","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-CheckStyle\u0027","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}},{"hash":"cb81ded2ab8d8bc4f2b28dabda5c96da379b3177","isMergeCommit":false,"messageTitle":"Update JUnit Test","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":150}}},{"hash":"afc86813c4b966530ca97a5096b6d720b33cd1c2","isMergeCommit":true,"messageTitle":"Merge branch \u0027Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}},{"hash":"03d282e619a24a38e3e1073689354c3ecb635fb5","isMergeCommit":false,"messageTitle":"Change System Exit Upon Corrupt File to RuntimeException","messageBody":"Currently program exits if user chooses not to delete corrupt file.\n\nThis complicates testing issues.\nIt is also more intuitive to throw an error to catch the message.\nIn future, this will come in handy for UI reloading.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":7}}},{"hash":"e550f14eb99e2a327b39e3e5f8d22c010c36abb8","isMergeCommit":false,"messageTitle":"Change corrupt history.txt file handling","messageBody":"Currently history.txt file corrupt handling is handled by CLI.\n\nHowever, that is a known error and should be handled in the GUI.\n\nLets,\n* Update the functionality of TaskListWriter class to only handle\n  recreating of the file.\n* Move the message generation to CommandParser class.\n* Change the user input to be handled in the GUI.\n\nNote that currently if the user selects \u0027n\u0027, they can either press \u0027y\u0027\nto reset or \u0027bye\u0027 to reload the bot.\n","fileTypesAndContributionMap":{"java":{"insertions":222,"deletions":210}}}]},{"date":"2025-01-28","commitResults":[{"hash":"d170bd11dd4df8927600acf28ef38d6707cf5c6c","isMergeCommit":false,"messageTitle":"Convert Label to TextArea","messageBody":"Currently GUI for replies are Label.\n\nThe text is not copyable and is hard to copy and paste text when needed.\n\nLet\u0027s,\n* Change the Label to a TextArea\n\nNote: Functionality incomplete.\n","fileTypesAndContributionMap":{"fxml":{"insertions":11,"deletions":6},"java":{"insertions":142,"deletions":19}}},{"hash":"c71dc4c298222a87c6077e49af9e8b5da18b8a98","isMergeCommit":false,"messageTitle":"Temporary Backup","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"1372f77571357d3a3e1c6f579fd7748191e67018","isMergeCommit":false,"messageTitle":"Add new command and new class","messageBody":"Help command to list all commands.\nNew class CommandColor to try and see if TextArea can have multiple colors.\n","fileTypesAndContributionMap":{"fxml":{"insertions":11,"deletions":9},"java":{"insertions":249,"deletions":27}}},{"hash":"c315d1ed7e4ef90a01c8f79b10cd278b442c3308","isMergeCommit":false,"messageTitle":"Hardcode TextFlow object over TextArea object","messageBody":"Works for the most part, but special characters such as \u0027}\u0027 are not\naligned.\n\nAlso note that String.format() can easily be broken with \u0027%X\u0027 where X\nis any non parseable character.\n","fileTypesAndContributionMap":{"fxml":{"insertions":46,"deletions":19},"java":{"insertions":58,"deletions":55}}}]},{"date":"2025-01-29","commitResults":[{"hash":"d6aa66d394e87f805e6a46cc98f470979bc3821a","isMergeCommit":false,"messageTitle":"Add Selectable with Text Color Functionality to GUI","messageBody":"Underlying implementation comprises of a stacked TextArea object with\nTextFlow object.\nNote that the TextArea object is slightly misaligned, but was done\nto the best of my capabilities at this moment.\nTextArea object is made invisible, while TextFlow object will be colored.\n","fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":0},"java":{"insertions":304,"deletions":198}}},{"hash":"4a89cdd90242f76b7fe5d4bc6e6d07fbafa5628f","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-Extra-TextArea\u0027 into A-Extra","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2a3609ccf507dc940e24b6355013c63426cf1f3c","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-Extra\u0027","messageBody":"","tags":["A-Varags"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"ChinZJ":{"java":2564,"md":0,"fxml":135,"sh":0,"bat":5,"gradle":25,"txt":87}},"authorContributionVariance":{"ChinZJ":173593.38},"authorDisplayNameMap":{"ChinZJ":"CS2103-F15-4 CHIN.. JIE"}}
