[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":" Display                                                      |        Name         |            Github Profile             |                      Homepage                      ","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"--------------------------------------------------------------|:-------------------:|:-------------------------------------:|:--------------------------------------------------:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" ![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Jeffry Lum      |  [Github](https://github.com/j-lum/)  |        [Homepage](https://se.kasugano.moe)         ","lastModifiedDate":"2019-08-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" ![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100)  | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/) ","lastModifiedDate":"2019-08-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"blobfish465":2,"-":8}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"instructions on how to use it.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"   first)","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"   editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"   below as the output:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle)","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"expect to find Java files.","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"blobfish465":12,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"    mainClass.set(\"blob.Launcher\")","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"    archiveFileName \u003d \u0027Blob.jar\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"    archiveBaseName \u003d \"Blob\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"blobfish465":19,"-":39}},{"path":"data/Blob.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"T | 1 | read book","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"E | 0 | team meeting | 2025-03-01 1700 | 2025-03-01 2000","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"D | 0 | submit report | 2025-03-01 1700","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"E | 0 | team | 2025-03-01 1700 | 2025-03-01 2000","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"T | 0 | f","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"blobfish465":5}},{"path":"src/main/java/blob/Blob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.command.Command;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.exception.BlobExceptions;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import blob.parser.Parser;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import blob.storage.Storage;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import blob.ui.Ui;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":" * Main class of the Blob application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":" * This class initializes and coordinates the various components of the application, such as:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":" *     \u003cli\u003e{@link Ui} - Handles user interactions and displays output.\u003c/li\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":" *     \u003cli\u003e{@link Storage} - Manages saving and loading task data.\u003c/li\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":" *     \u003cli\u003e{@link Parser} - Interprets user commands.\u003c/li\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":" *     \u003cli\u003e{@link TaskList} - Stores and manipulates user tasks.\u003c/li\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"public class Blob {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"    private final Parser parser;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"     * Constructs the Blob application, initializing the storage, UI, and command parser.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     * If an error occurs while loading tasks from storage, an empty task list is initialized instead.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"     * @param filePath The path to the file where tasks are stored and loaded from.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"    public Blob(String filePath) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"            ui.showError(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"     * Processes user input and returns a response string.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"     * This method:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"     *     \u003cli\u003eParses the user\u0027s input into a {@link Command}.\u003c/li\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"     *     \u003cli\u003eExecutes the command, modifying the task list if necessary.\u003c/li\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"     *     \u003cli\u003eRetrieves and returns the processed output from {@link Ui}.\u003c/li\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blobfish465"},"content":"     * @param input The user input command as a string.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blobfish465"},"content":"     * @return The response generated by executing the command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"blobfish465"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blobfish465"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blobfish465"},"content":"            Command command \u003d parser.parse(input);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blobfish465"},"content":"            command.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blobfish465"},"content":"            return ui.getOutput();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blobfish465"},"content":"        } catch (BlobExceptions.EmptyDescriptionException | BlobExceptions.UnknownCommandException |","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blobfish465"},"content":"                 BlobExceptions.IllegalFormatException | BlobExceptions.WrongTaskIndexException |","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blobfish465"},"content":"                 BlobExceptions.NoTaskException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blobfish465"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blobfish465"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blobfish465"},"content":"            return \"File I/O error: \" + e.getMessage();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"blobfish465"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"blobfish465"},"content":"            return \"An unexpected error occurred: \" + e.getMessage();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"blobfish465"},"content":"     * Runs the main loop of the application, processing user commands until the exit command is received.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"blobfish465"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"blobfish465"},"content":"     * This method:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"blobfish465"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"blobfish465"},"content":"     *     \u003cli\u003eDisplays a greeting message to the user.\u003c/li\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"blobfish465"},"content":"     *     \u003cli\u003eContinuously reads user input, parses and executes commands.\u003c/li\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"blobfish465"},"content":"     *     \u003cli\u003ePrints the generated response.\u003c/li\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"blobfish465"},"content":"     *     \u003cli\u003eTerminates when an exit command is detected.\u003c/li\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"blobfish465"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"blobfish465"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"blobfish465"},"content":"    public void run() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"blobfish465"},"content":"        ui.showGreeting();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"blobfish465"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"blobfish465"},"content":"        while (isRunning) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"blobfish465"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"blobfish465"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"blobfish465"},"content":"                Command command \u003d parser.parse(input);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"blobfish465"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"blobfish465"},"content":"                System.out.println(ui.getOutput());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"blobfish465"},"content":"                if (command.isExitCommand()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"blobfish465"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"blobfish465"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"blobfish465"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"blobfish465"},"content":"                System.out.println(\"An unexpected error occurred: \" + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"blobfish465"},"content":"        ui.closeScanner();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"blobfish465"},"content":"     * The entry point of the application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"blobfish465"},"content":"     * This method initializes an instance of {@code Blob} and starts the application loop.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"blobfish465"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"blobfish465"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"blobfish465"},"content":"        new Blob(\"data/Blob.txt\").run();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"blobfish465":122}},{"path":"src/main/java/blob/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":" * The entry point for launching the Blob application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":" *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":" * This class serves as a workaround for JavaFX\u0027s classloading requirements.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":" * It delegates execution to the {@link Main} class, which starts the JavaFX application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"public class Launcher {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"     * Main method to launch the Blob application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"     * Calls {@code Main.main(args)} to initialize and start the JavaFX application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"     * This separate launcher class is necessary because JavaFX applications require","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"     * the main application class to extend {@code javafx.application.Application},","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"     * and having a direct main method in such a class can cause issues with certain Java runtimes.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"        Main.main(args);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"blobfish465":22}},{"path":"src/main/java/blob/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.controller.MainWindow;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":" * A JavaFX-based GUI for the Blob chatbot using FXML.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":" * This class initializes the graphical user interface and sets up the main window.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":" * It extends {@link Application}, which is required for JavaFX applications.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"     * Starts the JavaFX application by loading the FXML layout and displaying the main window.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"     * @param stage The primary stage for this JavaFX application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBlob(new Blob(\"data/Blob.txt\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"            stage.show();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"     * Launches the Blob chatbot GUI.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"     * Calls {@code launch()} to start the JavaFX application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"        launch(Main.class, args);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"blobfish465":50}},{"path":"src/main/java/blob/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.model.Task;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import java.util.List;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":" * Manages a list of tasks. Provides methods to manipulate tasks such as adding, deleting, and marking tasks.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"public class TaskList {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"     * Constructs a TaskList initialized with a list of tasks.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"     * @param tasks An ArrayList of Task objects to initialize the list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"     * @return An ArrayList containing all the tasks in the list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"        return this.tasks;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"     * @param task The Task to be added.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"        assert task !\u003d null : \"Task added to TaskList should not be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"     * Deletes a task from the task list based on its position.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"     * @param index The 1-based index of the task to be removed.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"     * @return The Task that was removed.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"        return tasks.remove(index - 1);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blobfish465"},"content":"     * Retrieves a task from the task list by its index.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blobfish465"},"content":"     * @param index The 1-based index of the task to retrieve.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"blobfish465"},"content":"     * @return The Task at the specified index.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blobfish465"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blobfish465"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blobfish465"},"content":"        assert task !\u003d null : \"Retrieved task should not be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blobfish465"},"content":"        return task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blobfish465"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"blobfish465"},"content":"     * @return The total number of tasks currently in the list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"blobfish465"},"content":"    public int getSize() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"blobfish465"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"blobfish465"},"content":"     * Finds tasks containing the specified word in their descriptions.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"blobfish465"},"content":"     * @param word The keyword to search for in task descriptions.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"blobfish465"},"content":"     * @return A list of strings representing the matching tasks with their indices.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"blobfish465"},"content":"    public List\u003cString\u003e findTasks(String word) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"blobfish465"},"content":"        List\u003cString\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"blobfish465"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"blobfish465"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"blobfish465"},"content":"            if (task.getDescription().contains(word)) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"blobfish465"},"content":"                matchingTasks.add((i + 1) + \".\" + task.toString());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"blobfish465"},"content":"        return matchingTasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"blobfish465":97}},{"path":"src/main/java/blob/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.command;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.model.Task;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import blob.storage.Storage;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import blob.ui.Ui;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":" * This command is responsible for adding a specific task","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":" * and updating the user interface accordingly.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"    private Task task;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"     * Constructs an AddCommand with the specified task.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"     * Executes the add command which involves adding a task to the task list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"     * and updating the UI to show the added task.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"     * @param tasks The task list to which the task will be added.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     * @param ui The UI to interact with the user.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     * @param storage The storage used to save the updated task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"        ui.showTaskAdded(task, tasks.getSize());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"     * Indicates whether this command is an \"exit\" command.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"     * @return false as this command does not terminate the application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"        return false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"blobfish465":49}},{"path":"src/main/java/blob/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.command;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.exception.BlobExceptions;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import blob.storage.Storage;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import blob.ui.Ui;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":" * Represents a command that can be executed in the Blob application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":" * Each command performs an action on the provided {@link TaskList}, updates the user interface","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":" * through {@link Ui}, and may interact with {@link Storage} to persist changes.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"public interface Command {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"     * Executes the command using the provided {@link TaskList}, {@link Ui}, and {@link Storage}.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"     * @param tasks   The task list to operate on.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"     * @param ui      The UI object used to display messages to the user.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"     * @param storage The storage object used to save or load data.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"     * @throws IOException                              If an I/O error occurs during storage operations.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.EmptyDescriptionException If the command\u0027s description is empty.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.UnknownCommandException   If the command is unrecognized.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.IllegalFormatException    If the command is improperly formatted.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.WrongTaskIndexException   If the specified task index is invalid.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.NoTaskException           If there are no tasks in the task list to operate on.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, BlobExceptions.EmptyDescriptionException,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"            BlobExceptions.UnknownCommandException, BlobExceptions.IllegalFormatException,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"            BlobExceptions.WrongTaskIndexException, BlobExceptions.NoTaskException;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"     * @return {@code true} if this command signals the application to terminate, {@code false} otherwise.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"    boolean isExitCommand();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"blobfish465":39}},{"path":"src/main/java/blob/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.command;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.exception.BlobExceptions;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import blob.model.Task;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import blob.storage.Storage;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import blob.ui.Ui;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":" * This command handles the removal of a task based on an index provided by the user","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":" * and updates the user interface accordingly.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"    private int index;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"     * Constructs a DeleteCommand with the specified index.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"     * @param index The index of the task in the task list that should be deleted.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"     *              The index is expected to be zero-based and valid.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"     * Executes the delete command which involves removing a task from the task list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"     * and updating the UI to show the task has been deleted.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     * @param tasks The task list from which the task will be deleted.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"     * @param ui The UI to interact with the user.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"     * @param storage The storage used to save the updated task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"     *                Note that the storage may not be directly used in this method","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"     *                but is included to adhere to the command interface.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.WrongTaskIndexException If the command includes an index that is not a valid integer or out of bounds.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BlobExceptions.WrongTaskIndexException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"            Task removedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"            ui.showTaskDeleted(removedTask, tasks.getSize());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"            throw new BlobExceptions.WrongTaskIndexException();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"     * Indicates whether this command is an \"exit\" command.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"     * @return false as this command does not terminate the application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"        return false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"blobfish465":58}},{"path":"src/main/java/blob/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.command;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.storage.Storage;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import blob.ui.Ui;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":" * Represents a command to terminate the application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":" * This command handles the process of exiting the program after saving all tasks","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":" * to the designated storage.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"     * Executes the exit command which involves saving the current state of the task list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"     * to storage and then signaling the user interface to display a farewell message.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"     * This command causes the program loop to terminate, closing the application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"     * @param tasks The task list whose state is to be saved.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"     * @param ui The UI to interact with the user.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"     * @param storage The storage used to save the current state of tasks.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"     * @throws IOException If an I/O error occurs during saving of tasks.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"            System.err.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"            throw e;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"        ui.showFarewell();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"     * Indicates whether this command is an \"exit\" command.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"     * @return true as this command terminates the application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"        return true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"blobfish465":47}},{"path":"src/main/java/blob/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.command;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.storage.Storage;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import blob.ui.Ui;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import java.util.List;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":" * Represents a command to find tasks containing a specified word.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"    private final String word;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"     * Constructs a FindCommand with the specified word.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"     * @param word The keyword to search for in task descriptions.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"    public FindCommand(String word) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"        this.word \u003d word;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"     * Executes the find command by searching for tasks containing the word","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"     * and displaying them to the user.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"     * @param ui      The UI instance for displaying messages to the user.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"     * @param storage The Storage instance for file operations (not used here).","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"        List\u003cString\u003e matchingTasks \u003d tasks.findTasks(word);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"     * Indicates whether this command is an \"exit\" command.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"     * @return false as this command does not terminate the application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"        return false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"blobfish465":46}},{"path":"src/main/java/blob/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.command;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.exception.BlobExceptions;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import blob.storage.Storage;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import blob.ui.Ui;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":" * This command is used to display all the tasks currently stored in the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"     * Executes the list command which involves displaying all tasks currently in the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"     * The tasks are displayed to the user via the UI component.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"     * @param tasks The task list whose contents are to be displayed.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"     * @param ui The UI to interact with the user.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"     * @param storage The storage component, not directly used by this command but required by the interface.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.NoTaskException If the list does not contain any task","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BlobExceptions.NoTaskException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"        ui.showTasks(tasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"     * Indicates whether this command is an \"exit\" command.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     * @return false as this command does not terminate the application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"        return false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"blobfish465":39}},{"path":"src/main/java/blob/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.command;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.exception.BlobExceptions;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import blob.model.Task;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import blob.storage.Storage;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import blob.ui.Ui;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":" * This command is used to change the status of a specific task to \"done.\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"    private int index;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"     * @param index The index of the task in the task list that is to be marked as done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"     * Executes the mark command which involves marking a specified task as done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"     * The task to be marked is retrieved using its index, marked as done, and this change is shown to the user via the UI.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"     * @param tasks The task list where the task to be marked is stored.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     * @param ui The UI to interact with the user and show feedback.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     * @param storage The storage component, not directly used by this command but required by the interface.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.WrongTaskIndexException If the command includes an index that is not a valid integer or out of bounds.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BlobExceptions.WrongTaskIndexException{","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"            task.markDone();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"            ui.showTaskMarked(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"            throw new BlobExceptions.WrongTaskIndexException();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"     * Indicates whether this command is an \"exit\" command.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"     * @return false as this command does not terminate the application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"        return false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"blobfish465":55}},{"path":"src/main/java/blob/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.command;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.exception.BlobExceptions;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import blob.model.Task;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import blob.storage.Storage;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import blob.ui.Ui;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":" * Represents a command to unmark a task as done in the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":" * This command is used to change the status of a specific task to \"not done.\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"    private int index;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"     * Constructs an UnmarkCommand with the specified task index.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"     * @param index The index of the task in the task list that is to be unmarked as done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"     *              The index is zero-based and must be within the range of the task list size.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"     * Executes the unmark command which involves changing a specified task\u0027s status to not done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"     * The task to be unmarked is retrieved using its index, unmarked as done, and the change is shown to the user via the UI.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     * @param tasks The task list where the task to be unmarked is stored.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     * @param ui The UI to interact with the user and show feedback.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"     * @param storage The storage component, not directly used by this command but required by the interface.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.WrongTaskIndexException If the command includes an index that is not a valid integer or out of bounds.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BlobExceptions.WrongTaskIndexException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"            task.unmarkDone();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"            ui.showTaskUnmarked(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"            throw new BlobExceptions.WrongTaskIndexException();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"     * Indicates whether this command is an \"exit\" command.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"     * @return false as this command does not terminate the application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"        return false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"blobfish465":56}},{"path":"src/main/java/blob/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.controller;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":" * Represents a dialog box consisting of an {@link ImageView} to represent the speaker\u0027s face","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":" * and a {@link Label} containing text from the speaker.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":" * This class is used in the GUI to visually display interactions between the user and the chatbot.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"     * Constructs a {@code DialogBox} with the given text and image.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"     * Loads the corresponding FXML layout file to initialize the GUI components.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     * @param text The text message to be displayed in the dialog box.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"     * @param img  The image representing the speaker.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"     * Flips the dialog box such that the {@code ImageView} is positioned on the left","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"     * and the text {@code Label} is on the right. This is used to differentiate between","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"     * user messages and chatbot blob responses.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"    private void flip() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blobfish465"},"content":"     * Creates a {@code DialogBox} for the user.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"blobfish465"},"content":"     * This is used to display the user\u0027s input messages in the chat.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blobfish465"},"content":"     * @param text The user\u0027s input message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blobfish465"},"content":"     * @param img  The image representing the user.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blobfish465"},"content":"     * @return A new {@code DialogBox} displaying the user\u0027s message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blobfish465"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blobfish465"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"blobfish465"},"content":"     * Creates a {@code DialogBox} for the chatbot blob.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"blobfish465"},"content":"     * The dialog box is flipped to position the image on the left and the text on the right.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"blobfish465"},"content":"     * @param text The chatbot\u0027s response message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"blobfish465"},"content":"     * @param img  The image representing the chatbot blob.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"blobfish465"},"content":"     * @return A new {@code DialogBox} displaying the blob\u0027s message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"blobfish465"},"content":"    public static DialogBox getBlobDialog(String text, Image img) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"blobfish465"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"blobfish465"},"content":"        db.flip();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"blobfish465"},"content":"        return db;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"blobfish465":85}},{"path":"src/main/java/blob/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.controller;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.Blob;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":" * Controller for the main graphical user interface (GUI) of the Blob chatbot application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":" * This class manages user interactions, input handling, and displaying chatbot responses.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"    private Blob blob;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"    // Images representing the user and the chatbot in the GUI.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"    private Image userImage \u003d new Image(getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"    private Image blobImage \u003d new Image(getClass().getResourceAsStream(\"/images/blobfish.png\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"     * Initializes the GUI components.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"     * This method ensures that the scroll pane automatically scrolls down","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"     * when new messages are added to the dialog container.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"     * Sets the chatbot instance for this GUI controller.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"     * @param b The {@code Blob} instance representing the chatbot logic.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"    public void setBlob(Blob b) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"        blob \u003d b;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"     * Creates and displays a user dialog box with the given input.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"     * This method takes the user\u0027s input and displays it on the UI using a custom DialogBox.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"     * @param input The text input provided by the user which will be displayed in the dialog box.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blobfish465"},"content":"    private void createUserDialog(String input) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blobfish465"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blobfish465"},"content":"     * Creates and displays a Blob dialog box with the given response.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blobfish465"},"content":"     * This method takes the Blob\u0027s response to the user\u0027s input and displays it on the UI using a custom DialogBox.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blobfish465"},"content":"     * @param response The response from the Blob which will be displayed in the dialog box.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blobfish465"},"content":"    private void createBlobDialog(String response) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blobfish465"},"content":"        dialogContainer.getChildren().add(DialogBox.getBlobDialog(response, blobImage));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"blobfish465"},"content":"     * Handles the process of capturing user input, processing it through the Blob, and displaying both the input","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"blobfish465"},"content":"     * and response in the dialog boxes.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"blobfish465"},"content":"     * This method retrieves the user\u0027s input from a text field, sends it to the Blob for processing,","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"blobfish465"},"content":"     * and then displays the user\u0027s input and Blob\u0027s response in the UI. It clears the input field after processing.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"blobfish465"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"blobfish465"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"blobfish465"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"blobfish465"},"content":"        String response \u003d blob.getResponse(input);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"blobfish465"},"content":"        createUserDialog(input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"blobfish465"},"content":"        createBlobDialog(response);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"blobfish465"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"blobfish465":86}},{"path":"src/main/java/blob/exception/BlobExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.exception;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":" * Defines custom exceptions for Blob to handle various error scenarios","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":" * related to user input and task list operations.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"public class BlobExceptions {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"     * Exception thrown when an input command lacks a required description.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"    public static class EmptyDescriptionException extends Exception {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"        /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"         * Constructs an exception indicating that a description is missing from a command.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"         */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"        public EmptyDescriptionException() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"            super(\"Oh no! The description of a task cannot be empty.\\n\"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"                    + \"Add a space and a description after your command\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"     * Exception thrown when the entered command is not recognized by the parser.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"    public static class UnknownCommandException extends Exception {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"        /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"         * Constructs an exception indicating that the entered command is unknown.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"         */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"        public UnknownCommandException() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"            super(\"What are you saying? I don\u0027t know what you mean. Enter a valid command.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"     * Exception thrown when a task index provided is outside the valid range.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"    public static class WrongTaskIndexException extends Exception {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"        /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"         * Constructs an exception indicating that the provided task index is out of bounds.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"         */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"        public WrongTaskIndexException() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"            super(\"The task number you provided is out of bounds!\\n\"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"                    + \"Use the list command to check your desired the task index.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"     * Exception thrown when an operation that expects tasks is performed on an empty task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"    public static class NoTaskException extends Exception {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"        /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"         * Constructs an exception indicating that the task list is empty when it should not be.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"         */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"        public NoTaskException() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"            super(\"Your task list has no task! Add some tasks to it!\");","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blobfish465"},"content":"     * Exception thrown when an input does not follow the expected format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"blobfish465"},"content":"    public static class IllegalFormatException extends Exception {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blobfish465"},"content":"        /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blobfish465"},"content":"         * Constructs an exception indicating that the input does not conform to the expected format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blobfish465"},"content":"         * @param format A string describing the expected format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blobfish465"},"content":"         */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blobfish465"},"content":"        public IllegalFormatException(String format) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blobfish465"},"content":"            super(\"Wrong format! Please follow this format:\\n  \" + format);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"blobfish465":72}},{"path":"src/main/java/blob/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.model;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":" * This class extends the generic Task class by adding support for deadlines.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"    protected LocalDateTime dueDateTime;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"     * Constructs a Deadline object with a description and a deadline time.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"     * @param byDateTime The deadline time in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"    public Deadline(String description, String byDateTime) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"        super(description);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"        setBy(byDateTime);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"     * Sets the deadline date and time by parsing the input string.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"     * If the parsing fails, the dueDateTime is set to null and an error message is printed.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"     * @param byDateTime The string representing the deadline date and time in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"    public void setBy(String byDateTime) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"            this.dueDateTime \u003d LocalDateTime.parse(byDateTime,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"            System.out.println(\"Error parsing datetime: \" + byDateTime","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"                    + \". Use yyyy-MM-dd HHmm format.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"            this.dueDateTime \u003d null;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"        assert this.dueDateTime !\u003d null","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"                : \"Due date time should be parsed correctly and not be null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"     * Formats the dueDateTime to a readable string.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"     * If the dueDateTime is null, it returns \"Invalid date\".","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"     * @param dateTime The LocalDateTime object to format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"     * @return A formatted date string or \"Invalid date\" if dateTime is null.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"    private String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"        return (dateTime !\u003d null)","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"                ? dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\"))","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"                : \"Invalid date\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blobfish465"},"content":"     * Returns a string representation of the Deadline task including its status, description, and deadline.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blobfish465"},"content":"     * @return Formatted string indicating the deadline\u0027s status, description, and due date.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blobfish465"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blobfish465"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDateTime(dueDateTime) + \")\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blobfish465"},"content":"     * Returns a formatted string suitable for file storage.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blobfish465"},"content":"     * Includes the type of task, its completion status, description, and formatted due date.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blobfish465"},"content":"     * @return A string formatted for file storage.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"blobfish465"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"blobfish465"},"content":"        return \"D | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"blobfish465"},"content":"                + (dueDateTime !\u003d null","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"blobfish465"},"content":"                    ? dueDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"blobfish465"},"content":"                    : \"undefined\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"blobfish465":81}},{"path":"src/main/java/blob/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.model;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":" * Represents a task that occurs over a specified time period, with both start and end times.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":" * This class extends the generic Task class by adding support for start and end times, making it suitable for events.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"     * Constructs an Event object with a description and specific start and end times.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"     * @param start The start time of the event in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"     * @param end The end time of the event in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"        super(description);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"        this.startDateTime \u003d parseDateTime(start);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"        this.endDateTime \u003d parseDateTime(end);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"        assert (startDateTime !\u003d null \u0026\u0026 endDateTime !\u003d null)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"                || (startDateTime \u003d\u003d null \u0026\u0026 endDateTime \u003d\u003d null)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"                : \"Both startDateTime and endDateTime should be set or null\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"     * Parses the given date and time string into a LocalDateTime object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"     * This method takes a string representation of a date and time, which should conform to the","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"     * format \"yyyy-MM-dd HHmm\". It attempts to parse the string into a LocalDateTime object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"     * If the parsing fails due to a formatting error, the method returns {@code null}.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"     * @param dateTime The date and time string to parse, expected to be in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"     * @return A LocalDateTime object representing the specified date and time, or {@code null}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"     *         if the string cannot be parsed due to formatting issues.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"     * @throws DateTimeParseException if the dateTime string does not conform to the expected format,","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"     *         this exception is caught within the method and results in a {@code null} return.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"    private LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"            return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"            return null;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"     * Formats a LocalDateTime object into a more readable string.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"     * If dateTime is null, \"Invalid time\" is returned.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blobfish465"},"content":"     * @param dateTime The LocalDateTime object to format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blobfish465"},"content":"     * @return A formatted string representing the date and time, or \"Invalid time\" if dateTime is null.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"blobfish465"},"content":"    private String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blobfish465"},"content":"        return (dateTime !\u003d null)","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blobfish465"},"content":"                ? dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\"))","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blobfish465"},"content":"                : \"Invalid time\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blobfish465"},"content":"     * Provides a string representation of this event including its description and formatted start and end times.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blobfish465"},"content":"     * @return A string describing the event, including its status, description, and start/end times.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"blobfish465"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"blobfish465"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"blobfish465"},"content":"                + formatDateTime(startDateTime)","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"blobfish465"},"content":"                + \" to: \"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"blobfish465"},"content":"                + formatDateTime(endDateTime) + \")\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"blobfish465"},"content":"     * Returns a string formatted for file storage, including the event type, status, description,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"blobfish465"},"content":"     * and formatted start and end times.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"blobfish465"},"content":"     * @return A string formatted for saving to a file.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"blobfish465"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"blobfish465"},"content":"        return \"E | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"blobfish465"},"content":"                + (startDateTime !\u003d null","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"blobfish465"},"content":"                    ? startDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"blobfish465"},"content":"                    : \"undefined\")","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"blobfish465"},"content":"                + \" | \"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"blobfish465"},"content":"                + (endDateTime !\u003d null","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"blobfish465"},"content":"                    ? endDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"blobfish465"},"content":"                    : \"undefined\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"blobfish465":98}},{"path":"src/main/java/blob/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.model;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":" * Represents an abstract base class for different types of tasks.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":" * This class provides common functionality for tasks such as marking them as done or not done,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":" * and defining how they are represented as strings.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"    protected String description;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"     * Get task description","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"        return description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"    public void markDone() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"     * Marks this task as not done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"    public void unmarkDone() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"     * Returns the status icon indicating whether the task is done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"     * @return A string representing the task\u0027s completion status (\"[X] \" for done, \"[ ] \" for not done).","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"        return (isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"     * This method must be overridden in subclasses to provide specific details about the task type.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blobfish465"},"content":"     * @return A string representing the task, including its status and description.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blobfish465"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blobfish465"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blobfish465"},"content":"     * Converts the task into a string format suitable for file storage.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blobfish465"},"content":"     * This method must be implemented by subclasses to adapt to their specific storage format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blobfish465"},"content":"     * @return A string formatted for file storage.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blobfish465"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"blobfish465"},"content":"     * Parses a formatted string to create a specific Task object.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"blobfish465"},"content":"     * The string format should be appropriate to the type of task being created.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"blobfish465"},"content":"     * @param line A string representing the task in a file storage format.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"blobfish465"},"content":"     * @return A Task object corresponding to the provided string, or null if the string is invalid.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"blobfish465"},"content":"    public static Task parse(String line) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"blobfish465"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"blobfish465"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"blobfish465"},"content":"            System.out.println(\"Skipping invalid or incomplete line: \" + line);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"blobfish465"},"content":"            return null;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"blobfish465"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"blobfish465"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"blobfish465"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"blobfish465"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"blobfish465"},"content":"        switch (type) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"blobfish465"},"content":"        case \"T\":","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"blobfish465"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"blobfish465"},"content":"            break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"blobfish465"},"content":"        case \"D\":","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"blobfish465"},"content":"            String time \u003d parts[3].trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"blobfish465"},"content":"            task \u003d new Deadline(description, time);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"blobfish465"},"content":"            break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"blobfish465"},"content":"        case \"E\":","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"blobfish465"},"content":"            if (parts.length \u003c 5) return null;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"blobfish465"},"content":"            String startTime \u003d parts[3].trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"blobfish465"},"content":"            String endTime \u003d parts[4].trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"blobfish465"},"content":"            task \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"blobfish465"},"content":"            break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"blobfish465"},"content":"        default:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"blobfish465"},"content":"            System.out.println(\"Unknown task type: \" + type);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"blobfish465"},"content":"        if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"blobfish465"},"content":"            task.markDone();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"blobfish465"},"content":"        assert task !\u003d null : \"Task object should not be null if data is valid\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"blobfish465"},"content":"        return task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"blobfish465":117}},{"path":"src/main/java/blob/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.model;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":" * Represents a \"to-do\" task, a basic type of task without any associated time constraints.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":" * This class provides specific string representations for displaying and storing to-do tasks.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"     * Constructs a new ToDo object with the given description.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"        super(description);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"        assert description !\u003d null \u0026\u0026 !description.isEmpty()","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"                : \"Description of a ToDo cannot be null or empty\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"     * Returns a string representation of the to-do task, prefixed with \"[T]\" to indicate","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"     * it is a to-do task, followed by the base task representation which includes the status icon and description.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"     * @return A formatted string representing the to-do task with its completion status and description.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     * Converts the to-do task into a string format suitable for file storage.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"     * This format includes the task type \"T\", its completion status (1 for done, 0 for not done),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"     * and the task description.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"     * @return A string formatted for saving the task to a file, which includes the type, status, and description.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"blobfish465":41}},{"path":"src/main/java/blob/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.parser;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.command.AddCommand;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.command.Command;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import blob.command.DeleteCommand;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import blob.command.ExitCommand;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import blob.command.FindCommand;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"import blob.command.ListCommand;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"import blob.command.MarkCommand;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"import blob.command.UnmarkCommand;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"import blob.exception.BlobExceptions;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"import blob.model.Deadline;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"import blob.model.Event;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"import blob.model.ToDo;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":" * Parses user input into specific command objects that can be executed by the application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":" * This class translates string input into actionable commands by identifying keywords","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":" * and necessary parameters to construct command instances.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"public class Parser {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"     * Parses the input string to determine which type of command to create and execute.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"     * @param input The full string input by the user.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"     * @return Command The specific command object that corresponds to the user input.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.UnknownCommandException If the command type is not recognized.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.EmptyDescriptionException If the command requires a description which is not provided.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.IllegalFormatException If the input does not match the expected format for the command.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     * @throws BlobExceptions.WrongTaskIndexException If the command includes an index that is not a valid integer or out of bounds.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"    public Command parse(String input) throws BlobExceptions.UnknownCommandException,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"            BlobExceptions.EmptyDescriptionException, BlobExceptions.IllegalFormatException,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"            BlobExceptions.WrongTaskIndexException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"        String[] segments \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"        String commandType \u003d segments[0];","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"        String arguments \u003d segments.length \u003e 1 ? segments[1] : \"\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"        switch (commandType) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"        case \"bye\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"        case \"list\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"            if (!arguments.isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"                throw new BlobExceptions.IllegalFormatException(\"The \u0027list\u0027 command does not take any arguments.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"            return new ListCommand();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"                throw new BlobExceptions.IllegalFormatException(\"Usage: mark \u003ctask number\u003e\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"                int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"                throw new BlobExceptions.WrongTaskIndexException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blobfish465"},"content":"        case \"unmark\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blobfish465"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blobfish465"},"content":"                throw new BlobExceptions.IllegalFormatException(\"Usage: unmark \u003ctask number\u003e\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"blobfish465"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blobfish465"},"content":"                int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blobfish465"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blobfish465"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blobfish465"},"content":"                throw new BlobExceptions.WrongTaskIndexException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blobfish465"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blobfish465"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blobfish465"},"content":"                throw new BlobExceptions.EmptyDescriptionException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blobfish465"},"content":"            return new AddCommand(new ToDo(arguments));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"blobfish465"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"blobfish465"},"content":"            if (!arguments.contains(\"/by\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"blobfish465"},"content":"                throw new BlobExceptions.IllegalFormatException(\"Usage: deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"blobfish465"},"content":"            String[] deadlineParts \u003d arguments.split(\" /by \");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"blobfish465"},"content":"            if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"blobfish465"},"content":"                throw new BlobExceptions.IllegalFormatException(\"deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"blobfish465"},"content":"            return new AddCommand(new Deadline(deadlineParts[0], deadlineParts[1]));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"blobfish465"},"content":"        case \"event\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"blobfish465"},"content":"            String[] eventParts \u003d arguments.split(\" /from | /to \");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"blobfish465"},"content":"            if (eventParts.length \u003c 3) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"blobfish465"},"content":"                throw new BlobExceptions.IllegalFormatException(\"event \u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"blobfish465"},"content":"            return new AddCommand(new Event(eventParts[0], eventParts[1], eventParts[2]));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"blobfish465"},"content":"        case \"delete\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"blobfish465"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"blobfish465"},"content":"                throw new BlobExceptions.IllegalFormatException(\"Usage: delete \u003ctask number\u003e\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"blobfish465"},"content":"            try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"blobfish465"},"content":"                int delIndex \u003d Integer.parseInt(arguments);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"blobfish465"},"content":"                return new DeleteCommand(delIndex);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"blobfish465"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"blobfish465"},"content":"                throw new BlobExceptions.WrongTaskIndexException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"blobfish465"},"content":"        case \"find\":","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"blobfish465"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"blobfish465"},"content":"                throw new BlobExceptions.IllegalFormatException(\"Usage: find \u003cword\u003e\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"blobfish465"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"blobfish465"},"content":"        default:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"blobfish465"},"content":"            throw new BlobExceptions.UnknownCommandException();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"blobfish465":108}},{"path":"src/main/java/blob/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.storage;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.model.Task;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import java.io.File;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":" * Handles the storage operations for tasks, allowing tasks to be loaded from","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":" * and saved to a file.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"public class Storage {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"     * Constructs a new Storage object to manage file operations for tasks.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     * Loads tasks from the specified file path into an ArrayList.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     * If the file does not exist, it returns an empty ArrayList.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"     * @throws IOException If an I/O error occurs while reading from the file.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"            return tasks;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"            String line;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"                Task task \u003d Task.parse(line);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"        return tasks;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"     * Saves the list of tasks to the file at the specified file path.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"     * Each task is converted to a formatted string suitable for file storage.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blobfish465"},"content":"     * @param tasks The ArrayList of Task objects to be saved.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blobfish465"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"blobfish465"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blobfish465"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blobfish465"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blobfish465"},"content":"                String taskData \u003d task.toFileFormat();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blobfish465"},"content":"                assert taskData !\u003d null \u0026\u0026 !taskData.isEmpty()","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blobfish465"},"content":"                        : \"Task data to be saved should not be null or empty\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blobfish465"},"content":"                writer.write(taskData + \"\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"blobfish465":72}},{"path":"src/main/java/blob/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.ui;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.model.Task;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.TaskList;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import java.util.List;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":" * Handles all user interface operations for the Blob application.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":" * This class manages inputs and outputs, interacting directly with the user.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":" * It supports both console-based interaction and GUI by storing output messages.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"public class Ui {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"    private StringBuilder output;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"     * Constructs a new {@code Ui} object, initializing the scanner to read user input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"     * It also initializes an output buffer to store messages for GUI interactions.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"    public Ui() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"        this.output \u003d new StringBuilder();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"     * Adds a message to the output buffer.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"     * This is used for GUI interaction where the response needs to be returned as a string.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     * @param message The message to add to the output buffer.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"    private void appendMessage(String message) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"        if (output.length() \u003e 0) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"            output.append(\"\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"        output.append(message);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"     * Retrieves and clears the current output buffer.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"     * This is used in the GUI to fetch accumulated messages for display.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"     * @return The accumulated messages as a single string.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"    public String getOutput() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"        String result \u003d output.toString();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"        output.setLength(0); // Clear the buffer","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"        return result;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blobfish465"},"content":"     * Reads a command from the user, displaying a prompt on the console.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blobfish465"},"content":"     * @return The trimmed command input from the user.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blobfish465"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blobfish465"},"content":"        System.out.print(\"Enter command: \");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blobfish465"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"blobfish465"},"content":"     * Displays a greeting message to the user when the application starts.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blobfish465"},"content":"    public void showGreeting() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blobfish465"},"content":"        appendMessage(\"Hello! I\u0027m Blob\\nWhat can I do for you?\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blobfish465"},"content":"     * Displays a farewell message to the user when the application terminates.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blobfish465"},"content":"    public void showFarewell() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blobfish465"},"content":"        appendMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"blobfish465"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"blobfish465"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"blobfish465"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"blobfish465"},"content":"        appendMessage(\"Error: \" + message);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"blobfish465"},"content":"     * Displays all tasks currently in the task list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"blobfish465"},"content":"     * @param tasks The TaskList containing the tasks to be displayed.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"blobfish465"},"content":"    public void showTasks(TaskList tasks) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"blobfish465"},"content":"        List\u003cTask\u003e list \u003d tasks.getTasks();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"blobfish465"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"blobfish465"},"content":"            appendMessage(\"Your task list has no task! Add some tasks to it!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"blobfish465"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"blobfish465"},"content":"            appendMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"blobfish465"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"blobfish465"},"content":"                appendMessage((i + 1) + \". \" + list.get(i));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"blobfish465"},"content":"     * Displays a confirmation message when a task is added, showing the task and the new total number of tasks.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"blobfish465"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"blobfish465"},"content":"     * @param totalTasks The total number of tasks in the list after adding the new task.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"blobfish465"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"blobfish465"},"content":"        appendMessage(\"Got it. I\u0027ve added this task:\\n  \" + task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"blobfish465"},"content":"        appendMessage(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"blobfish465"},"content":"     * Displays a confirmation message when a task is deleted, showing the removed task and the new total number of tasks.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"blobfish465"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"blobfish465"},"content":"     * @param totalTasks The total number of tasks in the list after removing the task.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"blobfish465"},"content":"    public void showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"blobfish465"},"content":"        appendMessage(\"Noted. I\u0027ve removed this task:\\n  \" + task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"blobfish465"},"content":"        appendMessage(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"blobfish465"},"content":"     * Displays a message when a task is marked as done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"blobfish465"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"blobfish465"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"blobfish465"},"content":"        appendMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"blobfish465"},"content":"     * Displays a message when a task is marked as not done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"blobfish465"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"blobfish465"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"blobfish465"},"content":"        appendMessage(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"blobfish465"},"content":"     * Displays tasks that match the searched word to the user.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"blobfish465"},"content":"     * @param matchingTasks A list of matching tasks to display.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"blobfish465"},"content":"    public void showMatchingTasks(List\u003cString\u003e matchingTasks) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"blobfish465"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"blobfish465"},"content":"            appendMessage(\"No matching tasks found.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"blobfish465"},"content":"        } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"blobfish465"},"content":"            appendMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"blobfish465"},"content":"            for (String task : matchingTasks) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"blobfish465"},"content":"                appendMessage(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"blobfish465"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"blobfish465"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"blobfish465"},"content":"     * Closes the scanner when the application is terminated, to free up resources.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"blobfish465"},"content":"    public void closeScanner() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"blobfish465"},"content":"        scanner.close();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"blobfish465":165}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"blobfish465":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"\u003c!--","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"    MainWindow.fxml","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"    This file defines the layout for the main user interface of the Blob chatbot application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"    It includes the chat display, user input field, and send button.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"--\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"            fx:controller\u003d\"blob.controller.MainWindow\"\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"blobfish465":51}},{"path":"src/test/java/blob/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.model.Task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.model.ToDo;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":" * Tests for the TaskList class.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":" * These tests verify the functionality of adding and managing tasks within the TaskList.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"     * Sets up a new TaskList before each test to ensure test isolation.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"    void setUp() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"     * Tests that a valid task can be successfully added to the TaskList.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"     * This test ensures that the TaskList correctly adds a task and that","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"     * the task is stored correctly within the list.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"    void addTask_validTask_taskAdded() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"        Task task \u003d new ToDo(\"Read book\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"        assertEquals(1, taskList.getTasks().size());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"        assertEquals(task, taskList.getTasks().get(0));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"blobfish465":38}},{"path":"src/test/java/blob/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"package blob.parser;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"import blob.command.AddCommand;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"import blob.command.Command;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"import blob.exception.BlobExceptions;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"/**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":" * Tests for the Parser class.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":" * These tests validate the functionality of the Parser class,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":" * ensuring it correctly interprets and converts input strings into Command objects.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":" */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"class ParserTest {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blobfish465"},"content":"     * Test if parsing a valid \"todo\" input string correctly returns an AddCommand object.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blobfish465"},"content":"     * This test ensures that the parser can handle valid \"todo\" commands and","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"     * properly creates an AddCommand.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blobfish465"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blobfish465"},"content":"     * @throws Exception if an error occurs during the parsing process.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blobfish465"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blobfish465"},"content":"    void parse_validTodoInput_returnsAddCommand() throws Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blobfish465"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"        String input \u003d \"todo read book\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blobfish465"},"content":"        Command command \u003d parser.parse(input);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blobfish465"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blobfish465"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blobfish465"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blobfish465"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blobfish465"},"content":"     * Test if parsing an invalid input string results in an UnknownCommandException.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blobfish465"},"content":"     * This test checks the parser\u0027s ability to handle unrecognized commands","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blobfish465"},"content":"     * and throw the appropriate exception.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blobfish465"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blobfish465"},"content":"    @Test","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blobfish465"},"content":"    void parse_invalidInput_throwsUnknownCommandException() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blobfish465"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blobfish465"},"content":"        String input \u003d \"random invalid input\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blobfish465"},"content":"        assertThrows(BlobExceptions.UnknownCommandException.class, () -\u003e {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blobfish465"},"content":"            parser.parse(input);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blobfish465"},"content":"        });","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blobfish465"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blobfish465"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"blobfish465":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"blobfish465"},"content":"todo","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blobfish465"},"content":"list","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blobfish465"},"content":"todo read book","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blobfish465"},"content":"list","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blobfish465"},"content":"mark 1","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blobfish465"},"content":"mark 2","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blobfish465"},"content":"unmark 3","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blobfish465"},"content":"mark 0","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blobfish465"},"content":"todo clean house","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blobfish465"},"content":"deadline prepare presentation","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blobfish465"},"content":"deadline prepare presentation /by 2025-03-05","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blobfish465"},"content":"deadline submit report /by 2025-03-01 1700","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blobfish465"},"content":"event team meeting /from 2025-03-01 1700","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blobfish465"},"content":"event team meeting /from 2025-03-01 1700 /to 2025-03-01 2000","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blobfish465"},"content":"list","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blobfish465"},"content":"delete 5","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blobfish465"},"content":"delete 4","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blobfish465"},"content":"blah","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blobfish465"},"content":"bye","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"blobfish465":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blobfish465"},"content":"java -classpath ../bin Blob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blobfish465"},"content":"diff -u ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"blobfish465":2,"-":36}}]
