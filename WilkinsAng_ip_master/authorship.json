[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"    mainClass.set(\"mona.ui.Launcher\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"    archiveBaseName \u003d \"Mona\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"    archiveVersion \u003d \"1.0\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"checkstyle {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"# Mona User Guide","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":1,"-":29}},{"path":"src/main/java/mona/Mona.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import mona.command.Command;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.parser.Parser;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import mona.storage.Storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"import mona.ui.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":" * The main class that runs the Mona chatbot.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":" * Handles user interaction, command execution, and data storage.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"public class Mona {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"     * Initializes the Mona chatbot with a given file path for task storage.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    public Mona(String filePath) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"        storage \u003d new Storage(ui, filePath);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"        tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"     * Parses the given input and executes the corresponding command,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"     * returning the command\u0027s reply message.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"     * @param input The user input to parse and execute.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"     * @return The reply message associated with the command.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"            assert c !\u003d null : \"Command should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"            return c.getReply();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"        } catch (MonaException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"            return ui.showErrorMessage(e);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"     * Retrieves the initial greeting message displayed to the user.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"     * @return The greeting message as a String.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"    public static String greet() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"        return Ui.greet();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":60}},{"path":"src/main/java/mona/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.command;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import mona.storage.Storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import mona.ui.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":" * Represents a command that adds a task to the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"    private Task task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"     * Creates a new command that adds the given task to the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"     * @param task the task to be added to the task list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"        super();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"     * Executes the command by adding the task to the task list,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"     * saving the updated list to storage, and displaying feedback to the user.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasks The task list to which the task will be added.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"        storage.saveData(tasks);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"        setReply(ui.showAddTask(task, tasks.getSize()));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":42}},{"path":"src/main/java/mona/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.command;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import mona.storage.Storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.ui.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":" * Represents a command that ends the program.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"    private String reply;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"     * Executes the command by setting the exit flag to true and displaying","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"     * a goodbye message to the user.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasks   The task list, which is not used in this command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"     * @param storage The storage handler, which is not used in this command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"        setReply(ui.bye());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":27}},{"path":"src/main/java/mona/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.command;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import mona.storage.Storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import mona.ui.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":" * Each specific command will extend this class and implement the execute method.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"    private String reply;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"     * Executes the command, performing necessary actions on the task list, user interface, and storage.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasks   The task list to operate on.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"     * @param storage The storage handler to save or load data.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If an error occurs during execution.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws MonaException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"     * Retrieves the reply message associated with the command.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"     * @return The reply message as a String.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"    public String getReply() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"        assert reply !\u003d null : \"Reply should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"        return reply;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"    };","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"     * Sets the reply message associated with the command.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"     * @param reply The reply message as a String.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"    public void setReply(String reply) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"        this.reply \u003d reply;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":45}},{"path":"src/main/java/mona/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.command;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":" * Represents the different commands that can be executed by the application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"public enum Commands {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"    TODO,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"    DEADLINE,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"    EVENT,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"    DELETE,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"    MARK,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"    UNMARK,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"    LIST,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"    FIND,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"    BYE;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     * Converts a string representation of a command into a corresponding {@code Commands} enum.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"     * @param command The string representation of the command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"     * @return The corresponding {@code Commands} enum.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException.UnknownCommandException If the string does not","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"     *      correspond to a valid command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"    public static Commands fromString(String command) throws MonaException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"            return Commands.valueOf(command.toUpperCase());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.UnknownCommandException(command);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"     * Returns a string containing all available commands.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"     * @return A formatted string containing all supported commands.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"    public static String allCommands() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"        StringBuilder commands \u003d new StringBuilder();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"        for (Commands command : Commands.values()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"            commands.append(\"\\n\").append(command.name());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"        return commands.toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":46}},{"path":"src/main/java/mona/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.command;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import mona.storage.Storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import mona.ui.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"     * Creates a new DeleteCommand with specified task index.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     * @param index The index of the task to delete (0-based).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"        super();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"        this.taskIndex \u003d index;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"     * Executes the command by deleting the task at the given index from the task list,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"     * saving the updated list to storage, and displaying feedback to the user.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasks The task list to delete the task from.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If the index is out of bounds or the task is not found.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MonaException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.TaskNotFoundException(taskIndex + 1);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"        Task task \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"        storage.saveData(tasks);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"        setReply(ui.showDeleteTask(taskIndex, task, tasks.getSize()));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":51}},{"path":"src/main/java/mona/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.command;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import mona.storage.Storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"import mona.ui.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":" * Represents a command to search for tasks that match the given search query.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"    private final String[] queries;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     * Constructor.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"     * @param queries The search query to match.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"    public FindCommand(String ... queries) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"        this.queries \u003d queries;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"     * Executes the command by displaying the search results.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasks   The task list to search.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"     * @param storage The storage handler, which is not used in this command.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If an error occurs while searching.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MonaException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"        ArrayList\u003cTask\u003e results \u003d tasks.findResults(queries);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"        setReply(ui.showFindResults(results, queries));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":43}},{"path":"src/main/java/mona/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.command;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import mona.storage.Storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import mona.ui.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":" * Represents a command that lists all tasks in the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"     * Executes the command by displaying all tasks in the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasks   The task list to display.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"     * @param storage The storage handler, which is not used in this command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If an error occurs while retrieving tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MonaException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"        setReply(ui.showAllTasks(tasks.getTaskList()));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":26}},{"path":"src/main/java/mona/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.command;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import mona.storage.Storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import mona.ui.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"     * @param index The index of the task to mark as done (0-based).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"        super();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"        this.taskIndex \u003d index;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"     * Executes the command by marking the specified task as done,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"     * saving the updated list to storage, and displaying feedback to the user.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasks   The task list containing the task to mark.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException.TaskNotFoundException If the specified task index is out of bounds.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException.TaskAlreadyDoneException If the task is already marked as done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MonaException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.TaskNotFoundException(taskIndex + 1);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"        Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"        if (!task.isDone()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"        } else {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.TaskAlreadyDoneException(task);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"        storage.saveData(tasks);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"        setReply(ui.showMarkMessage(task));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":55}},{"path":"src/main/java/mona/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.command;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import mona.storage.Storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import mona.ui.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":" * Represents a command to mark a task as not done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"     * Constructs an UnmarkCommand with the specified task index.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"     * @param index The index of the task to mark as not done (0-based).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"        super();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"        this.taskIndex \u003d index;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"     * Executes the command by marking the specified task as not done,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"     * saving the updated list to storage, and displaying feedback to the user.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasks   The task list containing the task to unmark.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException.TaskNotFoundException If the specified task index is out of bounds.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException.TaskAlreadyUndoneException If the task is already marked as not done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MonaException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.TaskNotFoundException(taskIndex + 1);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"        Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"        if (task.isDone()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"            task.markAsUndone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"        } else {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.TaskAlreadyUndoneException(task);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"        storage.saveData(tasks);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"        setReply(ui.showUnmarkMessage(task));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":56}},{"path":"src/main/java/mona/exception/MonaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.exception;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import mona.command.Commands;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":" * Exception class for handling various types of exceptions in the application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"public class MonaException extends Exception {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"    public MonaException(String message) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"        super(message);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"     * Exception thrown when an unknown command is encountered.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"    public static class UnknownCommandException extends MonaException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"        /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"         * Constructs a new UnknownCommandException with the specified command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"         *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"         * @param command the unknown command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"         */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"        public UnknownCommandException(String command) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"            super((\"MErroW? What kind of command is /%s/? That ain\u0027t one of my Phantom Thief tricks, Joker!\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"                    + \"Check that your input is one of these and try again:\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"                    + \"%s\").formatted(command, Commands.allCommands()));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"     * Exception thrown when a task number is expected but not provided.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"    public static class EmptyTaskNumberException extends MonaException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"        /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"         * Constructs a new EmptyTaskNumberException with the specified command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"         *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"         * @param command The command that requires a task number.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"         */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"        public EmptyTaskNumberException(String command) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"            super(\"Eh?! You didn\u0027t give me a task number! Try again and give me a valid number!\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"                    + \"Write in this format: %s \u003cnumber\u003e\".formatted(command));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"     * This exception is thrown when a description is required for a command but","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"     * is not provided.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"    public static class EmptyDescriptionException extends MonaException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"        /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"         * Constructs a new {@code EmptyDescriptionException} with the specified","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"         * command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"         *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"         * @param command The command that requires a description.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"         */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"        public EmptyDescriptionException(String command) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"            super(((command.equals(\"find\")","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"                    ? \"C\u0027mon, Joker! You forgot to tell me what to find! \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"                    : \"C\u0027mon, Joker! You forgot to tell me what the %s is! \")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WilkinsAng"},"content":"                    + \"I may be amazing, but I can\u0027t read minds!\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WilkinsAng"},"content":"                    + \"Write in this format: %s \u003cdescription\u003e\")","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WilkinsAng"},"content":"                    .formatted(command, command));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WilkinsAng"},"content":"     * Exception thrown when a deadline task lacks a date.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WilkinsAng"},"content":"    public static class EmptyDeadlineException extends MonaException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WilkinsAng"},"content":"        /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WilkinsAng"},"content":"         * Constructs a new EmptyDeadlineException.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WilkinsAng"},"content":"         */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WilkinsAng"},"content":"        public EmptyDeadlineException() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WilkinsAng"},"content":"            super(\"Wait a sec, Joker! You can\u0027t set a deadline without a date! \"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WilkinsAng"},"content":"                    + \"What, you expecting me to guess? Give me the details!\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WilkinsAng"},"content":"                    + \"Write in this format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WilkinsAng"},"content":"     * Exception thrown when an event lacks a complete time range.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WilkinsAng"},"content":"    public static class IncompleteDateException extends MonaException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WilkinsAng"},"content":"        /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WilkinsAng"},"content":"         * Constructs a new IncompleteDateException.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WilkinsAng"},"content":"         */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WilkinsAng"},"content":"        public IncompleteDateException() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WilkinsAng"},"content":"            super(\"Mrrrow?! An event without a full time range?! \"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WilkinsAng"},"content":"                    + \"Even *Mona the Magnificent* can’t work with that! Give me a proper time, Joker!\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WilkinsAng"},"content":"                    + \"Write in this format: event \u003cdescription\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WilkinsAng"},"content":"     * Exception thrown when an invalid task number is provided.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WilkinsAng"},"content":"    public static class TaskNotFoundException extends MonaException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WilkinsAng"},"content":"        /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WilkinsAng"},"content":"         * Constructs a new TaskNotFoundException with the specified index.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WilkinsAng"},"content":"         *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WilkinsAng"},"content":"         * @param index the index of the task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WilkinsAng"},"content":"         */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WilkinsAng"},"content":"        public TaskNotFoundException(int index) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WilkinsAng"},"content":"            super(\"Eh?! There is no task #%d! Are you seeing things, Joker?\\n\".formatted(index)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WilkinsAng"},"content":"                    + \"Use /list/ to check your tasks again and give me a valid number!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WilkinsAng"},"content":"     * Exception thrown when an invalid task number is provided.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WilkinsAng"},"content":"    public static class InvalidTaskNumberException extends MonaException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WilkinsAng"},"content":"        /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WilkinsAng"},"content":"         * Constructs a new InvalidTaskNumberException with the specified number.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WilkinsAng"},"content":"         *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WilkinsAng"},"content":"         * @param number the invalid task number.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WilkinsAng"},"content":"         */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WilkinsAng"},"content":"        public InvalidTaskNumberException(String number) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WilkinsAng"},"content":"            super(\"Whoa Joker! /%s/ is not a valid task number! Try again and give me a valid number!\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WilkinsAng"},"content":"                    .formatted(number));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WilkinsAng"},"content":"     * Exception thrown when the save file is corrupted.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WilkinsAng"},"content":"    public static class CorruptedFileException extends MonaException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WilkinsAng"},"content":"        /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WilkinsAng"},"content":"         * Constructs a new CorruptedFileException.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WilkinsAng"},"content":"         */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WilkinsAng"},"content":"        public CorruptedFileException() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WilkinsAng"},"content":"            super(\"Mrow?! This save file is a total mess! Looks like it\u0027s corrupted, Joker!\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"WilkinsAng"},"content":"                    + \" I\u0027ll have to start fresh.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"WilkinsAng"},"content":"     * Exception thrown when an invalid date format is provided.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"WilkinsAng"},"content":"    public static class InvalidDateFormatException extends MonaException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"WilkinsAng"},"content":"        /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"WilkinsAng"},"content":"         * Constructs a new InvalidDateFormatException.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"WilkinsAng"},"content":"         */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"WilkinsAng"},"content":"        public InvalidDateFormatException() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"WilkinsAng"},"content":"            super(\"Mrow?! That doesn\u0027t look right, Joker! Try this format instead: \u002715 Jul 2024 11:30pm\u0027.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"WilkinsAng"},"content":"     * Exception thrown when trying to mark a task that is already done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"WilkinsAng"},"content":"    public static class TaskAlreadyDoneException extends MonaException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"WilkinsAng"},"content":"        /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"WilkinsAng"},"content":"         * Constructs a new TaskAlreadyDoneException with the specified task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"WilkinsAng"},"content":"         *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"WilkinsAng"},"content":"         * @param task the task that is already done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"WilkinsAng"},"content":"         */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"WilkinsAng"},"content":"        public TaskAlreadyDoneException(Task task) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"WilkinsAng"},"content":"            super(\"Hey! It\u0027s already done!! No need to mark it again!\\n%s\".formatted(task));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"WilkinsAng"},"content":"     * Exception thrown when trying to mark a task that is already undone.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"WilkinsAng"},"content":"    public static class TaskAlreadyUndoneException extends MonaException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"WilkinsAng"},"content":"        /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"WilkinsAng"},"content":"         * Constructs a new TaskAlreadyUndoneException with the specified task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"WilkinsAng"},"content":"         *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"WilkinsAng"},"content":"         * @param task the task that is already undone.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"WilkinsAng"},"content":"         */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"WilkinsAng"},"content":"        public TaskAlreadyUndoneException(Task task) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"WilkinsAng"},"content":"            super(\"Hey! Did you forget or something?! This task is already incomplete!\\n%s\".formatted(task));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":187}},{"path":"src/main/java/mona/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.parser;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.command.AddTaskCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import mona.command.ByeCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import mona.command.Command;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"import mona.command.Commands;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"import mona.command.DeleteCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"import mona.command.FindCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"import mona.command.ListCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"import mona.command.MarkCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"import mona.command.UnmarkCommand;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Deadline;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Event;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Todo;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":" * Parses user input messages and converts them into executable commands.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"public class Parser {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"     * Parses a user input message and returns the corresponding command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"     * @param message The user input message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"     * @return The corresponding {@code Command} object.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If the input message is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"    public static Command parse(String message) throws MonaException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"        String[] splitMsg \u003d message.split(\" \");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"        Commands command \u003d Commands.fromString(splitMsg[0]);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"        switch (command) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"        case LIST:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"            return createListCommand();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"        case MARK:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"        case UNMARK:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"            return handleMark(splitMsg);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"        case TODO:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"            return handleTodo(message);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"        case DEADLINE:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"            return handleDeadline(message);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"        case EVENT:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"            return handleEvent(message);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"        case DELETE:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"            return handleDelete(message);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"        case FIND:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"            return handleFind(splitMsg);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"        case BYE:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"            return createByeCommand();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"        default:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.UnknownCommandException(message);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"     * Creates a command to list all tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"     * @return a new {@link ListCommand}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"    public static ListCommand createListCommand() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WilkinsAng"},"content":"        return new ListCommand();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WilkinsAng"},"content":"     * Creates a command to exit the program.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WilkinsAng"},"content":"     * @return a new {@link ByeCommand}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WilkinsAng"},"content":"    public static ByeCommand createByeCommand() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WilkinsAng"},"content":"        return new ByeCommand();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WilkinsAng"},"content":"     * Handles marking or unmarking a task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WilkinsAng"},"content":"     * @param parts The user input split into words.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WilkinsAng"},"content":"     * @return a new {@link MarkCommand} or an {@link UnmarkCommand}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException if the input is invalid","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WilkinsAng"},"content":"    public static Command handleMark(String[] parts) throws MonaException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WilkinsAng"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.EmptyTaskNumberException(\"mark\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WilkinsAng"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WilkinsAng"},"content":"            int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WilkinsAng"},"content":"            if (parts[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WilkinsAng"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WilkinsAng"},"content":"            } else {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WilkinsAng"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WilkinsAng"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WilkinsAng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.InvalidTaskNumberException(parts[1]);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WilkinsAng"},"content":"     * Handles adding a new Todo task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WilkinsAng"},"content":"     * @param message The user input message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WilkinsAng"},"content":"     * @return a new {@link AddTaskCommand} for a {@link Todo}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException if the input is invalid","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WilkinsAng"},"content":"    public static AddTaskCommand handleTodo(String message) throws MonaException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WilkinsAng"},"content":"        if (message.length() \u003c\u003d 5) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.EmptyDescriptionException(\"todo\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WilkinsAng"},"content":"        String taskName \u003d message.substring(5);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WilkinsAng"},"content":"        if (taskName.isBlank()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.EmptyDescriptionException(\"todo\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WilkinsAng"},"content":"        return new AddTaskCommand(new Todo(taskName));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WilkinsAng"},"content":"     * Handles adding a new Deadline task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WilkinsAng"},"content":"     * @param message The user input message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WilkinsAng"},"content":"     * @return a new {@link AddTaskCommand} for a {@link Deadline}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException if the input is invalid","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WilkinsAng"},"content":"    public static AddTaskCommand handleDeadline(String message) throws MonaException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WilkinsAng"},"content":"        String[] parts \u003d message.split(\" /by\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WilkinsAng"},"content":"        //If the first part is just the word \"deadline\", then there is no description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WilkinsAng"},"content":"        if (parts[0].strip().equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.EmptyDescriptionException(\"deadline task\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WilkinsAng"},"content":"        //i.e. 2nd half doesn\u0027t exist.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WilkinsAng"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.EmptyDeadlineException();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WilkinsAng"},"content":"        String taskName \u003d parts[0].substring(9);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WilkinsAng"},"content":"        String date \u003d parts[1].strip();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WilkinsAng"},"content":"        return new AddTaskCommand(new Deadline(taskName, date));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"WilkinsAng"},"content":"     * Handles adding a new Event task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"WilkinsAng"},"content":"     * @param message The user input message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"WilkinsAng"},"content":"     * @return a new {@link AddTaskCommand} for an {@link Event}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException if the input is invalid","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"WilkinsAng"},"content":"    public static AddTaskCommand handleEvent(String message) throws MonaException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"WilkinsAng"},"content":"        String[] parts \u003d message.split(\" /from\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"WilkinsAng"},"content":"        if (parts[0].strip().equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.EmptyDescriptionException(\"event\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"WilkinsAng"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.IncompleteDateException();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"WilkinsAng"},"content":"        String[] dates \u003d parts[1].split(\"/to \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"WilkinsAng"},"content":"        if (dates.length \u003c 2 || dates[0].isBlank() || dates[1].isBlank()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.IncompleteDateException();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"WilkinsAng"},"content":"        String taskName \u003d parts[0].substring(6);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"WilkinsAng"},"content":"        String from \u003d dates[0].strip();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"WilkinsAng"},"content":"        String to \u003d dates[1].strip();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"WilkinsAng"},"content":"        return new AddTaskCommand(new Event(taskName, from, to));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"WilkinsAng"},"content":"     * Handles deleting a task from the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"WilkinsAng"},"content":"     * @param message The user input message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"WilkinsAng"},"content":"     * @return a new {@link DeleteCommand}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException if the input is invalid","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"WilkinsAng"},"content":"    public static DeleteCommand handleDelete(String message) throws MonaException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"WilkinsAng"},"content":"        String[] parts \u003d message.split(\" \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"WilkinsAng"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.EmptyTaskNumberException(\"delete\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"WilkinsAng"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"WilkinsAng"},"content":"            int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"WilkinsAng"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"WilkinsAng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.InvalidTaskNumberException(parts[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"WilkinsAng"},"content":"     * Handles finding tasks in the task list by keyword.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"WilkinsAng"},"content":"     * @param parts The user input split into words.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"WilkinsAng"},"content":"     * @return a new {@link FindCommand}","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException if the input is invalid","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"WilkinsAng"},"content":"    public static FindCommand handleFind(String[] parts) throws MonaException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"WilkinsAng"},"content":"        if (parts.length \u003c 2 || parts[1].isBlank()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.EmptyDescriptionException(\"find\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"WilkinsAng"},"content":"        ArrayList\u003cString\u003e queries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"WilkinsAng"},"content":"        for (String part : parts) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"WilkinsAng"},"content":"            if (!part.equals(parts[0])) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"WilkinsAng"},"content":"                queries.add(part);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"WilkinsAng"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"WilkinsAng"},"content":"        return new FindCommand(queries.toArray(new String[0]));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":207}},{"path":"src/main/java/mona/parser/StorageParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.parser;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Deadline;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Event;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Todo;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":" * Parses a line of the save file into a {@link Task} object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"public class StorageParser {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"     * Parses a line of the save file into a {@link Task} object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"     * @param line The line of the storage file to parse.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"     * @return The parsed {@link Task} object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If the line is malformed.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"    public static Task parseToTask(String line) throws MonaException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"        String[] splitLine \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"        String command \u003d splitLine[0];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"        boolean isDone \u003d splitLine[1].equals(\"1\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"        String description \u003d splitLine[2];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"        switch (command) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"        case \"T\":","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"            return handleTodo(splitLine, description, isDone);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"        case \"D\":","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"            return handleDeadline(splitLine, description, isDone);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"        case \"E\":","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"            return handleEvent(splitLine, description, isDone);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"        default:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.CorruptedFileException();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"     * Parses a line of the storage file into a {@link Todo} object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"     * @param splitLine Array of Strings representing [task type, completion status, description].","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"     * @return The parsed {@link Todo} object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If the line is malformed.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"    public static Todo handleTodo(String[] splitLine, String description, boolean isDone)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"            throws MonaException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"        if (splitLine.length !\u003d 3) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.CorruptedFileException();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"        return new Todo(description, isDone);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"     * Parses a line of the storage file into a {@link Deadline} object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"     * @param splitLine Array of Strings representing [task type, completion status, description, deadline].","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"     * @return The parsed {@link Deadline} object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If the line is malformed.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"    public static Deadline handleDeadline(String[] splitLine, String description, boolean isDone)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WilkinsAng"},"content":"            throws MonaException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WilkinsAng"},"content":"        if (splitLine.length !\u003d 4) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.CorruptedFileException();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WilkinsAng"},"content":"        String doneBy \u003d splitLine[3];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WilkinsAng"},"content":"        return new Deadline(description, isDone, doneBy);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WilkinsAng"},"content":"     * Parses a line of the storage file into a {@link Event} object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WilkinsAng"},"content":"     * @param splitLine Array of Strings representing [task type, completion status,","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WilkinsAng"},"content":"     *                  description, start date, end date].","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WilkinsAng"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WilkinsAng"},"content":"     * @return The parsed {@link Event} object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If the line is malformed.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WilkinsAng"},"content":"    public static Event handleEvent(String[] splitLine, String description, boolean isDone)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WilkinsAng"},"content":"            throws MonaException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WilkinsAng"},"content":"        if (splitLine.length !\u003d 5) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.CorruptedFileException();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WilkinsAng"},"content":"        String[] startEnd \u003d splitLine[3].split(\" - \");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WilkinsAng"},"content":"        String startFrom \u003d startEnd[0];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WilkinsAng"},"content":"        String endBy \u003d startEnd[1];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WilkinsAng"},"content":"        return new Event(description, isDone, startFrom, endBy);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":90}},{"path":"src/main/java/mona/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import java.io.File;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"import mona.parser.StorageParser;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"import mona.ui.Ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":" * Handles loading and saving tasks to a local file for persistence.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"public class Storage {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"    private static final File DEFAULT_DIRECTORY \u003d new File(\"./data\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"    private static final File DEFAULT_DATA \u003d new File(DEFAULT_DIRECTORY, \"Mona.txt\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"    private final File directory;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    private final File data;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"     * Constructor for Storage object using the default file path.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"    public Storage() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"        this.directory \u003d DEFAULT_DIRECTORY;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"        this.data \u003d DEFAULT_DATA;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"     * Constructor for Storage object with a custom file path.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"     * @param filepath The filepath to use for storing tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"    public Storage(Ui ui, String filepath) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"        assert filepath !\u003d null \u0026\u0026 !filepath.isBlank() : \"Storage filepath cannot be null or empty\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"        this.directory \u003d DEFAULT_DIRECTORY;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"        String[] filepathSplit \u003d filepath.split(\"/\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"        // If the filepath is empty, use the default filename","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"        String filename \u003d filepathSplit.length \u003e 1 ? filepathSplit[1] : \"Mona.txt\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"        this.data \u003d new File(DEFAULT_DIRECTORY, filename);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"     * Loads tasks from file.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"     * @return A list of tasks retrieved from storage.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"    public ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"            ensureStorageExist();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"            assert data.exists() : \"Storage file does not exist\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"            assert directory.exists() : \"Storage directory does not exist\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WilkinsAng"},"content":"            return loadTasksFromFile();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WilkinsAng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WilkinsAng"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WilkinsAng"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WilkinsAng"},"content":"        } catch (MonaException monaException) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WilkinsAng"},"content":"            ui.showErrorMessage(monaException);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WilkinsAng"},"content":"            resetFile();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WilkinsAng"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WilkinsAng"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasks The task list to be saved.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WilkinsAng"},"content":"    public void saveData(TaskList tasks) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WilkinsAng"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WilkinsAng"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WilkinsAng"},"content":"            FileWriter writer \u003d new FileWriter(data);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WilkinsAng"},"content":"            for (Task task : tasks.getTaskList()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WilkinsAng"},"content":"                writer.write(task.toSaveFormat() + \"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WilkinsAng"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WilkinsAng"},"content":"            writer.close();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WilkinsAng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WilkinsAng"},"content":"            ui.showSavingError(e);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WilkinsAng"},"content":"     * Resets the file to a blank state in case of corruption.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WilkinsAng"},"content":"    private void resetFile() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WilkinsAng"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WilkinsAng"},"content":"            Files.deleteIfExists(data.toPath());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WilkinsAng"},"content":"            data.createNewFile(); // Create a fresh new file","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WilkinsAng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WilkinsAng"},"content":"            System.out.println(\"Gah! I tried resetting, but I got this error: \\\"\" + e.getMessage() + \"\\\"!\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WilkinsAng"},"content":"     * Checks if the storage directory exists and creates it if not.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WilkinsAng"},"content":"     * Ensures the file exists and creates it if it does not.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WilkinsAng"},"content":"     * @throws IOException if unable to create the file or directory","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WilkinsAng"},"content":"    private void ensureStorageExist() throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WilkinsAng"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WilkinsAng"},"content":"            directory.mkdirs();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WilkinsAng"},"content":"        if (!data.exists()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WilkinsAng"},"content":"            data.createNewFile();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WilkinsAng"},"content":"     * Loads the tasks stored in the file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WilkinsAng"},"content":"     * @return the list of tasks loaded from the file","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WilkinsAng"},"content":"     * @throws IOException if unable to read the file","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException if the file is corrupted","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WilkinsAng"},"content":"    private ArrayList\u003cTask\u003e loadTasksFromFile() throws IOException, MonaException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WilkinsAng"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WilkinsAng"},"content":"        Scanner contents \u003d new Scanner(data);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WilkinsAng"},"content":"        while (contents.hasNextLine()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WilkinsAng"},"content":"            String line \u003d contents.nextLine();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WilkinsAng"},"content":"            Task taskToAdd \u003d StorageParser.parseToTask(line);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WilkinsAng"},"content":"            tasks.add(taskToAdd);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WilkinsAng"},"content":"        contents.close();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WilkinsAng"},"content":"        return tasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":141}},{"path":"src/main/java/mona/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"public class Deadline extends TimedTask {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"    protected LocalDateTime doneBy;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"     * Constructs a Deadline Task with the specified description and due date.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"     * @param doneBy      The due date in string format.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If the date format is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"    public Deadline(String description, String doneBy) throws MonaException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"        this.doneBy \u003d TimedTask.parseDateTime(doneBy);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"     * Constructs a Deadline with the specified description, completion status, and due date.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"     * Used for loading a saved task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"     * @param doneBy      The due date in string format.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If the date format is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"    public Deadline(String description, boolean isDone, String doneBy) throws MonaException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"        this.doneBy \u003d TimedTask.parseDateTime(doneBy);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"        assert doneBy !\u003d null : \"Done by date should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"        return \"[D]\" + super.toString() + \" (by: %s)\".formatted(TimedTask.formatDateTime(doneBy));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"     * Returns the formatted string for saving to a file.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"     * @return The save format string of the deadline task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"        assert doneBy !\u003d null : \"Done by date should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"        String formattedDate \u003d doneBy.format(TimedTask.INPUT_FORMATTER);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"        return \"D | %s | %s | %s\".formatted(status, description, formattedDate);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":62}},{"path":"src/main/java/mona/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":" * Represents an event task with a start and end date and time.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"public class Event extends TimedTask {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"    protected LocalDateTime startFrom;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"    protected LocalDateTime endBy;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"     * Constructs an Event task with the given description, start time, and end time.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"     * @param startFrom The start time of the event.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     * @param endBy The end time of the event.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If the start time or end time is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"    public Event(String description, String startFrom, String endBy) throws MonaException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"        this.startFrom \u003d TimedTask.parseDateTime(startFrom);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"        this.endBy \u003d TimedTask.parseDateTime(endBy);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"     * Constructs an Event task with the given description, start time, end time, and completion status.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"     * Used for loading a saved task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"     * @param startFrom The start time of the event.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"     * @param endBy The end time of the event.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException If the start time or end time is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"    public Event(String description, boolean isDone, String startFrom, String endBy) throws MonaException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"        this.startFrom \u003d TimedTask.parseDateTime(startFrom);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"        this.endBy \u003d TimedTask.parseDateTime(endBy);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"     * @return The formatted Event task string.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"        assert startFrom !\u003d null \u0026\u0026 endBy !\u003d null : \"Start and end times should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"        return \"[E]\" + super.toString() + \" (from: %s, to: %s)\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"                .formatted(TimedTask.formatDateTime(startFrom), TimedTask.formatDateTime(endBy));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"     * Returns a formatted string for saving to a file.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"     * @return The save format string for file storage.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WilkinsAng"},"content":"        assert startFrom !\u003d null \u0026\u0026 endBy !\u003d null : \"Start and end times should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WilkinsAng"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WilkinsAng"},"content":"        String formattedStart \u003d startFrom.format(TimedTask.INPUT_FORMATTER);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WilkinsAng"},"content":"        String formattedEnd \u003d endBy.format(TimedTask.INPUT_FORMATTER);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WilkinsAng"},"content":"        return \"E | %s | %s | %s - %s\".formatted(status, description, formattedStart, formattedEnd);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":69}},{"path":"src/main/java/mona/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":" * This is an abstract class that serves as a base for different types of tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"    protected String description;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"     * Creates a new task with the given description.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"        this.description \u003d description.strip();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"     * Creates a new task with the given description and completion status.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"     * @param isDone Whether the task is marked as done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"        this.description \u003d description.strip();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"     * Checks whether the task is completed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"        return isDone;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"     * Returns a status icon representing the task\u0027s completion state.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"     * @return \"X\" if the task is done, otherwise \" \".","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"     * Marks the task as undone.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WilkinsAng"},"content":"     * Returns the string representation of the task, including its status icon and description..","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WilkinsAng"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WilkinsAng"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WilkinsAng"},"content":"        return \"[%s] %s\".formatted(getStatusIcon(), description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WilkinsAng"},"content":"     * Returns a formatted string for saving to a file.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WilkinsAng"},"content":"     * @return the save format string for file storage.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WilkinsAng"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":81}},{"path":"src/main/java/mona/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":" * Manages a list of tasks, providing methods to add, remove, and retrieve tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"public class TaskList {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"     * Creates an empty task list with an initial capacity of 100 tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"     * Creates a task list with a pre-existing list of tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasks The tasks to add to the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"     * Adds the given task to the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"     * Removes and returns a task from the list at the specified index.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"     * @return The task that was removed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"     * Returns the list of all tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"     * @return The list containing all tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"        return tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"     * Returns a specific task at the given index.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"     * @param index The index of the task to return (0-based).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"     * @return The task at the given index.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WilkinsAng"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WilkinsAng"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WilkinsAng"},"content":"     * Returns the total number of tasks in the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WilkinsAng"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WilkinsAng"},"content":"    public int getSize() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WilkinsAng"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WilkinsAng"},"content":"     * Searches for tasks that contain any of the given keywords in their descriptions.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WilkinsAng"},"content":"     * This method performs a case-insensitive search and returns all matching tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WilkinsAng"},"content":"     * If no keywords are given, the method returns an empty list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WilkinsAng"},"content":"     * @param queries Zero or more keywords to search for in task descriptions.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WilkinsAng"},"content":"     * @return A {@code ArrayList} of tasks whose descriptions contain at least one of the given keywords.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WilkinsAng"},"content":"    public ArrayList\u003cTask\u003e findResults(String ... queries) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WilkinsAng"},"content":"        assert queries !\u003d null : \"queries should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WilkinsAng"},"content":"        return tasks.stream()","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WilkinsAng"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WilkinsAng"},"content":"                    String description \u003d task.description.toLowerCase();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WilkinsAng"},"content":"                    return Arrays.stream(queries)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WilkinsAng"},"content":"                            .map(String::toLowerCase)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WilkinsAng"},"content":"                            .anyMatch(description::contains);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WilkinsAng"},"content":"                })","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WilkinsAng"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":97}},{"path":"src/main/java/mona/task/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":" * Represents a task with a date and time component.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":" * Provides utility methods for parsing and formatting date-time values.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"public abstract class TimedTask extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"    protected static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy h:mma\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"    protected static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy MMM d, h:mma\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"     * Constructs a new TimedTask with the given description.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"    public TimedTask(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"     * Constructs a new TimedTask with the given description and completion status.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"     * Used for loading a saved task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"     * @param isDone Whether the task is initially marked as done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"    public TimedTask(String description, boolean isDone) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"     * Parses a date-time string into a {@code LocalDateTime} object.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"     * @param date The string to parse.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"     * @return A {@code LocalDateTime} object representing the parsed date and time.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"     * @throws MonaException.InvalidDateFormatException If the date format is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"    public static LocalDateTime parseDateTime(String date) throws MonaException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"            return LocalDateTime.parse(date, INPUT_FORMATTER);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"            throw new MonaException.InvalidDateFormatException();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"     * Formats a {@code LocalDateTime} object into a human-readable string.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"     * @param date The {@code LocalDateTime} object to format.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"     * @return A formatted date-time string in the format {@code \"yyyy MMM d, h:mma\"} (e.g., \"2024 Jul 15, 11:30PM\"),","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"     *         or \"No date provided\" if {@code date} is {@code null}.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"    public static String formatDateTime(LocalDateTime date) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"        assert date !\u003d null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"        return date.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":63}},{"path":"src/main/java/mona/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":" * Represents a Todo task with a description and completion status.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"     * Creates a new Todo task with the given description.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     * Creates a new Todo task with the given description and completion status.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"     * Used for loading a saved task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"     * @param isDone Whether the task is marked as done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"     * @return A formatted string including task type, status, and description.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"     * Returns a formatted string for saving the Todo task to storage.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"     * @return A string formatted for file storage.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"        return \"T | %s | %s\".formatted(status, description);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":49}},{"path":"src/main/java/mona/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"    @FXML","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"    @FXML","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"    private void flip() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"    public static DialogBox getMonaDialog(String text, Image img) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"        db.flip();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"        return db;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":60}},{"path":"src/main/java/mona/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"public class Launcher {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":12}},{"path":"src/main/java/mona/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"import mona.Mona;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":" * A GUI for Mona using FXML.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"    private Mona mona \u003d new Mona(\"data/Mona.txt\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMona(mona);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"            stage.show();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":32}},{"path":"src/main/java/mona/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"import mona.Mona;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"    @FXML","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"    @FXML","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"    @FXML","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"    @FXML","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    private Mona mona;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserImage.png\"));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"    private Image monaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/MonaImage.png\"));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"     * Called automatically by JavaFX when the FXML file is loaded.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"     * It sets up the scroll pane to scroll to the bottom whenever the dialog container\u0027s height changes.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"     * It also adds the initial greeting message to the dialog container.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"    @FXML","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"                DialogBox.getMonaDialog(Mona.greet(), monaImage)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"        );","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"    /** Injects the Mona instance */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"    public void setMona(Mona m) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"        assert m !\u003d null : \"Mona should not be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"        mona \u003d m;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"     * Processes user input by creating dialog boxes for the user input and Mona\u0027s response.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"     * Adds these dialog boxes to the dialog container and clears the user input field.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"     * Exits the application if the user input is \"bye\".","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"    @FXML","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"        String response \u003d mona.getResponse(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"                DialogBox.getMonaDialog(response, monaImage)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"        );","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":64}},{"path":"src/main/java/mona/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":" * Handles user interactions, including displaying messages and reading user input.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"public class Ui {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"     * Displays the greeting message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"    public static String greet() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"        return \"What\u0027s up, Joker? What are we going to do today?\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"     * Displays the farewell message and closes the input scanner.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"    public String bye() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"        return \"We should get ready for tomorrow. Goodnight, Joker. Meowww.\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"                + \"You can close me now!\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"     * Displays a message when a task is added.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"     * @param task    The task that has been added.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasksSize The size of the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"    public String showAddTask(Task task, int tasksSize) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"        return String.format(\"Okie Joker, I\u0027ll help you remember to:\\n %s.\\n\", task.toString())","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"                + String.format(\"Don\u0027t forget, you have %d tasks now.\\n\", tasksSize);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"     * Displays a message when a task is deleted.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"     * @param index   The index of the task in the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"     * @param task    The task that has been deleted.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"     * @param taskSize The size of the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"    public String showDeleteTask(int index, Task task, int taskSize) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"        return String.format(\"Task #%d has been erased from existence, Joker!\\n\", index + 1)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"                + String.format(\" %s\\nwon\u0027t be bothering us anymore!\\n\", task)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"                + String.format(\"Don\u0027t forget, you have %d tasks now.\\n\", taskSize);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"     * Displays all tasks currently in the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasks The task list to be displayed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"    public String showAllTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WilkinsAng"},"content":"        String result \u003d \"Alright Joker, here is what you need to do:\\n\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WilkinsAng"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WilkinsAng"},"content":"            return result + \"Waittt, you didn\u0027t tell me anything!!\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WilkinsAng"},"content":"        return result","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WilkinsAng"},"content":"                + IntStream.range(0, tasks.size())","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WilkinsAng"},"content":"                .mapToObj(i -\u003e (i + 1) + \": \" + tasks.get(i))","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WilkinsAng"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WilkinsAng"},"content":"     * Displays the results of a search query on the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WilkinsAng"},"content":"     * @param tasks The list of tasks that match the search query.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WilkinsAng"},"content":"     * @param queries The search query entered by the user.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WilkinsAng"},"content":"     * @return A message to display to the user summarizing the search results.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WilkinsAng"},"content":"    public String showFindResults(ArrayList\u003cTask\u003e tasks, String... queries) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WilkinsAng"},"content":"        String formattedQueries \u003d Arrays.stream(queries)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WilkinsAng"},"content":"                .map(query -\u003e \"\u0027\" + query + \"\u0027\")","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WilkinsAng"},"content":"                .collect(Collectors.joining(\", \"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WilkinsAng"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WilkinsAng"},"content":"            return String.format(\"Mrrrow?! %s? I don’t see anything like that in your list, Joker! \\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WilkinsAng"},"content":"                    + \"Maybe you should actually write it down first, huh?\\n\", formattedQueries);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WilkinsAng"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WilkinsAng"},"content":"        return String.format(String.format(\"HaHA! A flawless search, executed purrfectly!\\n\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WilkinsAng"},"content":"                        + \"Here are the results for %s, Joker!:\\n%s\",","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WilkinsAng"},"content":"                formattedQueries,","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WilkinsAng"},"content":"                IntStream.range(0, tasks.size())","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WilkinsAng"},"content":"                        .mapToObj(i -\u003e (i + 1) + \": \" + tasks.get(i))","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WilkinsAng"},"content":"                        .collect(Collectors.joining(\"\\n\"))","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WilkinsAng"},"content":"        ));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WilkinsAng"},"content":"     * Displays a message when a task is marked as completed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WilkinsAng"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WilkinsAng"},"content":"    public String showMarkMessage(Task task) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WilkinsAng"},"content":"        return \"All right, Joker! Very smooth!\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WilkinsAng"},"content":"                + task.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WilkinsAng"},"content":"     * Displays a message when a task is marked as incomplete.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WilkinsAng"},"content":"     * @param task The task that has been marked as undone.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WilkinsAng"},"content":"    public String showUnmarkMessage(Task task) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WilkinsAng"},"content":"        return \"What?! You changed your mind, Joker...?!\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WilkinsAng"},"content":"                + task.toString();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WilkinsAng"},"content":"     * Displays an error message.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WilkinsAng"},"content":"     * @param e The MonaException thrown.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WilkinsAng"},"content":"     * @return The error message.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WilkinsAng"},"content":"    public String showErrorMessage(MonaException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WilkinsAng"},"content":"        return e.getMessage();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WilkinsAng"},"content":"     * Returns a message to be displayed when an IO error occurs during loading from file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WilkinsAng"},"content":"     * @param e The IOException thrown.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WilkinsAng"},"content":"     * @return A message describing the error to the user.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WilkinsAng"},"content":"    public String showLoadingError(IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WilkinsAng"},"content":"        return \"Whoa! Looks like a glitch in the system! I got this message: *\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WilkinsAng"},"content":"                + e.getMessage() + \"*. Better check the files, Joker!\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"WilkinsAng"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"WilkinsAng"},"content":"     * Returns a message to be displayed when an IO error occurs during saving to file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"WilkinsAng"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"WilkinsAng"},"content":"     * @param e The IOException thrown.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"WilkinsAng"},"content":"     * @return A message describing the error to the user.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"WilkinsAng"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"WilkinsAng"},"content":"    public String showSavingError(IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"WilkinsAng"},"content":"        return \"Whoa! Looks like a something went wrong while saving, Joker! I got this message: *\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"WilkinsAng"},"content":"                + e.getMessage();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":153}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"            fx:controller\u003d\"mona.ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":44}},{"path":"src/test/java/mona/command/AddTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.command;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"import mona.storage.Storage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import mona.ui.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Todo;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"    @Test","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"    public void testExecute() throws Exception {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(new Todo(\"Test\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"        addTaskCommand.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"        assertEquals(\"[T][ ] Test\", tasks.getTask(0).toString());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":26}},{"path":"src/test/java/mona/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"package mona.task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"import mona.task.Todo;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"public class TodoTest {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WilkinsAng"},"content":"    @Test","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WilkinsAng"},"content":"    void testTodoConstructor() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WilkinsAng"},"content":"        Todo todo \u003d new Todo(\"Test\"); //Create test Task","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WilkinsAng"},"content":"        //Verify task name is set correctly","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WilkinsAng"},"content":"        assertEquals(\"Test\", todo.description);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WilkinsAng"},"content":"        assertFalse(todo.isDone, \"New tasks should be marked as not done by default\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"    @Test","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WilkinsAng"},"content":"    void testMarkAsDone() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WilkinsAng"},"content":"        Todo todo \u003d new Todo(\"Test\"); //Create test Task","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WilkinsAng"},"content":"        //Verify task is done","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WilkinsAng"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WilkinsAng"},"content":"        assertTrue(todo.isDone, \"Task should be marked as done after calling markAsDone()\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WilkinsAng"},"content":"    @Test","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WilkinsAng"},"content":"    void testMarkAsUndone() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WilkinsAng"},"content":"        Todo todo \u003d new Todo(\"Test\"); //Create test Task","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WilkinsAng"},"content":"        //Verify task can be undone","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WilkinsAng"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WilkinsAng"},"content":"        todo.markAsUndone();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WilkinsAng"},"content":"        assertFalse(todo.isDone, \"Task should be marked as not done after calling markAsUndone()\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WilkinsAng"},"content":"    @Test","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WilkinsAng"},"content":"    public void testToString() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WilkinsAng"},"content":"        Todo todo \u003d new Todo(\"Test\"); //Create test Task","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WilkinsAng"},"content":"        //Verify the full output format","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WilkinsAng"},"content":"        assertEquals(\"[T][ ] Test\", todo.toString());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WilkinsAng"},"content":"        //Verify task is not done initially","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WilkinsAng"},"content":"        assertFalse(todo.isDone, \"New tasks should be marked as not done by default\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WilkinsAng"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WilkinsAng"},"content":"        assertEquals(\"[T][X] Test\", todo.toString(), \"Incorrect string representation for a completed task\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WilkinsAng"},"content":"    @Test","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WilkinsAng"},"content":"    void testToSaveFormat() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WilkinsAng"},"content":"        Todo todo \u003d new Todo(\"Test\"); //Create test Task","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WilkinsAng"},"content":"        //Verify that the save format is correct when the task is incomplete","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WilkinsAng"},"content":"        assertEquals(\"T | 0 | Test\", todo.toSaveFormat(), \"Incorrect save format for an incomplete task\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WilkinsAng"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WilkinsAng"},"content":"        //Verify that the save format is correct when the task is complete","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WilkinsAng"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WilkinsAng"},"content":"        assertEquals(\"T | 1 | Test\", todo.toSaveFormat(), \"Incorrect save format for a completed task\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WilkinsAng"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WilkinsAng"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":67}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WilkinsAng"},"content":"todo read book","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WilkinsAng"},"content":"deadline return book /by 06 Jul 2025 12:00pm","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WilkinsAng"},"content":"event project meeting /from 6 Aug 2025 2:00pm /to 6 Aug 2025 4:00pm","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WilkinsAng"},"content":"mark 1","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WilkinsAng"},"content":"todo join sports club","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WilkinsAng"},"content":"mark 4","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WilkinsAng"},"content":"todo borrow book","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WilkinsAng"},"content":"list","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WilkinsAng"},"content":"todo","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WilkinsAng"},"content":"deadline return book /by","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WilkinsAng"},"content":"event consultation","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WilkinsAng"},"content":"delete 2","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WilkinsAng"},"content":"bye","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WilkinsAng"},"content":"java -classpath ../bin Mona \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"WilkinsAng":1,"-":37}}]
