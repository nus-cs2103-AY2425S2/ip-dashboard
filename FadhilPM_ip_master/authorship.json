[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"# Declaration of AI Usage","lastModifiedDate":"2025-02-27T14:50:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T14:50:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"Claude 3.5-Sonnet and Claude 3.7-Sonnet were used in conjunction with aider in the final stages of this project. ","lastModifiedDate":"2025-02-27T14:50:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T14:50:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"Usage was limited to the following ","lastModifiedDate":"2025-02-27T14:50:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T14:50:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"* detection of cyclic dependencies","lastModifiedDate":"2025-02-27T14:50:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"* code analysis","lastModifiedDate":"2025-02-27T14:50:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"* generation of Javadoc documentation ","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"* generation of user guide skeleton","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"* enforcement of Checkstyle compliance","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false}],"authorContributionMap":{"FadhilPM":11}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"# Bezdelnik","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"[Bezdelnik (en: Layabout)](https://www.youtube.com/watch?v\u003dAa4mlE4VlVk) is a greenfield Java project based on a template named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2025-01-24T14:18:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"Prerequisites: JDK 17, update IntelliJ to the most recent version.","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"1. Open the project into IntelliJ as follows:","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"1. After that, locate the `src/main/java/Bezdelnik.java` file, right-click it, and choose `Run Bezdelnik.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"   ________________________________________________________________________________________________________","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"   _____   _____   _____     _____     _____    ____    _       _   _   _     _   _   _ ","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"   |  ___| |  ___| |___  |   |  _  |   |  ___|  |  _ \\  | |     | | | | | |   / | | | / / ","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"   | |___  | |___     _| |   | | | |   | |___   | | | | | |___  | |_| | | |  // | | |/ /","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"   |  _  | |  ___|   |_  |  _| |_| |_  |  ___|  | | | | |  _  | |  _  | | | //| | |   (","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"   | |_| | | |___   ___| | |  _____  | | |___   | | | | | |_| | | | | | | |// | | | |\\ \\","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"   |_____| |_____| |_____| |_|     |_| |_____|  /_/ |_| |_____| |_| |_| |_ /  |_| |_| \\_\\ ","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"   What can I do for you?","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"   ________________________________________________________________________________________________________","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"FadhilPM":16,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-25T18:43:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T18:43:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T18:43:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"checkstyle {","lastModifiedDate":"2025-02-25T18:43:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"    toolVersion \u003d \u002710.21.2\u0027","lastModifiedDate":"2025-02-25T18:43:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"java {","lastModifiedDate":"2025-01-26T22:00:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"    toolchain {","lastModifiedDate":"2025-01-26T22:00:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"        languageVersion.set(JavaLanguageVersion.of(17))","lastModifiedDate":"2025-01-26T22:00:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-26T22:00:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-01-26T22:00:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T22:00:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"    mainClass.set(\"bezdelnik.Launcher\")","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"    archiveBaseName \u003d \"bezdelnik\"","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FadhilPM"},"content":"    manifest {","lastModifiedDate":"2025-01-26T22:00:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"FadhilPM"},"content":"        attributes \u0027Main-Class\u0027: \u0027bezdelnik.Launcher\u0027","lastModifiedDate":"2025-02-23T18:49:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-26T22:00:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"FadhilPM":30,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"# Bezdelnik User Guide","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"![Product screenshot](Ui.png)","lastModifiedDate":"2025-02-27T16:31:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27T16:31:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"Bezdelnik is a versatile task management application that helps you keep track of your todos, deadlines, and events. It features both a command-line interface and a graphical user interface, allowing you to manage your tasks efficiently.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"## Getting Started","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"To start Bezdelnik:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"- With GUI: Run `java -jar bezdelnik.jar`","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"- Without GUI: Run `java -jar bezdelnik.jar nogui`","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"Your tasks are automatically saved to `./data/output.dat` and loaded when you restart the application.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"## Command Guide","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"### Creating Tasks","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"#### Adding Todos","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"Todos are simple tasks without a specific deadline.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"todo Buy groceries","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"Expected output:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"added:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"[T] [] Buy groceries","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"You currently have 1 task(s)","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"#### Adding Deadlines","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"Deadlines are tasks with a specific due date and time.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"deadline Submit assignment /by 25/12/2025 1430","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"Expected output:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"added:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"[D] [] Submit assignment (by: 2025-12-25T14:30)","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"You currently have 2 task(s)","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"#### Adding Events","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"Events are tasks with a start and end time.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"event Team meeting /from 20/11/2025 0900 /to 20/11/2025 1000","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"Expected output:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"added:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FadhilPM"},"content":"[E] [] Team meeting (from: 2025-11-20T09:00 to: 2025-11-20T10:00)","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FadhilPM"},"content":"You currently have 3 task(s)","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"FadhilPM"},"content":"### Managing Tasks","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"FadhilPM"},"content":"#### Listing Tasks","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"FadhilPM"},"content":"View all your current tasks.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"FadhilPM"},"content":"list","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"FadhilPM"},"content":"Aliases: `l`, `ls`","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"FadhilPM"},"content":"Expected output:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"FadhilPM"},"content":"1. [T] [] Buy groceries","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"FadhilPM"},"content":"2. [D] [] Submit assignment (by: 2025-12-25T14:30)","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"FadhilPM"},"content":"3. [E] [] Team meeting (from: 2025-11-20T09:00 to: 2025-11-20T10:00)","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"FadhilPM"},"content":"#### Marking Tasks as Done","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"FadhilPM"},"content":"Mark a task as completed.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"FadhilPM"},"content":"mark 1","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"FadhilPM"},"content":"Expected output:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"FadhilPM"},"content":"I have marked this task as done.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"FadhilPM"},"content":"[T] [X] Buy groceries","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"FadhilPM"},"content":"#### Unmarking Tasks","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"FadhilPM"},"content":"Mark a completed task as not done.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"FadhilPM"},"content":"unmark 1","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"FadhilPM"},"content":"Aliases: `u`","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"FadhilPM"},"content":"Expected output:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"FadhilPM"},"content":"I have marked this task as undone.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"FadhilPM"},"content":"[T] [] Buy groceries","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"FadhilPM"},"content":"#### Removing Tasks","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"FadhilPM"},"content":"Delete a task from your list.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"FadhilPM"},"content":"remove 3","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"FadhilPM"},"content":"Aliases: `rm`, `rem`, `del`, `delete`","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"FadhilPM"},"content":"Expected output:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"FadhilPM"},"content":"I have deleted this task.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"FadhilPM"},"content":"[E] [] Team meeting (from: 2025-11-20T09:00 to: 2025-11-20T10:00)","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"FadhilPM"},"content":"#### Finding Tasks","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"FadhilPM"},"content":"Search for tasks containing specific text.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"FadhilPM"},"content":"find assignment","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"FadhilPM"},"content":"Aliases: `f`","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"FadhilPM"},"content":"Expected output:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"FadhilPM"},"content":"Found 1 matching task(s):","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"FadhilPM"},"content":"1. [D] [] Submit assignment (by: 2025-12-25T14:30)","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"FadhilPM"},"content":"#### Sorting Tasks","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"FadhilPM"},"content":"Sort your tasks by date/time.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"FadhilPM"},"content":"sort","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"FadhilPM"},"content":"Aliases: `s`","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"FadhilPM"},"content":"Expected output:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"FadhilPM"},"content":"3 task(s) sorted by time:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"FadhilPM"},"content":"1. [T] [] Buy groceries","lastModifiedDate":"2025-02-27T17:24:26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"FadhilPM"},"content":"2. [D] [] Submit assignment (by: 2025-12-25T14:30)","lastModifiedDate":"2025-02-27T17:24:26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"FadhilPM"},"content":"3. [E] [] Team meeting (from: 2025-11-20T09:00 to: 2025-11-20T10:00)","lastModifiedDate":"2025-02-27T17:24:26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T17:24:26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"FadhilPM"},"content":"#### Archiving Tasks","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"FadhilPM"},"content":"Save your current tasks to a file and start fresh.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"FadhilPM"},"content":"archive my_completed_tasks.dat","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"FadhilPM"},"content":"Aliases: `a`","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"FadhilPM"},"content":"Expected output:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"FadhilPM"},"content":"Task list archived to: ./data/my_completed_tasks.dat. You have turned over a new leaf.","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"FadhilPM"},"content":"### Exiting the Application","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"FadhilPM"},"content":"To exit Bezdelnik:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"FadhilPM"},"content":"bye","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"FadhilPM"},"content":"```","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"FadhilPM"},"content":"Aliases: `exit`","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"FadhilPM"},"content":"## Date and Time Format","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"FadhilPM"},"content":"All date and time inputs must follow this format:","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"FadhilPM"},"content":"- Date: `dd/MM/yyyy` (day/month/year)","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"FadhilPM"},"content":"- Time: `HHmm` (24-hour format without colon)","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"FadhilPM"},"content":"Example: `25/12/2025 1430` for December 25, 2025, at 2:30 PM","lastModifiedDate":"2025-02-27T15:03:22","isFullCredit":false}],"authorContributionMap":{"FadhilPM":157,"-":21}},{"path":"src/main/java/bezdelnik/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.ui.ConsoleUi;","lastModifiedDate":"2025-02-23T23:10:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.ui.Main;","lastModifiedDate":"2025-02-23T23:10:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * Main entry point for the Bezdelnik application.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":" * This class determines whether to launch the application with a GUI","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":" * or command-line interface based on the provided command-line arguments.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-13T12:58:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"public class Launcher {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"     * Main method that launches either the GUI or CLI version of Bezdelnik.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"     * If the first argument is \"nogui\", launches the command-line interface.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"     * Otherwise, launches the graphical user interface.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"     * @param args Command-line arguments, where args[0] can be \"nogui\" to launch CLI","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"        if (args.length \u003e\u003d 1 \u0026\u0026 args[0].equals(\"nogui\")) {","lastModifiedDate":"2025-02-23T19:46:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"            ConsoleUi.main(new String[0]);","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"        } else {","lastModifiedDate":"2025-02-23T19:56:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"            Application.launch(Main.class, args);","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-23T19:56:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false}],"authorContributionMap":{"FadhilPM":32}},{"path":"src/main/java/bezdelnik/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.tasks;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T20:44:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * A Deadline task contains a description and a due date/time.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-06T14:07:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a new Deadline with the given description and due date/time as a string.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"     * @param byString    The due date/time in the format dd/MM/yyyy HHmm.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"    public Deadline(String description, String byString) {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"        this(description, false, byString);","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a new Deadline with the given description and due date/time.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"     * @param by          The due date/time.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"        this(description, false, by);","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a new Deadline with the given description, status, and due date/time as a string.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"     * @param isDone      The completion status.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"     * @param byString    The due date/time in the format dd/MM/yyyy HHmm.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"    public Deadline(String description, boolean isDone, String byString) {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"        this.by \u003d LocalDateTime.parse(byString, formatter);","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a new Deadline with the given description, status, and due date/time.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FadhilPM"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"     * @param isDone      The completion status.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"     * @param by          The due date/time.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FadhilPM"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FadhilPM"},"content":"    public Task markAsDone() {","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FadhilPM"},"content":"        return new Deadline(description, true, by);","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FadhilPM"},"content":"    public Task markAsUndone() {","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"FadhilPM"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"FadhilPM"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"FadhilPM"},"content":"        return this.by;","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"FadhilPM"},"content":"    public String returnCommand() {","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"FadhilPM"},"content":"        return String.format(\"deadline %s /by %s\", description, by.format(formatter));","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"FadhilPM"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"FadhilPM"},"content":"        return String.format(\"[D] %s (by: %s)\", super.toString(), this.by);","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false}],"authorContributionMap":{"FadhilPM":78}},{"path":"src/main/java/bezdelnik/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.tasks;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T20:44:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * Represents an event task.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * An Event task contains a description and a start and end date/time.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-06T14:07:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a new Event with the given description, start, and end times as strings.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"     * @param from        The start date/time in the format dd/MM/yyyy HHmm.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"     * @param to          The end date/time in the format dd/MM/yyyy HHmm.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"        this(description, false, from, to);","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a new Event with the given description, start, and end times.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"     * @param from        The start date/time.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"     * @param to          The end date/time.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"        this(description, false, from, to);","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a new Event with the given description, status, and start/end times as strings.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"     * @param isDone      The completion status.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"     * @param from        The start date/time in the format dd/MM/yyyy HHmm.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"     * @param to          The end date/time in the format dd/MM/yyyy HHmm.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a new Event with the given description, status, and start/end times.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FadhilPM"},"content":"     * @param isDone      The completion status.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"     * @param from        The start date/time.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FadhilPM"},"content":"     * @param to          The end date/time.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FadhilPM"},"content":"    public Event(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"FadhilPM"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FadhilPM"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"FadhilPM"},"content":"    public Task markAsDone() {","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"FadhilPM"},"content":"        return new Event(description, true, from, to);","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"FadhilPM"},"content":"    public Task markAsUndone() {","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"FadhilPM"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"FadhilPM"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"FadhilPM"},"content":"        return this.from;","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"FadhilPM"},"content":"    public String returnCommand() {","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"FadhilPM"},"content":"        return String.format(\"event %s /from %s /to %s\", description, from.format(formatter), to.format(formatter));","lastModifiedDate":"2025-01-26T01:09:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"FadhilPM"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"FadhilPM"},"content":"        return String.format(\"[E] %s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false}],"authorContributionMap":{"FadhilPM":85}},{"path":"src/main/java/bezdelnik/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.tasks;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T20:44:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * Represents an abstract task in the Bezdelnik application.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * Each task has a description and a completion status.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2025-02-22T22:46:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"    protected final String description;","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"    protected final boolean isDone;","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T16:33:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a Task with the specified description and completion status.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"     * @param isDone      The completion status.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-21T16:33:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-21T17:55:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T17:55:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T17:55:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"     * Returns a new Task instance marked as done.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"     * @return A new Task with isDone set to true.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"    public abstract Task markAsDone();","lastModifiedDate":"2025-01-24T14:08:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T17:55:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"     * Returns a new Task instance marked as undone.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"     * @return A new Task with isDone set to false.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"    public abstract Task markAsUndone();","lastModifiedDate":"2025-01-24T14:08:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T16:33:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"     * @return True if the task is done, otherwise false.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-24T01:35:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"        return isDone;","lastModifiedDate":"2025-01-24T01:35:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-24T01:35:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-24T01:35:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"     * Checks if the task description contains the specified string.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"     * @param s The string to search for.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"     * @return True if the description contains the string, otherwise false.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"        return description.contains(s);","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FadhilPM"},"content":"     * Returns the command representation of this task.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"     * @return A string command to recreate this task.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FadhilPM"},"content":"    public abstract String returnCommand();","lastModifiedDate":"2025-01-24T14:08:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"FadhilPM"},"content":"    public abstract LocalDateTime getStartTime();","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"FadhilPM"},"content":"    public int compareTo(Task otherTask) {","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"FadhilPM"},"content":"        return otherTask.getStartTime().compareTo(this.getStartTime());","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-01-21T16:33:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"FadhilPM"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21T16:33:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"FadhilPM"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \"\", this.description);","lastModifiedDate":"2025-01-21T17:55:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T16:33:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-01-21T16:33:20","isFullCredit":false}],"authorContributionMap":{"FadhilPM":74}},{"path":"src/main/java/bezdelnik/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.tasks;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T20:44:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * Represents a simple Todo task.","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-06T14:07:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a new Todo with the given description.","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"        this(description, false);","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a new Todo with the given description and completion status.","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"     * @param isDone      The completion status.","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:55:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"    public Task markAsDone() {","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"        return new Todo(description, true);","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"    public Task markAsUndone() {","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"        return new Todo(description);","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"        return LocalDateTime.MAX;","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"    public String returnCommand() {","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"        return String.format(\"todo %s\", description);","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-01-21T21:50:01","isFullCredit":false}],"authorContributionMap":{"FadhilPM":48}},{"path":"src/main/java/bezdelnik/ui/ConsoleUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.ui;","lastModifiedDate":"2025-02-23T23:10:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.utils.Bezdelnik;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.utils.Pair;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" * Handles UI operations in CLI","lastModifiedDate":"2025-02-23T22:07:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"public class ConsoleUi {","lastModifiedDate":"2025-02-23T19:18:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"    private static final String divider \u003d \"_\".repeat(100);","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"    private static final String logo \u003d","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"        \" _____   _____   _____     _____     _____    ____    _       _   _   _     _   _   _ \\n\"","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"        + \"|  ___| |  ___| |___  |   |  _  |   |  ___|  |  _ \\\\  | |     | | | | | |   / | | | / / \\n\"","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"        + \"| |___  | |___     _| |   | | | |   | |___   | | | | | |___  | |_| | | |  // | | |/ /\\n\"","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"        + \"|  _  | |  ___|   |_  |  _| |_| |_  |  ___|  | | | | |  _  | |  _  | | | //| | |   (\\n\"","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"        + \"| |_| | | |___   ___| | |  _____  | | |___   | | | | | |_| | | | | | | |// | | | |\\\\ \\\\\\n\"","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"        + \"|_____| |_____| |_____| |_|     |_| |_____|  /_/ |_| |_____| |_| |_| |_ /  |_| |_| \\\\_\\\\ \";","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"    private static final String greeting \u003d String.format(\"%s\\nHello from\\n%s\\n\\nWhat can I do for you?\\n%s\",","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"                                                         \"_\".repeat(104), logo, \"_\".repeat(104));","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"    private static Bezdelnik bezdelnik \u003d new Bezdelnik();","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"        Pair\u003cString, Bezdelnik\u003e initialisedBezdelnik \u003d bezdelnik.initialise();","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"        String response \u003d initialisedBezdelnik.first();","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"        bezdelnik \u003d initialisedBezdelnik.second();","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"        inputLoop(response);","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"     * Processes the user input loop.","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"     * @param sessionStatus Initial session status message.","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"    private static void inputLoop(String sessionStatus) {","lastModifiedDate":"2025-02-23T22:07:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"        ConsoleUi.greet(sessionStatus);","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"        sc.useDelimiter(\"\\n\")","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"            .tokens()","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"            .map(input -\u003e input.strip())","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"            .takeWhile(input -\u003e !input.matches(\"(bye|(/)?ex(it)?)\"))","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"            .forEach(input -\u003e {","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"                Pair\u003cString, Bezdelnik\u003e response \u003d bezdelnik.getResponse(input);","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"                ConsoleUi.print(response.first());","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"                bezdelnik \u003d response.second();","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"            });","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"        sc.close();","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FadhilPM"},"content":"        ConsoleUi.bye();","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"     * Displays a greeting message along with the session status indicating if a data file was read","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FadhilPM"},"content":"     * @param sessionStatus The initial session status message.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FadhilPM"},"content":"    private static void greet(String sessionStatus) {","lastModifiedDate":"2025-02-23T22:07:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FadhilPM"},"content":"        System.out.println(greeting);","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FadhilPM"},"content":"        System.out.println(sessionStatus);","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FadhilPM"},"content":"    private static void bye() {","lastModifiedDate":"2025-02-23T22:07:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"FadhilPM"},"content":"        print(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"FadhilPM"},"content":"     * Prints the specified output message in a formatted manner.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"FadhilPM"},"content":"     * @param output The message to be printed.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"FadhilPM"},"content":"    private static void print(String output) {","lastModifiedDate":"2025-02-23T22:07:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"FadhilPM"},"content":"        System.out.println(responseFormat(output));","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"FadhilPM"},"content":"     * Formats the response with dividers.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"FadhilPM"},"content":"     * @param input The input message to format.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"FadhilPM"},"content":"     * @return A formatted string with dividers.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"FadhilPM"},"content":"    private static String responseFormat(String input) {","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"FadhilPM"},"content":"        return String.format(\"\\t%s\\n%s\\n\\t%s\", divider, input, divider);","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false}],"authorContributionMap":{"FadhilPM":84}},{"path":"src/main/java/bezdelnik/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.ui;","lastModifiedDate":"2025-02-23T23:10:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"    @FXML","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    @FXML","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"    private void flip() {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FadhilPM"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FadhilPM"},"content":"        db.flip();","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FadhilPM"},"content":"        return db;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false}],"authorContributionMap":{"FadhilPM":60}},{"path":"src/main/java/bezdelnik/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.ui;","lastModifiedDate":"2025-02-23T23:10:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.utils.Bezdelnik;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":" * A GUI for Bezdelnik using FXML.","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"    private Bezdelnik bezdelnik \u003d new Bezdelnik();","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBezdelnik(bezdelnik);","lastModifiedDate":"2025-02-13T12:58:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"            stage.setTitle(\"Bezdelnik\");","lastModifiedDate":"2025-02-27T16:24:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"            stage.show();","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false}],"authorContributionMap":{"FadhilPM":35}},{"path":"src/main/java/bezdelnik/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.ui;","lastModifiedDate":"2025-02-23T23:10:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.utils.Bezdelnik;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.utils.Pair;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-23T19:46:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":" * Controller for the main window of the Bezdelnik GUI.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":" * This class handles the interaction between the user and the Bezdelnik","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":" * application through the graphical user interface. It manages the display","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":" * of dialog messages and processes user input.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"    @FXML","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"    @FXML","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"    @FXML","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"    @FXML","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"    private Bezdelnik bezdelnik;","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bezdelnik.png\"));","lastModifiedDate":"2025-02-27T16:24:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Zvezda.png\"));","lastModifiedDate":"2025-02-27T16:24:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"     * Initializes the main window components.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"     * Sets up the scroll pane to automatically scroll to the bottom when new content is added,","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"     * configures the text field to trigger the send button on Enter key press, and","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"     * disables the send button when the input field is empty.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"    @FXML","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FadhilPM"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"        userInput.setOnAction(event -\u003e sendButton.fire());","lastModifiedDate":"2025-02-23T20:38:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T20:38:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"        // Listener for text field changes","lastModifiedDate":"2025-02-23T20:38:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"        userInput.textProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2025-02-23T20:38:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"            sendButton.setDisable(newValue.trim().isEmpty());","lastModifiedDate":"2025-02-23T20:38:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FadhilPM"},"content":"        });","lastModifiedDate":"2025-02-23T20:38:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FadhilPM"},"content":"     * Sets the Bezdelnik instance and initializes the chat with a welcome message.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"FadhilPM"},"content":"     * @param b The Bezdelnik instance to use for processing commands","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"FadhilPM"},"content":"    public void setBezdelnik(Bezdelnik b) {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"FadhilPM"},"content":"        Pair\u003cString, Bezdelnik\u003e initialisedBezdelnik \u003d b.initialise();","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"FadhilPM"},"content":"        String response \u003d initialisedBezdelnik.first();","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"FadhilPM"},"content":"        this.bezdelnik \u003d initialisedBezdelnik.second();","lastModifiedDate":"2025-02-23T22:07:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"FadhilPM"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2025-02-11T23:59:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"FadhilPM"},"content":"     * Handles user input from the text field.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"FadhilPM"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"FadhilPM"},"content":"     * Processes the input text, sends it to the Bezdelnik instance for execution,","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"FadhilPM"},"content":"     * and displays the response in the dialog container. Exits the application if","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"FadhilPM"},"content":"     * the input matches exit commands.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"FadhilPM"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"FadhilPM"},"content":"    @FXML","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"FadhilPM"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"FadhilPM"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"FadhilPM"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-23T19:46:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"FadhilPM"},"content":"        if (input.matches(\"(bye|(/)?ex(it)?)\")) {","lastModifiedDate":"2025-02-23T19:46:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"FadhilPM"},"content":"            Platform.exit();","lastModifiedDate":"2025-02-23T19:46:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"FadhilPM"},"content":"        } else {","lastModifiedDate":"2025-02-23T19:46:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"FadhilPM"},"content":"            Pair\u003cString, Bezdelnik\u003e response \u003d bezdelnik.getResponse(input);","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"FadhilPM"},"content":"            String toPrint \u003d response.first();","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"FadhilPM"},"content":"            this.bezdelnik \u003d response.second();","lastModifiedDate":"2025-02-23T22:07:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"FadhilPM"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"FadhilPM"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"FadhilPM"},"content":"                DialogBox.getDukeDialog(toPrint, dukeImage)","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"FadhilPM"},"content":"            );","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-23T19:46:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false}],"authorContributionMap":{"FadhilPM":96}},{"path":"src/main/java/bezdelnik/utils/ArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"class ArchiveCommand implements Command {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"    private final Taskman taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"    private final String path;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"    ArchiveCommand(Taskman taskman, String path) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"        this.taskman \u003d taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"        this.path \u003d path;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Taskman\u003e execute() throws BezdelnikException {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"            WriteStorage.writeTaskmanToFile(this.taskman, this.path);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"            String output \u003d String.format(\"\\tTask list archived to: %s. You have turned over a new leaf.\", this.path);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"            return new Pair\u003cString, Taskman\u003e(output, new Taskman());","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"        } catch (Throwable t) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"            throw new BezdelnikException(String.format(\"Unknown error accessing path: %s.\", this.path));","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":26}},{"path":"src/main/java/bezdelnik/utils/Bezdelnik.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T20:44:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * Main controller for the Bezdelnik task management application.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * Coordinates between UI, storage, and task management functionality.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" * Follows immutable design - all operations return new instances.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"public class Bezdelnik {","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"    private final Taskman taskman;","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"    private final String saveLocation;","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-21T16:33:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a Bezdelnik with default task manager and save location.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"    public Bezdelnik() {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"        this(new Taskman(), \"./data/output.dat\");","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-11T23:18:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:18:34","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a Bezdelnik with specified task manager and save location.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"     * @param taskman The task manager containing current tasks","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"     * @param saveLocation The file path for task storage","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"    public Bezdelnik(Taskman taskman, String saveLocation) {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"        this.taskman \u003d taskman;","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"        this.saveLocation \u003d saveLocation;","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-13T12:58:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"     * Attempts to load task data from save location.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"     * @return A Pair containing status message and new Bezdelnik instance","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-13T12:58:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Bezdelnik\u003e initialise() {","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"        Pair\u003cString, Taskman\u003e readAttempt;","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T22:07:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"            Stream\u003cString\u003e rawRead \u003d ReadStorage.readTaskmanFromFile(saveLocation);","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"            readAttempt \u003d streamToTaskman(rawRead, saveLocation);","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"            readAttempt \u003d new Pair\u003cString, Taskman\u003e(\"No prior data found, creating new session\", new Taskman());","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T22:07:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"        Taskman newTaskman \u003d readAttempt.second();","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"        return new Pair\u003cString, Bezdelnik\u003e(readAttempt.first(), new Bezdelnik(newTaskman, saveLocation));","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-11T23:18:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:18:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FadhilPM"},"content":"     * Processes user input command and returns response.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FadhilPM"},"content":"     * @param input The user input command","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FadhilPM"},"content":"     * @return A Pair containing response message and updated Bezdelnik instance","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Bezdelnik\u003e getResponse(String input) {","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"FadhilPM"},"content":"        String response;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FadhilPM"},"content":"        Taskman newTaskman;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"FadhilPM"},"content":"            Command parserOutput \u003d Parser.parse(input, taskman);","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"FadhilPM"},"content":"            Pair\u003cString, Taskman\u003e executionOutput \u003d parserOutput.execute();","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"FadhilPM"},"content":"            response \u003d executionOutput.first();","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"FadhilPM"},"content":"            newTaskman \u003d executionOutput.second();","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"FadhilPM"},"content":"        } catch (BezdelnikException be) {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"FadhilPM"},"content":"            newTaskman \u003d this.taskman;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"FadhilPM"},"content":"            response \u003d be.getMessage();","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T22:07:39","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"FadhilPM"},"content":"            WriteStorage.writeTaskmanToFile(newTaskman, saveLocation);","lastModifiedDate":"2025-02-25T18:47:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"FadhilPM"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2025-02-01T20:47:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"FadhilPM"},"content":"            System.out.println(String.format(\"Unknown exception when saving data.\", e.toString()));","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-01-22T20:17:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T22:07:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"FadhilPM"},"content":"        return new Pair\u003cString, Bezdelnik\u003e(response, new Bezdelnik(newTaskman, saveLocation));","lastModifiedDate":"2025-02-23T21:33:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T20:17:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"FadhilPM"},"content":"     * Converts command string stream into a Taskman instance.","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"FadhilPM"},"content":"     * @param st Stream of command strings","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"FadhilPM"},"content":"     * @param saveLocation Save location for error reporting","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"FadhilPM"},"content":"     * @return A Pair containing status message and resulting Taskman","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"FadhilPM"},"content":"    private Pair\u003cString, Taskman\u003e streamToTaskman(Stream\u003cString\u003e st, String saveLocation) {","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"FadhilPM"},"content":"        Taskman toReturn \u003d st","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"FadhilPM"},"content":"            .reduce(new Taskman(), (x, y) -\u003e {","lastModifiedDate":"2025-02-25T18:47:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"FadhilPM"},"content":"                try {","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"FadhilPM"},"content":"                    return Parser.parse(y, x).execute().second();","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"FadhilPM"},"content":"                } catch (BezdelnikException be) {","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"FadhilPM"},"content":"                    return new Taskman();","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"FadhilPM"},"content":"                }","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"FadhilPM"},"content":"            }, (a, b) -\u003e a.concat(b));","lastModifiedDate":"2025-02-25T18:47:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"FadhilPM"},"content":"        String status \u003d String.format(\"Success: %d tasks successfully loaded from %s\\n%s\",","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"FadhilPM"},"content":"                                      toReturn.size(), saveLocation, toReturn.listString());","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T18:47:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"FadhilPM"},"content":"        return new Pair\u003cString, Taskman\u003e(status, toReturn);","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-01-21T15:46:38","isFullCredit":false}],"authorContributionMap":{"FadhilPM":105}},{"path":"src/main/java/bezdelnik/utils/BezdelnikException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T20:44:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":" * Exception specific to the Bezdelnik application.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":" * This exception is thrown when a task management error occurs.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"public class BezdelnikException extends Exception {","lastModifiedDate":"2025-02-06T14:07:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a new BezdelnikException with the specified detail message.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"     * @param message Detail message.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"    public BezdelnikException(String message) {","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"        super(message);","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a new BezdelnikException with the specified detail message and cause.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"     * @param message Detail message.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"     * @param cause   The cause of the exception.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    public BezdelnikException(String message, Throwable cause) {","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"        super(message, cause);","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false}],"authorContributionMap":{"FadhilPM":27}},{"path":"src/main/java/bezdelnik/utils/BezdelnikExceptionCreator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":" * Utility class for creating standardized BezdelnikException instances.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * This class provides factory methods to create exception objects with","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * for common error scenarios in the Bezdelnik application.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"public class BezdelnikExceptionCreator {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"     * Creates an exception for when a task index is out of valid range.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"     * Returns a tailored message based on whether the task list is empty","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"     * or the provided index is outside the valid range.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"     * @param taskman The Taskman instance containing the tasks","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"     * @return A BezdelnikException with an appropriate error message","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"    public static BezdelnikException createOutOfRangeException(Taskman taskman) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"        String message;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"        if (taskman.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"            message \u003d \"No tasks to operate on!\";","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"        } else {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"            message \u003d String.format(","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"                \"Please provide a valid task number in the following range [1, %d]\", taskman.size());","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"        return new BezdelnikException(message);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"     * Creates an exception for incorrect todo command format.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"     * @return A BezdelnikException with a message explaining the correct todo format","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"    public static BezdelnikException createTodoFormatException() {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"        String message \u003d \"Please use the format: todo \u003cdescription\u003e\";","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"        return new BezdelnikException(message);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"     * Creates an exception for incorrect deadline command format.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"     * @return A BezdelnikException with a message explaining the correct deadline format","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"    public static BezdelnikException createDeadlineFormatException() {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FadhilPM"},"content":"        String message \u003d \"Please use the format: deadline \u003cdescription\u003e /by dd/MM/yyyy HHmm\";","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"        return new BezdelnikException(message);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"     * Creates an exception for incorrect event command format.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"     * @return A BezdelnikException with a message explaining the correct event format","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FadhilPM"},"content":"    public static BezdelnikException createEventFormatException() {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FadhilPM"},"content":"        String message \u003d \"Please use the format: event \u003cdescription\u003e /from dd/MM/yyyy HHmm /to dd/MM/yyyy HHmm\";","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"        return new BezdelnikException(message);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":62}},{"path":"src/main/java/bezdelnik/utils/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":" * Represents a command to be executed in the Bezdelnik system.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * This interface defines the contract for all command implementations.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * Each command must provide an implementation of the execute method,","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * which performs the command\u0027s logic and returns a result along with","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" * a Taskman reference.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"public interface Command {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"     * @return A Pair containing a String result and a Taskman instance","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"     * @throws BezdelnikException if an error occurs during command execution","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Taskman\u003e execute() throws BezdelnikException;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":21}},{"path":"src/main/java/bezdelnik/utils/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.tasks.Deadline;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.tasks.Task;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * Command implementation for creating and adding a new Deadline task.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" * This class handles the creation of Deadline tasks in the Bezdelnik system.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":" * It parses input data and creates a properly formatted Deadline task,","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":" * then adds it to the Taskman.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"    private final Taskman taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"    private final String[] array;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"    DeadlineCommand(Taskman taskman, String[] array) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"        this.taskman \u003d taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"        this.array \u003d array;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Taskman\u003e execute() throws BezdelnikException {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"            Task toAdd \u003d new Deadline(array[0], array[1]);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"            Taskman newTaskman \u003d taskman.add(toAdd);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"            String output \u003d String.format(\"\\tadded:\\n\\t%s\\n\\tYou currently have %d task(s)\", toAdd, newTaskman.size());","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"            return new Pair\u003cString, Taskman\u003e(output, newTaskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createDeadlineFormatException();","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":37}},{"path":"src/main/java/bezdelnik/utils/DefaultCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":" * Command implementation for denoting bad input","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * This class handles bad input by doing nothing to the task list","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * and informing the user.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"public class DefaultCommand implements Command {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"    private final Taskman taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"    private final String badInput;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"    DefaultCommand(Taskman taskman, String badInput) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"        this.taskman \u003d taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"        this.badInput \u003d badInput;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Taskman\u003e execute() throws BezdelnikException {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"        String output \u003d String.format(\"\\tUnsupported command: %s\", badInput);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"        return new Pair\u003cString, Taskman\u003e(output, taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":27}},{"path":"src/main/java/bezdelnik/utils/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.tasks.Event;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.tasks.Task;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * Command implementation for creating and adding a new Event task.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * This class handles the creation of Event tasks in the Bezdelnik system.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" * It parses input data and creates a properly formatted Event task,","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":" * then adds it to the Taskman.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"    private final Taskman taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"    private final String[] array;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"    EventCommand(Taskman taskman, String[] array) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"        this.taskman \u003d taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"        this.array \u003d array;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Taskman\u003e execute() throws BezdelnikException {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"            Task toAdd \u003d new Event(array[0], array[1].substring(5), array[2].substring(3));","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"            Taskman newTaskman \u003d taskman.add(toAdd);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"            String output \u003d String.format(\"\\tadded:\\n\\t%s\\n\\tYou currently have %d task(s)\", toAdd, newTaskman.size());","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"            return new Pair\u003cString, Taskman\u003e(output, newTaskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createEventFormatException();","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":36}},{"path":"src/main/java/bezdelnik/utils/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":" * Command implementation for carrying out a find operation on Taskman","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * This class handles the creation of Event tasks in the Bezdelnik system.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * It parses input data and creates a properly formatted Event task,","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * then adds it to the taskman collection.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"    private final Taskman taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"    private final String toSearchFor;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"    FindCommand(Taskman taskman, String toSearchFor) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"        this.taskman \u003d taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"        this.toSearchFor \u003d toSearchFor;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Taskman\u003e execute() throws BezdelnikException {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"        Taskman filtered \u003d taskman.filter(x -\u003e x.contains(this.toSearchFor));","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"        String matchCount;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"        if (filtered.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"            matchCount \u003d \"No matches found\";","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"        } else {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"            matchCount \u003d String.format(\"Found %d matching task(s)\", filtered.size());","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"        String output \u003d String.format(\"\\t%s:\\n%s\", matchCount, filtered.listString());","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"        return new Pair\u003cString, Taskman\u003e(output, taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":37}},{"path":"src/main/java/bezdelnik/utils/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":" * Command implementation for listing all tasks in the task list.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * This class handles retrieving and displaying all tasks currently","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * stored in the Bezdelnik system\u0027s taskman collection.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"    private final Taskman taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"    ListCommand(Taskman taskman) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"        this.taskman \u003d taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Taskman\u003e execute() throws BezdelnikException {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"        String returnString \u003d this.taskman.listString();","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"        return new Pair\u003cString, Taskman\u003e(returnString, this.taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":25}},{"path":"src/main/java/bezdelnik/utils/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":" * Command implementation for marking a task in the task list.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * This class handles the marking of a task from the provided Taskman","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * based on the provided task index.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"    private final Taskman taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"    private final int idx;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"    MarkCommand(Taskman taskman, int idx) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"        this.taskman \u003d taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Taskman\u003e execute() throws BezdelnikException {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"            Taskman newTaskman \u003d taskman.operate(idx, x -\u003e x.markAsDone());","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"            String output \u003d String.format(\"\\tI have marked this task as done.\\n\\t%s\", newTaskman.get(idx));","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"            return new Pair\u003cString, Taskman\u003e(output, newTaskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"        } catch (IndexOutOfBoundsException iobe) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createOutOfRangeException(taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":32}},{"path":"src/main/java/bezdelnik/utils/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-26T20:44:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":" * Pair record.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":" *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * @param \u003cT\u003e The type of the first value.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * @param \u003cU\u003e The type of the second value.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"public record Pair\u003cT, U\u003e(T first, U second) {}","lastModifiedDate":"2025-02-06T14:07:58","isFullCredit":false}],"authorContributionMap":{"FadhilPM":9}},{"path":"src/main/java/bezdelnik/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * Provides public static method to parse user input commands and update the task manager.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"public class Parser {","lastModifiedDate":"2025-02-06T14:07:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"    enum CommandType {","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"        LIST,","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"        MARK,","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"        UNMARK,","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"        REMOVE,","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"        TODO,","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"        DEADLINE,","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"        EVENT,","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"        FIND,","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"        SORT,","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"        ARCHIVE,","lastModifiedDate":"2025-02-09T23:04:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"        UNKNOWN","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    private static CommandType determineCommandType(String input) {","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"        String command \u003d input.split(\" \")[0].toLowerCase();","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"        return switch (command) {","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"        case \"l\", \"ls\", \"list\" -\u003e CommandType.LIST;","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"        case \"m\", \"mark\" -\u003e CommandType.MARK;","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"        case \"u\", \"unmark\" -\u003e CommandType.UNMARK;","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"        case \"rm\", \"rem\", \"remove\", \"del\", \"delete\" -\u003e CommandType.REMOVE;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"        case \"todo\" -\u003e CommandType.TODO;","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"        case \"ded\", \"dead\", \"deadline\" -\u003e CommandType.DEADLINE;","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"        case \"e\", \"ev\", \"event\" -\u003e CommandType.EVENT;","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"        case \"f\", \"find\" -\u003e CommandType.FIND;","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"        case \"s\", \"sort\" -\u003e CommandType.SORT;","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"        case \"a\", \"archive\" -\u003e CommandType.ARCHIVE;","lastModifiedDate":"2025-02-09T23:04:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"        default -\u003e CommandType.UNKNOWN;","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"        };","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"    private static String removeFirstWord(String input) {","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"        assert input !\u003d null;","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"        return Arrays.stream(input.split(\" \"))","lastModifiedDate":"2025-02-22T22:40:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"            .skip(1)","lastModifiedDate":"2025-02-22T22:40:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"            .collect(Collectors.joining(\" \"));","lastModifiedDate":"2025-02-22T22:40:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FadhilPM"},"content":"     * Parses the given input string and performs the corresponding task management operation.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"     * @param input   The user input command.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"     * @param taskman The current task manager state.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"     * @return A Command that encapsulates the operation to be performed on the task manager","lastModifiedDate":"2025-02-27T14:52:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FadhilPM"},"content":"    public static Command parse(String input, Taskman taskman) throws BezdelnikException {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"        assert input !\u003d null;","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FadhilPM"},"content":"        assert taskman !\u003d null;","lastModifiedDate":"2025-02-12T16:24:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-12T16:24:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FadhilPM"},"content":"        CommandType commandType \u003d determineCommandType(input);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"        return switch (commandType) {","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"FadhilPM"},"content":"        case LIST -\u003e handleList(taskman);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FadhilPM"},"content":"        case MARK -\u003e handleMark(input, taskman);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"FadhilPM"},"content":"        case UNMARK -\u003e handleUnmark(input, taskman);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"FadhilPM"},"content":"        case REMOVE -\u003e handleRemove(input, taskman);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"FadhilPM"},"content":"        case TODO -\u003e handleTodo(input, taskman);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"FadhilPM"},"content":"        case DEADLINE -\u003e handleDeadline(input, taskman);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"FadhilPM"},"content":"        case EVENT -\u003e handleEvent(input, taskman);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"FadhilPM"},"content":"        case FIND -\u003e handleFind(input, taskman);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"FadhilPM"},"content":"        case SORT -\u003e handleSort(taskman);","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"FadhilPM"},"content":"        case ARCHIVE -\u003e handleArchive(input, taskman);","lastModifiedDate":"2025-02-09T23:04:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"FadhilPM"},"content":"        case UNKNOWN -\u003e handleDefault(input, taskman);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"FadhilPM"},"content":"        };","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"FadhilPM"},"content":"    private static Command handleList(Taskman taskman) throws BezdelnikException {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"FadhilPM"},"content":"        Command toReturn \u003d new ListCommand(taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"FadhilPM"},"content":"        return toReturn;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"FadhilPM"},"content":"    private static Command handleMark(String input, Taskman taskman) throws BezdelnikException {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"FadhilPM"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"FadhilPM"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createOutOfRangeException(taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-22T22:40:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"FadhilPM"},"content":"            int idx \u003d Integer.parseUnsignedInt(parts[1]) - 1;","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"FadhilPM"},"content":"            Command toReturn \u003d new MarkCommand(taskman, idx);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"FadhilPM"},"content":"            return toReturn;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"FadhilPM"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createOutOfRangeException(taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"FadhilPM"},"content":"    private static Command handleUnmark(String input, Taskman taskman) throws BezdelnikException {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"FadhilPM"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"FadhilPM"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createOutOfRangeException(taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-22T22:40:36","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"FadhilPM"},"content":"            int idx \u003d Integer.parseUnsignedInt(parts[1]) - 1;","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"FadhilPM"},"content":"            Command toReturn \u003d new UnmarkCommand(taskman, idx);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"FadhilPM"},"content":"            return toReturn;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"FadhilPM"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createOutOfRangeException(taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"FadhilPM"},"content":"    private static Command handleRemove(String input, Taskman taskman) throws BezdelnikException {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"FadhilPM"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"FadhilPM"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createOutOfRangeException(taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"FadhilPM"},"content":"            int idx \u003d Integer.parseUnsignedInt(parts[1]) - 1;","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"FadhilPM"},"content":"            Command toReturn \u003d new RemoveCommand(taskman, idx);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"FadhilPM"},"content":"            return toReturn;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"FadhilPM"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createOutOfRangeException(taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"FadhilPM"},"content":"    private static Command handleTodo(String input, Taskman taskman) throws BezdelnikException {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"FadhilPM"},"content":"        String todoInput \u003d removeFirstWord(input);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"FadhilPM"},"content":"        if (todoInput.isEmpty()) {","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createTodoFormatException();","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"FadhilPM"},"content":"        Command toReturn \u003d new TodoCommand(taskman, todoInput);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"FadhilPM"},"content":"        return toReturn;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"FadhilPM"},"content":"    private static Command handleDeadline(String input, Taskman taskman) throws BezdelnikException {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"FadhilPM"},"content":"        String deadlineInput \u003d removeFirstWord(input);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"FadhilPM"},"content":"        if (deadlineInput.isEmpty()) {","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createDeadlineFormatException();","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"FadhilPM"},"content":"        String[] array \u003d deadlineInput.split(\" /by \");","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"FadhilPM"},"content":"        if (array.length !\u003d 2 || array[0].trim().isEmpty()) {","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createDeadlineFormatException();","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-23T19:18:34","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"FadhilPM"},"content":"        Command toReturn \u003d new DeadlineCommand(taskman, array);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"FadhilPM"},"content":"        return toReturn;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"FadhilPM"},"content":"    private static Command handleEvent(String input, Taskman taskman) throws BezdelnikException {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"FadhilPM"},"content":"        String eventInput \u003d removeFirstWord(input);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"FadhilPM"},"content":"        if (eventInput.isEmpty()) {","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createEventFormatException();","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"FadhilPM"},"content":"        String[] array \u003d eventInput.split(\" /\");","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"FadhilPM"},"content":"        if (array.length !\u003d 3 || array[0].trim().isEmpty()","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"FadhilPM"},"content":"            || !array[1].startsWith(\"from \") || !array[2].startsWith(\"to \")) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createEventFormatException();","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-22T22:40:36","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"FadhilPM"},"content":"        Command toReturn \u003d new EventCommand(taskman, array);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"FadhilPM"},"content":"        return toReturn;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"FadhilPM"},"content":"    private static Command handleFind(String input, Taskman taskman) throws BezdelnikException {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"FadhilPM"},"content":"        String toSearchFor \u003d removeFirstWord(input);","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"FadhilPM"},"content":"        if (toSearchFor.isEmpty()) {","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"FadhilPM"},"content":"            throw new BezdelnikException(\"Please specify a search term\");","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"FadhilPM"},"content":"        Command toReturn \u003d new FindCommand(taskman, toSearchFor);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"FadhilPM"},"content":"        return toReturn;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"FadhilPM"},"content":"    private static Command handleSort(Taskman taskman) throws BezdelnikException {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"FadhilPM"},"content":"        Command toReturn \u003d new SortCommand(taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"FadhilPM"},"content":"        return toReturn;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-22T22:40:36","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"FadhilPM"},"content":"    private static Command handleArchive(String input, Taskman taskman) throws BezdelnikException {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"FadhilPM"},"content":"        String path \u003d \"./data/\" + removeFirstWord(input);","lastModifiedDate":"2025-02-09T23:04:02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"FadhilPM"},"content":"        Command toReturn \u003d new ArchiveCommand(taskman, path);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"FadhilPM"},"content":"        return toReturn;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-09T23:04:02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-09T23:04:02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"FadhilPM"},"content":"    private static Command handleDefault(String input, Taskman taskman) throws BezdelnikException {","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"FadhilPM"},"content":"        Command toReturn \u003d new DefaultCommand(taskman, input);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"FadhilPM"},"content":"        return toReturn;","lastModifiedDate":"2025-02-25T15:11:54","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false}],"authorContributionMap":{"FadhilPM":190}},{"path":"src/main/java/bezdelnik/utils/ReadStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-02-25T18:47:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" * Handles storage operations for chatbot","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"public class ReadStorage {","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"     * Reads the task manager state from a file at the specified input path.","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"     * @param inputPath The file path from which the state is read.","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"     * @return A Pair containing a status message and the task manager state.","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"    public static Stream\u003cString\u003e readTaskmanFromFile(String inputPath) throws IOException {","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"        assert inputPath !\u003d null;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"        Stream\u003cString\u003e st \u003d Files.lines(Paths.get(inputPath));","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"        return st;","lastModifiedDate":"2025-02-25T16:30:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false}],"authorContributionMap":{"FadhilPM":25}},{"path":"src/main/java/bezdelnik/utils/RemoveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.tasks.Task;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * Command implementation for removing a task from the task list.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * This class handles the deletion of tasks from the provided Taskman","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" * based on the provided task index.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"public class RemoveCommand implements Command {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"    private final Taskman taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"    private final int idx;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"    RemoveCommand(Taskman taskman, int idx) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"        this.taskman \u003d taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Taskman\u003e execute() throws BezdelnikException {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"            Task toDelete \u003d taskman.get(idx);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"            Taskman newTaskman \u003d taskman.remove(idx);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"            String output \u003d String.format(\"\\tI have deleted this task.\\n\\t%s\", toDelete);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"            return new Pair\u003cString, Taskman\u003e(output, newTaskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"        } catch (IndexOutOfBoundsException iobe) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createOutOfRangeException(taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":36}},{"path":"src/main/java/bezdelnik/utils/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":" * Command implementation for sorting all tasks in the task list.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * This class handles sorting, retrieving and displaying all tasks","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * currently stored in the Bezdelnik system\u0027s taskman collection.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"public class SortCommand implements Command {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"    private final Taskman taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"    SortCommand(Taskman taskman) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"        this.taskman \u003d taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Taskman\u003e execute() throws BezdelnikException {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"        if (taskman.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"            throw new BezdelnikException(\"No tasks to sort!\");","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"        Taskman sortedTaskman \u003d this.taskman.sorted();","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"        String output \u003d String.format(","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"            \"\\t%d task(s) sorted by time:\\n%s\", sortedTaskman.size(), sortedTaskman.listString());","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"        return new Pair\u003cString, Taskman\u003e(output, sortedTaskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":31}},{"path":"src/main/java/bezdelnik/utils/Taskman.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-02-23T18:49:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"import java.util.function.Function;","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-01-25T00:32:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-01-24T16:13:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-01-24T16:13:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.tasks.Task;","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":" * Immutable Task list manager","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"public class Taskman {","lastModifiedDate":"2025-02-06T14:07:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"     * Constructs an empty Taskman.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"    public Taskman() {","lastModifiedDate":"2025-02-23T22:57:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"        this.taskList \u003d List.\u003cTask\u003eof();","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"     * Constructs a Taskman with tasks from the provided stream.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"     * @param taskStream A stream of tasks.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"    private Taskman(Stream\u003cTask\u003e taskStream) {","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"        assert taskStream !\u003d null;","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"        this.taskList \u003d taskStream.toList();","lastModifiedDate":"2025-01-22T05:20:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"     * Returns a new Taskman with the specified task added.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"     * @return A new Taskman instance with the task added.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"    public Taskman add(Task task) {","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"        assert task !\u003d null;","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"        return new Taskman(Stream.concat(taskList.stream(), Stream.\u003cTask\u003eof(task)));","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"     * Returns a new Taskman with the task at the specified index replaced.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"     * @param i The index of the task to replace.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"     * @param task The new task.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FadhilPM"},"content":"     * @return A new Taskman instance with the updated task.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FadhilPM"},"content":"    public Taskman set(int i, Task task) {","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FadhilPM"},"content":"        assert task !\u003d null;","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"        return new Taskman(IntStream.range(0, taskList.size())","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"FadhilPM"},"content":"        .mapToObj(x -\u003e {","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FadhilPM"},"content":"            if (x \u003d\u003d i) {","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"FadhilPM"},"content":"                return task;","lastModifiedDate":"2025-02-22T23:41:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"FadhilPM"},"content":"            } else {","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"FadhilPM"},"content":"                return taskList.get(x);","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"FadhilPM"},"content":"            }","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"FadhilPM"},"content":"        }));","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"FadhilPM"},"content":"     * Returns a new Taskman with the task at the specified index removed.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"FadhilPM"},"content":"     * @param i The index of the task to remove.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"FadhilPM"},"content":"     * @return A new Taskman instance with the task removed.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"FadhilPM"},"content":"     * @throws BezdelnikException If the index is out of bounds.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"FadhilPM"},"content":"    public Taskman remove(int i) {","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"FadhilPM"},"content":"        return new Taskman(IntStream.range(0, taskList.size())","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"FadhilPM"},"content":"            .filter(x -\u003e x !\u003d i)","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"FadhilPM"},"content":"            .mapToObj(x -\u003e taskList.get(x)));","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"FadhilPM"},"content":"     * Concatenates another Taskman with this one.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"FadhilPM"},"content":"     * @param otherTaskman The other Taskman to concatenate.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"FadhilPM"},"content":"     * @return A new Taskman instance containing tasks from both.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"FadhilPM"},"content":"    public Taskman concat(Taskman otherTaskman) {","lastModifiedDate":"2025-01-25T18:36:28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"FadhilPM"},"content":"        return new Taskman(Stream.concat(taskList.stream(), otherTaskman.taskList.stream()));","lastModifiedDate":"2025-01-25T18:36:28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-25T18:36:28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-25T18:36:28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"FadhilPM"},"content":"     * Applies an operation to the task at the specified index.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"FadhilPM"},"content":"     * @param i  The index of the task.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"FadhilPM"},"content":"     * @param fn The function to apply to the task.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"FadhilPM"},"content":"     * @return A new Taskman instance with the modified task.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"FadhilPM"},"content":"     * @throws BezdelnikException If the index is out of bounds.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"FadhilPM"},"content":"    public Taskman operate(int i, Function\u003c? super Task, ? extends Task\u003e fn) {","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"FadhilPM"},"content":"        assert fn !\u003d null;","lastModifiedDate":"2025-02-21T12:06:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"FadhilPM"},"content":"        return this.set(i, fn.apply(get(i)));","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"FadhilPM"},"content":"     * Optionally applies an operation to the task at the specified index.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"FadhilPM"},"content":"     * @param i  The index of the task.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"FadhilPM"},"content":"     * @param fn The function to apply to the task.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"FadhilPM"},"content":"     * @return A new Taskman instance with the modified task or the task removed.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"FadhilPM"},"content":"     * @throws BezdelnikException If the index is out of bounds.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"FadhilPM"},"content":"    public Taskman operateOptional(int i, Function\u003c? super Task, ? extends Optional\u003c? extends Task\u003e\u003e fn)","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"FadhilPM"},"content":"            throws BezdelnikException {","lastModifiedDate":"2025-02-05T19:39:29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"FadhilPM"},"content":"        assert fn !\u003d null;","lastModifiedDate":"2025-02-21T12:06:39","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"FadhilPM"},"content":"        return fn.apply(taskList.get(i))","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"FadhilPM"},"content":"        .map(x -\u003e this.set(i, x))","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"FadhilPM"},"content":"        .orElse(this.remove(i));","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"FadhilPM"},"content":"     * Returns a new Taskman containing only tasks that match the given predicate.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"FadhilPM"},"content":"     * @param pt The predicate to filter tasks.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"FadhilPM"},"content":"     * @return A new Taskman instance with filtered tasks.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"FadhilPM"},"content":"    public Taskman filter(Predicate\u003c? super Task\u003e pt) {","lastModifiedDate":"2025-02-08T16:40:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"FadhilPM"},"content":"        assert pt !\u003d null;","lastModifiedDate":"2025-02-21T12:06:39","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-22T22:56:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"FadhilPM"},"content":"        return new Taskman(taskList.stream().filter(pt));","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"FadhilPM"},"content":"     * Returns a new Taskman with a sorted task list","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"FadhilPM"},"content":"     * @return A new Taskman instance with a {@code List\u003cTask\u003e}","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"FadhilPM"},"content":"    public Taskman sorted() {","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"FadhilPM"},"content":"        return new Taskman(taskList.stream().sorted(Comparator.reverseOrder()));","lastModifiedDate":"2025-02-27T17:22:03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-08T17:49:38","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-23T18:49:54","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"FadhilPM"},"content":"     * Returns a new Taskman with a sorted task list","lastModifiedDate":"2025-02-23T18:49:54","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"FadhilPM"},"content":"     * @param comparator - a non-interfering, stateless Comparator to be used to compare tasks","lastModifiedDate":"2025-02-23T18:49:54","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"FadhilPM"},"content":"     * @return A new Taskman instance with a {@code List\u003cTask\u003e}","lastModifiedDate":"2025-02-23T18:49:54","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-23T18:49:54","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"FadhilPM"},"content":"    public Taskman sorted(Comparator\u003c? super Task\u003e comparator) {","lastModifiedDate":"2025-02-23T18:49:54","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"FadhilPM"},"content":"        return new Taskman(taskList.stream().sorted(comparator));","lastModifiedDate":"2025-02-23T18:49:54","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-23T18:49:54","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-23T18:49:54","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"FadhilPM"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"FadhilPM"},"content":"     * @param i The index of the task.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"FadhilPM"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"FadhilPM"},"content":"     * @throws BezdelnikException If the index is out of bounds.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"FadhilPM"},"content":"    public Task get(int i) {","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"FadhilPM"},"content":"        return taskList.get(i);","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"FadhilPM"},"content":"     * Returns the number of tasks.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"FadhilPM"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"FadhilPM"},"content":"    public int size() {","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"FadhilPM"},"content":"        return taskList.size();","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"FadhilPM"},"content":"     * Returns a formatted string listing all tasks.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"FadhilPM"},"content":"     * @return A string representation of the task list.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"FadhilPM"},"content":"    public String listString() {","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"FadhilPM"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"FadhilPM"},"content":"            return \"\\tNo tasks present!\";","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"FadhilPM"},"content":"        } else {","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"FadhilPM"},"content":"            return IntStream.range(0, taskList.size())","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"FadhilPM"},"content":"            .mapToObj(x -\u003e String.format(\"\\t%d. %s\", x + 1, taskList.get(x).toString()))","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"FadhilPM"},"content":"            .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-01-25T00:32:35","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-01-25T00:32:35","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-25T00:32:35","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"FadhilPM"},"content":"     * Returns a command representation of all tasks for storage.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"FadhilPM"},"content":"     * @return A string containing commands to recreate all tasks.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"FadhilPM"},"content":"    public String listCommand() {","lastModifiedDate":"2025-01-25T00:32:35","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"FadhilPM"},"content":"        return IntStream.range(0, taskList.size())","lastModifiedDate":"2025-01-25T00:32:35","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"FadhilPM"},"content":"        .mapToObj(x -\u003e {","lastModifiedDate":"2025-01-25T00:32:35","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"FadhilPM"},"content":"            Task t \u003d taskList.get(x);","lastModifiedDate":"2025-01-25T00:32:35","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"FadhilPM"},"content":"            String command \u003d t.returnCommand();","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"FadhilPM"},"content":"            String markString \u003d \"\";","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"FadhilPM"},"content":"            if (t.isDone()) {","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"FadhilPM"},"content":"                markString \u003d String.format(\"\\nmark %d\", x + 1);","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"FadhilPM"},"content":"            }","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"FadhilPM"},"content":"            return command + markString;","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"FadhilPM"},"content":"        })","lastModifiedDate":"2025-01-25T00:32:35","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"FadhilPM"},"content":"        .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-01-25T00:32:35","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"FadhilPM"},"content":"     * Checks if this Taskman is equal to another object.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"FadhilPM"},"content":"     * @param obj The object to compare.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"FadhilPM"},"content":"     * @return True if both are Taskman instances with equal task lists, otherwise false.","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-05T22:48:34","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-01-24T17:43:45","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"FadhilPM"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-01-24T17:43:45","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"FadhilPM"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"FadhilPM"},"content":"            return true;","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"FadhilPM"},"content":"        if (obj instanceof Taskman taskman) {","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"FadhilPM"},"content":"            return taskList.equals(taskman.taskList);","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"FadhilPM"},"content":"        return false;","lastModifiedDate":"2025-02-22T22:14:44","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-24T17:43:45","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-01-24T17:43:45","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"FadhilPM"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24T01:03:42","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"FadhilPM"},"content":"        return taskList.toString();","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-01-22T01:27:59","isFullCredit":false}],"authorContributionMap":{"FadhilPM":229}},{"path":"src/main/java/bezdelnik/utils/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.tasks.Task;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.tasks.Todo;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * Command implementation for creating and adding a new Todo task.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" * This class handles the creation of Todo tasks in the Bezdelnik system.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":" * It parses input data and creates a properly formatted Todo task,","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":" * then adds it to the Taskman.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"    private final Taskman taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"    private final String todoInput;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"    TodoCommand(Taskman taskman, String todoInput) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"        this.taskman \u003d taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"        this.todoInput \u003d todoInput;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Taskman\u003e execute() throws BezdelnikException {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"            Task toAdd \u003d new Todo(todoInput);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"            Taskman newTaskman \u003d taskman.add(toAdd);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"            String output \u003d String.format(\"\\tadded:\\n\\t%s\\n\\tYou currently have %d task(s)\", toAdd, newTaskman.size());","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"            return new Pair\u003cString, Taskman\u003e(output, newTaskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"        } catch (Throwable t) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"            throw new BezdelnikException(\"Error creating todo task: \" + t.getMessage());","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":38}},{"path":"src/main/java/bezdelnik/utils/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":" * Command implementation for unmarking a task in the task list.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":" * This class handles the unmarking of a task from the provided Taskman","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":" * based on the provided task index.","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"    private final Taskman taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"    private final int idx;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"    UnmarkCommand(Taskman taskman, int idx) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"        this.taskman \u003d taskman;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"    @Override","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"    public Pair\u003cString, Taskman\u003e execute() throws BezdelnikException {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"        try {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"            Taskman newTaskman \u003d taskman.operate(idx, x -\u003e x.markAsUndone());","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"            String output \u003d String.format(\"\\tI have marked this task as undone.\\n\\t%s\", newTaskman.get(idx));","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"            return new Pair\u003cString, Taskman\u003e(output, newTaskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"        } catch (IndexOutOfBoundsException iobe) {","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"            throw BezdelnikExceptionCreator.createOutOfRangeException(taskman);","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"        }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-25T12:37:37","isFullCredit":false}],"authorContributionMap":{"FadhilPM":32}},{"path":"src/main/java/bezdelnik/utils/WriteStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"/**","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":" * Handles storage operations for chatbot","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":" */","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"public class WriteStorage {","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"    /**","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"     * Writes the task manager state to a file at the specified output path.","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"     *","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"     * @param taskman    The current task manager state.","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"     * @param outputPath The file path where the state is written.","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"     * @return A success message including the output file path.","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"     */","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"    public static String writeTaskmanToFile(Taskman taskman, String outputPath) throws IOException {","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"        assert taskman !\u003d null;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"        assert outputPath !\u003d null;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"        String taskCommands \u003d taskman.listCommand();","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"        Path path \u003d Paths.get(outputPath);","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"        Files.createDirectories(path.getParent());","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"        Files.writeString(path, taskCommands);","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"        String status \u003d String.format(\"Success: contents written to file at: %s\", outputPath);","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"        return status;","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-24T17:18:21","isFullCredit":false}],"authorContributionMap":{"FadhilPM":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-27T16:24:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-27T16:24:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false}],"authorContributionMap":{"FadhilPM":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"480.0\" prefWidth\u003d\"640.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bezdelnik.ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-27T16:24:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-27T16:24:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"        \u003cButton fx:id\u003d\"sendButton\" disable\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-27T16:24:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-27T16:24:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-27T16:24:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-11T23:52:24","isFullCredit":false}],"authorContributionMap":{"FadhilPM":19}},{"path":"src/test/java/bezdelnik/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-23T23:40:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"    @Test","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"    void testParseCreateDeadlineTask() {","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"        Taskman initialTaskman \u003d new Taskman();","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"        String validInput \u003d \"deadline Submit report /by 25/12/2024 1430\";","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"        // Test valid deadline creation","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"        Command result \u003d assertDoesNotThrow(() -\u003e Parser.parse(validInput, initialTaskman));","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"        Pair\u003cString, Taskman\u003e execOutput \u003d assertDoesNotThrow(() -\u003e result.execute());","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"        Taskman updatedTaskman \u003d execOutput.second();","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"        assertEquals(1, updatedTaskman.size());","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"        assertTrue(execOutput.first().contains(\"added\"));","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"        // Test invalid deadline format","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"        String invalidInput \u003d \"deadline Submit report\";","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"        BezdelnikException be \u003d assertThrows(BezdelnikException.class, () -\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"            Parser.parse(invalidInput, initialTaskman));","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"        assertTrue(be.getMessage().contains(\"deadline\"));","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"    @Test","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"    void testParseCreateEventTask() {","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"        Taskman initialTaskman \u003d new Taskman();","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"        String validInput \u003d \"event Team meeting /from 25/12/2024 1430 /to 25/12/2024 1530\";","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"        // Test valid event creation","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"        Command result \u003d assertDoesNotThrow(() -\u003e Parser.parse(validInput, initialTaskman));","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"        Pair\u003cString, Taskman\u003e execOutput \u003d assertDoesNotThrow(() -\u003e result.execute());","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"        Taskman updatedTaskman \u003d execOutput.second();","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"        assertEquals(1, updatedTaskman.size());","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"        assertTrue(execOutput.first().contains(\"added\"));","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"        // Test invalid event format (missing /to)","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FadhilPM"},"content":"        String invalidInput \u003d \"event Team meeting /from 25/12/2024 1430\";","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"        BezdelnikException be \u003d assertThrows(BezdelnikException.class, () -\u003e","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"            Parser.parse(invalidInput, initialTaskman));","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"        assertTrue(be.getMessage().contains(\"event\"));","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false}],"authorContributionMap":{"FadhilPM":54}},{"path":"src/test/java/bezdelnik/utils/TaskmanTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"package bezdelnik.utils;","lastModifiedDate":"2025-02-23T23:40:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.tasks.Task;","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"import bezdelnik.tasks.Todo;","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"public class TaskmanTest {","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FadhilPM"},"content":"    @Test","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"    void testOperateModifyTaskAndMaintainImmutability() throws BezdelnikException {","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FadhilPM"},"content":"        Todo initialTask \u003d new Todo(\"Test task\");","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"        Taskman taskman \u003d new Taskman().add(initialTask);","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FadhilPM"},"content":"        // Test marking task as done","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FadhilPM"},"content":"        Taskman updatedTaskman \u003d taskman.operate(0, Task::markAsDone);","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FadhilPM"},"content":"        assertTrue(updatedTaskman.get(0).isDone());","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"        assertFalse(taskman.get(0).isDone()); // Original should be unchanged due to immutability","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FadhilPM"},"content":"        // Test marking task as undone","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FadhilPM"},"content":"        Taskman revertedTaskman \u003d updatedTaskman.operate(0, Task::markAsUndone);","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FadhilPM"},"content":"        assertFalse(revertedTaskman.get(0).isDone());","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FadhilPM"},"content":"        // Test operation on invalid index","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FadhilPM"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e","lastModifiedDate":"2025-02-25T18:19:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FadhilPM"},"content":"            taskman.operate(1, Task::markAsDone)","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FadhilPM"},"content":"        );","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FadhilPM"},"content":"    @Test","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FadhilPM"},"content":"    void testFilterReturnMatchingTasks() {","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FadhilPM"},"content":"        Taskman taskman \u003d new Taskman()","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FadhilPM"},"content":"            .add(new Todo(\"Buy groceries\"))","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FadhilPM"},"content":"            .add(new Todo(\"Do laundry\"))","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FadhilPM"},"content":"            .add(new Todo(\"Buy milk\"));","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FadhilPM"},"content":"        // Test filtering tasks containing \"Buy\"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FadhilPM"},"content":"        Taskman filtered \u003d taskman.filter(task -\u003e task.contains(\"Buy\"));","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FadhilPM"},"content":"        assertEquals(2, filtered.size());","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FadhilPM"},"content":"        // Test filtering tasks containing \"laundry\"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FadhilPM"},"content":"        Taskman laundryTasks \u003d taskman.filter(task -\u003e task.contains(\"laundry\"));","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FadhilPM"},"content":"        assertEquals(1, laundryTasks.size());","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FadhilPM"},"content":"        // Test filtering with no matches","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FadhilPM"},"content":"        Taskman noMatches \u003d taskman.filter(task -\u003e task.contains(\"nonexistent\"));","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FadhilPM"},"content":"        assertEquals(0, noMatches.size());","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FadhilPM"},"content":"    @Test","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FadhilPM"},"content":"    void testConcatShouldCombineTaskmansCorrectly() throws BezdelnikException {","lastModifiedDate":"2025-02-27T17:03:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FadhilPM"},"content":"        Taskman taskman1 \u003d new Taskman()","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FadhilPM"},"content":"            .add(new Todo(\"Task 1\"))","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FadhilPM"},"content":"            .add(new Todo(\"Task 2\"));","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"FadhilPM"},"content":"        Taskman taskman2 \u003d new Taskman()","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FadhilPM"},"content":"            .add(new Todo(\"Task 3\"))","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"FadhilPM"},"content":"            .add(new Todo(\"Task 4\"));","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"FadhilPM"},"content":"        // Test concatenation","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"FadhilPM"},"content":"        Taskman combined \u003d taskman1.concat(taskman2);","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"FadhilPM"},"content":"        assertEquals(4, combined.size());","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"FadhilPM"},"content":"        assertEquals(String.format(\"[T] [] %s\", \"Task 1\"), combined.get(0).toString());","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"FadhilPM"},"content":"        assertEquals(String.format(\"[T] [] %s\", \"Task 4\"), combined.get(3).toString());","lastModifiedDate":"2025-02-24T14:38:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"FadhilPM"},"content":"","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"FadhilPM"},"content":"        // Test concatenation with empty Taskman","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"FadhilPM"},"content":"        Taskman emptyTaskman \u003d new Taskman();","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"FadhilPM"},"content":"        Taskman combinedWithEmpty \u003d taskman1.concat(emptyTaskman);","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"FadhilPM"},"content":"        assertEquals(taskman1.size(), combinedWithEmpty.size());","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"FadhilPM"},"content":"    }","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"FadhilPM"},"content":"}","lastModifiedDate":"2025-02-06T12:55:53","isFullCredit":false}],"authorContributionMap":{"FadhilPM":76}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"FadhilPM"},"content":"list","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FadhilPM"},"content":"todo go to sleep","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FadhilPM"},"content":"deadline finish CS2103 Week 2 iP /by 1600","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FadhilPM"},"content":"event attend CS2103 lecture /from 1600 /to 1800","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FadhilPM"},"content":"mark 1","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FadhilPM"},"content":"list","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FadhilPM"},"content":"mark 2","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FadhilPM"},"content":"list","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FadhilPM"},"content":"unmark 1","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"delete 2","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FadhilPM"},"content":"delete 4","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FadhilPM"},"content":"list","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FadhilPM"},"content":"bye","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false}],"authorContributionMap":{"FadhilPM":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FadhilPM"},"content":"javac --release 17 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FadhilPM"},"content":"java -classpath ..\\bin Bezdelnik \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"FadhilPM":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FadhilPM"},"content":"if ! javac --release 17 -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FadhilPM"},"content":"java -classpath ../bin Bezdelnik \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24T14:52:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"FadhilPM":2,"-":36}}]
