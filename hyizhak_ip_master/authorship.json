[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"# Project template","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"Bard is based on a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use the template `commit 33ea7802dbb84985b5cbd2a8c7d78d92826e21c3`.","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"hyizhak":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"    id \u0027com.diffplug.spotless\u0027 version \"7.0.2\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"    mainClass.set(\"bard.Launcher\")","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"spotless {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"    java {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"        eclipse().configFile(\"${rootDir}/config/eclipse/eclipse-java-google-style.xml\")","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"        removeUnusedImports()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"        trimTrailingWhitespace()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"        leadingTabsToSpaces()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"        endWithNewline()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"        toggleOffOn()","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"    archiveBaseName \u003d \"bard\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"hyizhak":30,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"# Bard User Guide","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"Bard is a **desktop chatbot for managing your tasks**. With a conversational interface and an elegant GUI, Bard lets you quickly add, update, and manage your tasks through simple commands. Whether you need to jot down a quick todo, schedule a deadline, or plan an event, Bard is designed to make task management efficient and enjoyable.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"![Bard GUI](Ui.png)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"## Quick Start","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"1. **Requirements:**  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"   Ensure you have Java `17` or above installed on your system.  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"   **Mac users:** Please refer to [this guide](https://se-education.org/guides/tutorials/javaInstallationMac.html) for installing the correct JDK version.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"2. **Download the Application:**  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"   Download the latest `.jar` file from the [Bard Releases](https://github.com/hyizhak/ip/releases) page.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"3. **Set Up Your Workspace:**  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"   Copy the `.jar` file to a folder of your choice.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"4. **Run Bard:**  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"   Open a command terminal (or Command Prompt), navigate to the folder containing the jar file, and run:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"   ```bash","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"   java -jar bard.jar","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"   The GUI will appear shortly, displaying your tasks and a chat interface.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"5. **Using Bard:**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"   Type a command into the input field and press Enter to execute it. For example, typing help will display the help menu.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"## Features","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"Bard supports a wide range of commands for managing your tasks. Below are the commands you can use:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"* Commands are case-sensitive and must follow the prescribed format.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"* Parameters are separated by spaces and specific delimiters (e.g., /by, /from, /to).","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"### Viewing help : `help`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"Shows a message with concise help information and explaining how to access the help page.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"Format: `help`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"### Adding Tasks : todo, deadline, event","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"Adds a new task to your task list.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"* Todo:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"    * Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"    * Example: `todo Buy groceries`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"* Deadline:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"    * Format: `deadline TASK_DESCRIPTION /by DATE [TIME]`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"    * Examples: `deadline Submit report /by 2025-12-31 2359`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"* Event:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"    * Format: `event TASK_DESCRIPTION /from DATE [TIME] /to DATE [TIME]`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"    * Example: `event Team meeting /from mon 0900 /to mon 1100`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"**Notes:**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hyizhak"},"content":"* Bard accepts both full date formats yyyy-MM-dd and day-of-week abbreviations (e.g., mon).","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"When a day-of-week is provided, Bard automatically sets the deadline to the next occurrence of that day.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hyizhak"},"content":"* The time is optional and defaults to 1200 if not specified.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hyizhak"},"content":"### Listing Tasks : list","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hyizhak"},"content":"Displays all tasks currently stored.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"* Format: `list`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hyizhak"},"content":"### Marking and Unmarking Tasks : mark, unmark","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hyizhak"},"content":"Marks a task as done or not done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hyizhak"},"content":"* Mark:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hyizhak"},"content":"    * Format: `mark TASK_NUMBER`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hyizhak"},"content":"    * Example: `mark 2` marks the second task as done","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hyizhak"},"content":"* Unmark:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hyizhak"},"content":"\t* Format: `unmark TASK_NUMBER`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hyizhak"},"content":"\t* Example: `unmark 2` marks the second task as not done","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hyizhak"},"content":"### Deleting a Task : delete","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hyizhak"},"content":"Removes a task from your list.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hyizhak"},"content":"* Format: `delete TASK_NUMBER`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hyizhak"},"content":"* Example: `delete 3` deletes the third task","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hyizhak"},"content":"### Finding Tasks : find","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hyizhak"},"content":"Searches for tasks that contain a specific keyword.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hyizhak"},"content":"* Format: `find KEYWORD`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hyizhak"},"content":"* Example: `find meeting` finds all tasks with the word \"meeting\" in their description","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hyizhak"},"content":"### Sorting Tasks : sort","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hyizhak"},"content":"Sorts tasks by priority. Tasks with nearer deadlines or earlier event start times are given higher priority, and tasks marked as done are always moved to the bottom.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hyizhak"},"content":"* Format: `sort`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hyizhak"},"content":"### Exiting Bard : bye","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hyizhak"},"content":"Closes the application.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hyizhak"},"content":"* Format: `bye`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hyizhak"},"content":"### Data Persistence","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hyizhak"},"content":"Bard automatically saves your tasks to `.data/tasks.txt` on your hard disk after every command that modifies the task list. There is no need for manual saving.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hyizhak"},"content":"### Command Summary","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hyizhak"},"content":"| Command | Format | Example |","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hyizhak"},"content":"|---------|--------|---------|","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hyizhak"},"content":"| help | help | help |","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hyizhak"},"content":"| todo | todo TASK_DESCRIPTION | todo Buy groceries |","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hyizhak"},"content":"| deadline | deadline TASK_DESCRIPTION /by DATE [TIME] | deadline Submit report /by 2025-12-31 2359 |","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hyizhak"},"content":"| event | event TASK_DESCRIPTION /from DATE [TIME] /to DATE [TIME] | event Team meeting /from mon 0900 /to mon 1100 |","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hyizhak"},"content":"| list | list | list |","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hyizhak"},"content":"| mark | mark TASK_NUMBER | mark 2 |","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hyizhak"},"content":"| unmark | unmark TASK_NUMBER | unmark 2 |","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hyizhak"},"content":"| delete | delete TASK_NUMBER | delete 3 |","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hyizhak"},"content":"| find | find KEYWORD | find meeting |","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hyizhak"},"content":"| sort | sort | sort |","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hyizhak"},"content":"| bye | bye | bye |","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hyizhak"},"content":"## Known Issues","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hyizhak"},"content":"1.\tCommand Formatting:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hyizhak"},"content":"Ensure commands follow the exact format. Extra spaces or incorrect delimiters may result in errors.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hyizhak"},"content":"## Future Enhancements","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hyizhak"},"content":"* Integration with calendar and reminder applications.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hyizhak"},"content":"* Advanced natural language processing for more intuitive command input.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hyizhak"},"content":"* Enhanced error suggestions to help correct mistyped commands.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"hyizhak"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"hyizhak"},"content":"Enjoy using Bard to manage your tasks efficiently!","lastModifiedDate":"2025-02-23","isFullCredit":false}],"authorContributionMap":{"hyizhak":114,"-":20}},{"path":"src/main/java/bard/Bard.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.command.Command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.parser.CommandParser;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import bard.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":" * Bard is a personal assistant chatbot that helps users keep track of various tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"public class Bard {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"    private TextUi ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"    /** Constructs a Bard object. */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"    public Bard() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"        } catch (BardException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"    /** Runs the Bard program. */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"    public void run() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"        while (!ui.hasExited()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"                Command c \u003d CommandParser.parse(fullCommand);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"                String response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"                ui.response(response);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"            } catch (BardException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"                ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"    public String getResponse(String fullCommand) throws BardException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"        assert !hasExited() : \"Program should not have exited\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"        assert fullCommand !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"        Command c \u003d CommandParser.parse(fullCommand);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"        return c.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"    public boolean hasExited() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"        return ui.hasExited();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"        Bard bard \u003d new Bard();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"        bard.run();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"hyizhak":60}},{"path":"src/main/java/bard/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"public class Launcher {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"hyizhak":12}},{"path":"src/main/java/bard/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.ui.MainWindow;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":" * A GUI for Bard using FXML.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"    private Bard bard \u003d new Bard();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"            // Set the window title.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"            stage.setTitle(\"Bard\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"            Image icon \u003d","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"                    new Image(getClass().getResourceAsStream(\"/images/Bard_circular_icon.png\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBard(bard); // inject the Bard instance","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"            stage.show();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"hyizhak":40}},{"path":"src/main/java/bard/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import bard.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":" * Represents a command to add a task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    private Task task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"     * @param task Task to be added.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"     * Executes the AddCommand.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"     * @param tasks TaskList containing all tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"     * @param ui TextUi object to interact with user.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"     * @param storage Storage object to save tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"     * @return String response to be displayed to user.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"     * @throws BardException If an error occurs during execution.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"    public String execute(TaskList tasks, TextUi ui, Storage storage) throws BardException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"        storage.save(task);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"        return \" Got it. I\u0027ve added this task:\\n\" + \"   \" + task + \"\\n\" + \" Now you have \"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"                + tasks.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"hyizhak":39}},{"path":"src/main/java/bard/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import bard.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":" * Represents a command to be executed","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"     * Executes the command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"     * @param tasks TaskList containing all tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"     * @param ui TextUi object to interact with user.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"     * @param storage Storage object to save tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"     * @return String response to be displayed to user.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"     * @throws BardException If an error occurs during execution.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    public abstract String execute(TaskList tasks, TextUi ui, Storage storage) throws BardException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"hyizhak":23}},{"path":"src/main/java/bard/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import bard.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    private int index;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"     * Executes the DeleteCommand.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"     * @param tasks TaskList containing all tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"     * @param ui TextUi object to interact with user.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"     * @param storage Storage object to save tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"     * @return String response to be displayed to user.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"     * @throws BardException If an error occurs during execution.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"    public String execute(TaskList tasks, TextUi ui, Storage storage) throws BardException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"        Task task \u003d tasks.deleteTask(index);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"        return \" Noted. I\u0027ve removed this task:\\n\" + \"   \" + task + \"\\n\" + \" Now you have \"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"                + tasks.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"hyizhak":39}},{"path":"src/main/java/bard/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"    public ExitCommand() {}","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"     * Exits the program.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"     * @param tasks TaskList containing all tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"     * @param ui TextUi object to interact with user.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"     * @param storage Storage object to save tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"     * @return String response to be displayed to user.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"    public String execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"        ui.setExited();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"hyizhak":25}},{"path":"src/main/java/bard/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":" * Represents a command to find tasks by keyword.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"    private String keyword;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"     * Creates a new FindCommand with the given keyword.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"     * Finds tasks containing the keyword.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"     * @param tasks TaskList containing all tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"     * @param ui TextUi object to interact with user.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"     * @param storage Storage object to save tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"     * @return String response to be displayed to user.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"    public String execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"        TaskList matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"        return \" Here are the matching tasks in your list:\\n\" + matchingTasks.listTasks();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"hyizhak":34}},{"path":"src/main/java/bard/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import bard.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":" * Represents a command to display help information.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"     * Creates a new HelpCommand.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"    public HelpCommand() {}","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"     * Displays help information.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"     * @param tasks TaskList containing all tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"     * @param ui TextUi object to interact with user.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"     * @param storage Storage object to save tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"     * @return String response to be displayed to user.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"     * @throws BardException If an error occurs during execution.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"    public String execute(TaskList tasks, TextUi ui, Storage storage) throws BardException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"        return \" Here are the commands you can use:\\n\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"                + \"1. todo \u003cdescription\u003e - Adds a todo task.\\n\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"                + \"2. deadline \u003cdescription\u003e /by \u003cdate\u003e - Adds a deadline task.\\n\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"                + \"3. event \u003cdescription\u003e /at \u003cdate\u003e - Adds an event task.\\n\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"                + \"4. list - Lists all tasks.\\n\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"                + \"5. (un)mark \u003ctask number\u003e - Marks a task as (not) done.\\n\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"                + \"6. delete \u003ctask number\u003e - Deletes a task.\\n\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"                + \"7. find \u003ckeyword\u003e - Finds tasks with the keyword.\\n\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"                + \"8. sort - Sorts all tasks by deadline.\\n\" + \"9. bye - Exits the program.\\n\"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"                + \"For more information, visit: https://hyizhak.github.io/ip/\\n\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"hyizhak":38}},{"path":"src/main/java/bard/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":" * Represents an invalid command.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"    public InvalidCommand() {}","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    public String execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"        return \"Hi! What can I do for you today? If you need help, type \u0027help\u0027.\\n\";","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"hyizhak":16}},{"path":"src/main/java/bard/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"    public ListCommand() {}","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"     * @param tasks TaskList containing all tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"     * @param ui TextUi object to interact with user.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"     * @param storage Storage object to save tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"     * @return String response to be displayed to user.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"    public String execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"        return tasks.listTasks();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"hyizhak":24}},{"path":"src/main/java/bard/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import bard.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":" * Represents a command to mark or unmark a task as done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    private int index;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"    private boolean isMarkedDone;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"     * @param index Index of task to be marked as done.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"     * @param isMarkedDone Boolean indicating if task is marked as done.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    public MarkCommand(int index, boolean isMarkedDone) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"        this.isMarkedDone \u003d isMarkedDone;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"     * Executes the MarkCommand.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"     * @param tasks TaskList containing all tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"     * @param ui TextUi object to interact with user.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"     * @param storage Storage object to save tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"     * @return String response to be displayed to user.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"     * @throws BardException If an error occurs during execution.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"    public String execute(TaskList tasks, TextUi ui, Storage storage) throws BardException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"        Task task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"        String response;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"        if (isMarkedDone) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"            task \u003d tasks.markTaskAsDone(index);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"            response \u003d \" Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"        } else {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"            task \u003d tasks.unmarkTaskAsDone(index);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"            response \u003d \" Okay, I\u0027ve unmarked this task as done:\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"        return response + \"   \" + task + \"\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"hyizhak":49}},{"path":"src/main/java/bard/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":" * Represents a command to sort all tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"    public SortCommand() {}","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"     * Sorts all tasks in the task list.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"     * @param tasks TaskList containing all tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"     * @param ui TextUi object to interact with user.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"     * @param storage Storage object to save tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"     * @return String response to be displayed to user.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"    public String execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"        tasks.sortTasks();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"        return \" Here are the tasks in your list, sorted by deadline:\\n\" + tasks.listTasks();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"hyizhak":25}},{"path":"src/main/java/bard/exception/BardException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":" * Represents an exception thrown by Bard.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"public class BardException extends Exception {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"    public BardException(String message) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"        super(message);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"        return TextUi.getHorizontalLine() + getMessage() + \"\\n\" + TextUi.getHorizontalLine();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"hyizhak":17}},{"path":"src/main/java/bard/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.parser;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.command.AddCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import bard.command.Command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.command.DeleteCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import bard.command.ExitCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"import bard.command.FindCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"import bard.command.HelpCommand;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"import bard.command.InvalidCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"import bard.command.ListCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"import bard.command.MarkCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"import bard.command.SortCommand;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"import bard.task.Deadline;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"import bard.task.Event;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"import bard.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"import bard.task.Todo;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"/** Parses the full command string and returns the corresponding Command object. */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"public class CommandParser {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"     * Parses the full command and returns the corresponding Command object.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"     * @param fullCommand Full command string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"     * @return Command object corresponding to the command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"     * @throws BardException If an error occurs during parsing.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"    public static Command parse(String fullCommand) throws BardException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"        // spotless:off","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"        String command \u003d words[0];","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"        // For commands that require a second word, ensure it exists.","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"        if ((command.equals(\"delete\") || command.equals(\"mark\")","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"                || command.equals(\"unmark\") || command.equals(\"find\"))","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"                \u0026\u0026 words.length \u003c 2) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"            throw new BardException(\"Command \u0027\" + command + \"\u0027 requires an additional argument.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"        return switch (command) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"        case \"bye\" -\u003e new ExitCommand();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"        case \"list\" -\u003e new ListCommand();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"        case \"delete\" -\u003e new DeleteCommand(Integer.parseInt(words[1]));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"        case \"todo\", \"deadline\", \"event\" -\u003e new AddCommand(createTask(fullCommand));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"        case \"mark\" -\u003e new MarkCommand(Integer.parseInt(words[1]), true);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"        case \"unmark\" -\u003e new MarkCommand(Integer.parseInt(words[1]), false);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"        case \"find\" -\u003e new FindCommand(words[1]);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"        case \"sort\" -\u003e new SortCommand();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"        case \"help\" -\u003e new HelpCommand();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"        default -\u003e new InvalidCommand();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"        };","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"        // spotless:on","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"     * Creates a Task object from the full command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"     * @param fullCommand Full command string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"     * @return Task object created from the command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hyizhak"},"content":"     * @throws BardException If an error occurs during parsing.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hyizhak"},"content":"    private static Task createTask(String fullCommand) throws BardException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hyizhak"},"content":"        // Split the command into the command word and its arguments.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hyizhak"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hyizhak"},"content":"        String command \u003d parts[0].trim();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hyizhak"},"content":"        assert parts.length \u003e 0 : \"Add-task-command should not be empty\";","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hyizhak"},"content":"        switch (command) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hyizhak"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hyizhak"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hyizhak"},"content":"                throw new BardException(\"\u0027todo\u0027 requires a task description.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hyizhak"},"content":"            return new Todo(parts[1].trim());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hyizhak"},"content":"        case \"deadline\":","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hyizhak"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hyizhak"},"content":"                throw new BardException(\"\u0027deadline\u0027 requires a task description and a deadline.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hyizhak"},"content":"            String[] deadlineParts \u003d parts[1].split(\" /by \", 2);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hyizhak"},"content":"            if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hyizhak"},"content":"                throw new BardException(\"\u0027deadline\u0027 requires a task description and a deadline.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hyizhak"},"content":"            return new Deadline(deadlineParts[0].trim(),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hyizhak"},"content":"                    DateParser.parseHourDate(deadlineParts[1].trim()));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hyizhak"},"content":"        case \"event\":","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hyizhak"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hyizhak"},"content":"                throw new BardException(\"\u0027event\u0027 requires a task description and a time range.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hyizhak"},"content":"            String[] eventParts \u003d parts[1].split(\" /from | /to \", 3);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hyizhak"},"content":"            if (eventParts.length \u003c 3) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hyizhak"},"content":"                throw new BardException(\"\u0027event\u0027 requires a task description and a time range.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hyizhak"},"content":"            return new Event(eventParts[0].trim(), DateParser.parseHourDate(eventParts[1].trim()),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hyizhak"},"content":"                    DateParser.parseHourDate(eventParts[2].trim()));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hyizhak"},"content":"        default:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hyizhak"},"content":"            throw new BardException(\"Unknown task command \u0027\" + command + \"\u0027.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"hyizhak":99}},{"path":"src/main/java/bard/parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.parser;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":" * Parses date-time strings into LocalDateTime objects.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"public class DateParser {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"    public static final DateTimeFormatter INPUT_HOUR_FORMAT \u003d","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"    public static final DateTimeFormatter INPUT_DAY_FORMAT \u003d","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"    public static final DateTimeFormatter OUTPUT_HOUR_FORMAT \u003d","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    public static final DateTimeFormatter OUTPUT_DAY_FORMAT \u003d","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"    // Private constructor prevents instantiation","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"    private DateParser() {}","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"     * Parses a date-time string into a LocalDateTime object.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"     * @param input Date-time string to be parsed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"     * @return LocalDateTime object representing the date-time.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"    public static LocalDateTime parseHourDate(String input) throws BardException {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"        String dayPart \u003d parts[0].trim();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"        // Use default time \"1200\" if no time is provided","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"        // spotless:off","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"        String timePart \u003d (parts.length \u003c 2 || parts[1].trim().isEmpty()) ? \"1200\" : parts[1].trim();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"        // spotless:on","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"        // Parse the time part once, regardless of day format","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"        LocalTime time;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"            time \u003d LocalTime.parse(timePart, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"            throw new BardException(\"Invalid day or time format! \"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"                    + \"Use yyyy-MM-dd (e.g., 2021-12-31) and HHmm (e.g., 1800 for 6 PM).\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"        LocalDate date;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"        if (dayPart.contains(\"-\")) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"            date \u003d parseDayDate(dayPart);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"            if (date \u003d\u003d null) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"                return null;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"        } else {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"                DayOfWeek targetDay \u003d convertDayToEnum(dayPart);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"                date \u003d getNextOccurrence(targetDay);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hyizhak"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"                throw new BardException(","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hyizhak"},"content":"                        \"Invalid day format! Use a valid weekday (e.g., Mon, Sunday).\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hyizhak"},"content":"        return LocalDateTime.of(date, time);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hyizhak"},"content":"     * Parses a date string into a LocalDate object.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hyizhak"},"content":"     * @param input Date string to be parsed.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hyizhak"},"content":"     * @return LocalDate object representing the date.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hyizhak"},"content":"    public static LocalDate parseDayDate(String input) throws BardException {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hyizhak"},"content":"        if (input.contains(\"-\")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hyizhak"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hyizhak"},"content":"                LocalDate date \u003d LocalDate.parse(input, INPUT_DAY_FORMAT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hyizhak"},"content":"                return date;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hyizhak"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hyizhak"},"content":"                throw new BardException(\"Invalid date format! Use yyyy-MM-dd (e.g., 2021-12-31).\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hyizhak"},"content":"        } else {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hyizhak"},"content":"            try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hyizhak"},"content":"                DayOfWeek targetDay \u003d convertDayToEnum(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hyizhak"},"content":"                LocalDate nextDay \u003d getNextOccurrence(targetDay); // Find next \"Monday\" etc.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hyizhak"},"content":"                return nextDay;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hyizhak"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hyizhak"},"content":"                throw new BardException(","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hyizhak"},"content":"                        \"Invalid day format! Use a valid weekday (e.g., Mon, Sunday).\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hyizhak"},"content":"     * Converts a day string to a DayOfWeek enum.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hyizhak"},"content":"     * @param day Day string to be converted.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hyizhak"},"content":"     * @return DayOfWeek enum corresponding to the day.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hyizhak"},"content":"    private static DayOfWeek convertDayToEnum(String day) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hyizhak"},"content":"        // spotless:off","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hyizhak"},"content":"        String lowerDay \u003d day.toLowerCase();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hyizhak"},"content":"        return switch (lowerDay) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hyizhak"},"content":"        case \"mon\", \"monday\" -\u003e DayOfWeek.MONDAY;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hyizhak"},"content":"        case \"tue\", \"tues\", \"tuesday\" -\u003e DayOfWeek.TUESDAY;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hyizhak"},"content":"        case \"wed\", \"wednesday\" -\u003e DayOfWeek.WEDNESDAY;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hyizhak"},"content":"        case \"thu\", \"thurs\", \"thursday\" -\u003e DayOfWeek.THURSDAY;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hyizhak"},"content":"        case \"fri\", \"friday\" -\u003e DayOfWeek.FRIDAY;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hyizhak"},"content":"        case \"sat\", \"saturday\" -\u003e DayOfWeek.SATURDAY;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hyizhak"},"content":"        case \"sun\", \"sunday\" -\u003e DayOfWeek.SUNDAY;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hyizhak"},"content":"        default -\u003e throw new IllegalArgumentException(\"Invalid day: \" + day);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hyizhak"},"content":"        };","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hyizhak"},"content":"        // spotless:on","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hyizhak"},"content":"     * Finds the next occurrence of a target day.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hyizhak"},"content":"     * @param targetDay DayOfWeek enum representing the target day.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hyizhak"},"content":"     * @return LocalDate object representing the next occurrence of the target day.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hyizhak"},"content":"    private static LocalDate getNextOccurrence(DayOfWeek targetDay) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hyizhak"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hyizhak"},"content":"        int daysUntilNext \u003d (targetDay.getValue() - today.getDayOfWeek().getValue() + 7) % 7;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hyizhak"},"content":"        return today.plusDays(daysUntilNext \u003d\u003d 0 ? 7 : daysUntilNext);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"hyizhak":129}},{"path":"src/main/java/bard/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import java.io.File;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"import bard.parser.DateParser;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"import bard.task.Deadline;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"import bard.task.Event;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"import bard.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"import bard.task.Todo;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"/** Handles loading and saving of tasks to a file */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"public class Storage {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    private static final String FILE_PATH \u003d Path.of(\"data\", \"tasks.txt\").toString();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"    public Storage() throws BardException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"        createFileIfNotExists();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"    private void createFileIfNotExists() throws BardException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"        // System.out.println(\"Saving storage file to: \" + file.getAbsolutePath());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"            if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"                parentDir.mkdirs(); // Create parent directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"                file.createNewFile(); // Create file if it doesn\u0027t exist","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"            throw new BardException(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"    /** Loads tasks from the file into memory */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"    public TaskList load() throws BardException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"            String line;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"            throw new BardException(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"    /** Saves all tasks to the file */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hyizhak"},"content":"    public void save(TaskList tasks) throws BardException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hyizhak"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hyizhak"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hyizhak"},"content":"                bw.write(task.toFileString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hyizhak"},"content":"                bw.newLine();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hyizhak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hyizhak"},"content":"            throw new BardException(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hyizhak"},"content":"    /** Saves a single task to the file */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hyizhak"},"content":"    public void save(Task task) throws BardException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hyizhak"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(FILE_PATH, true))) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hyizhak"},"content":"            bw.write(task.toFileString());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hyizhak"},"content":"            bw.newLine();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hyizhak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hyizhak"},"content":"            throw new BardException(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hyizhak"},"content":"    /** Parses a line from the file into a bard.task.Task object */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hyizhak"},"content":"    private Task parseTask(String line) throws BardException {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hyizhak"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hyizhak"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hyizhak"},"content":"            return null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hyizhak"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hyizhak"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hyizhak"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hyizhak"},"content":"        switch (type) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hyizhak"},"content":"        case \"T\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hyizhak"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hyizhak"},"content":"        case \"D\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hyizhak"},"content":"            return new Deadline(description, DateParser.parseHourDate(parts[3]), isDone);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hyizhak"},"content":"        case \"E\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hyizhak"},"content":"            String[] eventParts \u003d parts[3].split(\" - \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hyizhak"},"content":"            return new Event(description, DateParser.parseHourDate(eventParts[0]),","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hyizhak"},"content":"                    DateParser.parseHourDate(eventParts[1]), isDone);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hyizhak"},"content":"        default:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hyizhak"},"content":"            return null;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"hyizhak":108}},{"path":"src/main/java/bard/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.parser.DateParser;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":" * Represents a deadlined task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"     * @param by Deadline of task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"        super(description);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"     * @param by Deadline of task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"     * @param isDone Whether the deadline is done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateParser.OUTPUT_HOUR_FORMAT) + \")\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"    @Override","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"        return \"D | \" + super.toFileString() + \" | \" + by.format(DateParser.INPUT_HOUR_FORMAT);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"hyizhak":45}},{"path":"src/main/java/bard/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import bard.parser.DateParser;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":" * Represents an event.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"     * Constructor for Event.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"     * @param description Description of event.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"     * @param from Start time of event.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"     * @param to End time of event.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"        super(description);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"     * Constructor for Event.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"     * @param description Description of event.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"     * @param from Start time of event.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"     * @param to End time of event.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"     * @param isDone Whether the event is done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, boolean isDone) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateParser.OUTPUT_HOUR_FORMAT)","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"                + \" to: \" + to.format(DateParser.OUTPUT_HOUR_FORMAT) + \")\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"    @Override","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"        return \"E | \" + super.toFileString() + \" | \" + from.format(DateParser.INPUT_HOUR_FORMAT)","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"                + \" - \" + to.format(DateParser.INPUT_HOUR_FORMAT);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"hyizhak":52}},{"path":"src/main/java/bard/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":" * Represents a task with a description and a status of whether it is done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"public class Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"    private String description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"    private boolean isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"     * Constructor for Task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"     * @param description Description of task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"     * Constructor for Task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"     * @param description Description of task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"     * Returns the description of the task used in storage.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"     * @return Description of the task in storage format.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"     * Compares this task with another task based on priority.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"     * @param task2 Task to compare with.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"     * @return Integer representing the comparison. Tasks with a closer deadline are considered","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"     *         higher priority.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"    public int compareTo(Task task2) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hyizhak"},"content":"        // Incomplete tasks are prioritized over completed ones.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hyizhak"},"content":"        if (this.isDone !\u003d task2.isDone) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hyizhak"},"content":"            return this.isDone ? 1 : -1;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"        // Extract the time value from each task, if available.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime thisTime \u003d null;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hyizhak"},"content":"        if (this instanceof Deadline) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hyizhak"},"content":"            thisTime \u003d ((Deadline) this).by;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hyizhak"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hyizhak"},"content":"            thisTime \u003d ((Event) this).from;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime otherTime \u003d null;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hyizhak"},"content":"        if (task2 instanceof Deadline) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hyizhak"},"content":"            otherTime \u003d ((Deadline) task2).by;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hyizhak"},"content":"        } else if (task2 instanceof Event) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hyizhak"},"content":"            otherTime \u003d ((Event) task2).from;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hyizhak"},"content":"        // If both tasks have a time, compare them.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hyizhak"},"content":"        if (thisTime !\u003d null \u0026\u0026 otherTime !\u003d null) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hyizhak"},"content":"            return thisTime.compareTo(otherTime);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hyizhak"},"content":"        // If only one task has a time, it is prioritized.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hyizhak"},"content":"        if (thisTime !\u003d null) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hyizhak"},"content":"            return -1;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hyizhak"},"content":"        if (otherTime !\u003d null) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hyizhak"},"content":"            return 1;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hyizhak"},"content":"        // If neither task has a time, they are considered equal.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hyizhak"},"content":"        return 0;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"hyizhak":97}},{"path":"src/main/java/bard/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import java.util.Iterator;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"    public Task getTask(int index) throws BardException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"            throw new BardException(\"Error: bard.task.Task number out of range.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"    public int getSize() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"     * Returns a list of tasks in the format of a string.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"     * @return String representation of the list of tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"    public String listTasks() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"        StringBuilder taskList \u003d new StringBuilder();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"            taskList.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"        return taskList.toString();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"     * @param taskNumber Task number to be marked as done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"     * @return Task that was marked as done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"     * @throws BardException","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"    public Task markTaskAsDone(int taskNumber) throws BardException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e\u003d tasks.size() + 1) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"            throw new BardException(\"Task number out of range.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"        tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hyizhak"},"content":"        return tasks.get(taskNumber - 1);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hyizhak"},"content":"     * Unmarks a task as done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hyizhak"},"content":"     * @param taskNumber Task number to be unmarked as done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hyizhak"},"content":"     * @return Task that was unmarked as done.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hyizhak"},"content":"     * @throws BardException","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hyizhak"},"content":"    public Task unmarkTaskAsDone(int taskNumber) throws BardException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hyizhak"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e\u003d tasks.size() + 1) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hyizhak"},"content":"            throw new BardException(\"Task number out of range.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hyizhak"},"content":"        tasks.get(taskNumber - 1).unmarkAsDone();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hyizhak"},"content":"        return tasks.get(taskNumber - 1);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hyizhak"},"content":"     * Deletes a task.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hyizhak"},"content":"     * @param taskNumber Task number to be deleted.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hyizhak"},"content":"     * @return Task that was deleted.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hyizhak"},"content":"     * @throws BardException","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hyizhak"},"content":"    public Task deleteTask(int taskNumber) throws BardException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hyizhak"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e\u003d tasks.size() + 1) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hyizhak"},"content":"            throw new BardException(\"Task number out of range.\");","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hyizhak"},"content":"        Task task \u003d tasks.remove(taskNumber - 1);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hyizhak"},"content":"        return task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hyizhak"},"content":"     * Finds tasks that contain a keyword.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hyizhak"},"content":"     * @param keyword Keyword to search for in tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hyizhak"},"content":"     * @return TaskList containing tasks that contain the keyword.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hyizhak"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hyizhak"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hyizhak"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hyizhak"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hyizhak"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hyizhak"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hyizhak"},"content":"     * Sorts tasks in the list chronologically based on the deadline.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hyizhak"},"content":"    public void sortTasks() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hyizhak"},"content":"        tasks.sort((task1, task2) -\u003e task1.compareTo(task2));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hyizhak"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hyizhak"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hyizhak"},"content":"        return tasks.iterator();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"hyizhak":123}},{"path":"src/main/java/bard/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":" * Represents a todo task without any date/time attached to it.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"        super(description);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"hyizhak":23}},{"path":"src/main/java/bard/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":" * containing text from the speaker.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"            FXMLLoader fxmlLoader \u003d","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"                    new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"    private void flip() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"     * Adds error styling to the dialog box.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"    private void errorStyle() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hyizhak"},"content":"        dialog.getStyleClass().add(\"error-label\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hyizhak"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hyizhak"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"    public static DialogBox getBardDialog(String text, Image img) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hyizhak"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hyizhak"},"content":"        db.flip();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hyizhak"},"content":"        return db;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hyizhak"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hyizhak"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hyizhak"},"content":"        db.errorStyle();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hyizhak"},"content":"        return db;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"hyizhak":79}},{"path":"src/main/java/bard/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import bard.Bard;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"    private Bard bard;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"    private Image bardImage \u003d","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/Bard_circular_icon.png\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"    /** Injects the Bard instance */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"    public void setBard(Bard b) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"        bard \u003d b;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Bard\u0027s reply and","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"     * then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"    @FXML","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"        try {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"            String response \u003d bard.getResponse(input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"                    DialogBox.getBardDialog(response, bardImage));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"                    DialogBox.getErrorDialog(e.getMessage(), bardImage));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hyizhak"},"content":"        // Check if the exit flag has been set by an ExitCommand","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hyizhak"},"content":"        if (bard.hasExited()) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hyizhak"},"content":"            // Use a delay to let the UI show the goodbye message","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hyizhak"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hyizhak"},"content":"            delay.setOnFinished(event -\u003e {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"                Platform.exit(); // Gracefully shuts down JavaFX","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hyizhak"},"content":"                System.exit(0); // Ensures the JVM terminates","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hyizhak"},"content":"            });","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hyizhak"},"content":"            delay.play();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"hyizhak":74}},{"path":"src/main/java/bard/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.ui;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":" * TextUi class handles the user interface of the application.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"public class TextUi {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"    private static String horizontalLine \u003d","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"            \"____________________________________________________________\\n\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"    private static String startingLine \u003d","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"            horizontalLine + \" Hello! I\u0027m Bard.\\n\" + \" What can I do for you?\\n\" + horizontalLine;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"    private boolean hasExited \u003d false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"     * Constructor for TextUi class.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"    public TextUi() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"    public static String getHorizontalLine() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"        return horizontalLine;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"    public void response(String message) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"        System.out.println(horizontalLine + message + horizontalLine);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"    public void showErrorMessage(String message) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"        System.out.println(\"Error: Unable to load tasks from file.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"    public void setExited() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"        hasExited \u003d true;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"    public boolean hasExited() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"        return hasExited;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"hyizhak":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"hyizhak":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bard.ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"hyizhak":19}},{"path":"src/test/java/bard/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import java.util.List;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"import bard.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"import bard.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"import bard.ui.TextUi;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"/** JUnit test class for AddCommand. */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"public class AddCommandTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"    /** Dummy Task implementation for testing. */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"    static class DummyTask extends Task {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"        public DummyTask(String description) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"            super(description);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"     * Dummy TaskList implementation for testing. This implementation records tasks in an ArrayList.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"    static class DummyTaskList extends TaskList {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"        private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"        @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"            tasks.add(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"        @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"        public int getSize() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"            return tasks.size();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"        // Optional helper to retrieve the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"        public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"            return tasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"     * Dummy TextUi implementation. In this test, the TextUi is not used, so we provide an empty","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"     * implementation.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"    static class DummyUi extends TextUi {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"        // Implement any abstract methods if necessary.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"     * Dummy Storage implementation for testing. This implementation records the tasks passed to","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"     * save().","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"    static class DummyStorage extends Storage {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hyizhak"},"content":"        private final List\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hyizhak"},"content":"        public DummyStorage() throws BardException {}","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hyizhak"},"content":"        @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hyizhak"},"content":"        public void save(Task task) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hyizhak"},"content":"            savedTasks.add(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hyizhak"},"content":"        // Helper method to verify which tasks were saved.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hyizhak"},"content":"        public List\u003cTask\u003e getSavedTasks() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hyizhak"},"content":"            return savedTasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hyizhak"},"content":"     * Tests that executing an AddCommand - adds the task to the TaskList, - calls","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hyizhak"},"content":"     * storage.save(task), and - returns the correct message.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hyizhak"},"content":"    public void testExecuteAddsTaskAndSavesIt() throws BardException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hyizhak"},"content":"        // Create a dummy task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hyizhak"},"content":"        DummyTask task \u003d new DummyTask(\"Test Task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hyizhak"},"content":"        // Create the AddCommand with the dummy task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hyizhak"},"content":"        AddCommand addCommand \u003d new AddCommand(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hyizhak"},"content":"        // Create dummy instances for TaskList, TextUi, and Storage.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hyizhak"},"content":"        DummyTaskList taskList \u003d new DummyTaskList();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hyizhak"},"content":"        DummyUi ui \u003d new DummyUi();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hyizhak"},"content":"        DummyStorage storage \u003d new DummyStorage();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hyizhak"},"content":"        // Execute the command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hyizhak"},"content":"        String result \u003d addCommand.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hyizhak"},"content":"        // Verify that the task was added to the TaskList.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hyizhak"},"content":"        assertEquals(1, taskList.getSize(),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hyizhak"},"content":"                \"TaskList should contain 1 task after executing AddCommand.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hyizhak"},"content":"        // Verify that Storage.save(task) was called.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hyizhak"},"content":"        assertEquals(1, storage.getSavedTasks().size(), \"Storage should have saved 1 task.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hyizhak"},"content":"        assertEquals(task, storage.getSavedTasks().get(0),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hyizhak"},"content":"                \"The saved task should be the same as the added task.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hyizhak"},"content":"        // Construct the expected output message.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hyizhak"},"content":"        String expectedMessage \u003d \" Got it. I\u0027ve added this task:\\n\" + \"   \" + task + \"\\n\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hyizhak"},"content":"                + \" Now you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hyizhak"},"content":"        // Verify that the returned message is exactly as expected.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hyizhak"},"content":"        assertEquals(expectedMessage, result,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hyizhak"},"content":"                \"The output message should match the expected message.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"hyizhak":113}},{"path":"src/test/java/bard/parser/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.parser;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"import bard.command.AddCommand;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"import bard.command.Command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"import bard.command.DeleteCommand;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"import bard.command.ExitCommand;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"import bard.command.InvalidCommand;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"import bard.command.ListCommand;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"import bard.command.MarkCommand;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"import bard.task.Deadline;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"import bard.task.Event;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"import bard.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"import bard.task.Todo;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"/** Test suite for the CommandParser class. */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"public class CommandParserTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"    private Field getFieldRecursively(Class\u003c?\u003e clazz, String fieldName)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"            throws NoSuchFieldException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"        while (clazz !\u003d null) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"            try {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"                Field field \u003d clazz.getDeclaredField(fieldName);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"                field.setAccessible(true);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"                return field;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"            } catch (NoSuchFieldException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"                // Move to the superclass","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"                clazz \u003d clazz.getSuperclass();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"        throw new NoSuchFieldException(\"Field \u0027\" + fieldName + \"\u0027 not found in class hierarchy.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"     * Helper method to retrieve a private field\u0027s value via reflection.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"     * @param instance The object instance from which to extract the field.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"     * @param fieldName The name of the private field.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"     * @param fieldClass The expected type of the field.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"     * @param \u003cT\u003e The type parameter.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"     * @return The value of the private field.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"     * @throws Exception if reflection fails.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"    private \u003cT\u003e T getPrivateField(Object instance, String fieldName, Class\u003cT\u003e fieldClass)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"            throws Exception {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"        Field field \u003d getFieldRecursively(instance.getClass(), fieldName);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"        field.setAccessible(true);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"        return fieldClass.cast(field.get(instance));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"    public void testParseBye() throws BardException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hyizhak"},"content":"        Command command \u003d CommandParser.parse(\"bye\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hyizhak"},"content":"        assertTrue(command instanceof ExitCommand,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hyizhak"},"content":"                \"Command \u0027bye\u0027 should return an instance of ExitCommand.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hyizhak"},"content":"    public void testParseList() throws BardException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hyizhak"},"content":"        Command command \u003d CommandParser.parse(\"list\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hyizhak"},"content":"        assertTrue(command instanceof ListCommand,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hyizhak"},"content":"                \"Command \u0027list\u0027 should return an instance of ListCommand.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hyizhak"},"content":"    public void testParseDelete() throws BardException, Exception {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hyizhak"},"content":"        Command command \u003d CommandParser.parse(\"delete 3\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hyizhak"},"content":"        assertTrue(command instanceof DeleteCommand,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hyizhak"},"content":"                \"Command \u0027delete\u0027 should return an instance of DeleteCommand.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hyizhak"},"content":"        // Use reflection to check the internal index value.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hyizhak"},"content":"        int index \u003d getPrivateField(command, \"index\", Integer.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hyizhak"},"content":"        assertEquals(3, index, \"DeleteCommand should store index 3.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hyizhak"},"content":"    public void testParseTodo() throws BardException, Exception {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hyizhak"},"content":"        String taskDescription \u003d \"read book\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hyizhak"},"content":"        Command command \u003d CommandParser.parse(\"todo \" + taskDescription);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hyizhak"},"content":"        assertTrue(command instanceof AddCommand,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hyizhak"},"content":"                \"Command \u0027todo\u0027 should return an instance of AddCommand.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hyizhak"},"content":"        // Retrieve the encapsulated task from the AddCommand.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hyizhak"},"content":"        Task task \u003d getPrivateField(command, \"task\", Task.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hyizhak"},"content":"        assertTrue(task instanceof Todo,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hyizhak"},"content":"                \"Task for a \u0027todo\u0027 command should be an instance of Todo.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hyizhak"},"content":"        // Check the task description.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hyizhak"},"content":"        String desc \u003d getPrivateField(task, \"description\", String.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hyizhak"},"content":"        assertEquals(taskDescription, desc, \"Todo task description should match the input.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hyizhak"},"content":"    public void testParseDeadline() throws BardException, Exception {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hyizhak"},"content":"        String description \u003d \"submit report\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hyizhak"},"content":"        String deadlineString \u003d \"2025-12-31 2359\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hyizhak"},"content":"        // Parse the deadline command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hyizhak"},"content":"        Command command \u003d CommandParser.parse(\"deadline \" + description + \" /by \" + deadlineString);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hyizhak"},"content":"        assertTrue(command instanceof AddCommand,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hyizhak"},"content":"                \"Command \u0027deadline\u0027 should return an instance of AddCommand.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hyizhak"},"content":"        Task task \u003d getPrivateField(command, \"task\", Task.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hyizhak"},"content":"        assertTrue(task instanceof Deadline,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hyizhak"},"content":"                \"Task for a \u0027deadline\u0027 command should be an instance of Deadline.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hyizhak"},"content":"        // Verify the task description.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hyizhak"},"content":"        String taskDesc \u003d getPrivateField(task, \"description\", String.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hyizhak"},"content":"        assertEquals(description, taskDesc, \"Deadline task description should match the input.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hyizhak"},"content":"        // Verify the parsed deadline.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime by \u003d getPrivateField(task, \"by\", LocalDateTime.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime expectedBy \u003d DateParser.parseHourDate(deadlineString);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hyizhak"},"content":"        assertEquals(expectedBy, by, \"Deadline time should match the expected parsed value.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hyizhak"},"content":"    public void testParseEvent() throws BardException, Exception {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hyizhak"},"content":"        String description \u003d \"project meeting\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hyizhak"},"content":"        String fromString \u003d \"2025-12-31 1000\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hyizhak"},"content":"        String toString \u003d \"2025-12-31 1200\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hyizhak"},"content":"        Command command \u003d CommandParser","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hyizhak"},"content":"                .parse(\"event \" + description + \" /from \" + fromString + \" /to \" + toString);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hyizhak"},"content":"        assertTrue(command instanceof AddCommand,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hyizhak"},"content":"                \"Command \u0027event\u0027 should return an instance of AddCommand.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hyizhak"},"content":"        Task task \u003d getPrivateField(command, \"task\", Task.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hyizhak"},"content":"        assertTrue(task instanceof Event,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hyizhak"},"content":"                \"Task for an \u0027event\u0027 command should be an instance of Event.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"hyizhak"},"content":"        // Check event description.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"hyizhak"},"content":"        String taskDesc \u003d getPrivateField(task, \"description\", String.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"hyizhak"},"content":"        assertEquals(description, taskDesc, \"Event task description should match the input.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"hyizhak"},"content":"        // Verify the event\u0027s from and to times.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime from \u003d getPrivateField(task, \"from\", LocalDateTime.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime to \u003d getPrivateField(task, \"to\", LocalDateTime.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime expectedFrom \u003d DateParser.parseHourDate(fromString);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime expectedTo \u003d DateParser.parseHourDate(toString);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"hyizhak"},"content":"        assertEquals(expectedFrom, from,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"hyizhak"},"content":"                \"Event start time should match the expected parsed value.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"hyizhak"},"content":"        assertEquals(expectedTo, to, \"Event end time should match the expected parsed value.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"hyizhak"},"content":"    public void testParseMark() throws BardException, Exception {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"hyizhak"},"content":"        Command command \u003d CommandParser.parse(\"mark 2\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"hyizhak"},"content":"        assertTrue(command instanceof MarkCommand,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"hyizhak"},"content":"                \"Command \u0027mark\u0027 should return an instance of MarkCommand.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"hyizhak"},"content":"        int index \u003d getPrivateField(command, \"index\", Integer.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"hyizhak"},"content":"        boolean isMarkedDone \u003d getPrivateField(command, \"isMarkedDone\", Boolean.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"hyizhak"},"content":"        assertEquals(2, index, \"MarkCommand should store index 2.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"hyizhak"},"content":"        assertTrue(isMarkedDone, \"MarkCommand should indicate marking (true) for \u0027mark\u0027 command.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"hyizhak"},"content":"    public void testParseUnmark() throws BardException, Exception {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"hyizhak"},"content":"        Command command \u003d CommandParser.parse(\"unmark 2\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"hyizhak"},"content":"        assertTrue(command instanceof MarkCommand,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"hyizhak"},"content":"                \"Command \u0027unmark\u0027 should return an instance of MarkCommand.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"hyizhak"},"content":"        int index \u003d getPrivateField(command, \"index\", Integer.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"hyizhak"},"content":"        boolean isMarkedDone \u003d getPrivateField(command, \"isMarkedDone\", Boolean.class);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"hyizhak"},"content":"        assertEquals(2, index, \"MarkCommand should store index 2.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"hyizhak"},"content":"        assertFalse(isMarkedDone,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"hyizhak"},"content":"                \"MarkCommand should indicate unmarking (false) for \u0027unmark\u0027 command.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"hyizhak"},"content":"    public void testParseInvalidCommand() throws BardException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"hyizhak"},"content":"        Command command \u003d CommandParser.parse(\"unknown command\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"hyizhak"},"content":"        assertTrue(command instanceof InvalidCommand,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"hyizhak"},"content":"                \"An unrecognized command should return an instance of InvalidCommand.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"hyizhak"},"content":"    public void testTodoWithoutDescriptionThrowsException() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"hyizhak"},"content":"        BardException exception \u003d","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"hyizhak"},"content":"                assertThrows(BardException.class, () -\u003e CommandParser.parse(\"todo\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"hyizhak"},"content":"        assertEquals(\"\u0027todo\u0027 requires a task description.\", exception.getMessage(),","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"hyizhak"},"content":"                \"A \u0027todo\u0027 command without a description should throw the correct exception.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"hyizhak"},"content":"    public void testDeadlineWithoutProperFormatThrowsException() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"hyizhak"},"content":"        // spotless:off","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"hyizhak"},"content":"        BardException exception \u003d","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"hyizhak"},"content":"                assertThrows(BardException.class, () -\u003e CommandParser.parse(\"deadline submit report\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"hyizhak"},"content":"        // spotless:on","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"hyizhak"},"content":"        assertEquals(\"\u0027deadline\u0027 requires a task description and a deadline.\",","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"hyizhak"},"content":"                exception.getMessage(),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"hyizhak"},"content":"                \"A \u0027deadline\u0027 command without proper \u0027/by\u0027 format should throw the correct exception.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"hyizhak"},"content":"    public void testEventWithoutProperFormatThrowsException() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"hyizhak"},"content":"        // spotless:off","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"hyizhak"},"content":"        BardException exception \u003d","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"hyizhak"},"content":"                assertThrows(BardException.class, () -\u003e CommandParser.parse(\"event meeting /from 2025-12-31T10:00\"));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"hyizhak"},"content":"        // spotless:on","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"hyizhak"},"content":"        assertEquals(\"\u0027event\u0027 requires a task description and a time range.\",","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"hyizhak"},"content":"                exception.getMessage(),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"hyizhak"},"content":"                \"An \u0027event\u0027 command without proper \u0027/from\u0027 and \u0027/to\u0027 segments should throw the correct exception.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"hyizhak":204}},{"path":"src/test/java/bard/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import java.io.File;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"import java.util.List;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"import bard.exception.BardException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"import bard.parser.DateParser;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"import bard.task.Deadline;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"import bard.task.Event;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"import bard.task.Task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"import bard.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"import bard.task.Todo;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":" * JUnit test class for the Storage class.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":" *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":" * Note: This test uses date strings in the \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"    // The storage file is located at \"data/tasks.txt\" as per Storage.FILE_PATH.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"    private final File storageFile \u003d new File(Path.of(\"data\", \"tasks.txt\").toString());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"        // Ensure a clean slate: delete the file if it exists.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"        if (storageFile.exists()) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"            storageFile.delete();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"    @AfterEach","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"    public void tearDown() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"        // Clean up the storage file after each test.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"        if (storageFile.exists()) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"            storageFile.delete();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"    /** Test that the Storage constructor creates the file if it does not exist. */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"    public void testFileCreation() throws BardException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"        // Ensure the file does not exist.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"        if (storageFile.exists()) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"            storageFile.delete();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"        // Constructing Storage should create the file.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hyizhak"},"content":"        new Storage();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"        assertTrue(storageFile.exists(),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hyizhak"},"content":"                \"Storage constructor should create the file if it does not exist.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hyizhak"},"content":"    /** Test that saving a single task appends the correct file string. */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"    public void testSaveTask() throws BardException, IOException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hyizhak"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hyizhak"},"content":"        Todo todo \u003d new Todo(\"test todo\", false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hyizhak"},"content":"        storage.save(todo);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hyizhak"},"content":"        // Read the entire file.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hyizhak"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(storageFile.toPath());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hyizhak"},"content":"        assertEquals(1, lines.size(),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hyizhak"},"content":"                \"There should be one line in the storage file after saving a task.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hyizhak"},"content":"        assertEquals(todo.toFileString(), lines.get(0),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hyizhak"},"content":"                \"The file content should match the task\u0027s file string.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hyizhak"},"content":"    /** Test that saving a TaskList writes all tasks correctly. */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hyizhak"},"content":"    public void testSaveTaskList() throws BardException, IOException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hyizhak"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hyizhak"},"content":"        // Create tasks using the \"yyyy-MM-dd HHmm\" date format.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hyizhak"},"content":"        Todo todo \u003d new Todo(\"test todo\", false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hyizhak"},"content":"        Deadline deadline \u003d new Deadline(\"submit assignment\",","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hyizhak"},"content":"                DateParser.parseHourDate(\"2025-12-31 2359\"), true);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hyizhak"},"content":"        Event event \u003d new Event(\"meeting\", DateParser.parseHourDate(\"2025-12-31 1000\"),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hyizhak"},"content":"                DateParser.parseHourDate(\"2025-12-31 1200\"), false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hyizhak"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hyizhak"},"content":"        taskArray.add(todo);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hyizhak"},"content":"        taskArray.add(deadline);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hyizhak"},"content":"        taskArray.add(event);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hyizhak"},"content":"        TaskList taskList \u003d new TaskList(taskArray);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hyizhak"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hyizhak"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(storageFile.toPath());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hyizhak"},"content":"        assertEquals(3, lines.size(),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hyizhak"},"content":"                \"There should be three lines in the storage file after saving a task list.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hyizhak"},"content":"        assertEquals(todo.toFileString(), lines.get(0), \"First task\u0027s file string should match.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hyizhak"},"content":"        assertEquals(deadline.toFileString(), lines.get(1),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hyizhak"},"content":"                \"Second task\u0027s file string should match.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hyizhak"},"content":"        assertEquals(event.toFileString(), lines.get(2), \"Third task\u0027s file string should match.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hyizhak"},"content":"     * Test that loading tasks from a file returns a TaskList with the correct tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hyizhak"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hyizhak"},"content":"     * This test writes known task strings into the file and then uses the load() method to verify","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hyizhak"},"content":"     * that the reconstructed tasks (via parseTask) have matching file string representations.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hyizhak"},"content":"    public void testLoad() throws BardException, IOException, ReflectiveOperationException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hyizhak"},"content":"        // Prepare known file content (one Todo, one Deadline, and one Event) using the proper date","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hyizhak"},"content":"        // format.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hyizhak"},"content":"        List\u003cString\u003e lines \u003d","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hyizhak"},"content":"                List.of(\"T | 0 | test todo\", \"D | 1 | submit assignment | 2025-12-31 2359\",","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hyizhak"},"content":"                        \"E | 0 | meeting | 2025-12-31 1000 - 2025-12-31 1200\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hyizhak"},"content":"        Files.write(storageFile.toPath(), lines);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hyizhak"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hyizhak"},"content":"        TaskList loadedTaskList \u003d storage.load();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hyizhak"},"content":"        ArrayList\u003cTask\u003e tasks \u003d getTasksFromTaskList(loadedTaskList);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hyizhak"},"content":"        assertEquals(3, tasks.size(), \"Should load three tasks from the file.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hyizhak"},"content":"        // Create expected tasks using the same date format.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"hyizhak"},"content":"        Todo expectedTodo \u003d new Todo(\"test todo\", false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"hyizhak"},"content":"        Deadline expectedDeadline \u003d new Deadline(\"submit assignment\",","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"hyizhak"},"content":"                DateParser.parseHourDate(\"2025-12-31 2359\"), true);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"hyizhak"},"content":"        Event expectedEvent \u003d new Event(\"meeting\", DateParser.parseHourDate(\"2025-12-31 1000\"),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"hyizhak"},"content":"                DateParser.parseHourDate(\"2025-12-31 1200\"), false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"hyizhak"},"content":"        // Compare the tasks via their file string representations.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"hyizhak"},"content":"        assertEquals(expectedTodo.toFileString(), tasks.get(0).toFileString(),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"hyizhak"},"content":"                \"Loaded Todo task does not match expected.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"hyizhak"},"content":"        assertEquals(expectedDeadline.toFileString(), tasks.get(1).toFileString(),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"hyizhak"},"content":"                \"Loaded Deadline task does not match expected.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"hyizhak"},"content":"        assertEquals(expectedEvent.toFileString(), tasks.get(2).toFileString(),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"hyizhak"},"content":"                \"Loaded Event task does not match expected.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"hyizhak"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"hyizhak"},"content":"     * Helper method to extract the private \u0027tasks\u0027 field from a TaskList instance using reflection.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"hyizhak"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"hyizhak"},"content":"     * @param taskList the TaskList instance from which to retrieve the tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"hyizhak"},"content":"     * @return the ArrayList stored within the TaskList","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"hyizhak"},"content":"     * @throws ReflectiveOperationException if reflection fails","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"hyizhak"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"hyizhak"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"hyizhak"},"content":"    private ArrayList\u003cTask\u003e getTasksFromTaskList(TaskList taskList)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"hyizhak"},"content":"            throws ReflectiveOperationException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"hyizhak"},"content":"        Field tasksField \u003d TaskList.class.getDeclaredField(\"tasks\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"hyizhak"},"content":"        tasksField.setAccessible(true);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"hyizhak"},"content":"        return (ArrayList\u003cTask\u003e) tasksField.get(taskList);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"hyizhak":161}},{"path":"src/test/java/bard/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"package bard.task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"/**","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":" * JUnit tests for the Task class and its comparison behavior.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":" */","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"public class TaskTest {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"    public void testMarkAndUnmark() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"        Task task \u003d new Task(\"Write tests\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"        assertEquals(\"[ ] Write tests\", task.toString(), \"Task should initially be unmarked\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hyizhak"},"content":"        assertEquals(\"[X] Write tests\", task.toString(),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"                \"Task should be marked as done after markAsDone()\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hyizhak"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hyizhak"},"content":"        assertEquals(\"[ ] Write tests\", task.toString(),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hyizhak"},"content":"                \"Task should be unmarked after unmarkAsDone()\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hyizhak"},"content":"    public void testToFileString() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hyizhak"},"content":"        Task task \u003d new Task(\"Write tests\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hyizhak"},"content":"        assertEquals(\"0 | Write tests\", task.toFileString(),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hyizhak"},"content":"                \"toFileString should indicate task is not done\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hyizhak"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hyizhak"},"content":"        assertEquals(\"1 | Write tests\", task.toFileString(),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hyizhak"},"content":"                \"toFileString should indicate task is done\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hyizhak"},"content":"    public void testCompareBasicTasks() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hyizhak"},"content":"        Task task1 \u003d new Task(\"Task1\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hyizhak"},"content":"        Task task2 \u003d new Task(\"Task2\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hyizhak"},"content":"        // Both tasks are basic (no time info) and incomplete; they compare as equal.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hyizhak"},"content":"        assertEquals(0, task1.compareTo(task2),","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hyizhak"},"content":"                \"Basic tasks without time should be equal in priority\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hyizhak"},"content":"    public void testCompareDoneVsNotDone() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hyizhak"},"content":"        Task task1 \u003d new Task(\"Task1\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hyizhak"},"content":"        Task task2 \u003d new Task(\"Task2\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hyizhak"},"content":"        task2.markAsDone();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hyizhak"},"content":"        // Incomplete tasks should come before completed tasks.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hyizhak"},"content":"        assertTrue(task1.compareTo(task2) \u003c 0,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hyizhak"},"content":"                \"Incomplete task should have higher priority than a done task\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hyizhak"},"content":"        assertTrue(task2.compareTo(task1) \u003e 0,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hyizhak"},"content":"                \"Done task should have lower priority than an incomplete task\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hyizhak"},"content":"    public void testCompareDeadlineTasks() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime time1 \u003d LocalDateTime.of(2025, 12, 31, 10, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime time2 \u003d LocalDateTime.of(2025, 12, 31, 12, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hyizhak"},"content":"        Deadline deadline1 \u003d new Deadline(\"Deadline1\", time1);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hyizhak"},"content":"        Deadline deadline2 \u003d new Deadline(\"Deadline2\", time2);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hyizhak"},"content":"        // Deadline with an earlier \u0027by\u0027 time should be prioritized.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hyizhak"},"content":"        assertTrue(deadline1.compareTo(deadline2) \u003c 0,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hyizhak"},"content":"                \"Deadline with an earlier time should have higher priority\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hyizhak"},"content":"        assertTrue(deadline2.compareTo(deadline1) \u003e 0,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hyizhak"},"content":"                \"Deadline with a later time should have lower priority\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hyizhak"},"content":"    public void testCompareEventTasks() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime from1 \u003d LocalDateTime.of(2025, 12, 31, 9, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime from2 \u003d LocalDateTime.of(2025, 12, 31, 11, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hyizhak"},"content":"        Event event1 \u003d new Event(\"Event1\", from1, LocalDateTime.of(2025, 12, 31, 10, 0));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hyizhak"},"content":"        Event event2 \u003d new Event(\"Event2\", from2, LocalDateTime.of(2025, 12, 31, 12, 0));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hyizhak"},"content":"        // Event with an earlier \u0027from\u0027 time should be prioritized.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hyizhak"},"content":"        assertTrue(event1.compareTo(event2) \u003c 0,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hyizhak"},"content":"                \"Event with an earlier start time should have higher priority\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hyizhak"},"content":"        assertTrue(event2.compareTo(event1) \u003e 0,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hyizhak"},"content":"                \"Event with a later start time should have lower priority\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hyizhak"},"content":"    @Test","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hyizhak"},"content":"    public void testCompareDeadlineVsBasicTask() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hyizhak"},"content":"        LocalDateTime deadlineTime \u003d LocalDateTime.of(2025, 12, 31, 10, 0);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hyizhak"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline\", deadlineTime);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hyizhak"},"content":"        Task basicTask \u003d new Task(\"Basic\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hyizhak"},"content":"        // According to our logic, a task with a deadline (i.e. with time info) is prioritized over","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hyizhak"},"content":"        // a basic task without time.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hyizhak"},"content":"        assertTrue(deadline.compareTo(basicTask) \u003c 0,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hyizhak"},"content":"                \"Task with deadline should be prioritized over basic task\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hyizhak"},"content":"        assertTrue(basicTask.compareTo(deadline) \u003e 0,","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hyizhak"},"content":"                \"Basic task should be deprioritized compared to task with deadline\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hyizhak"},"content":"    }","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hyizhak"},"content":"}","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"hyizhak":99}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hyizhak"},"content":"hi","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hyizhak"},"content":"help","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hyizhak"},"content":"todo borrow book","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hyizhak"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hyizhak"},"content":"deadline read book /by 2019-10-12","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hyizhak"},"content":"deadline review book /by 2019-10-13","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hyizhak"},"content":"sort","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hyizhak"},"content":"event project meeting /from Mon 1400 /to Mon 1600","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hyizhak"},"content":"find book","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hyizhak"},"content":"mark 1","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hyizhak"},"content":"mark 2","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hyizhak"},"content":"unmark 2","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hyizhak"},"content":"list","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hyizhak"},"content":"delete 3","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"sort","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"bye","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"hyizhak":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"java -classpath ..\\bin bard.Bard \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"hyizhak":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hyizhak"},"content":"# delete tasks.txt from previous run","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hyizhak"},"content":"if [ -e \"./data/tasks.txt\" ]","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hyizhak"},"content":"then","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hyizhak"},"content":"    rm ./data/tasks.txt","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hyizhak"},"content":"fi","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hyizhak"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hyizhak"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hyizhak"},"content":"java -classpath ../bin bard.Bard \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"hyizhak":8,"-":36}}]
