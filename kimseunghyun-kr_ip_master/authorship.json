[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"# Spring project template","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"1. After that, locate the `src/main/java/Spring.java` file, right-click it, and choose `Run Spring.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":2,"-":24}},{"path":"appData/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"[","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"f5770b54-2d92-431e-96d8-f694133d571c|T|1|persist?,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"f8f1fd53-8c1d-4006-912e-11e4cb05ebc6|T|0|adfasdf,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"1e5d6f9f-bb36-47b2-887d-372edf8ff44a|T|1|adfasdfa,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"53de7dc2-5b0d-4737-bb21-8b09ce80e176|T|0|asdfasdfa,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"e4a194b6-7a74-47bd-852f-be7a9a658990|D|1|christmas|2025-12-25T00:00","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"]","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"# Spring User Guide","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":1,"-":29}},{"path":"src/main/java/DIContainer/AOP.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package DIContainer;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.AnnotationInterfaces.ExceptionHandler;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.Interceptor;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.Annotation;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.reflect.Proxy;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":" * Provides dynamic proxy-based aspect-oriented programming (AOP) support.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":" * This class allows for method-level interception based on custom annotations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":" * The proxy can apply interceptors for \"before\", \"after\", and \"onException\" logic","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":" * when a method is annotated with a registered annotation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":" * If a method annotated with {@link ExceptionHandler} throws an exception,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":" * a fallback value may be returned based on the specified default return type.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":" * @author kimseunghyun-kr","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":" * @since v0.1-cli","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"public class AOP {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Creates a dynamic proxy for the given target object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"     * The proxy intercepts method calls based on the provided annotations and applies corresponding interceptors.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param target         The original object being proxied.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param interceptors   A mapping of annotation classes to their corresponding interceptors.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param interfacesToProxy The interfaces that the proxy should implement.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param \u003cT\u003e           The type of the proxied object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A proxy instance that applies AOP logic.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static \u003cT\u003e T createProxy(T target,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"                                    Map\u003cClass\u003c? extends Annotation\u003e, Interceptor\u003e interceptors,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"                                    Class\u003c?\u003e... interfacesToProxy) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"        return (T) Proxy.newProxyInstance(","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"                target.getClass().getClassLoader(),","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"                interfacesToProxy,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"                (proxy, method, args) -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"                    // 1) Possibly run \"before\" if method has an annotation we track","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"                    for (Map.Entry\u003cClass\u003c? extends Annotation\u003e, Interceptor\u003e entry : interceptors.entrySet()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"                        Class\u003c? extends Annotation\u003e annoClass \u003d entry.getKey();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"                        if (method.isAnnotationPresent(annoClass)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"                            entry.getValue().before(target, method, args);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"                        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"                    Object result \u003d null;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"                    try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"                        result \u003d method.invoke(target, args);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"                        // 2) \"after\" logic if annotated","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"                        for (Map.Entry\u003cClass\u003c? extends Annotation\u003e, Interceptor\u003e entry : interceptors.entrySet()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"                            if (method.isAnnotationPresent(entry.getKey())) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"                                entry.getValue().after(target, method, args, result);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"                            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"                        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"                        return result;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"                    } catch (InvocationTargetException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"                        // 3) Exception logic","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"                        Throwable cause \u003d e.getCause() !\u003d null ? e.getCause() : e;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"                        for (Map.Entry\u003cClass\u003c? extends Annotation\u003e, Interceptor\u003e entry : interceptors.entrySet()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"                            if (method.isAnnotationPresent(entry.getKey())) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"                                entry.getValue().onException(target, method, args, cause);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kimseunghyun-kr"},"content":"                            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kimseunghyun-kr"},"content":"                        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kimseunghyun-kr"},"content":"                        // Possibly do fallback logic if method is annotated with e.g. @ExceptionHandler","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kimseunghyun-kr"},"content":"                        ExceptionHandler exHandler \u003d method.getAnnotation(ExceptionHandler.class);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kimseunghyun-kr"},"content":"                        if (exHandler !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kimseunghyun-kr"},"content":"                            Class\u003c?\u003e fallbackClazz \u003d exHandler.returnsDefault();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kimseunghyun-kr"},"content":"                            if (!Void.class.equals(fallbackClazz) \u0026\u0026 !void.class.equals(fallbackClazz)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kimseunghyun-kr"},"content":"                                return createFallback(fallbackClazz);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kimseunghyun-kr"},"content":"                            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kimseunghyun-kr"},"content":"                        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kimseunghyun-kr"},"content":"                        // Otherwise rethrow or return null","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kimseunghyun-kr"},"content":"                        throw cause;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kimseunghyun-kr"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kimseunghyun-kr"},"content":"        );","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Creates a fallback instance based on the specified fallback class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kimseunghyun-kr"},"content":"     * If the fallback class is {@link Optional}, an empty optional is returned.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Otherwise, an instance is created using the default constructor if available.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param fallbackClass The fallback class specified in the {@link ExceptionHandler} annotation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A fallback instance, or {@code null} if instantiation fails.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kimseunghyun-kr"},"content":"    private static Object createFallback(Class\u003c?\u003e fallbackClass) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (fallbackClass.isAssignableFrom(Optional.class)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kimseunghyun-kr"},"content":"            return Optional.empty();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kimseunghyun-kr"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kimseunghyun-kr"},"content":"            return fallbackClass.getDeclaredConstructor().newInstance();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kimseunghyun-kr"},"content":"            return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":105}},{"path":"src/main/java/DIContainer/AOPConfig.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package DIContainer;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"public class AOPConfig {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":4}},{"path":"src/main/java/DIContainer/AOPInterfaces/AnnotationInterfaces/ExceptionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package DIContainer.AOPInterfaces.AnnotationInterfaces;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.ElementType;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.Retention;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.RetentionPolicy;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.Target;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":" * Annotation to mark a method as an exception handler within the DI container\u0027s AOP framework.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":" * Methods annotated with {@code ExceptionHandler} will be invoked when an exception occurs","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":" * in the advised method.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"@Target(ElementType.METHOD)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"@Retention(RetentionPolicy.RUNTIME)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"public @interface ExceptionHandler {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Specifies a default return type in case of an exception.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"     * If set to {@code Void.class}, the handler does not return a default value.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The class type to be returned as a default value.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"    Class\u003c?\u003e returnsDefault() default Void.class;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":24}},{"path":"src/main/java/DIContainer/AOPInterfaces/AnnotationInterfaces/Log.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package DIContainer.AOPInterfaces.AnnotationInterfaces;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.ElementType;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.Retention;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.RetentionPolicy;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.Target;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"@Target(ElementType.METHOD)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"@Retention(RetentionPolicy.RUNTIME)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"public @interface Log {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":11}},{"path":"src/main/java/DIContainer/AOPInterfaces/AnnotationInterfaces/ProxyEnabled.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package DIContainer.AOPInterfaces.AnnotationInterfaces;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.ElementType;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.Retention;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.RetentionPolicy;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.Target;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":" * Indicates that a class is eligible for proxy-based aspect-oriented programming (AOP).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":" * This annotation is typically used to mark classes that require dynamic proxy generation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":" * to apply cross-cutting concerns such as logging, transaction management, or security.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003cp\u003eThe {@code implementation} attribute specifies the concrete implementation class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":" * that should be used for proxying.\u003c/p\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003cp\u003eUsage example:\u003c/p\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":" * {@code","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":" * @ProxyEnabled(implementation \u003d MyImplementation.class)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":" * public class MyService { ... }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":" * }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":" * @author kimseunghyun-kr","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":" * @since v0.1-cli","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"@Target(ElementType.TYPE)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"@Retention(RetentionPolicy.RUNTIME)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"public @interface ProxyEnabled {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Specifies the concrete implementation class that should be used for proxying.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return the implementation class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"    Class\u003c?\u003e implementation(); // Explicitly specify the implementation","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":36}},{"path":"src/main/java/DIContainer/AOPInterfaces/AnnotationInterfaces/Transactional.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package DIContainer.AOPInterfaces.AnnotationInterfaces;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.ElementType;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.Retention;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.RetentionPolicy;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.Target;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"@Target(ElementType.METHOD)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"@Retention(RetentionPolicy.RUNTIME)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"public @interface Transactional {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":11}},{"path":"src/main/java/DIContainer/AOPInterfaces/ExceptionHandlerInterceptor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package DIContainer.AOPInterfaces;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":" * Interceptor that handles exceptions thrown during method execution.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":" * It distinguishes between user-facing exceptions and system-level exceptions,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":" * ensuring appropriate logging and error propagation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":" * If the exception is an instance of {@link UserFacingException}, a user-friendly message is logged.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":" * Otherwise, system-level exceptions are logged with a stack trace and rethrown as a {@link RuntimeException}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":" * @author kimseunghyun-kr","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":" * @since v0.1-cli","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"public class ExceptionHandlerInterceptor implements Interceptor {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"     * No-op method executed before the target method invocation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param target the target object on which the method is invoked","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param method the method being intercepted","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param args   the arguments passed to the method","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void before(Object target, Method method, Object[] args) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"        // No-op for exception handling","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"     * No-op method executed after the target method invocation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param target the target object on which the method was invoked","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param method the method being intercepted","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param args   the arguments passed to the method","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param result the return value of the method execution","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void after(Object target, Method method, Object[] args, Object result) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"        // No-op for exception handling","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Handles exceptions thrown during method execution.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Differentiates between user-facing exceptions and system-level exceptions.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param target    the target object on which the method was invoked","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param method    the method where the exception occurred","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param args      the arguments passed to the method","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param throwable the exception thrown during execution","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @throws RuntimeException if the exception is not user-facing","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void onException(Object target, Method method, Object[] args, Throwable throwable) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (throwable instanceof UserFacingException) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.err.println(\"User-facing exception: \" + throwable.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"            // Optionally log or handle it differently for user feedback","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"            // System-level exceptions are critical and may need a stack trace or alerting","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.err.println(\"Unhandled system exception in method: \" + method.getName());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"            throwable.printStackTrace();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new RuntimeException(\"An unexpected error occurred. Please try again later.\", throwable);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":67}},{"path":"src/main/java/DIContainer/AOPInterfaces/Interceptor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package DIContainer.AOPInterfaces;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"public interface Interceptor {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Invoked before the target method is executed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param target The target object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param method The method being called.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param args   The arguments passed to the method.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"    void before(Object target, Method method, Object[] args);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Invoked after the target method is executed successfully.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param target The target object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param method The method being called.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param args   The arguments passed to the method.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param result The result returned by the method.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    void after(Object target, Method method, Object[] args, Object result);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Invoked if an exception occurs during method execution.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param target    The target object.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param method    The method being called.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param args      The arguments passed to the method.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param throwable The exception that was thrown.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"    void onException(Object target, Method method, Object[] args, Throwable throwable);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":35}},{"path":"src/main/java/DIContainer/AOPInterfaces/LoggingInterceptor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package DIContainer.AOPInterfaces;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.Interceptor;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"public class LoggingInterceptor implements Interceptor {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void before(Object target, Method method, Object[] args) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(\"LOG: Entering method \" + method.getName());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void after(Object target, Method method, Object[] args, Object result) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(\"LOG: Exiting method \" + method.getName() + \", result: \" + result);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void onException(Object target, Method method, Object[] args, Throwable throwable) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Logging does not handle exceptions specifically","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":22}},{"path":"src/main/java/DIContainer/AOPInterfaces/TransactionalInterceptor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package DIContainer.AOPInterfaces;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"public class TransactionalInterceptor implements Interceptor {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void before(Object target, Method method, Object[] args) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(\"TRANSACTION: Starting transaction for \" + method.getName());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void after(Object target, Method method, Object[] args, Object result) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(\"TRANSACTION: Committing transaction for \" + method.getName());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void onException(Object target, Method method, Object[] args, Throwable throwable) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(\"TRANSACTION: Rolling back transaction for \" + method.getName());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":20}},{"path":"src/main/java/DIContainer/DIContainer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package DIContainer;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.AnnotationInterfaces.ProxyEnabled;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.Interceptor;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.io.File;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.annotation.Annotation;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.lang.reflect.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.net.URL;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.*;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":" * A lightweight dependency injection (DI) container with support for aspect-oriented programming (AOP).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":" * This container allows for registering, resolving, and managing object dependencies while supporting","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":" * dynamic proxy-based interception using {@link ProxyEnabled} annotations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":" * inspired by Spring.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003cp\u003eFeatures:\u003c/p\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":" *     \u003cli\u003eAutomatic dependency resolution using topological sorting.\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":" *     \u003cli\u003eSupport for constructor argument injection.\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":" *     \u003cli\u003eDynamic proxy generation for AOP-enabled classes/interfaces.\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":" *     \u003cli\u003eInterceptor support for methods annotated with custom annotations.\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":" * @author kimseunghyun-kr","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":" * @since v0.1-cli","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"public class DIContainer {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** Indicates whether the container has been initialized. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"    private boolean initialized \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** Maps a requested type (interface or class) to its registered implementation. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final Map\u003cClass\u003c?\u003e, Class\u003c?\u003e\u003e registrations \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** Stores instantiated objects after creation, possibly wrapped with proxies. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final Map\u003cClass\u003c?\u003e, Object\u003e instances \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** Stores constructor argument overrides for registered classes. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final Map\u003cClass\u003c?\u003e, Map\u003cClass\u003c?\u003e, Object\u003e\u003e constructorArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** Dependency graph mapping each class to its required dependencies. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final Map\u003cClass\u003c?\u003e, Set\u003cClass\u003c?\u003e\u003e\u003e dependencyGraph \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** Tracks types that require proxy-based AOP. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final Set\u003cClass\u003c?\u003e\u003e proxyEnabledTypes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** Maps annotation types to their corresponding interceptors for method-level AOP. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final Map\u003cClass\u003c? extends Annotation\u003e, Interceptor\u003e interceptors \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Registration Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Registers a concrete class along with optional constructor arguments.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param type The class to register.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param args The constructor arguments for the class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void register(Class\u003c?\u003e type, Object... args) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"        // type is presumably a concrete class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"        registrations.put(type, type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"        storeConstructorArgs(type, args);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Build dependency graph for \u0027type\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"        buildDependencyGraph(type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"        checkIfProxyEnabled(type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Registers an interface or abstract class, attempting to find an implementation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param type The interface or abstract class to register.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void register(Class\u003c?\u003e type) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (type.isInterface() || Modifier.isAbstract(type.getModifiers())) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kimseunghyun-kr"},"content":"            // We see if it\u0027s annotated with @ProxyEnabled","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (type.isAnnotationPresent(ProxyEnabled.class)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kimseunghyun-kr"},"content":"                ProxyEnabled annot \u003d type.getAnnotation(ProxyEnabled.class);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kimseunghyun-kr"},"content":"                Class\u003c?\u003e impl \u003d annot.implementation();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kimseunghyun-kr"},"content":"                if (impl \u003d\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kimseunghyun-kr"},"content":"                    throw new IllegalArgumentException(\"@ProxyEnabled on \" + type + \" missing implementation()\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kimseunghyun-kr"},"content":"                registrations.put(type, impl);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kimseunghyun-kr"},"content":"                checkIfProxyEnabled(type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kimseunghyun-kr"},"content":"                buildDependencyGraph(impl);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kimseunghyun-kr"},"content":"            } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kimseunghyun-kr"},"content":"                // We attempt to auto-discover an impl class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kimseunghyun-kr"},"content":"                Set\u003cClass\u003c?\u003e\u003e impls \u003d findImplementations(type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kimseunghyun-kr"},"content":"                if (impls.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kimseunghyun-kr"},"content":"                    throw new RuntimeException(\"No implementations found for interface: \" + type.getName());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kimseunghyun-kr"},"content":"                } else if (impls.size() \u003d\u003d 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kimseunghyun-kr"},"content":"                    Class\u003c?\u003e singleImpl \u003d impls.iterator().next();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kimseunghyun-kr"},"content":"                    registrations.put(type, singleImpl);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kimseunghyun-kr"},"content":"                    buildDependencyGraph(singleImpl);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kimseunghyun-kr"},"content":"                    checkIfProxyEnabled(singleImpl);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kimseunghyun-kr"},"content":"                } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kimseunghyun-kr"},"content":"                    // multiple possible impls \u003d\u003e pick one, or fail","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kimseunghyun-kr"},"content":"                    // For simplicity, pick the first that might have @ProxyEnabled","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kimseunghyun-kr"},"content":"                    Class\u003c?\u003e primary \u003d null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kimseunghyun-kr"},"content":"                    for (Class\u003c?\u003e c : impls) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kimseunghyun-kr"},"content":"                        if (c.isAnnotationPresent(ProxyEnabled.class)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kimseunghyun-kr"},"content":"                            primary \u003d c;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kimseunghyun-kr"},"content":"                            break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kimseunghyun-kr"},"content":"                        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kimseunghyun-kr"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kimseunghyun-kr"},"content":"                    if (primary \u003d\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kimseunghyun-kr"},"content":"                        throw new RuntimeException(","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kimseunghyun-kr"},"content":"                                \"Multiple implementations found for \" + type.getName() +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kimseunghyun-kr"},"content":"                                        \" and none is @ProxyEnabled to pick as primary\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kimseunghyun-kr"},"content":"                        );","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kimseunghyun-kr"},"content":"                    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kimseunghyun-kr"},"content":"                    registrations.put(type, primary);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kimseunghyun-kr"},"content":"                    buildDependencyGraph(primary);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kimseunghyun-kr"},"content":"                    checkIfProxyEnabled(primary);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kimseunghyun-kr"},"content":"            // It\u0027s a concrete class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kimseunghyun-kr"},"content":"            registrations.put(type, type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kimseunghyun-kr"},"content":"            buildDependencyGraph(type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kimseunghyun-kr"},"content":"            checkIfProxyEnabled(type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Stores constructor argument overrides for a registered class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param type The class type.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param args The constructor arguments.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kimseunghyun-kr"},"content":"    private void storeConstructorArgs(Class\u003c?\u003e type, Object... args) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kimseunghyun-kr"},"content":"        Constructor\u003c?\u003e constructor \u003d type.getConstructors()[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (args.length !\u003d constructor.getParameterCount()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kimseunghyun-kr"},"content":"                    \"Constructor arg mismatch for \" + type.getName() +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kimseunghyun-kr"},"content":"                            \": expected \" + constructor.getParameterCount() + \" but got \" + args.length","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kimseunghyun-kr"},"content":"            );","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kimseunghyun-kr"},"content":"        Class\u003c?\u003e[] paramTypes \u003d constructor.getParameterTypes();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kimseunghyun-kr"},"content":"        Map\u003cClass\u003c?\u003e, Object\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kimseunghyun-kr"},"content":"        for (int i \u003d 0; i \u003c paramTypes.length; i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kimseunghyun-kr"},"content":"            map.put(paramTypes[i], args[i]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kimseunghyun-kr"},"content":"        constructorArgs.put(type, map);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Checks if a class or interface is annotated with {@link ProxyEnabled} and records it.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param type The class to check.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kimseunghyun-kr"},"content":"    private void checkIfProxyEnabled(Class\u003c?\u003e type) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (type.isAnnotationPresent(ProxyEnabled.class)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kimseunghyun-kr"},"content":"            proxyEnabledTypes.add(type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kimseunghyun-kr"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Dependency Graph Building \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Build or update the dependency graph for the given type.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kimseunghyun-kr"},"content":"     * If it\u0027s an interface, we look up its chosen implementation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param type The class whose dependencies need to be tracked.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kimseunghyun-kr"},"content":"    private void buildDependencyGraph(Class\u003c?\u003e type) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (dependencyGraph.containsKey(type)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kimseunghyun-kr"},"content":"            // Already processed","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kimseunghyun-kr"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kimseunghyun-kr"},"content":"        // If it\u0027s an interface, get the chosen impl","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (type.isInterface() || Modifier.isAbstract(type.getModifiers())) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kimseunghyun-kr"},"content":"            Class\u003c?\u003e impl \u003d registrations.get(type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (impl \u003d\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kimseunghyun-kr"},"content":"                throw new RuntimeException(\"No implementation found for \" + type.getName());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kimseunghyun-kr"},"content":"            // Recursively build graph for the impl","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kimseunghyun-kr"},"content":"            buildDependencyGraph(impl);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kimseunghyun-kr"},"content":"            // We store an empty set for the interface itself, or you might omit","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kimseunghyun-kr"},"content":"            dependencyGraph.put(type, Collections.emptySet());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kimseunghyun-kr"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kimseunghyun-kr"},"content":"        // It\u0027s a concrete class \u003d\u003e find its constructor dependencies","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kimseunghyun-kr"},"content":"        Constructor\u003c?\u003e constructor \u003d type.getConstructors()[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kimseunghyun-kr"},"content":"        Set\u003cClass\u003c?\u003e\u003e deps \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kimseunghyun-kr"},"content":"        Class\u003c?\u003e[] paramTypes \u003d constructor.getParameterTypes();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Possibly skip param if we have a direct constructorArg","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kimseunghyun-kr"},"content":"        Map\u003cClass\u003c?\u003e, Object\u003e argsMap \u003d constructorArgs.getOrDefault(type, new HashMap\u003c\u003e());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kimseunghyun-kr"},"content":"        for (Class\u003c?\u003e paramType : paramTypes) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kimseunghyun-kr"},"content":"            // If paramType isn\u0027t satisfied by a direct argument, it\u0027s a real dependency","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (!argsMap.containsKey(paramType)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kimseunghyun-kr"},"content":"                deps.add(paramType);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kimseunghyun-kr"},"content":"                // We also want to build their graph","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kimseunghyun-kr"},"content":"                buildDependencyGraph(paramType);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kimseunghyun-kr"},"content":"        dependencyGraph.put(type, deps);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Finds all concrete classes that implement a given interface in the same package.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param iface the interface class whose concrete class designations have to be found","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kimseunghyun-kr"},"content":"    private Set\u003cClass\u003c?\u003e\u003e findImplementations(Class\u003c?\u003e iface) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kimseunghyun-kr"},"content":"        Set\u003cClass\u003c?\u003e\u003e results \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kimseunghyun-kr"},"content":"        String pkgName \u003d iface.getPackageName();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kimseunghyun-kr"},"content":"        String path \u003d pkgName.replace(\u0027.\u0027, \u0027/\u0027);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kimseunghyun-kr"},"content":"        ClassLoader cl \u003d Thread.currentThread().getContextClassLoader();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kimseunghyun-kr"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kimseunghyun-kr"},"content":"            Enumeration\u003cURL\u003e resources \u003d cl.getResources(path);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kimseunghyun-kr"},"content":"            while (resources.hasMoreElements()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kimseunghyun-kr"},"content":"                URL resource \u003d resources.nextElement();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kimseunghyun-kr"},"content":"                File dir \u003d new File(resource.getFile());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kimseunghyun-kr"},"content":"                if (dir.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kimseunghyun-kr"},"content":"                    results.addAll(findClasses(dir, pkgName, iface));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kimseunghyun-kr"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"kimseunghyun-kr"},"content":"        return results;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"kimseunghyun-kr"},"content":"    private Set\u003cClass\u003c?\u003e\u003e findClasses(File dir, String pkgName, Class\u003c?\u003e iface) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"kimseunghyun-kr"},"content":"        Set\u003cClass\u003c?\u003e\u003e found \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (!dir.exists()) return found;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"kimseunghyun-kr"},"content":"        File[] files \u003d dir.listFiles();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (files \u003d\u003d null) return found;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"kimseunghyun-kr"},"content":"        for (File f : files) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (f.isDirectory()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"kimseunghyun-kr"},"content":"                found.addAll(findClasses(f, pkgName + \".\" + f.getName(), iface));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"kimseunghyun-kr"},"content":"            } else if (f.getName().endsWith(\".class\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"kimseunghyun-kr"},"content":"                String clsName \u003d pkgName + \".\" + f.getName().replace(\".class\", \"\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"kimseunghyun-kr"},"content":"                try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"kimseunghyun-kr"},"content":"                    Class\u003c?\u003e c \u003d Class.forName(clsName);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"kimseunghyun-kr"},"content":"                    if (iface.isAssignableFrom(c)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"kimseunghyun-kr"},"content":"                            \u0026\u0026 !c.isInterface()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"kimseunghyun-kr"},"content":"                            \u0026\u0026 !Modifier.isAbstract(c.getModifiers())) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"kimseunghyun-kr"},"content":"                        found.add(c);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"kimseunghyun-kr"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"kimseunghyun-kr"},"content":"                } catch (ClassNotFoundException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"kimseunghyun-kr"},"content":"                    // ignore","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"kimseunghyun-kr"},"content":"        return found;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"kimseunghyun-kr"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialization \u0026 Topological Sort \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Perform a topological sort of the entire dependency graph, then instantiate each in order.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void initialize() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (initialized) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"kimseunghyun-kr"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"kimseunghyun-kr"},"content":"        // 1) Gather all unique nodes (interfaces and classes)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"kimseunghyun-kr"},"content":"        Set\u003cClass\u003c?\u003e\u003e allTypes \u003d dependencyGraph.keySet();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"kimseunghyun-kr"},"content":"        // 2) We do Kahn\u0027s Algorithm or a DFS-based approach to get a topological order","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"kimseunghyun-kr"},"content":"        List\u003cClass\u003c?\u003e\u003e topoOrder \u003d topologicalSortDFS(allTypes, dependencyGraph);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"kimseunghyun-kr"},"content":"        // 3) Build instances in that order","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"kimseunghyun-kr"},"content":"        for (Class\u003c?\u003e type : topoOrder) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"kimseunghyun-kr"},"content":"            // We skip interfaces that have no real constructor","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"kimseunghyun-kr"},"content":"            // but we ensure the impl is built. For a plain class, we build it if not built yet.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (type.isInterface() || Modifier.isAbstract(type.getModifiers())) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"kimseunghyun-kr"},"content":"                // The real instance will be created when its impl class is built.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"kimseunghyun-kr"},"content":"                continue;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (!instances.containsKey(type)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"kimseunghyun-kr"},"content":"                // create the real object (and possibly wrap in a proxy)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"kimseunghyun-kr"},"content":"                createInstanceFor(type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"kimseunghyun-kr"},"content":"        // 4) Also ensure any interface not yet in \u0027instances\u0027 is associated with the same proxied instance","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"kimseunghyun-kr"},"content":"        //    if it maps to a known implementation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"kimseunghyun-kr"},"content":"        for (Map.Entry\u003cClass\u003c?\u003e, Class\u003c?\u003e\u003e e : registrations.entrySet()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"kimseunghyun-kr"},"content":"            Class\u003c?\u003e intfOrClass \u003d e.getKey();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"kimseunghyun-kr"},"content":"            Class\u003c?\u003e impl \u003d e.getValue();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (!instances.containsKey(intfOrClass) \u0026\u0026 instances.containsKey(impl)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"kimseunghyun-kr"},"content":"                // Link it","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"kimseunghyun-kr"},"content":"                instances.put(intfOrClass, instances.get(impl));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"kimseunghyun-kr"},"content":"        initialized \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Perform a Kahn\u0027s Algorithm topological sort to detect cycles and produce an order.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"kimseunghyun-kr"},"content":"    private List\u003cClass\u003c?\u003e\u003e topologicalSortDFS(Set\u003cClass\u003c?\u003e\u003e nodes,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"kimseunghyun-kr"},"content":"                                              Map\u003cClass\u003c?\u003e, Set\u003cClass\u003c?\u003e\u003e\u003e graph) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"kimseunghyun-kr"},"content":"        // \u0027graph[A]\u0027 \u003d set of classes that A depends on","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"kimseunghyun-kr"},"content":"        List\u003cClass\u003c?\u003e\u003e sortedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"kimseunghyun-kr"},"content":"        Set\u003cClass\u003c?\u003e\u003e visited \u003d new HashSet\u003c\u003e();   // permanent mark","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"kimseunghyun-kr"},"content":"        Set\u003cClass\u003c?\u003e\u003e visiting \u003d new HashSet\u003c\u003e();  // temporary mark (detect cycles)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"kimseunghyun-kr"},"content":"        for (Class\u003c?\u003e node : nodes) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (!visited.contains(node)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"kimseunghyun-kr"},"content":"                dfsVisit(node, graph, visited, visiting, sortedList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"kimseunghyun-kr"},"content":"        // The result is in \"reverse\" topological order if you append after visiting.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"kimseunghyun-kr"},"content":"        // But we want dependencies first, so we can either reverse at the end or insert at the front.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Let\u0027s reverse at the end:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"kimseunghyun-kr"},"content":"        Collections.reverse(sortedList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"kimseunghyun-kr"},"content":"        return sortedList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"kimseunghyun-kr"},"content":"    private void dfsVisit(Class\u003c?\u003e current,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"kimseunghyun-kr"},"content":"                          Map\u003cClass\u003c?\u003e, Set\u003cClass\u003c?\u003e\u003e\u003e graph,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"kimseunghyun-kr"},"content":"                          Set\u003cClass\u003c?\u003e\u003e visited,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"kimseunghyun-kr"},"content":"                          Set\u003cClass\u003c?\u003e\u003e visiting,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"kimseunghyun-kr"},"content":"                          List\u003cClass\u003c?\u003e\u003e sortedList) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (visiting.contains(current)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"kimseunghyun-kr"},"content":"            // We found a back edge \u003d\u003e cycle","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new RuntimeException(\"Cycle detected in dependency graph at: \" + current.getName());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (visited.contains(current)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"kimseunghyun-kr"},"content":"            // Already fully processed this node","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"kimseunghyun-kr"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Mark \u0027current\u0027 as in progress","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"kimseunghyun-kr"},"content":"        visiting.add(current);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Visit all dependencies (the classes that \u0027current\u0027 depends on)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"kimseunghyun-kr"},"content":"        Set\u003cClass\u003c?\u003e\u003e dependencies \u003d graph.getOrDefault(current, Collections.emptySet());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"kimseunghyun-kr"},"content":"        for (Class\u003c?\u003e dep : dependencies) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (!visited.contains(dep)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"kimseunghyun-kr"},"content":"                dfsVisit(dep, graph, visited, visiting, sortedList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Mark \u0027current\u0027 as fully visited","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"kimseunghyun-kr"},"content":"        visiting.remove(current);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"kimseunghyun-kr"},"content":"        visited.add(current);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Add to the result list. We\u0027ll reverse later.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"kimseunghyun-kr"},"content":"        sortedList.add(current);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"kimseunghyun-kr"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Instantiation \u0026 AOP Proxy Wrapping \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Create (and store) a single instance for the given concrete class, respecting constructor args,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"kimseunghyun-kr"},"content":"     * and possibly wrapping with a JDK proxy if needed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param implClass The concrete class to instantiate.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"kimseunghyun-kr"},"content":"    private void createInstanceFor(Class\u003c?\u003e implClass) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"kimseunghyun-kr"},"content":"        // If already created, skip","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (instances.containsKey(implClass)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"kimseunghyun-kr"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"kimseunghyun-kr"},"content":"        // 1) Actually instantiate the object","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"kimseunghyun-kr"},"content":"        Object realObj \u003d instantiate(implClass);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"kimseunghyun-kr"},"content":"        // 2) Check if we need a proxy for it","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"kimseunghyun-kr"},"content":"        //    This is the \"unified proxy\" step: if this impl or any interface mapped to it is @ProxyEnabled","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (requiresProxy(implClass)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"kimseunghyun-kr"},"content":"            // gather all relevant interfaces","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"kimseunghyun-kr"},"content":"            Class\u003c?\u003e[] allIfaces \u003d computeAllInterfacesFor(implClass);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"kimseunghyun-kr"},"content":"            Object proxy \u003d AOP.createProxy(realObj, interceptors, allIfaces);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"kimseunghyun-kr"},"content":"            // store the proxy","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"kimseunghyun-kr"},"content":"            instances.put(implClass, proxy);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"kimseunghyun-kr"},"content":"            // also store under any interface keys","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"kimseunghyun-kr"},"content":"            for (Map.Entry\u003cClass\u003c?\u003e, Class\u003c?\u003e\u003e e : registrations.entrySet()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"kimseunghyun-kr"},"content":"                if (e.getValue().equals(implClass)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"kimseunghyun-kr"},"content":"                    instances.put(e.getKey(), proxy);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"kimseunghyun-kr"},"content":"            // no proxy needed","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"kimseunghyun-kr"},"content":"            instances.put(implClass, realObj);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"kimseunghyun-kr"},"content":"            // store under any interface that points here","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"kimseunghyun-kr"},"content":"            for (Map.Entry\u003cClass\u003c?\u003e, Class\u003c?\u003e\u003e e : registrations.entrySet()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"kimseunghyun-kr"},"content":"                if (e.getValue().equals(implClass)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"kimseunghyun-kr"},"content":"                    instances.put(e.getKey(), realObj);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Actually calls the no-arg or single constructor to build the real instance.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param implClass the classes that will be instantiated stored within the registrations","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"kimseunghyun-kr"},"content":"    private Object instantiate(Class\u003c?\u003e implClass) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"kimseunghyun-kr"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"kimseunghyun-kr"},"content":"            Constructor\u003c?\u003e constructor \u003d implClass.getConstructors()[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"kimseunghyun-kr"},"content":"            Class\u003c?\u003e[] paramTypes \u003d constructor.getParameterTypes();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"kimseunghyun-kr"},"content":"            Object[] args \u003d new Object[paramTypes.length];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"kimseunghyun-kr"},"content":"            Map\u003cClass\u003c?\u003e, Object\u003e directArgs \u003d constructorArgs.getOrDefault(implClass, new HashMap\u003c\u003e());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"kimseunghyun-kr"},"content":"            for (int i \u003d 0; i \u003c paramTypes.length; i++) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"kimseunghyun-kr"},"content":"                if (directArgs.containsKey(paramTypes[i])) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"kimseunghyun-kr"},"content":"                    args[i] \u003d directArgs.get(paramTypes[i]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"kimseunghyun-kr"},"content":"                } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"kimseunghyun-kr"},"content":"                    // must be a class or interface we already built","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"kimseunghyun-kr"},"content":"                    // or about to build? But topological order ensures it\u0027s already built if it was a dependency","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"kimseunghyun-kr"},"content":"                    createIfNotExists(paramTypes[i]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"kimseunghyun-kr"},"content":"                    args[i] \u003d instances.get(paramTypes[i]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"kimseunghyun-kr"},"content":"            return constructor.newInstance(args);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (InstantiationException | IllegalAccessException","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"kimseunghyun-kr"},"content":"                 | InvocationTargetException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new RuntimeException(\"Failed creating instance for \" + implClass, e);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"kimseunghyun-kr"},"content":"     * If \u0027type\u0027 isn\u0027t built yet, find its impl, create that first (in topological order).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param type the class instance where the topological sort will start","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"kimseunghyun-kr"},"content":"    private void createIfNotExists(Class\u003c?\u003e type) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (instances.containsKey(type)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"kimseunghyun-kr"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (type.isInterface() || Modifier.isAbstract(type.getModifiers())) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"kimseunghyun-kr"},"content":"            Class\u003c?\u003e impl \u003d registrations.get(type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"kimseunghyun-kr"},"content":"            // ensure that impl is created","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (impl !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"kimseunghyun-kr"},"content":"                if (!instances.containsKey(impl)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"kimseunghyun-kr"},"content":"                    createInstanceFor(impl);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"kimseunghyun-kr"},"content":"                // link it","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"kimseunghyun-kr"},"content":"                instances.put(type, instances.get(impl));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"kimseunghyun-kr"},"content":"            } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"kimseunghyun-kr"},"content":"                throw new RuntimeException(\"No impl for \" + type.getName());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"kimseunghyun-kr"},"content":"            // it\u0027s a concrete class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"kimseunghyun-kr"},"content":"            createInstanceFor(type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Compute whether the given impl class or any of its mapped interfaces is @ProxyEnabled.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param implClass the concrete(implementation) class which is to be checked for","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"kimseunghyun-kr"},"content":"    private boolean requiresProxy(Class\u003c?\u003e implClass) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"kimseunghyun-kr"},"content":"        // If the impl class itself is annotated with ProxyEnabled, yes","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (implClass.isAnnotationPresent(ProxyEnabled.class)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"kimseunghyun-kr"},"content":"            return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"kimseunghyun-kr"},"content":"        // If the container flagged it","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (proxyEnabledTypes.contains(implClass)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"kimseunghyun-kr"},"content":"            return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"kimseunghyun-kr"},"content":"        // If any interface that maps to this impl is @ProxyEnabled","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"kimseunghyun-kr"},"content":"        for (Map.Entry\u003cClass\u003c?\u003e, Class\u003c?\u003e\u003e e : registrations.entrySet()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (e.getValue().equals(implClass)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"kimseunghyun-kr"},"content":"                Class\u003c?\u003e intf \u003d e.getKey();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"kimseunghyun-kr"},"content":"                if (intf.isAnnotationPresent(ProxyEnabled.class) || proxyEnabledTypes.contains(intf)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"kimseunghyun-kr"},"content":"                    return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"kimseunghyun-kr"},"content":"        return false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Gather all interfaces from the class itself plus any container-registered interfaces that map to it.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param implClass the concrete(implemented) class for which the interfaces are resolved","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"kimseunghyun-kr"},"content":"    private Class\u003c?\u003e[] computeAllInterfacesFor(Class\u003c?\u003e implClass) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"kimseunghyun-kr"},"content":"        Set\u003cClass\u003c?\u003e\u003e result \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"kimseunghyun-kr"},"content":"        // 1) All directly implemented interfaces from the class hierarchy","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"kimseunghyun-kr"},"content":"        Class\u003c?\u003e c \u003d implClass;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"kimseunghyun-kr"},"content":"        while (c !\u003d null \u0026\u0026 c !\u003d Object.class) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"kimseunghyun-kr"},"content":"            result.addAll(Arrays.asList(c.getInterfaces()));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"kimseunghyun-kr"},"content":"            c \u003d c.getSuperclass();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"kimseunghyun-kr"},"content":"        // 2) All interfaces in \u0027registrations\u0027 that point to implClass","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"kimseunghyun-kr"},"content":"        for (Map.Entry\u003cClass\u003c?\u003e, Class\u003c?\u003e\u003e e : registrations.entrySet()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (e.getValue().equals(implClass) \u0026\u0026 e.getKey().isInterface()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"kimseunghyun-kr"},"content":"                result.add(e.getKey());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"kimseunghyun-kr"},"content":"        return result.toArray(new Class\u003c?\u003e[0]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"kimseunghyun-kr"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Public Resolution \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Resolves an instance of the given type.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param type The class type.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param \u003cT\u003e  The type parameter.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The resolved instance.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"kimseunghyun-kr"},"content":"    public \u003cT\u003e T resolve(Class\u003cT\u003e type) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (!initialized) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new IllegalStateException(\"Container not initialized yet\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (!instances.containsKey(type)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new RuntimeException(\"No instance found for \" + type.getName());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"kimseunghyun-kr"},"content":"        return type.cast(instances.get(type));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Registers an interceptor for methods annotated with a given annotation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param annotation The annotation type.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param interceptor The interceptor instance.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void registerInterceptor(Class\u003c? extends Annotation\u003e annotation, Interceptor interceptor) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"kimseunghyun-kr"},"content":"        interceptors.put(annotation, interceptor);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":533}},{"path":"src/main/java/DIContainer/Proxiable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package DIContainer;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":" * a marker interface to signal proxiability of a class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":" * all DI container managed classes must implement this proxiable","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":" * in order to allow JDK dynamic proxies to work","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":" * it sucks to be prevented from using CGLIB that can allow subclass based proxies","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":" * but owelps this is a design choice","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"public interface Proxiable {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":11}},{"path":"src/main/java/Spring.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.AnnotationInterfaces.ExceptionHandler;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.AnnotationInterfaces.Log;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.AnnotationInterfaces.Transactional;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.ExceptionHandlerInterceptor;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.LoggingInterceptor;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.TransactionalInterceptor;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.DIContainer;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.Command.CommandFactory;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.FileBackedTaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.IFileBackedTaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.ITaskRepository;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.entityManager.BabyEntityManager;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.entityManager.TaskFlusher;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"import runtime.ActionHandler;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"import runtime.IBotRunTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.TaskRepositoryCoordinatorService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"import util.DirectoryInitializeUtils;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"public class Spring {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Initialize the DI container","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"        DIContainer container \u003d new DIContainer();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"        Path filePath \u003d DirectoryInitializeUtils.initializeDirectory();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Register interceptors","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.registerInterceptor(Log.class, new LoggingInterceptor());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.registerInterceptor(Transactional.class, new TransactionalInterceptor());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.registerInterceptor(ExceptionHandler.class, new ExceptionHandlerInterceptor());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Register components","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.register(FileBackedTaskRepository.class, filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.register(IFileBackedTaskRepository.class);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.register(ITaskRepository.class);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.register(ITaskService.class);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.register(TaskRepositoryCoordinatorService.class);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.register(ActionHandler.class);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.register(CommandFactory.class);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.register(TaskFlusher.class);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.register(BabyEntityManager.class);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.register(IBotRunTime.class); // Register BotRunTime","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Pre-initialize all dependencies","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"        container.initialize();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Start the runtime","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"        IBotRunTime botRunTime \u003d container.resolve(IBotRunTime.class);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"        botRunTime.run();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":52}},{"path":"src/main/java/entity/Actions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"public enum Actions {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"    TERMINATE,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"    ADD,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"    LIST,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"    MARK,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"    UNMARK,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    DELETE,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"    SEARCH,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"    INVALID;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static Actions fromString(String command) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (command.equalsIgnoreCase(\"BYE\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"                return Actions.TERMINATE;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (command.equalsIgnoreCase(\"Todo\") || command.equalsIgnoreCase(\"Event\") ||","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"                    command.equalsIgnoreCase(\"DeadLine\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"                return Actions.ADD;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"            return Actions.valueOf(command.toUpperCase());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"            return INVALID; // Default to INVALID for unrecognized strings","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":27}},{"path":"src/main/java/entity/Command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.Command;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":" * Represents the \"Add / insertion\" command in the task management system.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":" * This command interacts with {@link ITaskService} to add a new task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":" * based on the provided parameters.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** The task service used to manage tasks. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"    private ITaskService taskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Sets the task service for this command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param taskService The task service instance to be used.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void setTaskService(ITaskService taskService) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskService \u003d taskService;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Executes the \"Add\" command by adding a new task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param parameters A list of parameters where the first element is the task type","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"     *                   and the second element is the task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @throws UserFacingException if fewer than two parameters are provided.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void execute(List\u003cString\u003e parameters) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (parameters.size() \u003c 2) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"Add command requires at least 2 parameters: type and description\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"        String response \u003d taskService.addTask(parameters);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(response);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":42}},{"path":"src/main/java/entity/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.Command;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":" * Represents a command that can be executed in the task management system.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":" * Commands interact with {@link ITaskService} to perform actions.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"public interface Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Sets the task service for the command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param taskService The task service instance to be used.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    void setTaskService(ITaskService taskService);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Executes the command with the given parameters.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param parameters A list of parameters required for the command execution.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"    void execute(List\u003cString\u003e parameters);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":25}},{"path":"src/main/java/entity/Command/CommandFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.Command;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.Proxiable;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.Actions;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":" * Factory class for creating instances of {@link Command} based on the provided {@link Actions}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":" * Commands are instantiated dynamically and injected with an {@link ITaskService} instance.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"public class CommandFactory implements Proxiable {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** The task service instance to be injected into created commands. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final ITaskService taskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** Maps actions to their corresponding command classes. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"    private static final Map\u003cActions, Class\u003c? extends Command\u003e\u003e commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Constructs a {@code CommandFactory} with a given task service.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param taskService The task service instance to be used by created commands.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"    public CommandFactory(ITaskService taskService) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskService \u003d taskService;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"    static {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"        commandMap.put(Actions.TERMINATE, TerminationCommand.class);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"        commandMap.put(Actions.ADD, AddCommand.class);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"        commandMap.put(Actions.LIST, ListCommand.class);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"        commandMap.put(Actions.MARK, MarkCommand.class);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"        commandMap.put(Actions.UNMARK, UnmarkCommand.class);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"        commandMap.put(Actions.DELETE, DeleteCommand.class);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"        commandMap.put(Actions.SEARCH, SearchCommand.class);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"        commandMap.put(Actions.INVALID, InvalidCommand.class);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Creates a command instance corresponding to the specified action.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"     * If the action is not recognized, an {@link InvalidCommand} is returned.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param action The action for which a command should be created.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A new instance of the corresponding {@link Command}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @throws RuntimeException if an error occurs during command instantiation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Command createCommand(Actions action) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"        Class\u003c? extends Command\u003e commandClass \u003d commandMap.getOrDefault(action, InvalidCommand.class);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"            Command command \u003d commandClass.getDeclaredConstructor().newInstance();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"            command.setTaskService(taskService); // Inject TaskService","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"            return command;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new RuntimeException(\"Error creating command for action: \" + action, e);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":60}},{"path":"src/main/java/entity/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.Command;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    private ITaskService taskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void setTaskService(ITaskService taskService) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskService \u003d taskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void execute(List\u003cString\u003e parameters) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (parameters.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"Delete command requires one parameter - size\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        int taskId \u003d Integer.parseInt(parameters.get(0));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"        String task \u003d taskService.deleteTask(taskId);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":24}},{"path":"src/main/java/entity/Command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.Command;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"    private ITaskService taskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void setTaskService(ITaskService taskService) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskService \u003d taskService;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void execute(List\u003cString\u003e parameters) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(\"INVALID command. No operation performed.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":18}},{"path":"src/main/java/entity/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.Command;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    private ITaskService taskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void setTaskService(ITaskService taskService) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskService \u003d taskService;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void execute(List\u003cString\u003e parameters) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (!parameters.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"list command requires no parameter\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"        String task \u003d taskService.getAllTasks();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":24}},{"path":"src/main/java/entity/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.Command;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    private ITaskService taskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void setTaskService(ITaskService taskService) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskService \u003d taskService;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void execute(List\u003cString\u003e parameters) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (parameters.size() !\u003d 1) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"mark command requires exactly 1 parameter\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"        int taskId \u003d Integer.parseInt(parameters.get(0));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"        String response \u003d taskService.markDone(taskId);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(response);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":26}},{"path":"src/main/java/entity/Command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.Command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.TaskType;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import util.DateTimeUtils;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"public class SearchCommand implements Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    private ITaskService taskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void setTaskService(ITaskService taskService) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskService \u003d taskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void execute(List\u003cString\u003e parameters) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (parameters.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"Please enter a search term in the following \u003ckeyword\u003e \u003cval1\u003e \u003cval2\u003e \u003cval...\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"        String keyword \u003d parameters.get(0);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"        if(keyword.equalsIgnoreCase(\"UUID\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"            String val1 \u003d parameters.get(1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"            String response \u003d taskService.SearchOrder(val1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.out.println(response);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else if(keyword.equalsIgnoreCase(\"DATE\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"            if(parameters.size() \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"                throw new UserFacingException(\"Date search term requires at least two parameters \\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"                        \"in the format search date \u003cevent/deadline\u003e \u003cnull/yyyy-mm-dd\u003e \u003cnull/yyyy-mm-dd\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"            TaskType val1 \u003d TaskType.valueOf(parameters.get(1).toUpperCase());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"            if(val1.equals(TaskType.EVENT) \u0026\u0026 parameters.size() \u003d\u003d 4) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"                if(parameters.get(2).equalsIgnoreCase(\"nil\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"                    LocalDateTime val3 \u003d DateTimeUtils.parseDateOrDateTime(parameters.get(3));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"                    System.out.println(taskService.SearchByDate(TaskType.EVENT,null,val3));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"                    return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"                LocalDateTime val2 \u003d DateTimeUtils.parseDateOrDateTime(parameters.get(2));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"                LocalDateTime val3 \u003d DateTimeUtils.parseDateOrDateTime(parameters.get(3));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"                System.out.println(taskService.SearchByDate(TaskType.EVENT,val2,val3));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"                return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"            } else if(val1.equals(TaskType.EVENT)  \u0026\u0026 parameters.size() \u003d\u003d 3) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"                LocalDateTime val2 \u003d DateTimeUtils.parseDateOrDateTime(parameters.get(2));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"                System.out.println(taskService.SearchByDate(TaskType.EVENT ,val2, null));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"                return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"            } else if(val1.equals(TaskType.DEADLINE)  \u0026\u0026 parameters.size() \u003d\u003d 4) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"                LocalDateTime val3 \u003d DateTimeUtils.parseDateOrDateTime(parameters.get(3));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"                System.out.println(taskService.SearchByDate(TaskType.DEADLINE ,val3, null));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"                return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"Date search term requires at least two parameters \\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"                    \"in the format search date \u003cevent/deadline\u003e \u003cnull/yyyy-mm-dd\u003e \u003cnull/yyyy-mm-dd\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else if(parameters.size() \u003d\u003d 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"            String response \u003d taskService.SearchByKeyword(parameters.get(1));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.out.println(response);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"        throw new UserFacingException(\"INVALID SEARCH TERM\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":67}},{"path":"src/main/java/entity/Command/TerminationCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.Command;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"public class TerminationCommand implements Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    private ITaskService taskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void setTaskService(ITaskService taskService) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskService \u003d taskService;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void execute(List\u003cString\u003e parameters) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (!parameters.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"is this a bye? or just a chat?\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":22}},{"path":"src/main/java/entity/Command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.Command;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"    private ITaskService taskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void setTaskService(ITaskService taskService) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskService \u003d taskService;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void execute(List\u003cString\u003e parameters) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (parameters.size() !\u003d 1) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"unmark command requires exactly 1 parameter\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"        int taskId \u003d Integer.parseInt(parameters.get(0));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"        String response \u003d taskService.markUndone(taskId);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(response);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":28}},{"path":"src/main/java/entity/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.DeadLine;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Events;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"public enum TaskType {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    TODO,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"    EVENT;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static TaskType fromTask(Task task) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"            return TODO;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else if (task instanceof DeadLine) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"            return DEADLINE;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else if (task instanceof Events) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"            return EVENT;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"        throw new IllegalArgumentException(\"Unknown task type: \" + task.getClass().getSimpleName());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":23}},{"path":"src/main/java/entity/tasks/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"    private LocalDateTime dueby;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    public DeadLine(String name, LocalDateTime dueby) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"        super(name);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.dueby \u003d dueby;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\"[D] \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"        if(super.getCompleted()){","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"            builder.append(\"[X] \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"            builder.append(\"[ ] \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(super.getName());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\" due by  :: {\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(dueby);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\"}         \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\"UUID:: \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(super.getId());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"        return builder.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"    public LocalDateTime getDueby() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"        return dueby;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":34}},{"path":"src/main/java/entity/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"public class Events extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"    private LocalDateTime startat;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    private LocalDateTime endby;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Events(String name, LocalDateTime startat, LocalDateTime endby) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"        super(name);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.startat \u003d startat;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.endby \u003d endby;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\"[E] \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        if(super.getCompleted()){","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"            builder.append(\"[X] \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"            builder.append(\"[ ] \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(super.getName());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\" starting from  :: {\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(startat);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\"} \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\" ending by :: {\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(endby);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\"}         \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\"UUID:: \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(super.getId());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"        return builder.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"    public LocalDateTime getEndby() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"        return endby;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"    public LocalDateTime getStartat() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"        return startat;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":44}},{"path":"src/main/java/entity/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.UUID;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"public class Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"    private UUID id;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"    private String name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    private Boolean isCompleted;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Task(String name) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.id \u003d UUID.randomUUID();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void toggleCompleted() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"        isCompleted \u003d !isCompleted;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String rename(String newName){","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.name \u003d newName;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"        return newName;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"        if(isCompleted){","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"            builder.append(\"[X] \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"            builder.append(\"[ ] \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(name);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\"         \" );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\"UUID:: \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(this.id);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"        return builder.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"    public UUID getId() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"        return id;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String getName() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"        return name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Boolean getCompleted() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"        return isCompleted;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void setCompleted(Boolean completed) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"        isCompleted \u003d completed;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void setId(UUID id) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":63}},{"path":"src/main/java/entity/tasks/TaskFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.TaskType;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import static util.DateTimeUtils.parseDateOrDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"public class TaskFactory {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static Task createTask(TaskType type, List\u003cString\u003e parameters) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"        return switch (type) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"        case TODO -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (parameters.size() !\u003d 1) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"                throw new UserFacingException(\"Todo requires exactly 1 parameter: description\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"            yield new ToDo(parameters.get(0));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"        case DEADLINE -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (parameters.size() !\u003d 2) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"                throw new UserFacingException(\"Deadline requires 2 parameters: description and deadline\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"            yield new DeadLine(parameters.get(0), parseDateOrDateTime(parameters.get(1)));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"        case EVENT -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (parameters.size() !\u003d 3) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"                throw new UserFacingException(\"Event requires 2 parameters: description and event time\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"            yield new Events(parameters.get(0), parseDateOrDateTime(parameters.get(1)), parseDateOrDateTime(parameters.get(2)));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"        default -\u003e throw new UserFacingException(\"Unknown task type: \" + type);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"        };","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":35}},{"path":"src/main/java/entity/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity.tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"public class ToDo extends Task{","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"    public ToDo(String name) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"        super(name);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\"[T] \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"        if(super.getCompleted()){","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"            builder.append(\"[X] \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"            builder.append(\"[ ] \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(super.getName());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\"         \" );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(\"UUID:: \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        builder.append(super.getId());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"        return builder.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":23}},{"path":"src/main/java/exceptions/UserFacingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package exceptions;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"public class UserFacingException extends RuntimeException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"    public UserFacingException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"        super(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":7}},{"path":"src/main/java/repository/CrudRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package repository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":" * A simplified generic CRUD repository interface, similar to Spring Data repositories.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":" * Provides basic operations for managing entities of type {@code T} identified by {@code ID}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":" * @param \u003cT\u003e  The type of entity to be managed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":" * @param \u003cID\u003e The type of the entity\u0027s unique identifier.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"public interface CrudRepository\u003cT, ID\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Saves the given entity. If the entity already exists, it may be updated.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param entity The entity to save.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The saved entity.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"    T save(T entity);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Retrieves an entity by its ID.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param id The unique identifier of the entity.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return An {@link Optional} containing the found entity, or empty if not found.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"    Optional\u003cT\u003e findById(ID id);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Retrieves all entities managed by the repository.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A list of all entities.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"    List\u003cT\u003e findAll();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Deletes an entity by its ID.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param id The unique identifier of the entity to delete.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The deleted entity, or {@code null} if not found.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"    T deleteById(ID id);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":45}},{"path":"src/main/java/repository/FileBackedTaskRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package repository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.io.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.nio.file.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"import static util.TaskDeserializer.deserializeTask;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"import static util.TaskSerializer.serializeTask;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":" * A file-backed implementation of {@link IFileBackedTaskRepository}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":" * This repository persists tasks to disk and manages buffered writes to reduce I/O operations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":" * Features:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":" *     \u003cli\u003eUses a \u003cb\u003edirty tracking system\u003c/b\u003e to minimize unnecessary writes.\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":" *     \u003cli\u003eFlushes changes periodically via explicit calls or scheduled intervals.\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":" *     \u003cli\u003eImplements \u003cb\u003ebackup and recovery\u003c/b\u003e mechanisms to prevent data loss.\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"public class FileBackedTaskRepository extends TaskRepository implements IFileBackedTaskRepository {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final Path filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final Set\u003cUUID\u003e dirtySet \u003d new HashSet\u003c\u003e(); // Tracks modified tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Constructs a {@code FileBackedTaskRepository} and loads existing tasks from the specified file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param filePath The file path where tasks will be persisted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"    public FileBackedTaskRepository(Path filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"        loadFromFile();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Saves a task and marks it as modified.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param entity The task to save.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The saved task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Task save(Task entity) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task result \u003d super.save(entity);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"        dirtySet.add(result.getId()); // Mark as dirty","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"        return result;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Deletes a task by its order index and marks it for persistence.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param index The order index of the task to delete.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The deleted task, or {@code null} if not found.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Task deleteByOrder(Integer index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task task \u003d super.deleteByOrder(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"            dirtySet.add(task.getId()); // Mark as dirty (removal)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"        return task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Flushes all modified tasks to disk.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kimseunghyun-kr"},"content":"     * If no changes were made, this operation is skipped.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void flush() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (dirtySet.isEmpty()) return; // No changes, skip flush","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(\"Flushing modified tasks to file...\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kimseunghyun-kr"},"content":"        persistAll();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kimseunghyun-kr"},"content":"        dirtySet.clear(); // Reset tracking","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Marks a task as modified, scheduling it for persistence.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param id The unique identifier of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The same {@link UUID} of the marked task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kimseunghyun-kr"},"content":"    public UUID markDirty(UUID id) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kimseunghyun-kr"},"content":"        dirtySet.add(id); // Mark the task as modified","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kimseunghyun-kr"},"content":"        return id;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Persists all tasks to disk, overwriting the existing file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Maintains JSON formatting and ensures atomic writes.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kimseunghyun-kr"},"content":"    private void persistAll() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (dirtySet.isEmpty()) return; // No changes, no need to persist","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kimseunghyun-kr"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kimseunghyun-kr"},"content":"            backupCurrentFileIfExists(); // Backup before overwriting","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kimseunghyun-kr"},"content":"            Path tempFile \u003d filePath.resolveSibling(filePath.getFileName() + \".tmp\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kimseunghyun-kr"},"content":"            try (BufferedWriter writer \u003d Files.newBufferedWriter(tempFile, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kimseunghyun-kr"},"content":"                writer.write(\"[\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kimseunghyun-kr"},"content":"                int size \u003d storageList.size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kimseunghyun-kr"},"content":"                for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kimseunghyun-kr"},"content":"                    writer.write(serializeTask(storageList.get(i)));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kimseunghyun-kr"},"content":"                    if (i \u003c size - 1) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kimseunghyun-kr"},"content":"                        writer.write(\",\\n\"); // Ensure proper formatting","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kimseunghyun-kr"},"content":"                    } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kimseunghyun-kr"},"content":"                        writer.write(\"\\n\"); // Last entry, no trailing comma","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kimseunghyun-kr"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kimseunghyun-kr"},"content":"                writer.write(\"]\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kimseunghyun-kr"},"content":"            Files.move(tempFile, filePath, StandardCopyOption.REPLACE_EXISTING, StandardCopyOption.ATOMIC_MOVE);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kimseunghyun-kr"},"content":"            dirtySet.clear(); // Reset tracking","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.out.println(\"Persisted all tasks to file.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.err.println(\"Error persisting all tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kimseunghyun-kr"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Loads tasks from the file into memory.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Ensures JSON validity and recovers from backup if needed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kimseunghyun-kr"},"content":"    private void loadFromFile() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kimseunghyun-kr"},"content":"            return; // No file, start fresh","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kimseunghyun-kr"},"content":"        try (BufferedReader reader \u003d Files.newBufferedReader(filePath)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kimseunghyun-kr"},"content":"            List\u003cString\u003e lines \u003d reader.lines()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kimseunghyun-kr"},"content":"                    .map(String::trim)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kimseunghyun-kr"},"content":"                    .filter(line -\u003e !line.isEmpty())","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kimseunghyun-kr"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (lines.isEmpty() || !lines.get(0).equals(\"[\") || !lines.get(lines.size() - 1).equals(\"]\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kimseunghyun-kr"},"content":"                throw new IOException(\"Invalid file format\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kimseunghyun-kr"},"content":"            for (int i \u003d 1; i \u003c lines.size() - 1; i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kimseunghyun-kr"},"content":"                String line \u003d lines.get(i).replaceAll(\",$\", \"\"); // Remove trailing commas","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kimseunghyun-kr"},"content":"                Task task \u003d deserializeTask(line);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kimseunghyun-kr"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kimseunghyun-kr"},"content":"                    super.storageList.add(task); // Maintain order","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kimseunghyun-kr"},"content":"                    super.storageMap.put(task.getId(), task); // Fast lookup","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.err.println(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kimseunghyun-kr"},"content":"            attemptBackupRecovery();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Creates a backup of the current file before overwriting.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @throws IOException If the backup operation fails.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kimseunghyun-kr"},"content":"    private void backupCurrentFileIfExists() throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (Files.exists(filePath)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kimseunghyun-kr"},"content":"            Path backupPath \u003d Paths.get(filePath + \".bak\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kimseunghyun-kr"},"content":"            Files.copy(filePath, backupPath, StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Attempts to recover data from a backup file if the main file is corrupted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kimseunghyun-kr"},"content":"    private void attemptBackupRecovery() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kimseunghyun-kr"},"content":"        Path backupPath \u003d Paths.get(filePath.toString() + \".bak\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (!Files.exists(backupPath)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.err.println(\"No backup file found.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kimseunghyun-kr"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kimseunghyun-kr"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kimseunghyun-kr"},"content":"            List\u003cTask\u003e recoveredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kimseunghyun-kr"},"content":"            try (BufferedReader reader \u003d Files.newBufferedReader(backupPath)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kimseunghyun-kr"},"content":"                String line;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kimseunghyun-kr"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kimseunghyun-kr"},"content":"                    Task task \u003d deserializeTask(line);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kimseunghyun-kr"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kimseunghyun-kr"},"content":"                        recoveredTasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kimseunghyun-kr"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kimseunghyun-kr"},"content":"            super.storageList.clear();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kimseunghyun-kr"},"content":"            super.storageMap.clear();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kimseunghyun-kr"},"content":"            for (Task task : recoveredTasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kimseunghyun-kr"},"content":"                super.storageList.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kimseunghyun-kr"},"content":"                super.storageMap.put(task.getId(), task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kimseunghyun-kr"},"content":"            Files.copy(backupPath, filePath, StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.out.println(\"Backup successfully restored.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.err.println(\"Backup recovery failed.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":217}},{"path":"src/main/java/repository/IFileBackedTaskRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package repository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.AnnotationInterfaces.ProxyEnabled;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.Proxiable;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.FileBackedTaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.UUID;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":" * A file-backed repository interface for managing persistent storage operations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":" * exists mostly only to be picked up as a JDK proxy","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"@ProxyEnabled(implementation \u003d FileBackedTaskRepository.class)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"public interface IFileBackedTaskRepository extends Proxiable {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Writes all buffered changes to disk.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    void flush();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Marks an entity as modified, scheduling it for persistence.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param id The unique identifier of the entity.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The same {@link UUID} of the marked entity.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"    UUID markDirty(UUID id);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":28}},{"path":"src/main/java/repository/ITaskRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package repository;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.AnnotationInterfaces.ExceptionHandler;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.AnnotationInterfaces.ProxyEnabled;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.Proxiable;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.TaskType;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.UUID;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":" * Repository interface for managing {@link Task} entities.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":" * exists mostly only to be picked up as a JDK proxy","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":" * Extends {@link CrudRepository} and integrates with AOP-based exception handling.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":" * Uses {@code ProxyEnabled} for dependency injection with {@code FileBackedTaskRepository}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"@ProxyEnabled(implementation \u003d FileBackedTaskRepository.class)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"public interface ITaskRepository extends CrudRepository\u003cTask, UUID\u003e, Proxiable {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Saves a task entity. If the task already exists, it may be updated.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param entity The task entity to save.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The saved task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"    Task save(Task entity);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Retrieves all tasks stored in the repository.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A list of all tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"    List\u003cTask\u003e findAll();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Deletes a task by its sequential order (instead of UUID).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param id The sequential order identifier of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The deleted task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"    Task deleteByOrder(Integer id);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Finds a task by its sequential order.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param id The sequential order identifier of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return An {@link Optional} containing the found task, or empty if not found.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler(returnsDefault \u003d Optional.class)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"    Optional\u003cTask\u003e findByOrder(Integer id);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Retrieves the count of remaining tasks in the repository.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The number of remaining tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"    Integer remainingTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Retrieves all tasks of a specific type within a given time range.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param type The type of tasks to filter.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param from The start of the time range.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param to   The end of the time range.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A list of tasks that match the specified criteria.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kimseunghyun-kr"},"content":"    List\u003cTask\u003e findAllFromWhenToWhen(TaskType type, LocalDateTime from, LocalDateTime to);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Finds the sequential order of a task based on its UUID.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param uuid The unique identifier of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The sequential order of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kimseunghyun-kr"},"content":"    int findOrder(UUID uuid);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Searches for tasks containing a specific keyword.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param keyword The keyword to search for in task descriptions or metadata.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A list of tasks that contain the specified keyword.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kimseunghyun-kr"},"content":"    List\u003cTask\u003e findTaskWithKeyword(String keyword);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":92}},{"path":"src/main/java/repository/TaskRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package repository;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.TaskType;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.DeadLine;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Events;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"public class TaskRepository implements ITaskRepository {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"    protected final List\u003cTask\u003e storageList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    protected final Map\u003cUUID, Task\u003e storageMap \u003d new LinkedHashMap\u003c\u003e(); // Fast lookup by UUID","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Task save(Task input) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (input.getId() \u003d\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"            input \u003d new Task(input.getName()); // Ensure Task has UUID","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"        storageList.add(input); // Maintain order","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"        storageMap.put(input.getId(), input); // Fast UUID lookup","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"        return input;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Optional\u003cTask\u003e findById(UUID uuid) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"        return Optional.ofNullable(storageMap.get(uuid));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"    public List\u003cTask\u003e findAll() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"        return new ArrayList\u003c\u003e(storageList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Task deleteById(UUID uuid) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task task \u003d storageMap.remove(uuid);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"        storageList.remove(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"        return task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Optional\u003cTask\u003e findByOrder(Integer index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (index \u003c 0 || index \u003e\u003d storageList.size()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"Index \" + (index + 1) + \" is out of bounds (1 - \" + storageList.size() + \")\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"        return Optional.ofNullable(storageList.get(index));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Task deleteByOrder(Integer index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (index \u003c 0 || index \u003e\u003d storageList.size()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"Index \" + (index + 1) + \" is out of bounds (1 - \" + storageList.size() + \")\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task task \u003d storageList.get(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"        storageList.remove((int)index); // Maintain list order","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"        storageMap.remove(task.getId()); // Remove from fast lookup","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"        return task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Integer remainingTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"        return storageList.size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kimseunghyun-kr"},"content":"    public List\u003cTask\u003e findAllFromWhenToWhen(TaskType type, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kimseunghyun-kr"},"content":"        return storageList.stream()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kimseunghyun-kr"},"content":"                .filter(task -\u003e type.equals(TaskType.fromTask(task))) // Filter by type first","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kimseunghyun-kr"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kimseunghyun-kr"},"content":"                    if (task instanceof Events events) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kimseunghyun-kr"},"content":"                        boolean afterFrom \u003d (from \u003d\u003d null || events.getStartat().isAfter(from));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kimseunghyun-kr"},"content":"                        boolean beforeTo \u003d (to \u003d\u003d null || events.getEndby().isBefore(to));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kimseunghyun-kr"},"content":"                        return afterFrom \u0026\u0026 beforeTo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kimseunghyun-kr"},"content":"                    } else if (task instanceof DeadLine deadLine) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kimseunghyun-kr"},"content":"                        return (to \u003d\u003d null || deadLine.getDueby().isBefore(to));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kimseunghyun-kr"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kimseunghyun-kr"},"content":"                    return false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kimseunghyun-kr"},"content":"                })","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kimseunghyun-kr"},"content":"                .toList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kimseunghyun-kr"},"content":"    public int findOrder(UUID uuid) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kimseunghyun-kr"},"content":"        return storageList.indexOf(storageMap.get(uuid));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kimseunghyun-kr"},"content":"    public List\u003cTask\u003e findTaskWithKeyword(String keyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kimseunghyun-kr"},"content":"        return storageList.stream().filter(entry -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kimseunghyun-kr"},"content":"            return entry.getName().contains(keyword);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kimseunghyun-kr"},"content":"        }).toList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":98}},{"path":"src/main/java/repository/entityManager/BabyEntityManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package repository.entityManager;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.ITaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":" * A toy \"EntityManager\" that simulates","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":" * transaction boundaries around a repository.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"public class BabyEntityManager {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final ITaskRepository repository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"    private boolean inTransaction \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final List\u003cTask\u003e newEntities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final List\u003cInteger\u003e removedEntities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    public BabyEntityManager(ITaskRepository repository) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.repository \u003d repository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void beginTransaction() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (inTransaction) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new IllegalStateException(\"Transaction already started!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"        inTransaction \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void persist(Task entity) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (!inTransaction) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new IllegalStateException(\"No transaction active!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"        newEntities.add(entity);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void remove(Integer taskId) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (!inTransaction) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new IllegalStateException(\"No transaction active!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"        removedEntities.add(taskId);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void commit() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (!inTransaction) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new IllegalStateException(\"No transaction active!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"        // write changes to repository","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"        for (Task t : newEntities) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"            repository.save(t);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"        for (Integer id : removedEntities) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"            repository.deleteByOrder(id);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"        // clear staging","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"        newEntities.clear();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"        removedEntities.clear();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"        inTransaction \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void rollback() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (!inTransaction) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new IllegalStateException(\"No transaction active!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"        newEntities.clear();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"        removedEntities.clear();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"        inTransaction \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":69}},{"path":"src/main/java/repository/entityManager/TaskFlusher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package repository.entityManager;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.IFileBackedTaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.Duration;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":" * Periodically calls {@code flush()} on the {@link IFileBackedTaskRepository}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":" * This helps in reducing I/O operations by batching writes over time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"public class TaskFlusher {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final IFileBackedTaskRepository taskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final ScheduledExecutorService scheduler;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final Runnable flushTask;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Constructs a {@code TaskFlusher} with the specified task repository.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Initializes a scheduled executor to manage periodic flushing.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param taskRepository The repository that manages file-backed task persistence.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"    public TaskFlusher(IFileBackedTaskRepository taskRepository) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskRepository \u003d taskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.scheduler \u003d Executors.newSingleThreadScheduledExecutor();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.startTime \u003d LocalDateTime.now();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.flushTask \u003d this.createFlushTask();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Creates a runnable task that logs the elapsed runtime and calls {@code flush()} on the repository.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A {@link Runnable} task for periodic flushing.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"    private Runnable createFlushTask() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"        return () -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"                long elapsedSeconds \u003d Duration.between(startTime, LocalDateTime.now()).getSeconds();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"                System.out.printf(\"Task autosaved, program active for %d seconds\\n\", elapsedSeconds);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"                taskRepository.flush();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"                ex.printStackTrace();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"        };","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Starts the periodic flushing process.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"     * The repository is flushed every 10 seconds to persist changes.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void start() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"        scheduler.scheduleAtFixedRate(flushTask, 0, 10, TimeUnit.SECONDS);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Stops the periodic flushing process and ensures all pending changes are persisted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Calls {@code flush()} one last time before shutting down the scheduler.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void stop() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"        taskRepository.flush();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"        scheduler.shutdown();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":68}},{"path":"src/main/java/runtime/ActionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package runtime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.Proxiable;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.Actions;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.Command.Command;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.Command.CommandFactory;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":" * Handles user commands and resolves them into appropriate actions.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":" * Uses a {@link CommandFactory} to create command instances and execute them with parameters.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"public class ActionHandler implements Proxiable {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final CommandFactory commandFactory;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Constructs an {@code ActionHandler} with the specified command factory.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param commandFactory The factory responsible for creating command instances.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"    public ActionHandler(CommandFactory commandFactory) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.commandFactory \u003d commandFactory;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Resolves a user input string into a command and executes it.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param input The user-provided command string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The executed {@link Command} instance.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @throws UserFacingException If the command is invalid or deprecated.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Command resolveAction(String input) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"        String command \u003d split[0];","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"        List\u003cString\u003e parameters \u003d Arrays.asList(Arrays.copyOfRange(split, 1, split.length));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"        Actions action \u003d resolveActionType(command);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"        Command generatedCommand \u003d commandFactory.createCommand(action);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (action \u003d\u003d Actions.ADD) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"                parameters.add(0, command);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"            generatedCommand.execute(parameters);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (UserFacingException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.out.println(\"User error: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.out.println(\"Datetime parsing error: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.out.println(\"Execution error: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"        return generatedCommand;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Determines the appropriate {@link Actions} type based on a command string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param command The command string provided by the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The corresponding {@link Actions} enum value.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @throws UserFacingException If the command is explicitly deprecated.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"    private Actions resolveActionType(String command) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (command.equalsIgnoreCase(\"add\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"add is a deprecated action, please specify type of action\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (command.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kimseunghyun-kr"},"content":"            return Actions.SEARCH;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kimseunghyun-kr"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kimseunghyun-kr"},"content":"            return Actions.fromString(command.toUpperCase());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kimseunghyun-kr"},"content":"            return Actions.INVALID;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":80}},{"path":"src/main/java/runtime/BotRunTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package runtime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.Command.Command;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.Command.TerminationCommand;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.entityManager.TaskFlusher;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"import static util.ChatBotUtil.*;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":" * Implements {@link IBotRunTime} to manage the chatbot runtime execution.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":" * This class handles user input, resolves actions, and manages the chatbot lifecycle.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"public class BotRunTime implements IBotRunTime {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** Handles action resolution and command execution. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final ActionHandler actionHandler;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** Manages task persistence and flushing operations. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final TaskFlusher taskFlusher;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** Scanner for reading user input. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Constructs a {@code BotRunTime} with required dependencies.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param actionHandler The handler responsible for resolving user actions.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param taskFlusher The service responsible for managing task persistence.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"    public BotRunTime(ActionHandler actionHandler, TaskFlusher taskFlusher) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.actionHandler \u003d actionHandler;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskFlusher \u003d taskFlusher;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Starts the chatbot runtime.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"     * The bot continuously reads user input, resolves commands, and executes them.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"     * If a {@link TerminationCommand} is encountered, the bot exits gracefully.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"     * If a {@link UserFacingException} occurs, it is caught and logged at the outermost loop.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void run(){","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"        taskFlusher.start();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"        linesep();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"        introSequence();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"        while(true) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"                linesep();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"                linesep();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"                Command command \u003d actionHandler.resolveAction(input);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"                if (command instanceof TerminationCommand) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"                    break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"            } catch(UserFacingException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"                System.out.println(\"outermost loop catch :: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"        taskFlusher.stop();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"        exitSequence();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":68}},{"path":"src/main/java/runtime/IBotRunTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package runtime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.AnnotationInterfaces.ExceptionHandler;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.AnnotationInterfaces.ProxyEnabled;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.Proxiable;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":" * Defines the contract for a bot runtime execution.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":" * This interface is proxy-enabled and supports exception handling via AOP.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":" * The concrete implementation is {@link BotRunTime}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"@ProxyEnabled(implementation \u003d BotRunTime.class)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"public interface IBotRunTime extends Proxiable {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Executes the bot runtime process.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @throws RuntimeException if an error occurs during execution.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"    void run();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":21}},{"path":"src/main/java/service/ITaskService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package service;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.AnnotationInterfaces.ExceptionHandler;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.AOPInterfaces.AnnotationInterfaces.ProxyEnabled;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import DIContainer.Proxiable;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.TaskType;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":" * Defines the contract for task-related operations in the system.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":" * This interface is proxy-enabled and supports exception handling via AOP.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":" * The concrete implementation is {@link TaskService}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"@ProxyEnabled(implementation \u003d TaskService.class)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"public interface ITaskService extends Proxiable {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param index The index of the task to be marked as completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"    String markDone(int index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Marks a task as undone.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param index The index of the task to be marked as not completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"    String markUndone(int index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Retrieves all tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A formatted string containing all tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"    String getAllTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Adds a new task based on provided parameters.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param taskParams A list of parameters describing the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"    String addTask(List\u003cString\u003e taskParams);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Deletes a task by its identifier.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param taskId The ID of the task to delete.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"    String deleteTask(int taskId);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Searches for tasks by date range and type.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param type The type of tasks to search for.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param from The start date of the search range.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param to   The end date of the search range.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A formatted string containing matching tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kimseunghyun-kr"},"content":"    String SearchByDate(TaskType type, LocalDateTime from, LocalDateTime to);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Searches for a task by its unique identifier.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param uuid The unique identifier of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A formatted string containing the matching task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kimseunghyun-kr"},"content":"    String SearchOrder(String uuid);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Searches for tasks by a keyword.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param keyword The keyword to filter tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A formatted string containing matching tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kimseunghyun-kr"},"content":"    @ExceptionHandler","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kimseunghyun-kr"},"content":"    String SearchByKeyword(String keyword);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":91}},{"path":"src/main/java/service/TaskRepositoryCoordinatorService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package service;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.IFileBackedTaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.ITaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.UUID;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"public class TaskRepositoryCoordinatorService {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final ITaskRepository taskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final IFileBackedTaskRepository taskBuffer;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    public TaskRepositoryCoordinatorService(ITaskRepository taskRepository, IFileBackedTaskRepository taskBuffer) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskRepository \u003d taskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskBuffer \u003d taskBuffer;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Task findByOrder(int orderIndex){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task selectedTask \u003d taskRepository.findByOrder(orderIndex - 1).orElseThrow(()-\u003enew UserFacingException(\"Task not found\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"        if(selectedTask \u003d\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"Task not found\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"        return selectedTask;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"    void markDirty(UUID uuid){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"        taskBuffer.markDirty(uuid);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":33}},{"path":"src/main/java/service/TaskService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package service;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.TaskType;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.TaskFactory;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.ITaskRepository;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.UUID;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":" * Implements {@link ITaskService} to provide task management operations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":" * This service interacts with the {@link ITaskRepository} to perform CRUD operations","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":" * and task-related queries.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"public class TaskService implements ITaskService {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** Service responsible for coordinating repository interactions. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final TaskRepositoryCoordinatorService taskRepositoryCoordinatorService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"    /** The repository for storing and retrieving tasks. */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    private final ITaskRepository taskRepository;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Constructs a {@code TaskService} with required dependencies.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param taskRepositoryCoordinatorService The service for managing repository state.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param taskRepository The repository used for task persistence.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"    public TaskService(TaskRepositoryCoordinatorService taskRepositoryCoordinatorService, ITaskRepository taskRepository) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskRepositoryCoordinatorService \u003d taskRepositoryCoordinatorService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.taskRepository \u003d taskRepository;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Marks a task as completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A message indicating the task\u0027s updated status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String markDone(int index) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task selectedTask \u003d taskRepositoryCoordinatorService.findByOrder(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (selectedTask.getCompleted()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"            return \"the task is already marked as done \\n\" + selectedTask + \"  -\u003e  \" + selectedTask;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"            String response \u003d \"the task has been marked as done \\n\" + selectedTask;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"            selectedTask.toggleCompleted();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"            taskRepositoryCoordinatorService.markDirty(selectedTask.getId());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"            response \u003d response + \"  -\u003e  \" + selectedTask;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"            return response;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Marks a task as not completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A message indicating the task\u0027s updated status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String markUndone(int index) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task selectedTask \u003d taskRepositoryCoordinatorService.findByOrder(index - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (selectedTask.getCompleted()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"            String response \u003d \"the task has been marked as undone \\n\" + selectedTask;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"            selectedTask.toggleCompleted();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"            taskRepositoryCoordinatorService.markDirty(selectedTask.getId());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"            response \u003d response + \"  -\u003e  \" + selectedTask;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kimseunghyun-kr"},"content":"            return response;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kimseunghyun-kr"},"content":"            return \"the task is already marked as undone \\n\" + selectedTask + \"  -\u003e  \" + selectedTask;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Retrieves all tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A formatted list of all tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String getAllTasks() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kimseunghyun-kr"},"content":"        List\u003cTask\u003e tasks \u003d taskRepository.findAll();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kimseunghyun-kr"},"content":"        int counter \u003d 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kimseunghyun-kr"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kimseunghyun-kr"},"content":"        for(Task word : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kimseunghyun-kr"},"content":"            result.append(counter).append(\".\").append(word).append(\"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kimseunghyun-kr"},"content":"            counter++;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kimseunghyun-kr"},"content":"        return result.toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Adds a new task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param taskParams A list of parameters describing the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kimseunghyun-kr"},"content":"     *                   The first element represents the task type.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A confirmation message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String addTask(List\u003cString\u003e taskParams) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kimseunghyun-kr"},"content":"        TaskType taskType \u003d TaskType.valueOf(taskParams.get(0).toUpperCase());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kimseunghyun-kr"},"content":"        taskParams.remove(0);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task newTask \u003d TaskFactory.createTask(taskType, taskParams);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task response \u003d taskRepository.save(newTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kimseunghyun-kr"},"content":"        String header \u003d \"Nice! I have added this task \\n added: \";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kimseunghyun-kr"},"content":"        return header + response + \"\\n\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Deletes a task by its identifier.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param taskId The ID of the task to delete.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A confirmation message including the remaining task count.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String deleteTask(int taskId) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task deleted \u003d taskRepository.deleteByOrder(taskId-1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kimseunghyun-kr"},"content":"        Integer remainingTasks \u003d taskRepository.remainingTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kimseunghyun-kr"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kimseunghyun-kr"},"content":"        result.append(\"the following task has been deleted\\n\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kimseunghyun-kr"},"content":"                .append(deleted)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kimseunghyun-kr"},"content":"                .append(\"\\n you have \")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kimseunghyun-kr"},"content":"                .append(remainingTasks)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kimseunghyun-kr"},"content":"                .append(\" tasks in the list\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kimseunghyun-kr"},"content":"        return result.toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Searches for a task by its unique identifier.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param uuidstr The unique identifier of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The order of the task in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @throws UserFacingException if the provided string is not a valid UUID.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String SearchOrder(String uuidstr) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kimseunghyun-kr"},"content":"        try{","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kimseunghyun-kr"},"content":"            UUID uuid \u003d UUID.fromString(uuidstr);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kimseunghyun-kr"},"content":"            return Integer.valueOf(taskRepository.findOrder(uuid)).toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(\"the uid input is not a valid UUID\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Searches for tasks that contain a given keyword.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param keyword The keyword to filter tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A formatted list of matching tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String SearchByKeyword(String keyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kimseunghyun-kr"},"content":"        List\u003cTask\u003e taskContainingKeyword \u003d taskRepository.findTaskWithKeyword(keyword);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kimseunghyun-kr"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kimseunghyun-kr"},"content":"        sb.append(\"The following tasks have been searched\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kimseunghyun-kr"},"content":"        for(Task containingKeyword : taskContainingKeyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kimseunghyun-kr"},"content":"            sb.append(containingKeyword).append(\"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kimseunghyun-kr"},"content":"        return sb.toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Searches for tasks within a specified date range and type.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param type The type of tasks to search for.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param from The start date of the search range.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param to   The end date of the search range.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A formatted list of tasks within the given date range.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String SearchByDate(TaskType type, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kimseunghyun-kr"},"content":"        List\u003cTask\u003e withinDates \u003d taskRepository.findAllFromWhenToWhen(type, from, to);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kimseunghyun-kr"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kimseunghyun-kr"},"content":"        sb.append(\"The following tasks have been searched\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kimseunghyun-kr"},"content":"        for(Task withinDate : withinDates) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kimseunghyun-kr"},"content":"            sb.append(withinDate).append(\"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kimseunghyun-kr"},"content":"        return sb.toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":184}},{"path":"src/main/java/util/ChatBotUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package util;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"public class ChatBotUtil {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static void linesep() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"        String linesep \u003d \"______________________________________________\\n\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(linesep);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static void introSequence(){","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"        String greet \u003d \"Hello from\\n\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"        String greet2 \u003d \"what can I do for you today \\n\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(greet);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"        linesep();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(logoGen());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"        linesep();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(greet2);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static void exitSequence() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        String exitSeq \u003d \"Bye Hope to see you again soon!\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"        System.out.println(exitSeq);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"        linesep();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static String logoGen() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"        String[] words \u003d getBaseLogo();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"        String[] colors \u003d {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"                \"\\033[31m\", // Red","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"                \"\\033[38;2;255;165;0m\", // Orange","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"                \"\\033[33m\", // Yellow","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"                \"\\033[32m\", // Green","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"                \"\\033[34m\", // Blue","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"                \"\\033[35m\"  // Magenta (Purple)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"        };","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"        String reset \u003d \"\\033[0m\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"        StringBuilder coloredLogo \u003d new StringBuilder();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"        int colorIndex \u003d 0;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"        for(String word : words) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"            if(!word.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"                coloredLogo.append(colors[colorIndex % colors.length]).append(word);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"                colorIndex++;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"        coloredLogo.append(reset);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"        return coloredLogo.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"    private static String[] getBaseLogo() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"        String logo \u003d \".d8888.; d8888b.; d8888b.; d888888b; d8b   db;  d888b;  \\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"                \"88\u0027  YP; 88  `8D; 88  `8D;   `88\u0027;   888o  88; 88\u0027 Y8b; \\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"                \"`8bo.;   88oodD\u0027; 88oobY\u0027;    88;    88V8o 88; 88;      \\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"                \"  `Y8b.; 88~~~;   88`8b;      88;    88 V8o88; 88  ooo; \\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"                \"db   8D; 88;      88 `88.;   .88.;   88  V888; 88. ~8~; \\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"                \"`8888Y\u0027; 88;      88   YD; Y888888P; VP   V8P;  Y888P;  \\n\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"        return logo.split(\";\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":63}},{"path":"src/main/java/util/DateTimeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package util;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"public class DateTimeUtils {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static LocalDateTime parseDateOrDateTime(String input) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"            if (input.contains(\"T\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"                // If input has time, parse as LocalDateTime","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"                return LocalDateTime.parse(input);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"            } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"                // If input has only date, parse as LocalDate and convert to LocalDateTime","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"                return LocalDate.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")).atStartOfDay();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new UserFacingException(e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":25}},{"path":"src/main/java/util/DirectoryInitializeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package util;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"public class DirectoryInitializeUtils {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static Path initializeDirectory() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Define the file path relative to the project root","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"        Path filePath \u003d Paths.get(\"./appData/tasks.txt\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"        // Ensure the directory exists","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"            throw new RuntimeException(\"Failed to create directory: \" + filePath.getParent(), e);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"        return filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":21}},{"path":"src/main/java/util/TaskDeserializer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package util;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.DeadLine;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Events;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.UUID;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":" * Utility class for deserializing task objects from string representations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":" * This class converts a serialized task string into a {@link Task} object by parsing","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":" * its components such as UUID, type, completion status, name, and timestamps.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"public class TaskDeserializer {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Deserializes a task from a formatted string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"     * \u003cp\u003eExpected format: {@code UUID|TYPE|COMPLETED|NAME|[OPTIONAL_TIMESTAMPS]}\u003c/p\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"     *     \u003cli\u003e{@code UUID} - The unique identifier of the task.\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"     *     \u003cli\u003e{@code TYPE} - \"T\" (ToDo), \"D\" (Deadline), \"E\" (Event).\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"     *     \u003cli\u003e{@code COMPLETED} - \"1\" for completed, \"0\" for incomplete.\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"     *     \u003cli\u003e{@code NAME} - The task name or description.\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"     *     \u003cli\u003e{@code OPTIONAL_TIMESTAMPS} -","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"     *         \u003cul\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"     *             \u003cli\u003eFor Deadline: {@code dueBy}\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"     *             \u003cli\u003eFor Event: {@code startAt | endBy}\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"     *         \u003c/ul\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param line The serialized task string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return A {@link Task} object if the string is valid; otherwise, {@code null}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static Task deserializeTask(String line) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (parts.length \u003c 4) return null; // Invalid format","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"            UUID id \u003d UUID.fromString(parts[0]); // Extract UUID","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"            String type \u003d parts[1];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"            boolean isCompleted \u003d parts[2].equals(\"1\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"            String name \u003d parts[3];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"            Task task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"            switch (type) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"                case \"T\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"                    task \u003d new ToDo(name);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"                    break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"                case \"D\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"                    if (parts.length \u003c 5) return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"                    LocalDateTime dueBy \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"                    task \u003d new DeadLine(name, dueBy);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"                    break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"                case \"E\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"                    if (parts.length \u003c 6) return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"                    LocalDateTime startAt \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"                    LocalDateTime endBy \u003d LocalDateTime.parse(parts[5]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"                    task \u003d new Events(name, startAt, endBy);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"                    break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kimseunghyun-kr"},"content":"                default:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kimseunghyun-kr"},"content":"                    return null; // Unknown task type","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kimseunghyun-kr"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kimseunghyun-kr"},"content":"            task.setCompleted(isCompleted);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kimseunghyun-kr"},"content":"            task.setId(id); // Assign UUID from file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kimseunghyun-kr"},"content":"            return task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kimseunghyun-kr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kimseunghyun-kr"},"content":"            System.err.println(\"Error parsing task: \" + line);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kimseunghyun-kr"},"content":"            return null; // Invalid format","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":84}},{"path":"src/main/java/util/TaskSerializer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package util;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.DeadLine;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Events;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":" * Utility class for converting {@link Task} objects into a string format for storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"public class TaskSerializer {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"     * Converts a {@link Task} into a string representation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"     * \u003cp\u003eFormat: {@code UUID|TYPE|COMPLETED|NAME|[EXTRA_FIELDS]}\u003c/p\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"     *     \u003cli\u003e{@code UUID} - Task ID\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"     *     \u003cli\u003e{@code TYPE} - \"T\" (ToDo), \"D\" (Deadline), \"E\" (Event)\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"     *     \u003cli\u003e{@code COMPLETED} - \"1\" for done, \"0\" for not done\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"     *     \u003cli\u003e{@code NAME} - Task description\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"     *     \u003cli\u003eExtra fields:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"     *         \u003cul\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"     *             \u003cli\u003eDeadline: {@code dueBy}\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"     *             \u003cli\u003eEvent: {@code startAt | endBy}\u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"     *         \u003c/ul\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @param task The task to serialize.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"     * @return The formatted string representing the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"    public static String serializeTask(Task task) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"        sb.append(task.getId()).append(\"|\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"        if (task instanceof DeadLine) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"            DeadLine dl \u003d (DeadLine) task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"            sb.append(\"D|\").append(dl.getCompleted() ? \"1\" : \"0\").append(\"|\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"                    .append(dl.getName()).append(\"|\").append(dl.getDueby());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else if (task instanceof Events) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"            Events ev \u003d (Events) task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"            sb.append(\"E|\").append(ev.getCompleted() ? \"1\" : \"0\").append(\"|\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"                    .append(ev.getName()).append(\"|\").append(ev.getStartat()).append(\"|\").append(ev.getEndby());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else if (task instanceof ToDo) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"            sb.append(\"T|\").append(task.getCompleted() ? \"1\" : \"0\").append(\"|\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"                    .append(task.getName());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"            sb.append(\"UNKNOWN\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"        return sb.toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":55}},{"path":"src/test/java/entity/CommandFactoryTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package entity;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.Command.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import mocks.MockTaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":" * Unit tests for {@link CommandFactory} using JUnit 5.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":" * Follows the GIVEN-WHEN-THEN format for readability.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"public class CommandFactoryTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    private ITaskService mockTaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"    private CommandFactory commandFactory;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"        mockTaskService \u003d new MockTaskService();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"        commandFactory \u003d new CommandFactory(mockTaskService);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"    @DisplayName(\"GIVEN a valid command string WHEN createCommand is called THEN the correct Command instance should be returned\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"    void testCreateValidCommand() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"        // GIVEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"        String commandString \u003d \"ADD\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"        // WHEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"        Command command \u003d commandFactory.createCommand(Actions.valueOf(commandString.toUpperCase()));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"        // THEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"    @DisplayName(\"GIVEN an invalid lowercase add command string WHEN createCommand is called THEN the correct exception instance should be returned\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"    void testCreateAddCommandException() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"        // GIVEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"        String commandString \u003d \"add\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"        // WHEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertThrows(RuntimeException.class, ()-\u003ecommandFactory.createCommand(Actions.valueOf(commandString)));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"        // THEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"    @DisplayName(\"GIVEN an invalid command string WHEN createCommand is called THEN an exception instance should be returned\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"    void testCreateInvalidCommand() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"        // GIVEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"        String commandString \u003d \"unknown\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"        // WHEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertThrows(RuntimeException.class, ()-\u003ecommandFactory.createCommand(Actions.valueOf(commandString)));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"    @DisplayName(\"GIVEN a delete command string WHEN createCommand is called THEN a DeleteCommand instance should be returned\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"    void testCreateDeleteCommand() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kimseunghyun-kr"},"content":"        // GIVEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kimseunghyun-kr"},"content":"        String commandString \u003d \"delete\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kimseunghyun-kr"},"content":"        // WHEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kimseunghyun-kr"},"content":"        Command command \u003d commandFactory.createCommand(Actions.valueOf(commandString.toUpperCase()));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kimseunghyun-kr"},"content":"        // THEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kimseunghyun-kr"},"content":"    @DisplayName(\"GIVEN a list command string WHEN createCommand is called THEN a ListCommand instance should be returned\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kimseunghyun-kr"},"content":"    void testCreateListCommand() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kimseunghyun-kr"},"content":"        // GIVEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kimseunghyun-kr"},"content":"        String commandString \u003d \"list\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kimseunghyun-kr"},"content":"        // WHEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kimseunghyun-kr"},"content":"        Command command \u003d commandFactory.createCommand(Actions.valueOf(commandString.toUpperCase()));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kimseunghyun-kr"},"content":"        // THEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":94}},{"path":"src/test/java/mocks/MockTaskCoordinatorRepositoryService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package mocks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import exceptions.UserFacingException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.TaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.TaskRepositoryCoordinatorService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.UUID;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"public class MockTaskCoordinatorRepositoryService extends TaskRepositoryCoordinatorService {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"    MockTaskRepository mockTaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    public MockTaskCoordinatorRepositoryService(MockTaskRepository mockTaskRepository) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"        super(mockTaskRepository, mockTaskRepository);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"        this.mockTaskRepository \u003d mockTaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Task findByOrder(int orderIndex){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"        return this.mockTaskRepository.findByOrder(orderIndex- 1).get();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"    void markDirty(UUID uuid){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"        return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":24}},{"path":"src/test/java/mocks/MockTaskRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package mocks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.TaskType;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.IFileBackedTaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import repository.ITaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.UUID;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"public class MockTaskRepository implements ITaskRepository, IFileBackedTaskRepository {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    List\u003cTask\u003e temptaskStore \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    public void flush() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"        return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"    public UUID markDirty(UUID id) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"        return temptaskStore.get(0).getId();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Task save(Task entity) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"        temptaskStore.add(entity);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"        return entity;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Optional\u003cTask\u003e findById(UUID uuid) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"        return Optional.empty();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Optional\u003cTask\u003e findByOrder(Integer id) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"        return Optional.ofNullable(temptaskStore.get(id));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"    public List\u003cTask\u003e findAll() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"        return temptaskStore;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Task deleteById(UUID uuid) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"        return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Task deleteByOrder(Integer id) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task task \u003d temptaskStore.get(id);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"        temptaskStore.remove((int)id);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"        return task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"    public Integer remainingTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"        return temptaskStore.size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"    public List\u003cTask\u003e findAllFromWhenToWhen(TaskType type, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"        return temptaskStore;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kimseunghyun-kr"},"content":"    public int findOrder(UUID uuid) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kimseunghyun-kr"},"content":"        return 0;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kimseunghyun-kr"},"content":"    public List\u003cTask\u003e findTaskWithKeyword(String keyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kimseunghyun-kr"},"content":"        return temptaskStore;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":80}},{"path":"src/test/java/mocks/MockTaskService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package mocks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.TaskType;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.ITaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import service.TaskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"public class MockTaskService implements ITaskService {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String markDone(int index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"        return \"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String markUndone(int index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"        return \"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String getAllTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"        return \"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String addTask(List\u003cString\u003e taskParams) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"        return \"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String deleteTask(int taskId) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"        return \"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String SearchByDate(TaskType type, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"        return \"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String SearchOrder(String uuid) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"        return \"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"    public String SearchByKeyword(String keyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"        return \"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":50}},{"path":"src/test/java/service/TaskServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"package service;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"import entity.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"import mocks.MockTaskCoordinatorRepositoryService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"import mocks.MockTaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"public class TaskServiceTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kimseunghyun-kr"},"content":"    private TaskService taskService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"    private MockTaskRepository mockTaskRepository;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kimseunghyun-kr"},"content":"    private MockTaskCoordinatorRepositoryService mockTaskCoordinatorRepositoryService;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kimseunghyun-kr"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kimseunghyun-kr"},"content":"    void setUp() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"        mockTaskRepository \u003d new MockTaskRepository();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kimseunghyun-kr"},"content":"        mockTaskCoordinatorRepositoryService \u003d new MockTaskCoordinatorRepositoryService(mockTaskRepository);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kimseunghyun-kr"},"content":"        taskService \u003d new TaskService(mockTaskCoordinatorRepositoryService, mockTaskRepository);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kimseunghyun-kr"},"content":"    @DisplayName(\"GIVEN a new task WHEN added THEN it should be retrievable\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kimseunghyun-kr"},"content":"    void testAddTask() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kimseunghyun-kr"},"content":"        // GIVEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task newTask \u003d new Task(\"Task\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kimseunghyun-kr"},"content":"        // WHEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kimseunghyun-kr"},"content":"        taskService.addTask(new ArrayList\u003c\u003e(List.of(\"TODO\", \"Task\")));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kimseunghyun-kr"},"content":"        String tasks \u003d taskService.getAllTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kimseunghyun-kr"},"content":"        // THEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertNotNull(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertFalse(tasks.isEmpty());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertEquals(newTask.getName(), mockTaskRepository.findAll().get(0).getName());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kimseunghyun-kr"},"content":"    @DisplayName(\"GIVEN a task WHEN deleted THEN it should no longer exist\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kimseunghyun-kr"},"content":"    void testDeleteTask() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kimseunghyun-kr"},"content":"        // GIVEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kimseunghyun-kr"},"content":"        taskService.addTask(new ArrayList\u003c\u003e(List.of(\"TODO\", \"Task\")));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kimseunghyun-kr"},"content":"        String tasks \u003d taskService.getAllTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kimseunghyun-kr"},"content":"        // WHEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kimseunghyun-kr"},"content":"        taskService.deleteTask(1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kimseunghyun-kr"},"content":"        // THEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertTrue(taskService.getAllTasks().isEmpty());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kimseunghyun-kr"},"content":"    @DisplayName(\"GIVEN a list of tasks WHEN searched THEN matching tasks should be returned\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kimseunghyun-kr"},"content":"    void testSearchTask() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kimseunghyun-kr"},"content":"        // GIVEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task task1 \u003d new Task(\"Important Task\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task task2 \u003d new Task(\"Casual Task\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kimseunghyun-kr"},"content":"        mockTaskRepository.save(task1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kimseunghyun-kr"},"content":"        mockTaskRepository.save(task2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kimseunghyun-kr"},"content":"        // WHEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kimseunghyun-kr"},"content":"        String results \u003d taskService.SearchByKeyword(\"Important\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kimseunghyun-kr"},"content":"        // THEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertTrue(results.contains(task1.toString()));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kimseunghyun-kr"},"content":"    @DisplayName(\"GIVEN a task repository WHEN retrieving all tasks THEN all should be returned\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kimseunghyun-kr"},"content":"    void testGetAllTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kimseunghyun-kr"},"content":"        // GIVEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task task1 \u003d new Task(\"Task A\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task task2 \u003d new Task(\"Task B\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kimseunghyun-kr"},"content":"        mockTaskRepository.save(task1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kimseunghyun-kr"},"content":"        mockTaskRepository.save(task2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kimseunghyun-kr"},"content":"        // WHEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kimseunghyun-kr"},"content":"        String tasks \u003d taskService.getAllTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kimseunghyun-kr"},"content":"        // THEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertTrue(tasks.contains(task1.toString()));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertTrue(tasks.contains(task2.toString()));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kimseunghyun-kr"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kimseunghyun-kr"},"content":"    @DisplayName(\"GIVEN a task WHEN marked as completed THEN it should be updated\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kimseunghyun-kr"},"content":"    void testMarkTaskAsCompleted() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kimseunghyun-kr"},"content":"        // GIVEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kimseunghyun-kr"},"content":"        Task task \u003d new Task(\"Incomplete Task\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kimseunghyun-kr"},"content":"        mockTaskRepository.save(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kimseunghyun-kr"},"content":"        // WHEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kimseunghyun-kr"},"content":"        taskService.markDone(1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kimseunghyun-kr"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kimseunghyun-kr"},"content":"        // THEN","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kimseunghyun-kr"},"content":"        assertTrue(task.getCompleted());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kimseunghyun-kr"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kimseunghyun-kr"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":104}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kimseunghyun-kr"},"content":"nougatnougat","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kimseunghyun-kr"},"content":"todo 5","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kimseunghyun-kr"},"content":"mark 0","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kimseunghyun-kr"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kimseunghyun-kr"},"content":"mark 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kimseunghyun-kr"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kimseunghyun-kr"},"content":"unmark 0","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kimseunghyun-kr"},"content":"unmark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kimseunghyun-kr"},"content":"unmark 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kimseunghyun-kr"},"content":"unmark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kimseunghyun-kr"},"content":"Deadline nougat 2024-05-13","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kimseunghyun-kr"},"content":"DeadLine nougat2 2024-13-13","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kimseunghyun-kr"},"content":"Event nougat 2025-12-25","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kimseunghyun-kr"},"content":"Event nougat 2025-12-25 2026-12-25","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kimseunghyun-kr"},"content":"Event nougat 2025-13-25 2026-13-25","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kimseunghyun-kr"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kimseunghyun-kr"},"content":"java -classpath ..\\bin Spring \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kimseunghyun-kr"},"content":"java -classpath ../bin Spring \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"kimseunghyun-kr":1,"-":37}}]
