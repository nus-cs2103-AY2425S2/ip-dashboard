[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"checkstyle {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"    mainClass.set(\"mei/javafx/Launcher\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"    archiveBaseName \u003d \"mei\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"TobyCyan":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"# Mei User Guide","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"![Screenshot of the user interface.](Ui.png)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"## Welcome User😄! ","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"And behold, your personal Task Managing Assistant, **Mei**!","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"This application is optimized for usage via a **Command Line Interface** (CLI) while still having a Graphical User Interface (GUI).","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"With **Mei**, you can:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"- [x]  Add","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"    - [ToDo](#adding-todos)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"    - [Deadlines \u0026 Events](#adding-deadlines--events)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"- [x]  [List](#listing-all-tasks)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"- [x]  [Mark/ Unmark as complete](#marking-unmarking-a-task)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"- [x]  [Find](#find-feature)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"- [x]  [Undo](#undo-feature)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"- [x]  [Save](#save-feature)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"***ALL your tasks***!! 🥳","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"## Adding ToDos","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"You may add ToDo tasks by typing the following command:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"todo {task name}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"For instance:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"todo return books","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"You may expect an output like this:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"![Expected output for adding a ToDo task](AddToDoOutput.png)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"## Adding Deadlines \u0026 Events","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"You may add Deadline and Event tasks by typing the following command:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"deadline {task name} /by {date/time}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"event {task name} /from {date/time} /to {date/time}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"\u003e **IMPORTANT**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"\u003e ","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"\u003e The format of the date/time has to be in day/month/year HoursMinutes in the 24-hour time format.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"\u003e However, you may swap out the `/` for `-`.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"\u003e The day and year may be swapped too.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"For instance:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"deadline go to library /by 25/02/2025 1600","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"event watch a movie /from 2025-02-25 1100 /to 2025/02/25 1300","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"You may expect an output like this:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"![Expected output for adding a Deadline task](AddDeadlineOutput.png)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"![Expected output for adding an Event task](AddEventOutput.png)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TobyCyan"},"content":"## Listing All Tasks","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TobyCyan"},"content":"After adding a few tasks, you may want to see what you have added so far.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TobyCyan"},"content":"Simply type `list`, and you can see:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TobyCyan"},"content":"![Expected output for listing tasks.](ListOutput.png)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TobyCyan"},"content":"## Marking/ Unmarking a Task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TobyCyan"},"content":"\u003e What\u0027s a task management assistant if she can\u0027t even `mark`/ `unmark` your tasks for you? - Me","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TobyCyan"},"content":"To mark/ unmark the completion of your tasks, simply type:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TobyCyan"},"content":"mark {task number}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TobyCyan"},"content":"unmark {task number}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TobyCyan"},"content":"\u003e **TIP**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TobyCyan"},"content":"\u003e ","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TobyCyan"},"content":"\u003e Use the `list` command to see the number of your tasks on the list!","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TobyCyan"},"content":"For instance:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TobyCyan"},"content":"mark 1","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TobyCyan"},"content":"unmark 1","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TobyCyan"},"content":"You may expect an output like this:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TobyCyan"},"content":"![Expected output for marking a task](MarkOutput.png)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TobyCyan"},"content":"![Expected output for unmarking a task](UnmarkOutput.png)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TobyCyan"},"content":"## Find Feature","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TobyCyan"},"content":"Finding specific tasks from your long list is ~~tough sometimes~~ **MADE EASY**!","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TobyCyan"},"content":"You may find any tasks by typing the following command:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TobyCyan"},"content":"find {keyword}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TobyCyan"},"content":"\u003e **NOTE**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"TobyCyan"},"content":"\u003e ","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"TobyCyan"},"content":"\u003e The keyword to find a task must be part of the task description!","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TobyCyan"},"content":"For instance:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TobyCyan"},"content":"find library","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"TobyCyan"},"content":"You may expect an output like this:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"TobyCyan"},"content":"![Expected output for finding a task](FindOutput.png)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"TobyCyan"},"content":"## Undo Feature","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"TobyCyan"},"content":"**Undo** previous commands within the ***same*** user session by typing `undo`!","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"TobyCyan"},"content":"## Save Feature","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"TobyCyan"},"content":"\u003e **NOTE**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"TobyCyan"},"content":"\u003e ","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"TobyCyan"},"content":"\u003e You may be wondering, where do the tasks get saved to in your devices?","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"TobyCyan"},"content":"\u003e Well *fear not*! Here\u0027s the `main` method 😉","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"TobyCyan"},"content":"\u003e You may find all of your saved task data from the given relative path!","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"TobyCyan"},"content":"```java","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"TobyCyan"},"content":"public static void main(String[] args) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"TobyCyan"},"content":"    new Mei(\"./taskdata/tasks.txt\").run();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"TobyCyan"},"content":"```","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"TobyCyan":115,"-":23}},{"path":"src/main/java/mei/Mei.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import mei.fileaccess.FileStorage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"import mei.manager.InputManager;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import mei.manager.ResponseManager;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import mei.manager.TaskManager;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":" * Represents the main class for the chatbot known as Mei.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":" * Consists of all the managers that are passed into other managers to establish communication between the managers.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":" * The chatbot application shall be run from the main method.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"public class Mei {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"    private FileStorage fileStorage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    private ResponseManager responseManager;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    private InputManager inputManager;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"     * Initializes the chatbot known as Mei.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"     * Sets up the connections between managers.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"     * Initializes the file storage with the given file path to save task data.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"     * Also starts up by greeting the user first.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"     * @param filePath The file path to save task data.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"    public Mei(String filePath) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"        this.fileStorage \u003d new FileStorage(filePath);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"        this.taskManager \u003d new TaskManager(fileStorage.readTasks(), fileStorage);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"        // Initialize response manager to process user input and generate responses.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"        this.responseManager \u003d new ResponseManager(taskManager);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"        this.inputManager \u003d new InputManager(taskManager, responseManager);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"     * Sends the responses from Mei to the MainWindow after processing the user input via the managers.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"     * The user input is redirected by the input manager to other managers,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"     * which then sets the field that is used to display to the user as a response.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"     * @param userInput The user input to redirect and get a response out of.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"    public void redirectInputToSetResponses(String userInput) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"        inputManager.redirectInput(userInput, false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"TobyCyan":46}},{"path":"src/main/java/mei/exception/DateTimeConversionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.exception;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the Mei exception that is thrown when a timed task given","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" * does not provide a valid date/time format.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * echoErrorResponse should be called when this exception is caught.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" * This is classified as a task-related exception.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"public class DateTimeConversionException extends MeiException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] ERROR_RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"        \"Oh, forgot to tell you, I would prefer the dates and timings given in this format.\",","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"        \"day/month/year HoursMinutes, you could swap the / for - too!\",","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"        \"And feel free to swap the placements of the day and year.\",","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"        \"For example, 25/02/2025 1600, 2026-01-16 0800 are both valid date/times!\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    public DateTimeConversionException() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"        super(ERROR_RESPONSES);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"TobyCyan":20}},{"path":"src/main/java/mei/exception/DeadlineNotEnoughInfoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.exception;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the Mei exception that is thrown when the deadline task given","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" * does not provide enough information to be interpreted.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * echoErrorResponse should be called when this exception is caught.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" * This is classified as a task-related exception.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"public class DeadlineNotEnoughInfoException extends MeiException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] ERROR_RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"        \"Hmm? I think you missed some information there...\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"        \"I would need to know the deadline so... do use /by to indicate it!\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    public DeadlineNotEnoughInfoException() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"        super(ERROR_RESPONSES);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"TobyCyan":19}},{"path":"src/main/java/mei/exception/EmptyMostRecentReversedInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.exception;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the Mei exception that is thrown when the most recent reversed input is empty.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" * echoErrorResponse should be called when this exception is caught.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * This is classified as an input-related exception.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"public class EmptyMostRecentReversedInputException extends MeiException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] ERROR_RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"        \"It seems that there are nothing to undo!\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"    public EmptyMostRecentReversedInputException() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"        super(ERROR_RESPONSES);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"TobyCyan":16}},{"path":"src/main/java/mei/exception/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.exception;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the Mei exception that is thrown when the new task given does not have a description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" * echoErrorResponse should be called when this exception is caught.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * This is classified as a task-related exception.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"public class EmptyTaskDescriptionException extends MeiException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] ERROR_RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"        \"Remember to add a description to your tasks, okay?\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"    public EmptyTaskDescriptionException() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"        super(ERROR_RESPONSES);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"TobyCyan":17}},{"path":"src/main/java/mei/exception/EventNotEnoughInfoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.exception;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the Mei exception that is thrown when the event task given does not provide enough information to be interpreted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" * echoErrorResponse should be called when this exception is caught.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * This is classified as a task-related exception.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"public class EventNotEnoughInfoException extends MeiException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] ERROR_RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"        \"Hmm? I think you missed some information there...\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"        \"I would need to know the start and end date/times so... do use /from and /to to indicate them!\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"    public EventNotEnoughInfoException() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"        super(ERROR_RESPONSES);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"TobyCyan":18}},{"path":"src/main/java/mei/exception/MeiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.exception;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import mei.javafx.MainWindow;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * Represents the parent class for all exceptions specific to Mei.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" * This class is a throwable and should be called using echoErrorResponse when caught.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":" * This class also holds an array of error response strings.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"public class MeiException extends Throwable {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"    private final String[] errorResponses;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"    public MeiException(String[] errorResponses) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"        this.errorResponses \u003d errorResponses;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"     * Prompts the error responses to the user when a Mei exception is thrown.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"     * This method should be called whenever a Mei exception is caught by the try-catch clause.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"     * The error response array is defined at the construction of any Mei exceptions.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"    public void echoErrorResponse() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"        MainWindow.setMeiResponses(errorResponses);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"TobyCyan":26}},{"path":"src/main/java/mei/exception/ProcessTaskDateTimeConversionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.exception;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the Mei exception that is thrown when there is a date/time conversion error while processing a task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" * echoErrorResponse should be called when this exception is caught.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * This is classified as a process task-related exception.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"public class ProcessTaskDateTimeConversionException extends ProcessTaskException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] ERROR_RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"            \"Uh oh, there seems to be an invalid date/time in one of your tasks.\",","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"            \"I cannot process this task, so feel free to re-add it!\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"    public ProcessTaskDateTimeConversionException() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"        super(ERROR_RESPONSES);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"TobyCyan":17}},{"path":"src/main/java/mei/exception/ProcessTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.exception;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"public class ProcessTaskException extends MeiException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"    public ProcessTaskException(String[] errorResponses) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"        super(errorResponses);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"TobyCyan":7}},{"path":"src/main/java/mei/exception/TaskIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.exception;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the Mei exception that is thrown when the user tries to access a task index that is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" * The task index is invalid if it falls outside the bounds (i.e. not an index held by any existing task.).","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * echoErrorResponse should be called when this exception is caught.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" * This is classified as a task-related exception.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"public class TaskIndexOutOfBoundsException extends MeiException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] ERROR_RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"        \"Hmm..? This task number doesn\u0027t seem to be\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"            + \" on the list...\", \"Can you repeat with a valid one? :3\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    public TaskIndexOutOfBoundsException() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"        super(ERROR_RESPONSES);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"TobyCyan":19}},{"path":"src/main/java/mei/exception/UnknownTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.exception;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the Mei exception that is thrown when the user tries to add a new task with a type that is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" * The task type is invalid if it does not exist in the TASK_TYPES list defined within the Task Manager class.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * echoErrorResponse should be called when this exception is caught.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" * This is classified as a task-related exception.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"public class UnknownTaskTypeException extends MeiException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] ERROR_RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"        \"Oops! I think you may have entered an unknown task type!\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"            + \"Please try again!\", \"The accepted tasks are todo, deadline, and event :))\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    public UnknownTaskTypeException() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"        super(ERROR_RESPONSES);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"TobyCyan":19}},{"path":"src/main/java/mei/exception/UnknownUserInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.exception;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the Mei exception that is thrown when the user gives an input undefined to Mei.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" * The input known to Mei are all specified in the redirectInput function within the Input Manager class.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * echoErrorResponse should be called when this exception is caught.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"public class UnknownUserInputException extends MeiException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] ERROR_RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"        \"Come again? I don\u0027t quite get what you are saying.\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"    public UnknownUserInputException() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"        super(ERROR_RESPONSES);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"TobyCyan":16}},{"path":"src/main/java/mei/fileaccess/FileRead.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.fileaccess;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import java.io.File;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.DateTimeConversionException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.ProcessTaskDateTimeConversionException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Deadline;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Event;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"import mei.task.ToDo;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":" * Represents a class that acts as a utility to read from the designated file path.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":" * This class holds methods that can read from a file path that supposedly holds all the saved task data","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":" * and can process the task data within it.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":" * This class should not be interacted with directly but rather all methods here can be called","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":" * from the FileStorage class.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"public class FileRead {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"    private final String fileReadPath;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"    public FileRead(String fileReadPath) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"        this.fileReadPath \u003d fileReadPath;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"     * Reads from the defined file path during initialization.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"     * This method first checks whether the file path exists,","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"     * and ensures that the directory and files are created first.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"     * Then, the task data are retrieved iteratively, line by line from the file, and returned as an array list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"     * @return The array list that holds all the retrieved task data.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"     * @throws IOException if an error occurred while reading from the task data file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"    public ArrayList\u003cTask\u003e readFromFile() throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"        File file \u003d new File(fileReadPath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"        boolean isFilePathExist \u003d FileStorage.isFilePathExist(file);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"        if (!isFilePathExist) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"            FileStorage.createFilePath(file);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"        return scanTasksThenReturn(scanner);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"    private Task processFileTaskData(String fileData) throws DateTimeConversionException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"        String splitTaskFileDataRegex \u003d \"\\\\|\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"        String[] splitFileData \u003d fileData.split(splitTaskFileDataRegex, 6);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"        // Extract the necessary task fields.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"        String taskType \u003d splitFileData[0];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"        boolean isTaskDone \u003d splitFileData[1].equals(\"[X]\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"        String description \u003d splitFileData[2];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"        switch (taskType) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"        case \"ToDo\":","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"            String addTodoTaskCommand \u003d splitFileData[3];","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TobyCyan"},"content":"            newTask \u003d new ToDo(description, addTodoTaskCommand);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TobyCyan"},"content":"        case \"Deadline\":","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TobyCyan"},"content":"            String deadlineDateTime \u003d splitFileData[3];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TobyCyan"},"content":"            String addDeadlineTaskCommand \u003d splitFileData[4];","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TobyCyan"},"content":"            newTask \u003d new Deadline(description, deadlineDateTime, addDeadlineTaskCommand);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TobyCyan"},"content":"        case \"Event\":","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TobyCyan"},"content":"            String startDateTime \u003d splitFileData[3];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TobyCyan"},"content":"            String endDateTime \u003d splitFileData[4];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TobyCyan"},"content":"            String addEventTaskCommand \u003d splitFileData[5];","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TobyCyan"},"content":"            newTask \u003d new Event(description, startDateTime, endDateTime, addEventTaskCommand);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TobyCyan"},"content":"        default:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TobyCyan"},"content":"            // Do nothing.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TobyCyan"},"content":"        assert newTask !\u003d null : \"Shouldn\u0027t encounter an empty line when scanning for tasks.\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TobyCyan"},"content":"        if (isTaskDone) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TobyCyan"},"content":"            newTask.completeTask();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TobyCyan"},"content":"        return newTask;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TobyCyan"},"content":"    private ArrayList\u003cTask\u003e scanTasksThenReturn(Scanner scanner) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TobyCyan"},"content":"        ArrayList\u003cTask\u003e resultTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TobyCyan"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TobyCyan"},"content":"            String newLine \u003d scanner.nextLine();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TobyCyan"},"content":"            processThenAddTo(newLine, resultTasks);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TobyCyan"},"content":"        return resultTasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TobyCyan"},"content":"    private void processThenAddTo(String newLine, ArrayList\u003cTask\u003e resultTasks) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TobyCyan"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TobyCyan"},"content":"            Task taskData \u003d processFileTaskData(newLine);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TobyCyan"},"content":"            resultTasks.add(taskData);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"TobyCyan"},"content":"        } catch (DateTimeConversionException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"TobyCyan"},"content":"            // A date/time conversion exception is thrown,","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TobyCyan"},"content":"            // but we want the chatbot to prompt a process task version of the exception instead.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TobyCyan"},"content":"            ProcessTaskDateTimeConversionException trueException \u003d new ProcessTaskDateTimeConversionException();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TobyCyan"},"content":"            trueException.echoErrorResponse();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"TobyCyan":117}},{"path":"src/main/java/mei/fileaccess/FileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.fileaccess;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import java.io.File;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":" * Represents the storage class that is responsible for interacting directly with the file-related calls.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":" * This class holds a file reader and writer that does exactly what the class names suggest.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":" * Methods from these utilities should be called from this class.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"public class FileStorage {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    private final FileRead fileReader;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"    private final FileWrite fileWriter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"     * Initializes the file reader and writer with the given file store path.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"     * @param fileStorePath The path string to store the task data file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"    public FileStorage(String fileStorePath) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"        this.fileReader \u003d new FileRead(fileStorePath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"        this.fileWriter \u003d new FileWrite(fileStorePath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"     * Reads from the initialized file path","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"     * using the file reader.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"     * This method should be called when initializing the Task Manager for the first time","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"     * to load the current list of tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"     * @return The list of tasks read from the file path.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"    public ArrayList\u003cTask\u003e readTasks() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"            return fileReader.readFromFile();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"            System.out.println(\"Error reading from file in filestorage: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"     * Writes a new task to the initialized file path","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"     * using the file writer.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"     * This method should be called whenever the user wants to add a new task to the current list of tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"     * @param task The new task to be added to the current list of tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"    public void writeTask(Task task) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"            fileWriter.writeTaskToFile(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"            System.out.println(\"Error writing task to file in filestorage: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"     * Overwrites an existing task at the initialized file path","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"     * using the file writer.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"     * This method should be called whenever the user wants to update information","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TobyCyan"},"content":"     * of one of the existing task in the list of tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TobyCyan"},"content":"     * @param lineNumber The task index, or the line number that the overwritten task is currently located at.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TobyCyan"},"content":"     * @param taskData The new task data to write.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TobyCyan"},"content":"    public void overwriteTask(int lineNumber, String taskData) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TobyCyan"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TobyCyan"},"content":"            fileWriter.overwriteTaskData(lineNumber, taskData);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TobyCyan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TobyCyan"},"content":"            System.out.println(\"Error overwriting task to file in filestorage: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TobyCyan"},"content":"     * Removes an existing task at the initialized file path","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TobyCyan"},"content":"     * using the file writer.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TobyCyan"},"content":"     * This method should be called whenever the user wants to delete","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TobyCyan"},"content":"     * one of the existing task in the list of tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TobyCyan"},"content":"     * @param lineNumber The task index, or the line number that the task to be deleted is currently located at.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TobyCyan"},"content":"    public void removeTask(int lineNumber) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TobyCyan"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TobyCyan"},"content":"            fileWriter.removeTaskData(lineNumber);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TobyCyan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TobyCyan"},"content":"            System.out.println(\"Error removing task to file in filestorage: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TobyCyan"},"content":"     * Creates the given file at the initialized file path.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TobyCyan"},"content":"     * This method first creates the file\u0027s parent directory if it doesn\u0027t exist yet,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TobyCyan"},"content":"     * then creates the file itself that is used to store all the task data.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TobyCyan"},"content":"     * @param file The file object to be created at the given path.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TobyCyan"},"content":"     * @return true or false depending on whether the file has been successfully created or not.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TobyCyan"},"content":"     * @throws IOException if an error occurred during the creation of either the parent directory or the file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TobyCyan"},"content":"    public static boolean createFilePath(File file) throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TobyCyan"},"content":"        boolean isCreateParentDirSuccess \u003d createFileParentDirectory(file);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TobyCyan"},"content":"        if (!isCreateParentDirSuccess) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TobyCyan"},"content":"            throw new IOException(\"Parent directory creation failed.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TobyCyan"},"content":"        boolean isCreateFileSuccess \u003d createFileUnderParent(file);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"TobyCyan"},"content":"        if (!isCreateFileSuccess) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"TobyCyan"},"content":"            throw new IOException(\"File path creation failed.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TobyCyan"},"content":"        return true;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"TobyCyan"},"content":"     * Checks whether the file path exists.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"TobyCyan"},"content":"     * @param file The file to check for its existence.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"TobyCyan"},"content":"     * @return true or false whether the given file exists or not.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"TobyCyan"},"content":"    public static boolean isFilePathExist(File file) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"TobyCyan"},"content":"        return file.exists();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"TobyCyan"},"content":"     * Creates the parent directory of the given file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"TobyCyan"},"content":"     * This method must be called before createFileUnderParent because it depends on this.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"TobyCyan"},"content":"     * @param file The file in which the parent directory is to be created.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"TobyCyan"},"content":"     * @return true or false whether the parent directory has been successfully created.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"TobyCyan"},"content":"    public static boolean createFileParentDirectory(File file) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"TobyCyan"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"TobyCyan"},"content":"        if (parentDir !\u003d null \u0026\u0026 parentDir.exists()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"TobyCyan"},"content":"            return true;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"TobyCyan"},"content":"        assert parentDir !\u003d null;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"TobyCyan"},"content":"        return parentDir.mkdir();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"TobyCyan"},"content":"     * Creates a file specified at the end of the given path under a parent folder.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"TobyCyan"},"content":"     * At this point, we must be sure that the parent folder should exist.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"TobyCyan"},"content":"     * @param file The file to be created.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"TobyCyan"},"content":"     * @return true or false whether the file has been successfully created.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"TobyCyan"},"content":"     * @throws IOException when error creating the new file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"TobyCyan"},"content":"    public static boolean createFileUnderParent(File file) throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"TobyCyan"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"TobyCyan"},"content":"            return true;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"TobyCyan"},"content":"        return file.createNewFile();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"TobyCyan":156}},{"path":"src/main/java/mei/fileaccess/FileWrite.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.fileaccess;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import java.io.File;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"import java.util.List;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":" * Represents a class that acts as a utility to write to the designated file path.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":" * This class holds methods that can write, overwrite,","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":" * and remove task data that supposedly holds all the saved task data.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":" * This class should not be interacted with directly but rather all methods here can be called","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":" * from the FileStorage class.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"public class FileWrite {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"    private final String fileWritePath;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    public FileWrite(String fileWritePath) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"        this.fileWritePath \u003d fileWritePath;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"     * Writes a new task to the defined file path during initialization.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"     * This method checks whether the file path exists, then appends the new task data as a string to it.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"     * If it doesn\u0027t exist yet, attempts to create the directory and file, then appends the new task data to it.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"     * @param task The new task to write to the file path.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"     * @throws IOException if an error occurred during the creation of the file path.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"    public void writeTaskToFile(Task task) throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"        File file \u003d new File(fileWritePath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"        boolean isFilePathExist \u003d FileStorage.isFilePathExist(file);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"        String taskDataAsString \u003d task.getTaskDataString();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"        if (isFilePathExist) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"            appendToFile(taskDataAsString);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"            return;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"            boolean isCreateFilePathSuccess \u003d FileStorage.createFilePath(file);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"            if (isCreateFilePathSuccess) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"                appendToFile(taskDataAsString);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"            System.out.println(\"Error creating file path: \" + e.getMessage());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"    private void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"        FileWriter fw \u003d new FileWriter(fileWritePath, true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"        fw.write(textToAppend + \"\\n\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"        fw.close();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"     * Overwrites the task data at the given line number where it is located in the task data file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TobyCyan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TobyCyan"},"content":"     * @@author TobyCyan-reused.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TobyCyan"},"content":"     * Reused from stackoverflow.com/questions/31375972/how-to-replace-a-specific-line-in-a-file-using-java","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TobyCyan"},"content":"     * Overwrites a line of task data from the tasks.txt file at the given line number.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TobyCyan"},"content":"     * @param lineNumber The line number within the .txt file to be overwritten.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TobyCyan"},"content":"     * @param taskData The new task data string to replace the old data.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TobyCyan"},"content":"    public void overwriteTaskData(int lineNumber, String taskData) throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TobyCyan"},"content":"        Path path \u003d Paths.get(fileWritePath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TobyCyan"},"content":"        List\u003cString\u003e taskDatas \u003d Files.readAllLines(path, StandardCharsets.UTF_8);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TobyCyan"},"content":"        taskDatas.set(lineNumber - 1, taskData);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TobyCyan"},"content":"        Files.write(path, taskDatas, StandardCharsets.UTF_8);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TobyCyan"},"content":"     * Removes the task data that is currently written at the given line number within the task data file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TobyCyan"},"content":"     * This method first retrieves the current task data, stores them as a list,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TobyCyan"},"content":"     * then removes the task at the appropriate index.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TobyCyan"},"content":"     * Finally, the final updated list gets written back.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TobyCyan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TobyCyan"},"content":"     * This method always returns as a success due to a check for invalid task index before the call.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TobyCyan"},"content":"     * @param lineNumber The task index number, or the line number in the task data file to remove.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TobyCyan"},"content":"     * @throws IOException if an error occurred during the writing of the final updated task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TobyCyan"},"content":"    public void removeTaskData(int lineNumber) throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TobyCyan"},"content":"        Path path \u003d Paths.get(fileWritePath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TobyCyan"},"content":"        List\u003cString\u003e taskDatas \u003d Files.readAllLines(path, StandardCharsets.UTF_8);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TobyCyan"},"content":"        taskDatas.remove(lineNumber - 1);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TobyCyan"},"content":"        Files.write(path, taskDatas, StandardCharsets.UTF_8);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"TobyCyan":97}},{"path":"src/main/java/mei/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.javafx;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":" * Represents the class that holds the dialog box component.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":" * This class contains methods to initialize new dialog boxes that have a text and an icon.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"    private ImageView displayIcon;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"     * Initializes a dialog box with a text and an icon.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"     * @param text The dialog text.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"     * @param icon The user icon.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"    public DialogBox(String text, Image icon) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"        // Some settings for the display icon.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"        displayIcon.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"        displayIcon.setImage(icon);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"    private void flip() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"    public static DialogBox getUserDialog(String text, Image icon) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"        return new DialogBox(text, icon);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TobyCyan"},"content":"    public static DialogBox getMeiDialog(String[] text, Image icon) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TobyCyan"},"content":"        DialogBox db \u003d new DialogBox(String.join(\"\\n\", text), icon);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TobyCyan"},"content":"        db.flip();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TobyCyan"},"content":"        return db;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"TobyCyan":71}},{"path":"src/main/java/mei/javafx/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.javafx;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * Represents the launcher class to our JavaFX application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"public class Launcher {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"TobyCyan":12}},{"path":"src/main/java/mei/javafx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.javafx;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"import mei.Mei;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":" * Represents the main class for this application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    private Mei mei \u003d new Mei(\"./../taskdata/tasks.txt\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"            Scene scene \u003d new Scene(anchorPane);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"            stage.setTitle(\"Mei\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"            stage.setOnCloseRequest(event -\u003e Platform.exit());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMei(mei);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"            stage.show();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"TobyCyan":35}},{"path":"src/main/java/mei/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.javafx;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"import mei.Mei;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":" * Represents the main window class that contains all the components in the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] GREETING_RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"        \"Hello! My name is Mei!\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"        \"What can I do for you?\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] GOODBYE_RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"        \"See you next time! :)\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"    private static String[] meiText;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"    private Image userImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"    private Image meiImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/MeiChibi.png\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"    private Mei mei;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"     * Initializes the main window.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"     * Sets the vValue to be bound with the dialog container\u0027s height.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"     * Also adds a greeting message to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"        addChildrenToDialogContainer(getMeiDialog(GREETING_RESPONSES));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"    public void setMei(Mei mei) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"        this.mei \u003d mei;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"     * Creates a dialog box containing user input, and appends it to","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"        // Gets user input and Mei\u0027s responses.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TobyCyan"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TobyCyan"},"content":"        // Error handling when user input is just a bunch of spaces.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TobyCyan"},"content":"        if (userText.trim().isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TobyCyan"},"content":"            userInput.clear();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TobyCyan"},"content":"            return;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TobyCyan"},"content":"        assert !userText.isEmpty() : \"user input should not be empty\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TobyCyan"},"content":"        if (userText.equals(\"bye\")) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TobyCyan"},"content":"            // Says bye to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TobyCyan"},"content":"            DialogBox exitChatDialogBox \u003d getMeiDialog(GOODBYE_RESPONSES);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TobyCyan"},"content":"            addChildrenToDialogContainer(exitChatDialogBox);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TobyCyan"},"content":"            Platform.exit();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TobyCyan"},"content":"            return;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TobyCyan"},"content":"        mei.redirectInputToSetResponses(userText);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TobyCyan"},"content":"        // Create dialog boxes for both the user and Mei.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TobyCyan"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(userText, userImg);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TobyCyan"},"content":"        DialogBox meiDialog \u003d getMeiDialog(meiText);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TobyCyan"},"content":"        // Add the new dialog boxes into the container.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TobyCyan"},"content":"        addChildrenToDialogContainer(userDialog, meiDialog);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TobyCyan"},"content":"        // Finally, clear the user input text box.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TobyCyan"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TobyCyan"},"content":"     * Gets the Mei dialog box component from the given text input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TobyCyan"},"content":"     * This text input is displayed as Mei\u0027s response.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TobyCyan"},"content":"     * @param meiText The text input as Mei\u0027s response.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TobyCyan"},"content":"     * @return The Mei dialog box component.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TobyCyan"},"content":"    public DialogBox getMeiDialog(String[] meiText) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TobyCyan"},"content":"        return DialogBox.getMeiDialog(meiText, meiImg);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TobyCyan"},"content":"     * Adds any amount of dialog boxes into the dialog container to be displayed to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"TobyCyan"},"content":"     * @param dialogBoxes The dialog boxes to be added to the container.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"TobyCyan"},"content":"    public void addChildrenToDialogContainer(DialogBox... dialogBoxes) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TobyCyan"},"content":"        dialogContainer.getChildren().addAll(dialogBoxes);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"TobyCyan"},"content":"     * Sets the Mei responses that will be displayed to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"TobyCyan"},"content":"     * @param responses The response array to be displayed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"TobyCyan"},"content":"    public static void setMeiResponses(String[] responses) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"TobyCyan"},"content":"        meiText \u003d responses;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"TobyCyan":124}},{"path":"src/main/java/mei/manager/InputManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.manager;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"import java.util.List;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.EmptyMostRecentReversedInputException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.EmptyTaskDescriptionException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.MeiException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.TaskIndexOutOfBoundsException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.UnknownTaskTypeException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.UnknownUserInputException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":" *  Represents the manager for all user inputs towards the interaction with Mei.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":" *  This class contains methods to interpret user input and redirect it to the appropriate managers.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":" *  Acts as the middle-man between the user and other managers.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":" *  This manager also maintains a list of undo commands that the user can call undo on.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"public class InputManager {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"    private static List\u003cString\u003e mostRecentUndoCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"    private final ResponseManager responseManager;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"     * Initializes the input manager.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"     * This manager is also connected to the task manager and response manager.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"     * @param taskManager The task manager.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"     * @param responseManager The response manager.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"    public InputManager(TaskManager taskManager, ResponseManager responseManager) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"        this.responseManager \u003d responseManager;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"     * Interprets and redirects all incoming inputs to their respective functions.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"     * This should serve as a middle-man function between the user and the manager functions.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"     * This method can only receive a limited number of commands based on the keyword","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"     * (i.e. the first word of the given input.)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"     * and the command is assumed to be a task command if none of the defined cases match.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"     * Handles undo-ing of user command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"     * @param input The user input to redirect.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"     * @param isUndoCommand Whether this input is an undo command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"    public void redirectInput(String input, boolean isUndoCommand) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"        String keyword \u003d splitInput[0];","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"        boolean shouldUpdateMostRecentUndoCommand \u003d false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"        switch (keyword) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"        case \"list\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"            redirectToListTasks();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"            shouldUpdateMostRecentUndoCommand \u003d isSuccessRedirectToMarkTaskOfIndex(splitInput[1]);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"        case \"unmark\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TobyCyan"},"content":"            shouldUpdateMostRecentUndoCommand \u003d isSuccessRedirectToUnMarkTaskOfIndex(splitInput[1]);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TobyCyan"},"content":"        case \"delete\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TobyCyan"},"content":"            shouldUpdateMostRecentUndoCommand \u003d isSuccessRedirectToDeleteTaskOfIndex(splitInput[1]);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TobyCyan"},"content":"        case \"find\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TobyCyan"},"content":"            redirectToFindTasks(splitInput);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TobyCyan"},"content":"        case \"undo\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TobyCyan"},"content":"            redirectToUndo();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TobyCyan"},"content":"        default:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TobyCyan"},"content":"            shouldUpdateMostRecentUndoCommand \u003d isSuccessRedirectToAddTask(splitInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TobyCyan"},"content":"        // Pop the most recent reversed input if undo-ing.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TobyCyan"},"content":"        if (isUndoCommand) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TobyCyan"},"content":"            popMostRecentUndoCommand();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TobyCyan"},"content":"            return;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TobyCyan"},"content":"        if (shouldUpdateMostRecentUndoCommand) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TobyCyan"},"content":"            mostRecentUndoCommands.add(reverseInput(splitInput));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TobyCyan"},"content":"     * Handles the task index and throws exception if it is problematic.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TobyCyan"},"content":"     * The task index is considered problematic if a task of that index does not exist.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TobyCyan"},"content":"     * @param taskIndex The task index to handle.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TobyCyan"},"content":"     * @return true or false depending on whether the task index is problematic or not.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TobyCyan"},"content":"    public boolean isTaskIndexProblematic(int taskIndex) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TobyCyan"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TobyCyan"},"content":"            if (!taskManager.isTaskIndexValid(taskIndex)) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TobyCyan"},"content":"                throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TobyCyan"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TobyCyan"},"content":"        } catch (TaskIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TobyCyan"},"content":"            e.echoErrorResponse();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TobyCyan"},"content":"            return true;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"TobyCyan"},"content":"        return false;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TobyCyan"},"content":"    private void redirectToListTasks() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TobyCyan"},"content":"        String[] tasksToBeListed \u003d taskManager.getTaskStringsToDisplay();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"TobyCyan"},"content":"        responseManager.makeListTasksResponse(tasksToBeListed);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"TobyCyan"},"content":"    private boolean isSuccessRedirectToMarkTaskOfIndex(String taskIndexString) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"TobyCyan"},"content":"        int taskIndexToMark \u003d Integer.parseInt(taskIndexString);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"TobyCyan"},"content":"        if (isTaskIndexProblematic(taskIndexToMark)) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"TobyCyan"},"content":"            return false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"TobyCyan"},"content":"        Task markedTask \u003d taskManager.markTask(taskIndexToMark);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"TobyCyan"},"content":"        responseManager.makeMarkTaskResponse(markedTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"TobyCyan"},"content":"        return true;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"TobyCyan"},"content":"    private boolean isSuccessRedirectToUnMarkTaskOfIndex(String taskIndexString) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"TobyCyan"},"content":"        int taskIndexToUnmark \u003d Integer.parseInt(taskIndexString);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"TobyCyan"},"content":"        if (isTaskIndexProblematic(taskIndexToUnmark)) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"TobyCyan"},"content":"            return false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"TobyCyan"},"content":"        Task unmarkedTask \u003d taskManager.unmarkTask(taskIndexToUnmark);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"TobyCyan"},"content":"        responseManager.makeUnmarkTaskResponse(unmarkedTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"TobyCyan"},"content":"        return true;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"TobyCyan"},"content":"    private boolean isSuccessRedirectToDeleteTaskOfIndex(String taskIndexString) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"TobyCyan"},"content":"        int taskIndexToDelete \u003d Integer.parseInt(taskIndexString);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"TobyCyan"},"content":"        if (isTaskIndexProblematic(taskIndexToDelete)) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"TobyCyan"},"content":"            return false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"TobyCyan"},"content":"        Task deletedTask \u003d taskManager.deleteTask(taskIndexToDelete);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"TobyCyan"},"content":"        responseManager.makeDeleteTaskResponse(deletedTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"TobyCyan"},"content":"        return true;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"TobyCyan"},"content":"    private void redirectToFindTasks(String[] splitInput) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"TobyCyan"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"TobyCyan"},"content":"            if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"TobyCyan"},"content":"                throw new EmptyTaskDescriptionException();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"TobyCyan"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"TobyCyan"},"content":"            String[] foundTasksAsStrings \u003d taskManager.findTasksToDisplay(splitInput[1]);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"TobyCyan"},"content":"            responseManager.makeFindTasksResponse(foundTasksAsStrings);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"TobyCyan"},"content":"        } catch (EmptyTaskDescriptionException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"TobyCyan"},"content":"            e.echoErrorResponse();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"TobyCyan"},"content":"    private boolean isSuccessRedirectToAddTask(String[] splitInput) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"TobyCyan"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"TobyCyan"},"content":"            String taskType \u003d splitInput[0];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"TobyCyan"},"content":"            // First word doesn\u0027t fit in any of the commands nor task types.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"TobyCyan"},"content":"            if (!taskManager.isTaskTypeExist(taskType)) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"TobyCyan"},"content":"                throw new UnknownUserInputException();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"TobyCyan"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"TobyCyan"},"content":"            // User input only has a single word. i.e. no description.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"TobyCyan"},"content":"            if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"TobyCyan"},"content":"                throw new EmptyTaskDescriptionException();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"TobyCyan"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"TobyCyan"},"content":"            String description \u003d splitInput[1];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"TobyCyan"},"content":"            Task addedTask \u003d taskManager.processAddTask(String.join(\" \", splitInput), taskType, description);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"TobyCyan"},"content":"            // No new task is created, which means task type is unknown","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"TobyCyan"},"content":"            // or task description does not contain enough information to create a new task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"TobyCyan"},"content":"            if (addedTask \u003d\u003d null) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"TobyCyan"},"content":"                throw new UnknownTaskTypeException();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"TobyCyan"},"content":"            } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"TobyCyan"},"content":"                responseManager.makeNewAddTaskResponse(addedTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"TobyCyan"},"content":"                return true;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"TobyCyan"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"TobyCyan"},"content":"        } catch (MeiException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"TobyCyan"},"content":"            e.echoErrorResponse();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"TobyCyan"},"content":"        return false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"TobyCyan"},"content":"    private void redirectToUndo() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"TobyCyan"},"content":"        try {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"TobyCyan"},"content":"            if (mostRecentUndoCommands.isEmpty()) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"TobyCyan"},"content":"                throw new EmptyMostRecentReversedInputException();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"TobyCyan"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"TobyCyan"},"content":"            String mostRecentUndoCommand \u003d getMostRecentUndoCommand();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"TobyCyan"},"content":"            redirectInput(mostRecentUndoCommand, true);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"TobyCyan"},"content":"        } catch (EmptyMostRecentReversedInputException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"TobyCyan"},"content":"            e.echoErrorResponse();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"TobyCyan"},"content":"     * Reverses the input to the opposite command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"TobyCyan"},"content":"     * e.g. add -\u003e delete, mark -\u003e unmark and vice versa.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"TobyCyan"},"content":"     * This method assumes that only reversible inputs are passed in.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"TobyCyan"},"content":"     * The input is also mutated here.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"TobyCyan"},"content":"     * @param splitInput The split input to reverse.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"TobyCyan"},"content":"     * @return The reversed input command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"TobyCyan"},"content":"    public String reverseInput(String[] splitInput) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"TobyCyan"},"content":"        String command \u003d splitInput[0];","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"TobyCyan"},"content":"        String reversedCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"TobyCyan"},"content":"        switch (command) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"TobyCyan"},"content":"        case \"mark\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"TobyCyan"},"content":"            reversedCommand \u003d convertToUnmarkCommand(splitInput[1]);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"TobyCyan"},"content":"        case \"unmark\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"TobyCyan"},"content":"            reversedCommand \u003d convertToMarkCommand(splitInput[1]);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"TobyCyan"},"content":"        case \"delete\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"TobyCyan"},"content":"            reversedCommand \u003d convertToAddCommand(splitInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"TobyCyan"},"content":"            break;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"TobyCyan"},"content":"        default:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"TobyCyan"},"content":"            // case add.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"TobyCyan"},"content":"            reversedCommand \u003d convertToDeleteCommand(splitInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"TobyCyan"},"content":"        return reversedCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"TobyCyan"},"content":"    private String convertToDeleteCommand(String[] splitInput) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"TobyCyan"},"content":"        String deleteCommand \u003d \"delete\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"TobyCyan"},"content":"        String taskIndexToDelete \u003d String.valueOf(taskManager.getTotalTasks());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"TobyCyan"},"content":"        return deleteCommand + \" \" + taskIndexToDelete;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"TobyCyan"},"content":"    private String convertToAddCommand(String[] splitInput) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"TobyCyan"},"content":"        return taskManager.getMostRecentDeletedTaskAddCommand();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"TobyCyan"},"content":"    private String convertToMarkCommand(String taskIndexString) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"TobyCyan"},"content":"        String markCommand \u003d \"mark\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"TobyCyan"},"content":"        return markCommand + \" \" + taskIndexString;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"TobyCyan"},"content":"    private String convertToUnmarkCommand(String taskIndexString) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"TobyCyan"},"content":"        String unmarkCommand \u003d \"unmark\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"TobyCyan"},"content":"        return unmarkCommand + \" \" + taskIndexString;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"TobyCyan"},"content":"    private String getMostRecentUndoCommand() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"TobyCyan"},"content":"        return mostRecentUndoCommands.get(mostRecentUndoCommands.size() - 1);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"TobyCyan"},"content":"    private void popMostRecentUndoCommand() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"TobyCyan"},"content":"        mostRecentUndoCommands.remove(mostRecentUndoCommands.size() - 1);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"TobyCyan":273}},{"path":"src/main/java/mei/manager/ResponseManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.manager;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import mei.response.AddTaskResponse;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"import mei.response.DeleteTaskResponse;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import mei.response.FindTasksResponse;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import mei.response.ListTasksResponse;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"import mei.response.MarkTaskResponse;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"import mei.response.UnmarkTaskResponse;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":" * This is the manager responsible for managing Mei\u0027s responses.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":" * Any calls to make Mei speak or make a response should be done via here.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"public class ResponseManager {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"     * Initializes a response map which maps the response type to its array of responses.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"     * The response map is given the final modifier as no modifications should be made upon initialization.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"    public ResponseManager(TaskManager taskManager) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"     * Makes a new add task response object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"     * and does all the necessary processing before setting it as the application response","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"     * to prompt back to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"     * @param task The task successfully added to be echoed.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"    public void makeNewAddTaskResponse(Task task) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"        int totalTasks \u003d taskManager.getTotalTasks();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"        assert totalTasks \u003e\u003d 1 : \"total tasks after adding a new task should be at least 1\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"        AddTaskResponse addTaskResponse \u003d new AddTaskResponse(task, totalTasks);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"        addTaskResponse.formResponsesAndSet();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"     * Makes a new delete task response object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"     * and does all the necessary processing before setting it as the application response","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"     * to prompt back to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"     * @param deletedTask The deleted task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"    public void makeDeleteTaskResponse(Task deletedTask) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"        int totalTasks \u003d taskManager.getTotalTasks();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"        DeleteTaskResponse deleteTaskResponse \u003d new DeleteTaskResponse(deletedTask, totalTasks);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"        deleteTaskResponse.formResponsesAndSet();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"     * Makes a new list tasks response object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"     * and does all the necessary processing before setting it as the application response","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"     * to prompt back to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"     * This considers the case where there is no task to list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"     * @param tasksToBeDisplayed The list of valid tasks to be displayed to the user.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"    public void makeListTasksResponse(String[] tasksToBeDisplayed) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TobyCyan"},"content":"        ListTasksResponse listTasksResponse \u003d new ListTasksResponse(tasksToBeDisplayed);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TobyCyan"},"content":"        listTasksResponse.formResponsesAndSet();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TobyCyan"},"content":"     * Makes a new mark task response object","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TobyCyan"},"content":"     * and does all the necessary processing before setting it as the application response","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TobyCyan"},"content":"     * to prompt back to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TobyCyan"},"content":"     * @param markedTask The task to be marked as completed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TobyCyan"},"content":"    public void makeMarkTaskResponse(Task markedTask) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TobyCyan"},"content":"        MarkTaskResponse markTaskResponse \u003d new MarkTaskResponse(markedTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TobyCyan"},"content":"        markTaskResponse.formResponsesAndSet();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TobyCyan"},"content":"     * Makes a new unmark task response object","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TobyCyan"},"content":"     * and does all the necessary processing before setting it as the application response","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TobyCyan"},"content":"     * to prompt back to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TobyCyan"},"content":"     * @param unmarkedTask The task to be marked as incomplete.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TobyCyan"},"content":"    public void makeUnmarkTaskResponse(Task unmarkedTask) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TobyCyan"},"content":"        UnmarkTaskResponse unmarkTaskResponse \u003d new UnmarkTaskResponse(unmarkedTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TobyCyan"},"content":"        unmarkTaskResponse.formResponsesAndSet();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TobyCyan"},"content":"     * Makes a new find task response object","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TobyCyan"},"content":"     * and does all the necessary processing before setting it as the application response","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TobyCyan"},"content":"     * to prompt back to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TobyCyan"},"content":"     * This considers the case where no tasks are found.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TobyCyan"},"content":"     * @param foundTasks The list of found tasks to be displayed to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TobyCyan"},"content":"    public void makeFindTasksResponse(String[] foundTasks) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TobyCyan"},"content":"        FindTasksResponse findTasksResponse \u003d new FindTasksResponse(foundTasks);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TobyCyan"},"content":"        findTasksResponse.formResponsesAndSet();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"TobyCyan":105}},{"path":"src/main/java/mei/manager/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.manager;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import java.util.*;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.DateTimeConversionException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.DeadlineNotEnoughInfoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.EventNotEnoughInfoException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.MeiException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"import mei.fileaccess.FileStorage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Deadline;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Event;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"import mei.task.ToDo;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":" * Represents the manager class that supports all task-related functionalities.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":" * This class contains methods to add, delete, mark, unmark tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":" * A set of task types is also maintained so that this manager knows what task types are valid.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":" * Hence, it is important to update this list when new tasks get added.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"    /** The set of task types that are valid, be sure to update this when new task types are added. **/","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    private static final HashSet\u003cString\u003e TASK_TYPES \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"    private static Task mostRecentDeletedTask;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"    private final FileStorage fileStorage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"     * Initializes the valid task types and adds them to the set of task types.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"     * Also loads the list of tasks and file storage instance to the fields.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"     * @param tasks The list of user tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"     * @param fileStorage The file storage instance.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"    public TaskManager(List\u003cTask\u003e tasks, FileStorage fileStorage) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"        // Task types.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"        // Make sure to add the relevant task types when adding a new one.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"        TASK_TYPES.add(\"todo\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"        TASK_TYPES.add(\"deadline\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"        TASK_TYPES.add(\"event\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"        this.fileStorage \u003d fileStorage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"     * Processes new added tasks before returning them to the response manager to prompt the user.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"     * Assumes that there are only 3 types of tasks to be considered: todo, deadline and event.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"     * @param addTaskCommand The original command used when the task to process is added.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"     * @param taskType The type of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"     * @param taskDescriptionAsCommand The description of the task as a command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"     * @return The processed task itself, or null if the task type does not match any of the valid types.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"    public Task processAddTask(String addTaskCommand, String taskType, String taskDescriptionAsCommand) throws MeiException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"        String taskStringSplitRegex \u003d \"(/from|/by|/to)\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"        String[] taskDescriptionSplit \u003d taskDescriptionAsCommand.split(taskStringSplitRegex, 3);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"        String description \u003d taskDescriptionSplit[0];","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"        switch (taskType) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TobyCyan"},"content":"            return addTodoTaskAndReturn(addTaskCommand, description);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TobyCyan"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TobyCyan"},"content":"            return addDeadlineTaskAndReturn(addTaskCommand, taskDescriptionSplit, description);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TobyCyan"},"content":"        case \"event\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TobyCyan"},"content":"            return addEventTaskAndReturn(addTaskCommand, taskDescriptionSplit, description);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TobyCyan"},"content":"        default:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TobyCyan"},"content":"            return null;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TobyCyan"},"content":"    private Task addTodoTaskAndReturn(String addTaskCommand, String description) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TobyCyan"},"content":"        ToDo newTask \u003d new ToDo(description, addTaskCommand);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TobyCyan"},"content":"        addTask(newTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TobyCyan"},"content":"        return newTask;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TobyCyan"},"content":"    private Task addDeadlineTaskAndReturn(String addTaskCommand, String[] taskDescriptionSplit, String description)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TobyCyan"},"content":"            throws DeadlineNotEnoughInfoException, DateTimeConversionException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TobyCyan"},"content":"        if (taskDescriptionSplit.length \u003c 2) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TobyCyan"},"content":"            throw new DeadlineNotEnoughInfoException();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TobyCyan"},"content":"        String deadlineDateTime \u003d taskDescriptionSplit[1];","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TobyCyan"},"content":"        // A date/time conversion exception may be thrown here.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TobyCyan"},"content":"        Deadline newTask \u003d new Deadline(description, deadlineDateTime, addTaskCommand);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TobyCyan"},"content":"        addTask(newTask);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TobyCyan"},"content":"        return newTask;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TobyCyan"},"content":"    private Task addEventTaskAndReturn(String addTaskCommand, String[] taskDescriptionSplit, String description)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TobyCyan"},"content":"            throws EventNotEnoughInfoException, DateTimeConversionException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TobyCyan"},"content":"        if (taskDescriptionSplit.length \u003c 3) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TobyCyan"},"content":"            throw new EventNotEnoughInfoException();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TobyCyan"},"content":"        String startDateTime \u003d taskDescriptionSplit[1];","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TobyCyan"},"content":"        String endDateTime \u003d taskDescriptionSplit[2];","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TobyCyan"},"content":"        // A date/time conversion exception may be thrown here.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TobyCyan"},"content":"        Event newTask \u003d new Event(description, startDateTime, endDateTime, addTaskCommand);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"TobyCyan"},"content":"        addTask(newTask);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"TobyCyan"},"content":"        return newTask;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"TobyCyan"},"content":"     * Adds the given task to the list of tasks.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"TobyCyan"},"content":"     * Sets the status of the new task as not done (false).","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"TobyCyan"},"content":"     * @param task The new task to be added.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"TobyCyan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"TobyCyan"},"content":"        assert task !\u003d null : \"task added should never be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"TobyCyan"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"TobyCyan"},"content":"        fileStorage.writeTask(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"TobyCyan"},"content":"     * Marks the given task as completed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"TobyCyan"},"content":"     * @param taskIndex The index of the task to be marked as completed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"TobyCyan"},"content":"     * @return The completed task itself.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"TobyCyan"},"content":"    public Task markTask(int taskIndex) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"TobyCyan"},"content":"        assert isTaskIndexValid(taskIndex) : \"task index to be marked should be valid\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"TobyCyan"},"content":"        Task taskToBeMarked \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"TobyCyan"},"content":"        taskToBeMarked.completeTask();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"TobyCyan"},"content":"        fileStorage.overwriteTask(taskIndex, taskToBeMarked.getTaskDataString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"TobyCyan"},"content":"        return taskToBeMarked;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"TobyCyan"},"content":"     * Marks the given task as incomplete.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"TobyCyan"},"content":"     * Tells the file storage class to carry out the process.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"TobyCyan"},"content":"     * @param taskIndex The index of the task to be marked as incomplete.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"TobyCyan"},"content":"     * @return The unmarked task itself to be prompted to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"TobyCyan"},"content":"    public Task unmarkTask(int taskIndex) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"TobyCyan"},"content":"        assert isTaskIndexValid(taskIndex) : \"task index to be unmarked should be valid\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"TobyCyan"},"content":"        Task taskToBeUnmarked \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"TobyCyan"},"content":"        taskToBeUnmarked.uncheckTask();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"TobyCyan"},"content":"        fileStorage.overwriteTask(taskIndex, taskToBeUnmarked.getTaskDataString());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"TobyCyan"},"content":"        return taskToBeUnmarked;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"TobyCyan"},"content":"     * Deletes the task located at the given task index.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"TobyCyan"},"content":"     * Tells the file storage class to carry out the process.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"TobyCyan"},"content":"     * Also updates the most recently deleted task to be restored if undo is called.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"TobyCyan"},"content":"     * @param taskIndex The index where the deleted task is located at.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"TobyCyan"},"content":"     * @return The deleted task itself to be prompted to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"TobyCyan"},"content":"    public Task deleteTask(int taskIndex) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"TobyCyan"},"content":"        assert isTaskIndexValid(taskIndex) : \"task index to be deleted should be valid\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"TobyCyan"},"content":"        Task taskToBeDeleted \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"TobyCyan"},"content":"        tasks.remove(taskToBeDeleted);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"TobyCyan"},"content":"        mostRecentDeletedTask \u003d taskToBeDeleted;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"TobyCyan"},"content":"        fileStorage.removeTask(taskIndex);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"TobyCyan"},"content":"        return taskToBeDeleted;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"TobyCyan"},"content":"     * Finds the tasks based on the given keyword.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"TobyCyan"},"content":"     * The keyword check is only done to the task description.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"TobyCyan"},"content":"     * These tasks are converted into the desired display format and collected into an array.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"TobyCyan"},"content":"     * @param keyword The keyword used to find tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"TobyCyan"},"content":"     * @return The array of tasks in their displayed format.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"TobyCyan"},"content":"    public String[] findTasksToDisplay(String keyword) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"TobyCyan"},"content":"        AtomicInteger i \u003d new AtomicInteger();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"TobyCyan"},"content":"        return tasks.stream()","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"TobyCyan"},"content":"                .filter(task -\u003e task.isDescriptionContainsKeyword(keyword))","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"TobyCyan"},"content":"                .map(task -\u003e getTaskDisplayString(i.getAndIncrement() + 1, (Task) task))","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"TobyCyan"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"TobyCyan"},"content":"     * Formats the list of tasks as a nicely organized indexed list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"TobyCyan"},"content":"     * @return The list of valid tasks to be sent to the response manager to display.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"TobyCyan"},"content":"    public String[] getTaskStringsToDisplay() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"TobyCyan"},"content":"        // First task doesn\u0027t exist, can assume no task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"TobyCyan"},"content":"        // Prompt response manager to reply with no task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"TobyCyan"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"TobyCyan"},"content":"            return null;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"TobyCyan"},"content":"        // Do some processing here before sending them back to Response Manager to print out the tasks.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"TobyCyan"},"content":"        AtomicInteger i \u003d new AtomicInteger();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"TobyCyan"},"content":"        return Arrays.stream(tasks.toArray())","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"TobyCyan"},"content":"                .filter(Objects::nonNull)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"TobyCyan"},"content":"                .map(task -\u003e getTaskDisplayString(i.getAndIncrement() + 1, (Task) task))","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"TobyCyan"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"TobyCyan"},"content":"     * Converts the task string into the desired format to be displayed to the user.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"TobyCyan"},"content":"     * @param index The current task index.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"TobyCyan"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"TobyCyan"},"content":"     * @return A string of the desired task display format.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"TobyCyan"},"content":"    public String getTaskDisplayString(int index, Task task) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"TobyCyan"},"content":"        return index + \". \" + task.toString();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"TobyCyan"},"content":"     * Gets the total number of tasks the user currently has.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"TobyCyan"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"TobyCyan"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"TobyCyan"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"TobyCyan"},"content":"     * Checks whether the task index used to process a task is valid.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"TobyCyan"},"content":"     * The index is considered valid if there\u0027s a task of that index exists.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"TobyCyan"},"content":"     * @param taskIndex The task index to check.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"TobyCyan"},"content":"     * @return true or false depending on whether the index is valid.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"TobyCyan"},"content":"    public boolean isTaskIndexValid(int taskIndex) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"TobyCyan"},"content":"        return taskIndex \u003e\u003d 1 \u0026\u0026 taskIndex \u003c\u003d getTotalTasks();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"TobyCyan"},"content":"     * Checks whether the given task type is valid.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"TobyCyan"},"content":"     * The task manager will take a look at the set of valid task types and","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"TobyCyan"},"content":"     * determines whether the task type is in it or not.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"TobyCyan"},"content":"     * @param type The task type to check for existence.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"TobyCyan"},"content":"     * @return true or false depending on whether the set of valid task type contains the given type.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"TobyCyan"},"content":"    public boolean isTaskTypeExist(String type) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"TobyCyan"},"content":"        return TASK_TYPES.contains(type);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"TobyCyan"},"content":"    public String getMostRecentDeletedTaskAddCommand() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"TobyCyan"},"content":"        return mostRecentDeletedTask.getAddTaskCommand();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"TobyCyan":266}},{"path":"src/main/java/mei/response/AddTaskResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.response;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * Represents the response to the user when adding a new task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"public class AddTaskResponse extends Response {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"        \"Task successfully added! Yay!\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"        \"Your added task is:\\n\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"        \"The total tasks you currently have is: \"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"    private Task taskToIncludeInResponses;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    private int totalTasksToShow;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"     * Initializes the add task response.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"     * The new task is processed to be included as part of the response to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"     * @param taskToIncludeInResponses The task to include in the responses.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"     * @param totalTasksToShow The total amount of user tasks to show.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    public AddTaskResponse(Task taskToIncludeInResponses, int totalTasksToShow) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"        this.taskToIncludeInResponses \u003d taskToIncludeInResponses;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"        this.totalTasksToShow \u003d totalTasksToShow;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"    public void formResponsesAndSet() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"        String[] formattedResponses \u003d RESPONSES.clone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"        // Index variables where information should be appended to.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"        int totalTaskStringIndex \u003d RESPONSES.length - 1;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"        int taskStringIndex \u003d 1;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"        // Append the newly updated information to the responses.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"        formattedResponses[taskStringIndex] +\u003d taskToIncludeInResponses.toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"        formattedResponses[totalTaskStringIndex] +\u003d totalTasksToShow;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"        // Echo the responses.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"        setInputsAsApplicationResponse(formattedResponses);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"TobyCyan":45}},{"path":"src/main/java/mei/response/DeleteTaskResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.response;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * Represents the response to the user when deleting an existing task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"public class DeleteTaskResponse extends Response {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"        \"Got it! I will erase this task from my list.\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"        \"The removed task is:\\n\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"        \"The amount of tasks left for you is: \"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"    private Task taskToIncludeInResponses;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    private int totalTasksToShow;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"     * Initializes the delete task response.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"     * The deleted task is to be included as part of the response to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"     * @param taskToIncludeInResponses The deleted task to include in the responses.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"     * @param totalTasksToShow The total amount of user tasks to show.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    public DeleteTaskResponse(Task taskToIncludeInResponses, int totalTasksToShow) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"        this.taskToIncludeInResponses \u003d taskToIncludeInResponses;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"        this.totalTasksToShow \u003d totalTasksToShow;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"    public void formResponsesAndSet() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"        String[] formattedResponses \u003d RESPONSES.clone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"        // Index variables where information should be appended to.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"        int totalTaskStringIndex \u003d RESPONSES.length - 1;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"        int taskStringIndex \u003d 1;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"        // Append the newly updated information to the responses.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"        formattedResponses[taskStringIndex] +\u003d taskToIncludeInResponses.toString();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"        formattedResponses[totalTaskStringIndex] +\u003d totalTasksToShow;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"        // Echo the responses.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"        setInputsAsApplicationResponse(formattedResponses);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"TobyCyan":44}},{"path":"src/main/java/mei/response/FindTasksResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.response;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the response to return the found tasks back to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" * This class handles the case where the find results is empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"public class FindTasksResponse extends Response {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"        \"Alright! Here are the tasks that I found from your list:\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"        \"Hope I didn\u0027t miss any!\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] RESPONSES_NO_RESULT \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"        \"Sorry! It seems like there isn\u0027t any tasks\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"            + \" that matched the description :(\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"    private String[] foundTasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"    public FindTasksResponse(String[] foundTasks) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"        this.foundTasks \u003d foundTasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"    public void formResponsesAndSet() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"        if (foundTasks.length \u003d\u003d 0) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"            setInputsAsApplicationResponse(RESPONSES_NO_RESULT);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"            return;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"        String[] formattedResponses \u003d RESPONSES.clone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"        formattedResponses \u003d concatResponses(formattedResponses, foundTasks);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"        setInputsAsApplicationResponse(formattedResponses);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"TobyCyan":36}},{"path":"src/main/java/mei/response/ListTasksResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.response;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the response to list all user tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"public class ListTasksResponse extends Response {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"        \"Sure! Here are all your tasks!\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"        \"Enjoy :3\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] RESPONSES_NO_TASK \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"        \"I can\u0027t find any tasks for you :(\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"        \"Maybe start adding new tasks?\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    private String[] tasksToBeDisplayed;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"    public ListTasksResponse(String[] tasksToBeDisplayed) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"        this.tasksToBeDisplayed \u003d tasksToBeDisplayed;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    public void formResponsesAndSet() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"        if (tasksToBeDisplayed \u003d\u003d null) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"            setInputsAsApplicationResponse(RESPONSES_NO_TASK);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"            return;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"        String[] formattedResponses \u003d RESPONSES.clone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"        formattedResponses \u003d concatResponses(formattedResponses, tasksToBeDisplayed);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"        setInputsAsApplicationResponse(formattedResponses);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"TobyCyan":35}},{"path":"src/main/java/mei/response/MarkTaskResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.response;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * Represents the response to mark an existing user task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"public class MarkTaskResponse extends Response {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"        \"You\u0027ve completed this? That\u0027s amazing!\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"        \"I\u0027ve noted down your achievement, congratulations!\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"    private Task taskToIncludeInResponses;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"    public MarkTaskResponse(Task taskToIncludeInResponses) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"        this.taskToIncludeInResponses \u003d taskToIncludeInResponses;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"    public void formResponsesAndSet() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"        String[] formattedResponses \u003d RESPONSES.clone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"        formattedResponses \u003d appendTaskStringToResponseArrayAndReturn(formattedResponses,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"                taskToIncludeInResponses.toString());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"        setInputsAsApplicationResponse(formattedResponses);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"TobyCyan":28}},{"path":"src/main/java/mei/response/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.response;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import mei.javafx.MainWindow;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":" * Represents the responses base class.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"public abstract class Response {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"     * Returns back the input array to the main window to be set as Mei\u0027s responses to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"     * @param inputs The input array to return back.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"    public static void setInputsAsApplicationResponse(String[] inputs) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"        MainWindow.setMeiResponses(inputs);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"     * Concatenates 2 arrays, first followed by the second.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"     * If the arrays are empty, an empty string array is returned.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"     * However, we expect both the first and second arrays are always non-empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"     * @param first The first array.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"     * @param second The second array.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"     * @return The resulting array after concatenation.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"    public String[] concatResponses(String[] first, String[] second) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"        int firstLength \u003d first.length;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"        int secondLength \u003d second.length;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"        String[] result \u003d new String[firstLength + secondLength];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"        System.arraycopy(first, 0, result, 0, firstLength);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"        System.arraycopy(second, 0, result, firstLength, firstLength + secondLength - firstLength);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"        return result;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"     * Appends a task as its string representation defined in its class to a response array","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"     * corresponding to the given array key.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"     * This method also returns the final appended array.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"     * @param responses The responses array where the task string is to be appended to.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"     * @param taskString The task represented as a string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"     * @return The resulting appended array.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"    public String[] appendTaskStringToResponseArrayAndReturn(String[] responses, String taskString) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"        int unmarkTaskResponseLength \u003d responses.length + 1;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"        String[] resultResponses \u003d Arrays.copyOf(responses, unmarkTaskResponseLength);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"        resultResponses[unmarkTaskResponseLength - 1] \u003d taskString;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"        return resultResponses;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"     * Forms the appropriate responses depending on the response class.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"     * After the formation is complete, the responses are set as the application response.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"    public abstract void formResponsesAndSet();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"TobyCyan":64}},{"path":"src/main/java/mei/response/UnmarkTaskResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.response;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * Represents the response to unmark an existing user task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"public class UnmarkTaskResponse extends Response {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] RESPONSES \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"        \"It\u0027s alright to take things easy.\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"        \"I\u0027ve unchecked this task for you to revisit next time!\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"    private Task taskToIncludeInResponses;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"    public UnmarkTaskResponse(Task taskToIncludeInResponses) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"        this.taskToIncludeInResponses \u003d taskToIncludeInResponses;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"    public void formResponsesAndSet() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"        String[] formattedResponses \u003d RESPONSES.clone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"        formattedResponses \u003d appendTaskStringToResponseArrayAndReturn(formattedResponses,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"                taskToIncludeInResponses.toString());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"        setInputsAsApplicationResponse(formattedResponses);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"TobyCyan":28}},{"path":"src/main/java/mei/stub/FileStorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.stub;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import mei.fileaccess.FileStorage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * Represents a stub class for the file storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" * Used for testing classes dependent on this in isolation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"public class FileStorageStub extends FileStorage {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"    public FileStorageStub(String fileStorePath) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"        super(fileStorePath);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"TobyCyan":15}},{"path":"src/main/java/mei/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.DateTimeConversionException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import java.util.Date;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":" * Represents the deadline task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":" * Consists of a description and a deadline date/time for the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":" * This class contains methods to easily represent this task as a string","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":" * for both displaying to the user and writing to the task data save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"public class Deadline extends TimedTask {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    private final LocalDateTime deadlineDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"     * Initializes the date/time field by converting the given date/time string into a LocalDateTime object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"     * @param description The description of this task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"     * @param deadlineDateTime The deadline date/time of this task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"     * @param addTaskCommand The command used to add this task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"     * @throws DateTimeConversionException if the input deadlineDateTime doesn\u0027t match any of the valid formats.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"    public Deadline(String description, String deadlineDateTime, String addTaskCommand) throws DateTimeConversionException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"        super(description, addTaskCommand);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"        this.deadlineDateTime \u003d convertDateTimeFormat(deadlineDateTime);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"     * Represents the current task in a format to be written to the task data save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"     * This representation helps the file reader to interpret this task when loading from the save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"     * @return The string representation for writing to the save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"    public String getTaskDataString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"        return toRunTimeClassString()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"                + \"|\" + getTaskStatusString()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"                + \"|\" + super.description","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"                + \"|\" + toFormattedDateTimeInputString(deadlineDateTime)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"                + \"|\" + super.addTaskCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"     * Represents the current task as the command used when it was first added.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"     * @return The add task command string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"    public String toAddTaskCommandString() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"        return addTaskCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"     * Represents the current task in a format to be displayed to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"     * @return The string representation for displaying to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + toFormattedDateTimeOutputString(deadlineDateTime) + \")\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"TobyCyan":62}},{"path":"src/main/java/mei/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.DateTimeConversionException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import java.util.Date;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":" * Represents the event task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":" * Consists of the description, the start and end date/time for this task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":" * This class contains methods to easily represent this task as a string","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":" * for both displaying to the user and writing to the task data save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"public class Event extends TimedTask {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"     * Initializes the task description","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"     * and start and end date/time by converting them into their LocalDateTime objects.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"     * @param description The description of this task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"     * @param startDateTime The starting date/time of this task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"     * @param endDateTime The ending date/time of this task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"     * @param addTaskCommand The command used to add this task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"     * @throws DateTimeConversionException if the input deadlineDateTime doesn\u0027t match any of the valid formats.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"    public Event(String description, String startDateTime, String endDateTime, String addTaskCommand) throws DateTimeConversionException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"        super(description, addTaskCommand);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"        this.startDateTime \u003d convertDateTimeFormat(startDateTime);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"        this.endDateTime \u003d convertDateTimeFormat(endDateTime);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"     * Represents the current task in a format to be written to the task data save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"     * This representation helps the file reader to interpret this task when loading from the save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"     * @return The string representation for writing to the save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"    public String getTaskDataString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"        return toRunTimeClassString()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"                + \"|\" + getTaskStatusString()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"                + \"|\" + super.description","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"                + \"|\" + toFormattedDateTimeInputString(startDateTime)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"                + \"|\" + toFormattedDateTimeInputString(endDateTime)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"                + \"|\" + super.addTaskCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"     * Represents the current task in a format to be displayed to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"     * @return The string representation for displaying to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + toFormattedDateTimeOutputString(startDateTime)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"                + \" to: \" + toFormattedDateTimeOutputString(endDateTime) + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"TobyCyan":59}},{"path":"src/main/java/mei/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the base class for all tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" * Consists of a description and a boolean on whether the task is done or not.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"public class Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"    protected final String description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    protected final String addTaskCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"    private boolean isTaskDone;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"     * Initializes the task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"     * The task description is trimmed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"     * So that display and save formats will ignore leading and trailing spaces.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"     * @param description The description of this task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"     * @param addTaskCommand The command used to add this task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"    public Task(String description, String addTaskCommand) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"        this.addTaskCommand \u003d addTaskCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"     * Gets this task\u0027s status string.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"     * @return The status string that is already wrapped in the desired format.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"    public String getTaskStatusString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"        return isTaskDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"     * Represents the current task in a format to be written to the task data save file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"     * This representation helps the file reader to interpret this task when loading from the save file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"     * @return The string representation for writing to the save file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"    public String getTaskDataString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"        return toRunTimeClassString()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"                + \"|\" + getTaskStatusString()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"                + \"|\" + description","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"                + \"|\" + addTaskCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"     * Marks the status of this task as completed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"    public void completeTask() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"        isTaskDone \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"     * Marks the status of this task as incomplete.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"    public void uncheckTask() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"        isTaskDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"     * Checks if this task\u0027s description contains the given keyword.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TobyCyan"},"content":"     * This is used for finding tasks using a keyword based on their descriptions.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TobyCyan"},"content":"     * @param keyword The keyword used to check for a match.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TobyCyan"},"content":"     * @return true or false depending on whether the description consists of the given keyword.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TobyCyan"},"content":"    public boolean isDescriptionContainsKeyword(String keyword) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TobyCyan"},"content":"        return description.contains(keyword);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TobyCyan"},"content":"    public String toRunTimeClassString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TobyCyan"},"content":"        return getClass().getSimpleName();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TobyCyan"},"content":"     * Gets the task\u0027s command when it was added.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TobyCyan"},"content":"     * @return The add task command of this task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TobyCyan"},"content":"    public String getAddTaskCommand() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TobyCyan"},"content":"        return addTaskCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TobyCyan"},"content":"     * Represents the current task in a format to be displayed to the user.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TobyCyan"},"content":"     * Since this is the base class, this string representation isn\u0027t directly called by any managers.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TobyCyan"},"content":"     * @return The string representation for displaying to the user.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TobyCyan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TobyCyan"},"content":"        return getTaskStatusString() + \" \" + description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"TobyCyan":95}},{"path":"src/main/java/mei/task/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import mei.exception.DateTimeConversionException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"import java.util.List;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":" * Represents the base class for timed tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":" * Consists of the formatters for input and output date/time objects.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":" * This class contains methods to convert a date/time string into LocalDateTime objects","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":" * or LocalDateTime objects of different formats into another format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"public class TimedTask extends Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"    /** The possible formats that the user could input their datetime. **/","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"    private static final String[] INPUT_FORMATS \u003d new String[] {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"        \"d/MM/yyyy HHmm\",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"        \"d-MM-yyyy HHmm\",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"        \"yyyy/MM/d HHmm\",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"        \"yyyy-MM-d HHmm\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    };","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"    /** The formatters for parsing any local date time data in a timed task. **/","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"    private static final List\u003cDateTimeFormatter\u003e INPUT_FORMATTERS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"    /** The formatter for formatting any local date time data into the desired format. **/","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMMM d yyyy \u0027at\u0027 h:mm a\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"     * Initializes the task description and the list of formatters to convert the input date/time string","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"     * into its LocalDateTime object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"     * @param description The description of this task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"     * @param addTaskCommand The command used to add this task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"    public TimedTask(String description, String addTaskCommand) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"        super(description, addTaskCommand);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"        for (String format : INPUT_FORMATS) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"            INPUT_FORMATTERS.add(DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"     * Converts the given datetime string into a LocalDateTime object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"     * The string should be given in the format specified to the formatters in INPUT_FORMATTERS.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"     * The string is trimmed to remove leading and trailing spaces, then parsed into LocalDateTime object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"     * Tries to loop through all the available formatters","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"     * and return when found one that matches the format of the input.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"     * If none of the formats match, returns null for error handling.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"     * @param dateTime The datetime string to be parsed into a LocalDateTime object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"     * @return The LocalDateTime object of the given datetime string.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"     * @throws DateTimeConversionException If the input dateTime doesn\u0027t match any of the formats.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"    public static LocalDateTime convertDateTimeFormat(String dateTime) throws DateTimeConversionException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"        for (DateTimeFormatter formatter : INPUT_FORMATTERS) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"            try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"                return LocalDateTime.parse(dateTime.trim(), formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"            } catch (DateTimeParseException ignore) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TobyCyan"},"content":"                // This can be safely ignored since we want to check whether the date/time input matches","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TobyCyan"},"content":"                // any of the formatters and the parse method could throw an exception.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TobyCyan"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TobyCyan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TobyCyan"},"content":"        // Input is not in a valid format.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TobyCyan"},"content":"        throw new DateTimeConversionException();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TobyCyan"},"content":"     * Formats the datetime object into a string that can be read/ write in the output format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TobyCyan"},"content":"     * Mainly used for displaying the task\u0027s datetime in a more readable format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TobyCyan"},"content":"     * @param dateTime The datetime object to format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TobyCyan"},"content":"     * @return A string of the datetime in the output format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TobyCyan"},"content":"    public String toFormattedDateTimeOutputString(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TobyCyan"},"content":"        assert dateTime !\u003d null : \"date/time object cannot be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TobyCyan"},"content":"        return dateTime.getDayOfWeek() + \" \" + dateTime.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TobyCyan"},"content":"     * Formats the datetime object into a string that can be read/ write in the input format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TobyCyan"},"content":"     * Mainly used for writing the task\u0027s datetime to the .txt file where task data are stored","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TobyCyan"},"content":"     * so that the datetime can be retrieved and interpreted in their original format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TobyCyan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TobyCyan"},"content":"     * To ensure a constant run time, this function shall format the input datetime object","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TobyCyan"},"content":"     * into the first format in INPUT_FORMATTERS.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TobyCyan"},"content":"     * That way we can always convert the string back to its LocalDateTime form","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TobyCyan"},"content":"     * in the first loop of the conversion function.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TobyCyan"},"content":"     * @param dateTime The datetime object to format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TobyCyan"},"content":"     * @return A string of the datetime in the input format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TobyCyan"},"content":"    public String toFormattedDateTimeInputString(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TobyCyan"},"content":"        assert dateTime !\u003d null : \"date/time object cannot be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TobyCyan"},"content":"        return dateTime.format(INPUT_FORMATTERS.get(0));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"TobyCyan":105}},{"path":"src/main/java/mei/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package mei.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":" * Represents the todo task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":" * Consists of the description for this task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":" * This class contains methods to easily represent this task as a string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"     * Initializes a Todo task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"     * The task description is trimmed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"     * So that display and save formats will ignore leading and trailing spaces.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"     * @param description The description of this task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"     * @param addTaskCommand The command used to add this task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"    public ToDo(String description, String addTaskCommand) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"        super(description, addTaskCommand);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"     * Represents the current task in a format to be displayed to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"     * @return The string representation for displaying to the user.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"TobyCyan":31}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"        \u003cImageView fx:id\u003d\"displayIcon\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"            \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"TobyCyan":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"mei.javafx.MainWindow\"\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter Text Here...\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"         \u003cfont\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"            \u003cFont name\u003d\"Calibri\" size\u003d\"9.0\" /\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#276c6f\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"TobyCyan":23}},{"path":"src/test/java/manager/ResponseManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package manager;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"import mei.response.MarkTaskResponse;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"import mei.response.Response;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"import mei.response.UnmarkTaskResponse;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":" * Represents the class to test response manager methods.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"public class ResponseManagerTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"    public void concatResponse_bothEmpty_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"        Response response \u003d new Response() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"            @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"            public void formResponsesAndSet() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"                return;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"        };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"        String[] firstStr \u003d new String[]{};","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"        String[] secondStr \u003d new String[]{};","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"        String[] actual \u003d response.concatResponses(firstStr, secondStr);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"        String[] expected \u003d new String[] {};","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"    public void concatResponse_oneEmpty_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"        Response response \u003d new Response() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"            @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"            public void formResponsesAndSet() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"                return;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"        };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"        String[] firstStr \u003d new String[]{\"Hello World!\"};","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"        String[] secondStr \u003d new String[]{};","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"        String[] actual \u003d response.concatResponses(firstStr, secondStr);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"        String[] expected \u003d new String[] {\"Hello World!\"};","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"        String[] firstStr2 \u003d new String[]{};","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"        String[] secondStr2 \u003d new String[]{\"Testing 2 cases in the same method lmaoo\"};","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"        String[] actual2 \u003d response.concatResponses(firstStr2, secondStr2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"        String[] expected2 \u003d new String[] {\"Testing 2 cases in the same method lmaoo\"};","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"        assertArrayEquals(expected2, actual2);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TobyCyan"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TobyCyan"},"content":"    public void concatResponse_noEmpty_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TobyCyan"},"content":"        Response response \u003d new Response() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TobyCyan"},"content":"            @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TobyCyan"},"content":"            public void formResponsesAndSet() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TobyCyan"},"content":"                return;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TobyCyan"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TobyCyan"},"content":"        };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TobyCyan"},"content":"        String[] firstStr \u003d new String[]{\"Hello guys!\"};","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TobyCyan"},"content":"        String[] secondStr \u003d new String[]{\"Welcome to my YouTube channel.\"};","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TobyCyan"},"content":"        String[] actual \u003d response.concatResponses(firstStr, secondStr);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TobyCyan"},"content":"        String[] expected \u003d new String[] {\"Hello guys!\", \"Welcome to my YouTube channel.\"};","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TobyCyan"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TobyCyan"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TobyCyan"},"content":"    public void appendTaskStringToResponseArrayAndReturn_markTask_success() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TobyCyan"},"content":"        Task task \u003d new Task(\"task 1\", \"add task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TobyCyan"},"content":"        MarkTaskResponse markTaskResponse \u003d new MarkTaskResponse(task);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TobyCyan"},"content":"        task.completeTask();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TobyCyan"},"content":"        String taskString \u003d task.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TobyCyan"},"content":"        String[] markTaskResponses \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TobyCyan"},"content":"            \"You\u0027ve completed this? That\u0027s amazing!\", \"I\u0027ve noted down your achievement, \"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TobyCyan"},"content":"                + \"congratulations!\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TobyCyan"},"content":"        };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TobyCyan"},"content":"        String[] actual \u003d markTaskResponse.appendTaskStringToResponseArrayAndReturn(markTaskResponses, taskString);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TobyCyan"},"content":"        String[] expected \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TobyCyan"},"content":"            \"You\u0027ve completed this? That\u0027s amazing!\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TobyCyan"},"content":"            \"I\u0027ve noted down your achievement, congratulations!\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TobyCyan"},"content":"            taskString};","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TobyCyan"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TobyCyan"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TobyCyan"},"content":"    public void appendTaskStringToResponseArrayAndReturn_unmarkTask_success() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TobyCyan"},"content":"        Task task \u003d new Task(\"task 1\", \"add task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TobyCyan"},"content":"        UnmarkTaskResponse unmarkTaskResponse \u003d new UnmarkTaskResponse(task);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TobyCyan"},"content":"        String taskString \u003d task.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TobyCyan"},"content":"        String[] markTaskResponses \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TobyCyan"},"content":"            \"It\u0027s alright to take things easy.\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TobyCyan"},"content":"            \"I\u0027ve unchecked this task for you to revisit next time!\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TobyCyan"},"content":"        };","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TobyCyan"},"content":"        String[] actual \u003d unmarkTaskResponse.appendTaskStringToResponseArrayAndReturn(markTaskResponses, taskString);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TobyCyan"},"content":"        String[] expected \u003d new String[] {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TobyCyan"},"content":"            \"It\u0027s alright to take things easy.\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TobyCyan"},"content":"            \"I\u0027ve unchecked this task for you to revisit next time!\",","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TobyCyan"},"content":"            taskString};","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TobyCyan"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"TobyCyan":108}},{"path":"src/test/java/manager/TaskManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"package manager;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"import java.util.List;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"import mei.manager.TaskManager;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"import mei.stub.FileStorageStub;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"import mei.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":" * Represents the class to test task manager methods.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"public class TaskManagerTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"    public void getTaskStringsToDisplay_noTasks_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TobyCyan"},"content":"        FileStorageStub fs \u003d new FileStorageStub(\"./\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TobyCyan"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TobyCyan"},"content":"        TaskManager tm \u003d new TaskManager(tasks, fs);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TobyCyan"},"content":"        String[] actual \u003d tm.getTaskStringsToDisplay();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TobyCyan"},"content":"        assertArrayEquals(null, actual);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TobyCyan"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TobyCyan"},"content":"    public void getTaskStringsToDisplay_gotTasks_success() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TobyCyan"},"content":"        FileStorageStub fs \u003d new FileStorageStub(\"./\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TobyCyan"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TobyCyan"},"content":"        tasks.add(new Task(\"task 1\", \"add task\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TobyCyan"},"content":"        tasks.add(new Task(\"task 2\", \"add task\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TobyCyan"},"content":"        tasks.add(new Task(\"task 3\", \"add task\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TobyCyan"},"content":"        tasks.add(new Task(\"task 4\", \"add task\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TobyCyan"},"content":"        tasks.add(new Task(\"task 5\", \"add task\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TobyCyan"},"content":"        TaskManager tm \u003d new TaskManager(tasks, fs);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TobyCyan"},"content":"        String[] actual \u003d tm.getTaskStringsToDisplay();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TobyCyan"},"content":"        String[] expected \u003d new String[] {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TobyCyan"},"content":"            \"1. [ ] task 1\",","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TobyCyan"},"content":"            \"2. [ ] task 2\",","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TobyCyan"},"content":"            \"3. [ ] task 3\",","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TobyCyan"},"content":"            \"4. [ ] task 4\",","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TobyCyan"},"content":"            \"5. [ ] task 5\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TobyCyan"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TobyCyan"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TobyCyan"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TobyCyan"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"TobyCyan":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TobyCyan"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TobyCyan"},"content":"todo borrow book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TobyCyan"},"content":"deadline return book /by Sunday 3pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TobyCyan"},"content":"event JCFN 2025 /from Saturday 11am /to 9pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TobyCyan"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TobyCyan"},"content":"mark 3","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TobyCyan"},"content":"mark 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TobyCyan"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TobyCyan"},"content":"unmark 3","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TobyCyan"},"content":"todo","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TobyCyan"},"content":"event","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TobyCyan"},"content":"deadline","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TobyCyan"},"content":"random plant the flowers","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TobyCyan"},"content":"event Career Fair /from tmr","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TobyCyan"},"content":"deadline watch online lecture","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TobyCyan"},"content":"delete 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"todo read textbook","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TobyCyan"},"content":"delete 3","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TobyCyan"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TobyCyan"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"TobyCyan":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TobyCyan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Mei.java","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TobyCyan"},"content":"java -classpath ..\\bin Mei \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"TobyCyan":2,"-":19}}]
