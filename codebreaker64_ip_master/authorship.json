[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codebreaker64"},"content":"    mainClass.set(\"devin.Devin\")","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codebreaker64"},"content":"    archiveBaseName \u003d \"devin\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"codebreaker64":2,"-":39}},{"path":"src/main/java/devin/Devin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codebreaker64"},"content":"package devin;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codebreaker64"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codebreaker64"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codebreaker64"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codebreaker64"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codebreaker64"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codebreaker64"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codebreaker64"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codebreaker64"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codebreaker64"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codebreaker64"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codebreaker64"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codebreaker64"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codebreaker64"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codebreaker64"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codebreaker64"},"content":"class Devin {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codebreaker64"},"content":"    public static Path filePath \u003d Paths.get(\"src/main/java/data/devin.txt\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codebreaker64"},"content":"    private static Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codebreaker64"},"content":"    private static TaskList list;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codebreaker64"},"content":"    enum Type {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codebreaker64"},"content":"        todo,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codebreaker64"},"content":"        deadline,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codebreaker64"},"content":"        event","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codebreaker64"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codebreaker64"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codebreaker64"},"content":"        list \u003d new TaskList(storage.retrieveTasks());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codebreaker64"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codebreaker64"},"content":"        ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codebreaker64"},"content":"        Ui.printGreet();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codebreaker64"},"content":"        ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codebreaker64"},"content":"        while (true) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codebreaker64"},"content":"            String text \u003d scan.nextLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codebreaker64"},"content":"            try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codebreaker64"},"content":"                String[] texts \u003d Parser.parseCommand(text);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codebreaker64"},"content":"                int index;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codebreaker64"},"content":"                switch (texts[0]) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codebreaker64"},"content":"                case \"bye\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codebreaker64"},"content":"                    Ui.printExit();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codebreaker64"},"content":"                    return;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codebreaker64"},"content":"                case \"list\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codebreaker64"},"content":"                    list.listTasks();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codebreaker64"},"content":"                    break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codebreaker64"},"content":"                case \"mark\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codebreaker64"},"content":"                    if (list.tasks.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codebreaker64"},"content":"                        throw new DevinException(\"There is no task in the list!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codebreaker64"},"content":"                    } else if (texts.length !\u003d 2) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codebreaker64"},"content":"                        throw new DevinException(\"Please choose a task number\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codebreaker64"},"content":"                    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codebreaker64"},"content":"                    index \u003d Integer.parseInt((texts[1])) - 1;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codebreaker64"},"content":"                    if (index \u003e list.tasks.size() + 1 || index \u003c 0) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codebreaker64"},"content":"                        throw new DevinException(\"Please choose a valid task number from 1 to \" ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codebreaker64"},"content":"                                + list.tasks.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codebreaker64"},"content":"                    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codebreaker64"},"content":"                    list.handleMark(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codebreaker64"},"content":"                    storage.editFile(list.tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codebreaker64"},"content":"                    Ui.printMark(list.tasks.get(index).toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codebreaker64"},"content":"                    break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codebreaker64"},"content":"                case \"unmark\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codebreaker64"},"content":"                    if (list.tasks.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codebreaker64"},"content":"                        throw new DevinException(\"There is no task in the list!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codebreaker64"},"content":"                    } else if (texts.length !\u003d 2) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codebreaker64"},"content":"                        throw new DevinException(\"Please type a choose a task number\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codebreaker64"},"content":"                    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"codebreaker64"},"content":"                    index \u003d Integer.parseInt((texts[1])) - 1;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codebreaker64"},"content":"                    if (index \u003e list.tasks.size() + 1 || index \u003c 0) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codebreaker64"},"content":"                        throw new DevinException(\"Please choose a valid task number from 1 to \" ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codebreaker64"},"content":"                                + list.tasks.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codebreaker64"},"content":"                    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codebreaker64"},"content":"                    list.handleUnmark(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codebreaker64"},"content":"                    storage.editFile(list.tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codebreaker64"},"content":"                    Ui.printUnmark(list.tasks.get(index).toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codebreaker64"},"content":"                    break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codebreaker64"},"content":"                case \"delete\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codebreaker64"},"content":"                    if (list.tasks.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codebreaker64"},"content":"                        throw new DevinException(\"There is no task in the list!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codebreaker64"},"content":"                    } else if (texts.length !\u003d 2) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codebreaker64"},"content":"                        throw new DevinException(\"Please type a choose a task number\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codebreaker64"},"content":"                    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codebreaker64"},"content":"                    index \u003d Integer.parseInt((texts[1])) - 1;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codebreaker64"},"content":"                    if (index \u003e list.tasks.size() + 1 || index \u003c 0) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codebreaker64"},"content":"                        throw new DevinException(\"Please choose a valid task number from 1 to \" ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"codebreaker64"},"content":"                                + list.tasks.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"codebreaker64"},"content":"                    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"codebreaker64"},"content":"                    Task temp \u003d list.tasks.get(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"codebreaker64"},"content":"                    list.deleteTask(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"codebreaker64"},"content":"                    storage.editFile(list.tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codebreaker64"},"content":"                    Ui.printDelete(temp.toString(), list.tasks.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"codebreaker64"},"content":"                    break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"codebreaker64"},"content":"                case \"todo\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"codebreaker64"},"content":"                    texts[0] \u003d \"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"codebreaker64"},"content":"                    list.addTask(Devin.Type.todo, String.join(\" \", texts), storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codebreaker64"},"content":"                    Ui.printAdd(list.tasks.get(list.tasks.size() - 1).toString(), list.tasks.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"codebreaker64"},"content":"                    break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"codebreaker64"},"content":"                case \"deadline\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"codebreaker64"},"content":"                    texts[0] \u003d \"\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"codebreaker64"},"content":"                    list.addTask(Devin.Type.deadline, String.join(\" \", texts), storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"codebreaker64"},"content":"                    Ui.printAdd(list.tasks.get(list.tasks.size() - 1).toString(), list.tasks.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"codebreaker64"},"content":"                    break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"codebreaker64"},"content":"                case \"event\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"codebreaker64"},"content":"                    texts[0] \u003d \"\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"codebreaker64"},"content":"                    list.addTask(Devin.Type.event, String.join(\" \", texts), storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"codebreaker64"},"content":"                    Ui.printAdd(list.tasks.get(list.tasks.size() - 1).toString(), list.tasks.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"codebreaker64"},"content":"                    break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"codebreaker64"},"content":"                case \"find\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"codebreaker64"},"content":"                    if (list.tasks.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"codebreaker64"},"content":"                        throw new DevinException(\"There is no task in the list!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"codebreaker64"},"content":"                    } else if (texts.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"codebreaker64"},"content":"                        throw new DevinException(\"Please type in a keyword\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"codebreaker64"},"content":"                    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"codebreaker64"},"content":"                    texts[0] \u003d \"\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"codebreaker64"},"content":"                    list.findTask(String.join(\" \", texts));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"codebreaker64"},"content":"                    break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"codebreaker64"},"content":"                default:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"codebreaker64"},"content":"                    throw new DevinException(\"Unknown command\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"codebreaker64"},"content":"                    //Fallthrough","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"codebreaker64"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"codebreaker64"},"content":"            } catch (DevinException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"codebreaker64"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"codebreaker64"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"codebreaker64"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"codebreaker64"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"codebreaker64"},"content":"//Solution inspired by https://www.geeksforgeeks.org/user-defined-custom-exception-in-java/","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"codebreaker64"},"content":"class DevinException extends Exception {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"codebreaker64"},"content":"     * Constructs a new instance of DevinException with the specified message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"codebreaker64"},"content":"     * @param message error message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"codebreaker64"},"content":"    public DevinException(String message) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"codebreaker64"},"content":"        super(message);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"codebreaker64"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"codebreaker64"},"content":"class Ui {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"codebreaker64"},"content":"     * Prints the greeting message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"codebreaker64"},"content":"    public static void printGreet() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"codebreaker64"},"content":"        String logo \u003d \" ____             _\\n\" +","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"codebreaker64"},"content":"                \"|  _ \\\\  _____   _(_)_ __\\n\" +","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"codebreaker64"},"content":"                \"| | | |/ _ \\\\ \\\\ / / | \u0027_ \\\\\\n\" +","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"codebreaker64"},"content":"                \"| |_| |  __/\\\\ V /| | | | |\\n\" +","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"codebreaker64"},"content":"                \"|____/ \\\\___| \\\\_/ |_|_| |_|\\n\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(logo);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"Hello! I\u0027m, Devin\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"codebreaker64"},"content":"     * Prints the exit message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"codebreaker64"},"content":"    public static void printExit() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"codebreaker64"},"content":"     * Prints out the input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"codebreaker64"},"content":"     * @param input user input text.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"codebreaker64"},"content":"    public static void printEcho(String input) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"codebreaker64"},"content":"     * Prints out the mark message with the specified task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"codebreaker64"},"content":"     * @param taskName task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"codebreaker64"},"content":"    public static void printMark(String taskName) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n \" + taskName);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"codebreaker64"},"content":"     * Prints out the unmark message with the specified task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"codebreaker64"},"content":"     * @param taskName task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"codebreaker64"},"content":"    public static void printUnmark(String taskName) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + taskName);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"codebreaker64"},"content":"     * Prints out the delete message with the specified task detail and task list size.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"codebreaker64"},"content":"     * @param temp task detail.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"codebreaker64"},"content":"     * @param size task list size.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"codebreaker64"},"content":"    public static void printDelete(String temp, int size) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + temp ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"codebreaker64"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"codebreaker64"},"content":"     * Prints out the add message with the specified task description and task list size.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"codebreaker64"},"content":"     * @param taskName task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"codebreaker64"},"content":"     * @param size task list size.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"codebreaker64"},"content":"    public static void printAdd(String taskName, int size) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + taskName ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"codebreaker64"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"codebreaker64"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"codebreaker64"},"content":"class Storage{","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"codebreaker64"},"content":"    public Path parentDir;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"codebreaker64"},"content":"    public Path filePath;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"codebreaker64"},"content":"     * Constructs a new instance of Storage with the specified file path.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"codebreaker64"},"content":"     * @param filePath relative path to storage file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"codebreaker64"},"content":"    public Storage (Path filePath) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"codebreaker64"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"codebreaker64"},"content":"        this.parentDir \u003d filePath.getParent();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"codebreaker64"},"content":"     * Returns the task list retrieved from storage file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"codebreaker64"},"content":"     * If the file is empty, it will return an empty list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"codebreaker64"},"content":"     * @return task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"codebreaker64"},"content":"    public ArrayList\u003cTask\u003e retrieveTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"codebreaker64"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"codebreaker64"},"content":"        ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"codebreaker64"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"codebreaker64"},"content":"            if (!Files.exists(parentDir)) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"codebreaker64"},"content":"                throw new DevinException(\"Data folder does not exist.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"codebreaker64"},"content":"            } else if (!Files.exists(filePath)) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"codebreaker64"},"content":"                throw new DevinException(\"devin.txt does not exist.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"codebreaker64"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"codebreaker64"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath.toString()));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"codebreaker64"},"content":"            String line;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"codebreaker64"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"codebreaker64"},"content":"                String[] inputs \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"codebreaker64"},"content":"                if (inputs[0].equals(\"T\")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"codebreaker64"},"content":"                    tasks.add(new ToDo(inputs[2], inputs[1].equals(\"X\")));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"codebreaker64"},"content":"                } else if (inputs[0].equals(\"D\")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"codebreaker64"},"content":"                    tasks.add(new Deadline(inputs[2], Parser.parseDate(inputs[3]), inputs[1].equals(\"X\")));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"codebreaker64"},"content":"                } else if (inputs[0].equals(\"E\")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"codebreaker64"},"content":"                    tasks.add(new Event(inputs[2], Parser.parseDate(inputs[3]), Parser.parseDate(inputs[4]),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"codebreaker64"},"content":"                            inputs[1].equals(\"X\")));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"codebreaker64"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"codebreaker64"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"codebreaker64"},"content":"        } catch (DevinException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"codebreaker64"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"codebreaker64"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"codebreaker64"},"content":"            System.out.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"codebreaker64"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"codebreaker64"},"content":"        return tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"codebreaker64"},"content":"     * Rewrites the storage file with the edited information.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"codebreaker64"},"content":"     * @param tasks task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"codebreaker64"},"content":"    public void editFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"codebreaker64"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath.toString())) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"codebreaker64"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"codebreaker64"},"content":"                writer.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"codebreaker64"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"codebreaker64"},"content":"            writer.close();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"codebreaker64"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"codebreaker64"},"content":"            System.out.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"codebreaker64"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"codebreaker64"},"content":"     * Appends the new task detail into the storage file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"codebreaker64"},"content":"     * @param taskName task detail.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"codebreaker64"},"content":"    public void appendTask(String taskName) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"codebreaker64"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath.toString(), true)) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"codebreaker64"},"content":"            writer.write(taskName + \"\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"codebreaker64"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"codebreaker64"},"content":"            System.out.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"codebreaker64"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"codebreaker64"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"codebreaker64"},"content":"class Parser{","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"codebreaker64"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"codebreaker64"},"content":"     * Splits the user input text into a String array via spaces.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"codebreaker64"},"content":"     * @param input user input text.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"codebreaker64"},"content":"     * @return the split input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"codebreaker64"},"content":"     * @throws DevinException If input is empty.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"codebreaker64"},"content":"    public static String[] parseCommand(String input) throws DevinException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"codebreaker64"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"codebreaker64"},"content":"            throw new DevinException(\"Please type a valid command\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"codebreaker64"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"codebreaker64"},"content":"        return input.split(\" \");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"codebreaker64"},"content":"     * Converts the date and time input from String to LocalDateTime.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"codebreaker64"},"content":"     * @param input date and time","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"codebreaker64"},"content":"     * @return the converted input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"codebreaker64"},"content":"    public static LocalDateTime parseDate(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"codebreaker64"},"content":"        return LocalDateTime.parse(input, FORMATTER);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"codebreaker64"},"content":"     * Splits the task detail input into task description, and deadline or duration.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"codebreaker64"},"content":"     * @param type type of task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"codebreaker64"},"content":"     * @param input task detail.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"codebreaker64"},"content":"     * @return the split input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"codebreaker64"},"content":"     * @throws DevinException If input is empty or input is missing keywords.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"codebreaker64"},"content":"    public static String[] parseInput(devin.Devin.Type type, String input) throws DevinException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"codebreaker64"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"codebreaker64"},"content":"            throw new DevinException(\"Oi! The description of a\" + type + \" cannot be empty\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"codebreaker64"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"codebreaker64"},"content":"        String[] temps \u003d null;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"codebreaker64"},"content":"        if (type \u003d\u003d Devin.Type.deadline) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"codebreaker64"},"content":"            if (!input.contains(\"/by\")) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"codebreaker64"},"content":"                throw new DevinException(\"My god! please follow this format deadline task /by d/m/yyyy HHmm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"codebreaker64"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"codebreaker64"},"content":"            temps \u003d input.split(\"/by\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"codebreaker64"},"content":"            if (!isValidDate(temps[1].trim())) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"codebreaker64"},"content":"                throw new DevinException(\"Date time format is incorrect. Please type in this format (d/M/yyyy HHmm)\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"codebreaker64"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"codebreaker64"},"content":"        } else if (type \u003d\u003d Devin.Type.event) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"codebreaker64"},"content":"            if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"codebreaker64"},"content":"                throw new DevinException(","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"codebreaker64"},"content":"                        \"My god! please follow this format event task /from d/m/yyyy HHmm /to d/m/yyyy HHmm\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"codebreaker64"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"codebreaker64"},"content":"            temps \u003d input.split(\"/from | /to\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"codebreaker64"},"content":"            if (!isValidDate(temps[1].trim()) \u0026\u0026 !isValidDate(temps[2].trim())) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"codebreaker64"},"content":"                throw new DevinException(\"Date time format is incorrect. Please type in this format (d/M/yyyy HHmm)\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"codebreaker64"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"codebreaker64"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"codebreaker64"},"content":"        return temps;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"codebreaker64"},"content":"     * Checks if the input can be converted to LocalDateTime in a specify format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"codebreaker64"},"content":"     * @param dateString date and time input as String.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"codebreaker64"},"content":"     * @return if the dateString can be converted to LocalDateTime.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"codebreaker64"},"content":"    public static boolean isValidDate(String dateString) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"codebreaker64"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"codebreaker64"},"content":"            LocalDateTime.parse(dateString, FORMATTER);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"codebreaker64"},"content":"            return true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"codebreaker64"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"codebreaker64"},"content":"            return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"codebreaker64"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"codebreaker64"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"codebreaker64"},"content":"class Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"codebreaker64"},"content":"    protected String name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"codebreaker64"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"codebreaker64"},"content":"     * Constructs a new instance of Task with the specified name and isDone.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"codebreaker64"},"content":"     * @param name task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"codebreaker64"},"content":"     * @param isDone whether the task is completed or not.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"codebreaker64"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"codebreaker64"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"codebreaker64"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"codebreaker64"},"content":"     * Returns X if task is done or nothing otherwise.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"codebreaker64"},"content":"     * @return the status icon.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"codebreaker64"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"codebreaker64"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"codebreaker64"},"content":"     * Returns the task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"codebreaker64"},"content":"     * @return task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"codebreaker64"},"content":"    public String getName() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"codebreaker64"},"content":"        return this.name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"codebreaker64"},"content":"     * Marks the task as completed,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"codebreaker64"},"content":"    public void markTask() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"codebreaker64"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"codebreaker64"},"content":"     * Unmarks the task as uncompleted.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"codebreaker64"},"content":"    public void unmarkTask() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"codebreaker64"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"codebreaker64"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"codebreaker64"},"content":"        return getStatusIcon() + \" | \" + this.name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"codebreaker64"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"codebreaker64"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"codebreaker64"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"codebreaker64"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"codebreaker64"},"content":"class ToDo extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"codebreaker64"},"content":"     * Constructs a new instance of ToDo with the specified description and isDone.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"codebreaker64"},"content":"     * @param description task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"codebreaker64"},"content":"     * @param isDone whether the task is completed or not.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"codebreaker64"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"codebreaker64"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"codebreaker64"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"codebreaker64"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"codebreaker64"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"codebreaker64"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"codebreaker64"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"codebreaker64"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"codebreaker64"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"codebreaker64"},"content":"class Deadline extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"codebreaker64"},"content":"    public static DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"codebreaker64"},"content":"    public static DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"codebreaker64"},"content":"    ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"codebreaker64"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"codebreaker64"},"content":"     * Constructs a new instance of Deadline with the specified description. by and isDone.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"codebreaker64"},"content":"     * @param description task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"codebreaker64"},"content":"     * @param by task deadline.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"codebreaker64"},"content":"     * @param isDone whether the task is completed or not.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"codebreaker64"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"codebreaker64"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"codebreaker64"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"codebreaker64"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"codebreaker64"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"codebreaker64"},"content":"        return \"D | \" + super.toFileString() + \" | \" + by.format(formatter1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"codebreaker64"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"codebreaker64"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"codebreaker64"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter2) + \")\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"codebreaker64"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"codebreaker64"},"content":"class Event extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"codebreaker64"},"content":"    public static DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"codebreaker64"},"content":"    public static DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"codebreaker64"},"content":"    ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"codebreaker64"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"codebreaker64"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"codebreaker64"},"content":"     * Constructs a new instance of Event with the specified description, from, to and isDone.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"codebreaker64"},"content":"     * @param description task description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"codebreaker64"},"content":"     * @param from start of task duration.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"codebreaker64"},"content":"     * @param to end of task duration.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"codebreaker64"},"content":"     * @param isDone whether the task is completed or not.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"codebreaker64"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, boolean isDone) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"codebreaker64"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"codebreaker64"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"codebreaker64"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"codebreaker64"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"codebreaker64"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"codebreaker64"},"content":"        return \"E | \" + super.toFileString() + \" | \" + from.format(formatter1) + \" | \" + to.format(formatter1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"codebreaker64"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"codebreaker64"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"codebreaker64"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter2) + \" to: \" + to.format(formatter2) + \")\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"codebreaker64"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"codebreaker64"},"content":"class TaskList {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"codebreaker64"},"content":"    public ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"codebreaker64"},"content":"     * Constructs a new instance of Tasklist with the specified store.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"codebreaker64"},"content":"     * @param tasks task list retrieved from storage file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"codebreaker64"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"codebreaker64"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"codebreaker64"},"content":"     * Add the new task into the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"codebreaker64"},"content":"     * @param type type of task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"codebreaker64"},"content":"     * @param input task detail.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"codebreaker64"},"content":"     * @param storage instance of Storage object.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"codebreaker64"},"content":"     * @throws DevinException if the todo description is empty.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"codebreaker64"},"content":"    public void addTask(Devin.Type type, String input, Storage storage) throws DevinException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"codebreaker64"},"content":"        Task task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"codebreaker64"},"content":"        String[] temp \u003d null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"codebreaker64"},"content":"        ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"codebreaker64"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"codebreaker64"},"content":"            switch (type) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"codebreaker64"},"content":"            case todo:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"codebreaker64"},"content":"                if (input.trim().isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"codebreaker64"},"content":"                    throw new DevinException(\"Oi! The description of a todo cannot be empty\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"codebreaker64"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"codebreaker64"},"content":"                task \u003d new ToDo(input.trim(), false);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"codebreaker64"},"content":"                tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"codebreaker64"},"content":"                storage.appendTask(task.toFileString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"codebreaker64"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"codebreaker64"},"content":"            case deadline:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"codebreaker64"},"content":"                temp \u003d Parser.parseInput(type, input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"codebreaker64"},"content":"                task \u003d new Deadline(temp[0].trim(), Parser.parseDate(temp[1].trim()), false);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"codebreaker64"},"content":"                tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"codebreaker64"},"content":"                storage.appendTask(task.toFileString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"codebreaker64"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"codebreaker64"},"content":"            case event:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"codebreaker64"},"content":"                temp \u003d Parser.parseInput(type, input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"codebreaker64"},"content":"                task \u003d new Event(temp[0].trim(), Parser.parseDate(temp[1].trim()),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"codebreaker64"},"content":"                        Parser.parseDate(temp[2].trim()), false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"codebreaker64"},"content":"                tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"codebreaker64"},"content":"                storage.appendTask(task.toFileString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"codebreaker64"},"content":"                break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"codebreaker64"},"content":"            default:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"codebreaker64"},"content":"                throw new DevinException(\"Invalid task type\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"codebreaker64"},"content":"                //Fallthrough","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"codebreaker64"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"codebreaker64"},"content":"        } catch (DevinException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"codebreaker64"},"content":"            throw new DevinException(e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"codebreaker64"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"codebreaker64"},"content":"     * Lists out all the tasks currently in the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"codebreaker64"},"content":"    public void listTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"codebreaker64"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"codebreaker64"},"content":"            System.out.println(i + 1 + \". \" + tasks.get(i).toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"codebreaker64"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"codebreaker64"},"content":"     * Marks the specified task number as completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"codebreaker64"},"content":"     * @param index task number.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"codebreaker64"},"content":"    public void handleMark(int index) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"codebreaker64"},"content":"        tasks.get(index).markTask();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"codebreaker64"},"content":"     * Unmarks the specified task number as incompleted.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"codebreaker64"},"content":"     * @param index task number.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"codebreaker64"},"content":"    public void handleUnmark(int index) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"codebreaker64"},"content":"        tasks.get(index).unmarkTask();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"codebreaker64"},"content":"     * Deletes the specified task number from the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"codebreaker64"},"content":"     * @param index task number","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"codebreaker64"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"codebreaker64"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"codebreaker64"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"codebreaker64"},"content":"     * Prints out all the task that contains the keyword.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"codebreaker64"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"codebreaker64"},"content":"     * @param keyword keyword to filter the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"codebreaker64"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"codebreaker64"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"Here are the matching tasks in your listTasks:\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"codebreaker64"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"codebreaker64"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"codebreaker64"},"content":"            String taskName \u003d task.name.toLowerCase();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"codebreaker64"},"content":"            String keywordLower \u003d keyword.trim().toLowerCase();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"codebreaker64"},"content":"            String regex \u003d \"\\\\b\" + Pattern.quote(keywordLower) + \"\\\\b\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"codebreaker64"},"content":"            Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"codebreaker64"},"content":"            Matcher matcher \u003d pattern.matcher(taskName);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"codebreaker64"},"content":"            if (matcher.find()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"codebreaker64"},"content":"                System.out.println(i + \".\" + task.toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"codebreaker64"},"content":"                i++;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"codebreaker64"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"codebreaker64"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"codebreaker64"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"codebreaker64"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"codebreaker64":651}},{"path":"src/test/java/devin/DevinTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codebreaker64"},"content":"package devin;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codebreaker64"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codebreaker64"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codebreaker64"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codebreaker64"},"content":"import java.nio.file.*;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codebreaker64"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codebreaker64"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codebreaker64"},"content":"public class DevinTest {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codebreaker64"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codebreaker64"},"content":"    @TempDir","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codebreaker64"},"content":"    Path tempDir;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codebreaker64"},"content":"    private Path tempFile;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codebreaker64"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codebreaker64"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codebreaker64"},"content":"        tempFile \u003d tempDir.resolve(\"devin_test.txt\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codebreaker64"},"content":"        storage \u003d new Storage(tempFile);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codebreaker64"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codebreaker64"},"content":"    public void storage_append_success() throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codebreaker64"},"content":"        String task1 \u003d \"Task1\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codebreaker64"},"content":"        String task2 \u003d \"Task2\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codebreaker64"},"content":"        String task3 \u003d \"Task3\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codebreaker64"},"content":"        storage.appendTask(task1);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codebreaker64"},"content":"        storage.appendTask(task2);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codebreaker64"},"content":"        storage.appendTask(task3);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codebreaker64"},"content":"        String fileContent \u003d Files.readString(tempFile);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codebreaker64"},"content":"        assertTrue(fileContent.contains(task1), \"Task1 was not appended successfully\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codebreaker64"},"content":"        assertTrue(fileContent.contains(task2), \"Task2 was not appended successfully\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codebreaker64"},"content":"        assertTrue(fileContent.contains(task3), \"Task3 was not appended successfully\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codebreaker64"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codebreaker64"},"content":"    public void parser_parseInput_success() throws DevinException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codebreaker64"},"content":"        String input \u003d \"meeting /from 2/2/2025 1000 /to 2/2/2025 1200\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codebreaker64"},"content":"        String expectedTaskName \u003d \"meeting\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codebreaker64"},"content":"        String expectedFromDate \u003d \"2/2/2025 1000\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codebreaker64"},"content":"        String expectedToDate \u003d \"2/2/2025 1200\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codebreaker64"},"content":"        String[] parsedTask \u003d Parser.parseInput(Devin.Type.event, input);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codebreaker64"},"content":"        assertNotNull(parsedTask, \"Parsed task should not be null\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codebreaker64"},"content":"        assertEquals(3, parsedTask.length, \"Parsed array should have exactly 3 elements\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codebreaker64"},"content":"        assertEquals(expectedTaskName, parsedTask[0].trim(), \"Task name was not parsed correctly\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codebreaker64"},"content":"        assertEquals(expectedFromDate, parsedTask[1].trim(), \"From date was not parsed correctly\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codebreaker64"},"content":"        assertEquals(expectedToDate, parsedTask[2].trim(), \"To date was not parsed correctly\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codebreaker64"},"content":"        input \u003d \"return book /by 6/6/2025 1400\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codebreaker64"},"content":"        expectedTaskName \u003d \"return book\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codebreaker64"},"content":"        String expectedByDate \u003d \"6/6/2025 1400\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codebreaker64"},"content":"        parsedTask \u003d Parser.parseInput(Devin.Type.deadline, input);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codebreaker64"},"content":"        assertNotNull(parsedTask, \"Parsed task should not be null\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codebreaker64"},"content":"        assertEquals(2, parsedTask.length, \"Parsed array should have exactly 3 elements\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codebreaker64"},"content":"        assertEquals(expectedTaskName, parsedTask[0].trim(), \"Task name was not parsed correctly\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codebreaker64"},"content":"        assertEquals(expectedByDate, parsedTask[1].trim(), \"By date was not parsed correctly\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codebreaker64"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codebreaker64"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codebreaker64"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"codebreaker64":67}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"codebreaker64"},"content":"todo borrow book","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codebreaker64"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codebreaker64"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codebreaker64"},"content":"mark 1","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codebreaker64"},"content":"mark 2","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codebreaker64"},"content":"list","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codebreaker64"},"content":"unmark 1","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codebreaker64"},"content":"list","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codebreaker64"},"content":"bye","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"codebreaker64":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codebreaker64"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Devin.java","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codebreaker64"},"content":"java -classpath ..\\bin Devin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"codebreaker64":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codebreaker64"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Devin.java","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codebreaker64"},"content":"java -classpath ../bin Devin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"codebreaker64":2,"-":36}}]
