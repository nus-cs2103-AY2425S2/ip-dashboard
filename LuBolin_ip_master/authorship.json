[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"    mainClass.set(\"innkeeper.InnKeeper\")","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"    archiveBaseName \u003d \"InnKeeper\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"LuBolin":2,"-":39}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"T | 0 | task 1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"E | 0 | hunting | now | 2030-10-10","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"D | 0 | sleep | 3000-10-10","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"LuBolin":3}},{"path":"src/main/java/innkeeper/InnKeeper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.Command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.Command.TerminationType;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":" * InnKeeper is a chatbot that helps users to manage their tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":" * It contains the main method to run the chatbot.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"public class InnKeeper {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"    private InputParser inputParser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"     * Constructor for InnKeeper.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"     * @param filePath The file path to save the tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"    public InnKeeper(String filePath){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"        this.inputParser \u003d new InputParser();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"        this.storage \u003d new Storage(filePath, this.inputParser);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"     * Main method to run the chatbot.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"        new InnKeeper(\"data/tasks.txt\").run();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LuBolin"},"content":"     * Runs the chatbot.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LuBolin"},"content":"    public void run(){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LuBolin"},"content":"        try{","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LuBolin"},"content":"            storage.readTasksFromFile(tasks, storage, ui);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LuBolin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LuBolin"},"content":"            ui.printMessage(\"Error when loading saved tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LuBolin"},"content":"        ui.setInitialized();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LuBolin"},"content":"        ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LuBolin"},"content":"        ui.printGreetings();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LuBolin"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LuBolin"},"content":"        while (!isExit){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LuBolin"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LuBolin"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LuBolin"},"content":"                ui.printLine(); // show the divider line (\"_______\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LuBolin"},"content":"                Command c \u003d inputParser.parseUserInput(fullCommand);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LuBolin"},"content":"                TerminationType termination \u003d c.execute(tasks, storage, ui);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LuBolin"},"content":"                isExit \u003d (termination \u003d\u003d TerminationType.TERMINATE);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LuBolin"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LuBolin"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LuBolin"},"content":"            } finally {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LuBolin"},"content":"                ui.printLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LuBolin"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LuBolin"},"content":"        // print farewell is handled in ByeCommand","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"LuBolin":70}},{"path":"src/main/java/innkeeper/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.Command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.ByeCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.DeadlineCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.DeleteCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.EventCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.FindCommand;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.ListCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.MarkCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.UnmarkCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.TodoCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":" * Class in charge of parsing user input into commands.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"public class InputParser {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"     * Parses the user input into a command.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"     * @param userInput The user input.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"     * @return The command.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"     * @throws Exception If the user input is invalid.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"    public Command parseUserInput(String userInput) throws Exception{","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"        // Choose to not use \u0027//d+\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"        // As user may just type \u0027mark\u0027 or \u0027unmark\u0027 or \u0027delete\u0027 without any index","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"        // And we want to still instruct them to input an index","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"        // Instead of parsing that input command as nonsensical","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"        String markAndUnmarkRegex \u003d \"(mark|unmark).*\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"        String deleteRegex \u003d \"delete.*\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"        String newTaskRegex \u003d \"(todo|deadline|event).*\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"        Command output \u003d null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"            output \u003d new ByeCommand().parse(userInput);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LuBolin"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LuBolin"},"content":"            output \u003d new ListCommand().parse(userInput);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LuBolin"},"content":"        } else if (userInput.matches(markAndUnmarkRegex)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LuBolin"},"content":"            boolean isMark \u003d userInput.startsWith(\"mark\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LuBolin"},"content":"            if (isMark){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LuBolin"},"content":"                output \u003d new MarkCommand().parse(userInput);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LuBolin"},"content":"            } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LuBolin"},"content":"                output \u003d new UnmarkCommand().parse(userInput);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LuBolin"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LuBolin"},"content":"        } else if (userInput.matches(deleteRegex)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LuBolin"},"content":"            output \u003d new DeleteCommand().parse(userInput);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LuBolin"},"content":"        } else if (userInput.matches(newTaskRegex)){ // Add a new task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LuBolin"},"content":"            output \u003d parseNewTaskInput(userInput);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LuBolin"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LuBolin"},"content":"            output \u003d new FindCommand().parse(userInput);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LuBolin"},"content":"        else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LuBolin"},"content":"            String exceptionMessage \u003d \"I\u0027m sorry, but I don\u0027t know what that means.\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LuBolin"},"content":"                    + \"Task types: todo, deadline, event.\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LuBolin"},"content":"                    + \"Other commands: list, find, delete, mark, unmark.\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LuBolin"},"content":"                    + \"If you are leaving, just say \\\"bye\\\".\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LuBolin"},"content":"            throw new IllegalArgumentException(exceptionMessage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LuBolin"},"content":"        return output;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LuBolin"},"content":"     * Specifically parses the user input into a new task command.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LuBolin"},"content":"     * @param userInput The user input.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LuBolin"},"content":"     * @return The command.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LuBolin"},"content":"     * @throws Exception If the user input is invalid.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LuBolin"},"content":"    private Command parseNewTaskInput(String userInput) throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LuBolin"},"content":"        Command output \u003d null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LuBolin"},"content":"        if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LuBolin"},"content":"            output \u003d new TodoCommand().parse(userInput);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LuBolin"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LuBolin"},"content":"           output \u003d new DeadlineCommand().parse(userInput);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LuBolin"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LuBolin"},"content":"            output \u003d new EventCommand().parse(userInput);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LuBolin"},"content":"        return output;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":84}},{"path":"src/main/java/innkeeper/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.Command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.MarkCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.command.TodoCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":" * Class in charge of reading and writing tasks to a file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"public class Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"    private final InputParser inputParser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"     * Constructor for Storage.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"     * @param filePath The file path to save the tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"     * @param inputParser The input parser.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"    public Storage(String filePath, InputParser inputParser){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"        this.FILE_PATH \u003d filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"        this.inputParser \u003d inputParser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"     * Writes the tasks to a file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"     * @param userTasks The TaskList object containing  the list of tasks to write to the file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LuBolin"},"content":"    public void writeTasksToFile(TaskList userTasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LuBolin"},"content":"        // Type | isDone | Description | Other fields","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LuBolin"},"content":"        // check if file exists, if not create it","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LuBolin"},"content":"        // then, write to file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LuBolin"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LuBolin"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LuBolin"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LuBolin"},"content":"                File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LuBolin"},"content":"                boolean success \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LuBolin"},"content":"                if (!parentDir.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LuBolin"},"content":"                    success \u003d parentDir.mkdirs();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LuBolin"},"content":"                    if (success){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LuBolin"},"content":"                        success \u003d file.createNewFile();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LuBolin"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LuBolin"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LuBolin"},"content":"                if (!success) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LuBolin"},"content":"                    System.out.println(\"Failed to write to file \" + FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LuBolin"},"content":"                    System.out.println(\"File not found and could not creat it.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LuBolin"},"content":"                    return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LuBolin"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LuBolin"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LuBolin"},"content":"            PrintWriter writer \u003d new PrintWriter(FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LuBolin"},"content":"            for (Task task : userTasks.getTasks()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LuBolin"},"content":"                writer.println(task.toFileString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LuBolin"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LuBolin"},"content":"            writer.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LuBolin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LuBolin"},"content":"            System.out.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LuBolin"},"content":"     * Reads the tasks from a file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LuBolin"},"content":"     * @param taskList The TaskList object to store the tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LuBolin"},"content":"     * @param storage The Storage object to write tasks to file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LuBolin"},"content":"     * @param ui The Ui object to interact with the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LuBolin"},"content":"     * @throws IOException If there is an error reading the file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LuBolin"},"content":"    public void readTasksFromFile(TaskList taskList, Storage storage, Ui ui) throws IOException{","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LuBolin"},"content":"        // check if file exists, if not just skip","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LuBolin"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LuBolin"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LuBolin"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LuBolin"},"content":"            return;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LuBolin"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LuBolin"},"content":"        String line;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LuBolin"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LuBolin"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LuBolin"},"content":"            // Type | isDone | Description | Other fields","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LuBolin"},"content":"            String userInput \u003d \"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LuBolin"},"content":"            switch (parts[0]) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LuBolin"},"content":"            case \"T\" -\u003e userInput \u003d \"todo \" + parts[2];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LuBolin"},"content":"            case \"D\" -\u003e userInput \u003d \"deadline \" + parts[2] + \" /by \" + parts[3];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LuBolin"},"content":"            case \"E\" -\u003e userInput \u003d \"event \" + parts[2] + \" /from \" + parts[3] + \" /to \" + parts[4];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LuBolin"},"content":"            default -\u003e {continue;}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LuBolin"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LuBolin"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LuBolin"},"content":"                Command newCommand \u003d inputParser.parseUserInput(userInput);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LuBolin"},"content":"                // check if newCommand is a TaskCommand","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LuBolin"},"content":"                if (newCommand instanceof TodoCommand","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LuBolin"},"content":"                        || newCommand instanceof innkeeper.command.DeadlineCommand","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LuBolin"},"content":"                        || newCommand instanceof innkeeper.command.EventCommand) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LuBolin"},"content":"                    try{","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LuBolin"},"content":"                        newCommand.execute(taskList, storage, ui);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LuBolin"},"content":"                        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LuBolin"},"content":"                            int index \u003d taskList.getTasks().size() - 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LuBolin"},"content":"                            MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LuBolin"},"content":"                            markCommand \u003d (MarkCommand) markCommand.parse(\"mark \" + (index + 1));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LuBolin"},"content":"                            markCommand.execute(taskList, storage, ui);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LuBolin"},"content":"                        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LuBolin"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LuBolin"},"content":"                        // Ignore the task if it cannot be added","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LuBolin"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LuBolin"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LuBolin"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LuBolin"},"content":"                throw new IOException(\"Un-parse-able task found in save file.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LuBolin"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":125}},{"path":"src/main/java/innkeeper/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":" * Class in charge of storing tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"public class TaskList {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"    final int MAX_LIST_SIZE \u003d 100;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"    final List\u003cTask\u003e userTasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"        userTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"     * @throws ListFullException If the list is full.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"    public void addTask(Task newTask) throws ListFullException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"        if (userTasks.size() \u003e\u003d MAX_LIST_SIZE) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"            String message \u003d \"My notebook is full! I can\u0027t add any more notes.\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"                    \"My old brain can only remember up to \" + MAX_LIST_SIZE + \" tasks.\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"            throw new ListFullException(message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"        userTasks.add(newTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LuBolin"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LuBolin"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LuBolin"},"content":"    public void deleteTask(int index){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LuBolin"},"content":"        Task removedTask \u003d userTasks.remove(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LuBolin"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LuBolin"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LuBolin"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LuBolin"},"content":"        return userTasks.size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LuBolin"},"content":"     * Gets a task from the list of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LuBolin"},"content":"     * @param index The index of the task to get.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LuBolin"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LuBolin"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LuBolin"},"content":"        return userTasks.get(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LuBolin"},"content":"     * Gets all the tasks in the list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LuBolin"},"content":"     * @return A list of all the tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LuBolin"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LuBolin"},"content":"        return new ArrayList\u003c\u003e(userTasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LuBolin"},"content":"     * Custom exception for when the list is full.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LuBolin"},"content":"    public static class ListFullException extends Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LuBolin"},"content":"        public ListFullException(String message) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LuBolin"},"content":"            super(message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":84}},{"path":"src/main/java/innkeeper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":" * Class in charge of handling user interface.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":" * It prints messages to the user and reads user input.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"public class Ui {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"    private final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"    private boolean isInitialized \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"     * Prints the greetings message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"    public void printGreetings() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"        // Generated with https://patorjk.com/software/taag/","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"        // Font: \"Big\" (The font is called \"Big\" on the website)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"        // Name: InnKeeper","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"                 _____             _  __","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"                |_   _|           | |/ /                        \\s","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"                  | |  _ __  _ __ | \u0027 / ___  ___ _ __   ___ _ __\\s","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"                  | | | \u0027_ \\\\| \u0027_ \\\\|  \u003c / _ \\\\/ _ \\\\ \u0027_ \\\\ / _ \\\\ \u0027__|","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"                 _| |_| | | | | | | . \\\\  __/  __/ |_) |  __/ |  \\s","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"                |_____|_| |_|_| |_|_|\\\\_\\\\___|\\\\___| .__/ \\\\___|_|  \\s","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"                                                | |             \\s","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"                                                |_|             \\s","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"                \"\"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"        System.out.println(\"Greetings! I\u0027m the InnKeeper.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"        System.out.println(\"I can keep track of things for you.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LuBolin"},"content":"     * Prints the farewell message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LuBolin"},"content":"    public void printFarewell() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LuBolin"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LuBolin"},"content":"        System.out.println(\"Farewell, traveller!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LuBolin"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LuBolin"},"content":"     * Prints a line separator.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LuBolin"},"content":"    public void printLine(){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LuBolin"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LuBolin"},"content":"     * Prints a message to the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LuBolin"},"content":"     * @param message The message to print.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LuBolin"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LuBolin"},"content":"        if (!isInitialized){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LuBolin"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LuBolin"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LuBolin"},"content":"        System.out.println(message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LuBolin"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LuBolin"},"content":"     * Reads the user input.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LuBolin"},"content":"     * @return The user input.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LuBolin"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LuBolin"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LuBolin"},"content":"        try{","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LuBolin"},"content":"            return scanner.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LuBolin"},"content":"        } catch (NoSuchElementException | IllegalStateException e){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LuBolin"},"content":"            return \"bye\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LuBolin"},"content":"     * Sets the Ui as initialized.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LuBolin"},"content":"     * This is useful when the Ui is used before the greetings message is printed.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LuBolin"},"content":"     * Such as when we are loading tasks from a file using commands.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LuBolin"},"content":"    public void setInitialized(){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LuBolin"},"content":"        isInitialized \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":91}},{"path":"src/main/java/innkeeper/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"    public TerminationType execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"        ui.printFarewell();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"        storage.writeTasksToFile(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"        return TerminationType.TERMINATE;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"    public Command parse(String input) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"        return this;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":22}},{"path":"src/main/java/innkeeper/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":" * Abstract class for all commands.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":" * Represents a command that can be executed by the user.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"    public enum TerminationType {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"        TERMINATE,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"        CONTINUE","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"     * Executes the command","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"     * @param ui The ui object","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"     * @param storage The storage object","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"     * @return TerminationType Whether the command is a termination command","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"     * @throws Exception If an error occurs during execution","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"    abstract public TerminationType execute(TaskList tasks, Storage storage, Ui ui) throws Exception;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"     * Parses the input string and returns the corresponding Command object","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"     * @param input The input string","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"     * @return Command A Command object","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"     * @throws Exception If the input string is invalid","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"    abstract public Command parse(String input) throws Exception;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":37}},{"path":"src/main/java/innkeeper/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.DeadlineTask;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"    private DeadlineTask task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"    public TerminationType execute(TaskList tasks, Storage storage, Ui ui) throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"            + task + \"\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"            + \"Now you have \" + tasks.getTaskCount() + \" tasks in the list.\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"        ui.printMessage(message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"        return TerminationType.CONTINUE;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"    public Command parse(String input) throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"        String[] tokens \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"        if (tokens.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"            if (tokens[1].contains(\" /by \")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"                String[] params \u003d tokens[1].split(\" /by \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"                if (params.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"                    // description, deadline","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"                    task \u003d new DeadlineTask(params[0], params[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"                    return this;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LuBolin"},"content":"        String exceptionMessage \u003d \"Usage: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\n\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LuBolin"},"content":"        exceptionMessage +\u003d \"Input dates in \" + Task.INPUT_DATE_FORMAT + \" to be parsed for better display.\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LuBolin"},"content":"        throw new Exception(exceptionMessage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":43}},{"path":"src/main/java/innkeeper/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"    private int index;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"    public TerminationType execute(TaskList tasks, Storage storage, Ui ui) throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"        if (index \u003c 0 || tasks.getTaskCount() \u003c\u003d index){","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"            throw new IndexOutOfBoundsException(\"There are only \" + tasks.getTaskCount() + \" tasks in the list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"        Task taskToDelete \u003d tasks.getTask(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"            + taskToDelete + \"\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"            + \"Now you have \" + tasks.getTaskCount() + \" tasks in the list.\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"        ui.printMessage(message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"        return TerminationType.CONTINUE;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"    public Command parse(String input) throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"        String[] tokens \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"            throw new Exception(\"Usage: delete \u003cindex\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"        index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"        return this;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":37}},{"path":"src/main/java/innkeeper/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.DeadlineTask;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.EventTask;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"    private EventTask task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"    public TerminationType execute(TaskList tasks, Storage storage, Ui ui) throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"                + task + \"\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"                + \"Now you have \" + tasks.getTaskCount() + \" tasks in the list.\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"        ui.printMessage(message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"        return TerminationType.CONTINUE;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"    public Command parse(String input) throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"        String[] tokens \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"        if (tokens.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"            if (tokens[1].contains(\" /from \")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"                String[] front \u003d tokens[1].split(\" /from \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"                if (front.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"                    String[] back \u003d front[1].split(\" /to \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"                    if (back.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"                        // description, start, end","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"                        task \u003d new EventTask(front[0], back[0], back[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"                        return this;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LuBolin"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LuBolin"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LuBolin"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LuBolin"},"content":"        String exceptionMessage \u003d \"Usage: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\\n\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LuBolin"},"content":"        exceptionMessage +\u003d \"Input dates in \" + Task.INPUT_DATE_FORMAT + \" to be parsed for better display.\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LuBolin"},"content":"        throw new Exception(exceptionMessage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":47}},{"path":"src/main/java/innkeeper/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"import java.util.List;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":" * Represents a command to find tasks that contain a keyword.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"    private String keyword;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"    public TerminationType execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"        List\u003cTask\u003e userTasks \u003d tasks.getTasks();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"        boolean found \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"        for (int i \u003d 0; i \u003c userTasks .size(); i++) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"            if (userTasks.get(i).toString().contains(keyword)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"                found \u003d true;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"                output.append((i + 1)).append(\". \").append(userTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"        if (!found) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"            output \u003d new StringBuilder(\"There are no tasks in the list that match the keyword.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"        ui.printMessage(output.toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"        return TerminationType.CONTINUE;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"    public Command parse(String input) throws Exception {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"        String[] tokens \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LuBolin"},"content":"            throw new Exception(\"Usage: find \u003ckeyword\u003e\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LuBolin"},"content":"        keyword \u003d tokens[1];","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LuBolin"},"content":"        return this;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"LuBolin":43}},{"path":"src/main/java/innkeeper/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"    public TerminationType execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"        if (tasks.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"            ui.printMessage(\"There are no tasks in the list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"            return TerminationType.CONTINUE;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"        List\u003cTask\u003e userTasks \u003d tasks.getTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"        for (int i \u003d 0; i \u003c userTasks .size(); i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"            output.append((i + 1)).append(\". \").append(userTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"        ui.printMessage(output.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"        return TerminationType.CONTINUE;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"    public Command parse(String input) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"        return this;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":34}},{"path":"src/main/java/innkeeper/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"    private int index;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"    public TerminationType execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"        if (index \u003c 0 || tasks.getTaskCount() \u003c\u003d index){","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"            throw new IndexOutOfBoundsException(\"There is no task at index \" + (index + 1) + \".\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"        task.setDone(true);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"        ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\" + tasks.getTask(index));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"        return TerminationType.CONTINUE;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"    public Command parse(String input) throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"        String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"            throw new Exception(\"Usage: mark \u003cindex\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"        index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"        return this;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":34}},{"path":"src/main/java/innkeeper/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.TodoTask;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"    private TodoTask task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"    public TerminationType execute(TaskList tasks, Storage storage, Ui ui) throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"            + task + \"\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"            + \"Now you have \" + tasks.getTaskCount() + \" tasks in the list.\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"        ui.printMessage(message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"        return TerminationType.CONTINUE;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"    public Command parse(String input) throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"        String[] tokens \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"            throw new Exception(\"Usage: todo \u003cdescription\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"        task \u003d new TodoTask(tokens[1]);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"        return this;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":34}},{"path":"src/main/java/innkeeper/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"    private int index;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"    public TerminationType execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"        if (index \u003c 0 || tasks.getTaskCount() \u003c\u003d index){","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"            throw new IndexOutOfBoundsException(\"There is no task at index \" + (index + 1) + \".\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"        task.setDone(false);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"        ui.printMessage(\"Ahh, I see. I\u0027ve unmarked this task as not done:\\n\" + tasks.getTask(index));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"        return TerminationType.CONTINUE;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"    public Command parse(String input) throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"        String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"            throw new Exception(\"Usage: unmark \u003cindex\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"        index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"        return this;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":34}},{"path":"src/main/java/innkeeper/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"    private String deadlineString;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"    private LocalDate deadlineLocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"     * Constructor for DeadlineTask.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"     * @param name Name / Description of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"     * @param deadline Deadline of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"    public DeadlineTask(String name, String deadline) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"        super(name, Task.TASK_TYPE.DEADLINE);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"        this.deadlineString \u003d deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"            this.deadlineLocalDate \u003d LocalDate.parse(deadline, INPUT_DATE_PARSER);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"            this.deadlineLocalDate \u003d null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"        String defaultString \u003d super.toString();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"        String deadlineFormattedString;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"        if (deadlineLocalDate !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"            deadlineFormattedString \u003d \"(by: \" + deadlineLocalDate.format(Task.OUTPUT_DATE_FORMATTER) + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"            deadlineFormattedString \u003d \"(by: \" + deadlineString + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LuBolin"},"content":"        return defaultString + \" \" + deadlineFormattedString;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LuBolin"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LuBolin"},"content":"        String[] informationArray \u003d new String[1];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LuBolin"},"content":"        if (deadlineLocalDate !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LuBolin"},"content":"            informationArray[0] \u003d deadlineLocalDate.toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LuBolin"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LuBolin"},"content":"            informationArray[0] \u003d deadlineString;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LuBolin"},"content":"        return super.toFileString(informationArray);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"LuBolin":51}},{"path":"src/main/java/innkeeper/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":" * Represents a task that is an event.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"    private String startDateString;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"    private String endDateString;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"    private LocalDate startDateLocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"    private LocalDate endDateLocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"     * Constructor for EventTask.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"     * @param name Name / Description of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"     * @param startDatetime Start date and time of the event.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"     * @param endDatetime End date and time of the event.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"    public EventTask(String name, String startDatetime, String endDatetime) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"        super(name, Task.TASK_TYPE.EVENT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"        this.startDateString \u003d startDatetime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"        this.endDateString \u003d endDatetime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"            this.startDateLocalDate \u003d LocalDate.parse(startDatetime, INPUT_DATE_PARSER);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"            this.startDateLocalDate \u003d null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"            this.endDateLocalDate \u003d LocalDate.parse(endDatetime, INPUT_DATE_PARSER);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"            this.endDateLocalDate \u003d null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LuBolin"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LuBolin"},"content":"        String defaultString \u003d super.toString();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LuBolin"},"content":"        String startDateFormattedString;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LuBolin"},"content":"        String endDateFormattedString;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LuBolin"},"content":"        if (startDateLocalDate !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LuBolin"},"content":"            startDateFormattedString \u003d startDateLocalDate.format(Task.OUTPUT_DATE_FORMATTER);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LuBolin"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LuBolin"},"content":"            startDateFormattedString \u003d startDateString;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LuBolin"},"content":"        if (endDateLocalDate !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LuBolin"},"content":"            endDateFormattedString \u003d endDateLocalDate.format(Task.OUTPUT_DATE_FORMATTER);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LuBolin"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LuBolin"},"content":"            endDateFormattedString \u003d endDateString;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LuBolin"},"content":"        String datetimeString \u003d \"(from: \" + startDateFormattedString + \" to: \" + endDateFormattedString + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LuBolin"},"content":"        return defaultString + \" \" + datetimeString;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LuBolin"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LuBolin"},"content":"        String[] informationArray \u003d new String[2];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LuBolin"},"content":"        if (startDateLocalDate !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LuBolin"},"content":"            informationArray[0] \u003d startDateLocalDate.toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LuBolin"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LuBolin"},"content":"            informationArray[0] \u003d startDateString;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LuBolin"},"content":"        if (endDateLocalDate !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LuBolin"},"content":"            informationArray[1] \u003d endDateLocalDate.toString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LuBolin"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LuBolin"},"content":"            informationArray[1] \u003d endDateString;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LuBolin"},"content":"        return super.toFileString(informationArray);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"LuBolin":71}},{"path":"src/main/java/innkeeper/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":" * Abstract class for tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"    public enum TASK_TYPE {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"    // MM is month, mm is minute","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"    public static final String INPUT_DATE_FORMAT \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"    static final DateTimeFormatter OUTPUT_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"    static final DateTimeFormatter INPUT_DATE_PARSER \u003d DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"    String name;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"    boolean isDone;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"    TASK_TYPE type;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"     * Constructor for Task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"     * @param name The name / description of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"     * @param type The type of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"    public Task(String name, TASK_TYPE type) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"     * Sets if the task is done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"     * @param isDone The boolean value to set if the task is done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LuBolin"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LuBolin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LuBolin"},"content":"     * Formats the task as a string of the desired format.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LuBolin"},"content":"     * @return The formatted string.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LuBolin"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LuBolin"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LuBolin"},"content":"        String typeString \u003d \"[\" + type.name().charAt(0) + \"]\";","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LuBolin"},"content":"        String doneString \u003d \"[\" + (isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LuBolin"},"content":"        String nameString \u003d name;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LuBolin"},"content":"        return typeString + doneString + \" \" + nameString;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LuBolin"},"content":"     * Formats the task as a string to be written to a file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LuBolin"},"content":"     * @return The formatted string.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LuBolin"},"content":"    public String toFileString(String[] information) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LuBolin"},"content":"        String typeString \u003d (type.name().charAt(0) + \"\").toUpperCase();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LuBolin"},"content":"        String doneString \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LuBolin"},"content":"        String nameString \u003d name;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LuBolin"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LuBolin"},"content":"        sb.append(typeString).append(\" | \").append(doneString).append(\" | \").append(nameString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LuBolin"},"content":"        for (String info : information) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LuBolin"},"content":"            sb.append(\" | \").append(info);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LuBolin"},"content":"        return sb.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LuBolin"},"content":"     * Formats the task as a string to be written to a file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LuBolin"},"content":"     * Used when there is no additional parameters.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LuBolin"},"content":"     * Overloads the toFileString(String[] information) method.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LuBolin"},"content":"     * @return The formatted string.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LuBolin"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LuBolin"},"content":"        return toFileString(new String[0]);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"LuBolin":83}},{"path":"src/main/java/innkeeper/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":" * Represents a task that has to be done.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"     * Constructor for TodoTask.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"     * @param name Name / Description of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"    public TodoTask(String name) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"        super(name, TASK_TYPE.TODO);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"LuBolin":15}},{"path":"src/test/java/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.DeadlineTask;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"    public void parameterParseTest(){","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"        // test if the parameters are parsed correctly","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"        try{","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"            deadlineCommand \u003d (DeadlineCommand) deadlineCommand.parse(\"deadline return book /by 2021-09-30\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"            String expectedToString \u003d \"[D][ ] return book (by: Sep 30 2021)\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"            Storage storage \u003d new Storage(\"data/tasks.txt\", null);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"            deadlineCommand.execute(tasks, storage, ui);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"            DeadlineTask deadlineTask \u003d (DeadlineTask) tasks.getTask(0);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"            assertEquals(\"[D][ ] return book (by: Sep 30 2021)\", deadlineTask.toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"        } catch (Exception e){","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"LuBolin":30}},{"path":"src/test/java/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"package innkeeper.command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"import innkeeper.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"import innkeeper.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"import innkeeper.task.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"public class MarkCommandTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LuBolin"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LuBolin"},"content":"    public void parameterParseTest(){","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LuBolin"},"content":"        // test if the parameters are parsed correctly","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LuBolin"},"content":"        MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LuBolin"},"content":"        try{","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LuBolin"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"            Storage storage \u003d new Storage(\"data/tasks.txt\", null);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LuBolin"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LuBolin"},"content":"            tasks.addTask(new innkeeper.task.DeadlineTask(\"return book\", \"2021-09-30\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"            markCommand \u003d (MarkCommand) markCommand.parse(\"mark 1\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LuBolin"},"content":"            try{","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LuBolin"},"content":"                markCommand.execute(tasks, storage, ui);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LuBolin"},"content":"                assertEquals(true, true);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LuBolin"},"content":"            } catch (Exception e){","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LuBolin"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LuBolin"},"content":"            markCommand \u003d (MarkCommand) markCommand.parse(\"mark 2\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LuBolin"},"content":"            try{","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LuBolin"},"content":"                markCommand.execute(tasks, storage, ui);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LuBolin"},"content":"                assertEquals(true, false);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LuBolin"},"content":"            } catch (Exception e){","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LuBolin"},"content":"                assertEquals(\"There is no task at index 2.\", e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LuBolin"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LuBolin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LuBolin"},"content":"            //Index 1 out of bounds for length 1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LuBolin"},"content":"        } catch (Exception e){","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LuBolin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LuBolin"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LuBolin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LuBolin"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"LuBolin":43}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"T | 0 | arbituary task 1","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"T | 0 | arbituary task 1","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"T | 0 | arbituary task 1","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"T | 0 | arbituary task 1","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"T | 0 | arbituary task 1","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"T | 0 | arbituary task 1","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"T | 0 | arbituary task 1","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"T | 0 | arbituary task 1","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"LuBolin":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LuBolin"},"content":"todo arbituary task 1","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LuBolin"},"content":"deadline arbituary task 2 /by 2021-08-25","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LuBolin"},"content":"list","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"mark 1","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"event arbituary task 3 /from 2021-08-25 /to 2021-08-26","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LuBolin"},"content":"nonexistent command","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LuBolin"},"content":"deadline that fails by 2021-08-25","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LuBolin"},"content":"list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LuBolin"},"content":"delete 1","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LuBolin"},"content":"list","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"bye","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"LuBolin":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LuBolin"},"content":"if exist ..\\bin rmdir /s /q ..\\bin","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LuBolin"},"content":"mkdir ..\\bin","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LuBolin"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\innkeeper\\*.java","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LuBolin"},"content":"java -classpath ..\\bin innkeeper.InnKeeper \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"LuBolin":4,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LuBolin"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/innkeeper/InnKeeper.java","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LuBolin"},"content":"java -classpath ../bin InnKeeper \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"LuBolin":2,"-":36}}]
