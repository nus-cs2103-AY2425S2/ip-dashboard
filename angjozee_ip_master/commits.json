{"authorDailyContributionsMap":{"angjozee":[{"date":"2025-01-20T00:00:00","commitResults":[{"hash":"a1b05b47c20f391e064ba7d18b59bfc96e2a9b17","isMergeCommit":false,"messageTitle":"Rename Duke to Plato and implement custom chatbot greeting","messageBody":"- Replaced the `Duke` chatbot with a new chatbot named `Plato`.\n- Updated the greeting and farewell messages to align with Plato\u0027s unique personality.\n- Removed the Duke ASCII logo and all references to Duke.\n- Updated horizontal lines\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":10}}},{"hash":"4ec88874afc913e1f49f8d0f2460a6bd06ef0881","isMergeCommit":false,"messageTitle":"Add Echo functionality to Plato","messageBody":"- Implemented functionality to echo user commands\n- Exit condition updated to recognise \"Farewell\" as the termination command\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}}]},{"date":"2025-01-21T00:00:00","commitResults":[{"hash":"f8155baa18ec4e4411a946e0b8b19dc532315205","isMergeCommit":false,"messageTitle":"Add task storage and listing functionality to Plato chatbot","messageBody":"- Implemented the ability to store user-entered tasks in memory\n- Added functionality to display all stored tasks using the \"tasks?\" command.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":3}}},{"hash":"69c928e1d2b3ae4ad30c4b3fe30fbcf0dce1dd0a","isMergeCommit":false,"messageTitle":"Add mark and unmark functionality to Plato chatbot","messageBody":"- Implemented \u0027mark \u003cindex\u003e\u0027 command to mark tasks as done.\n- Implemented \u0027unmark \u003cindex\u003e\u0027 command to mark tasks as not done.\n- Enhanced tasks? command to display tasks with status icons ([X] for done, [ ] for not done).\n- Introduced \u0027Task\u0027 class to represent tasks with properties:\n  - \u0027description\u0027: Task details.\n  - \u0027isDone\u0027: Completion status.\n  - Methods: \u0027markAsDone()\u0027, \u0027markAsNotDone()\u0027, \u0027getStatusIcon()\u0027.\n","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":7}}}]},{"date":"2025-01-23T00:00:00","commitResults":[{"hash":"769536afaaed9a98a00073ddbea6e0b21325f398","isMergeCommit":false,"messageTitle":"Add Task Management Features with Event, Deadline, and ToDo Classes","messageBody":"- Implemented \u0027Event\u0027, \u0027Deadline\u0027, and \u0027Task\u0027 classes with inheritance.\n- Enhanced user interaction with task-specific commands (\u0027deadline\u0027, \u0027todo\u0027, \u0027event\u0027).\n","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":86,"deletions":19}}}]},{"date":"2025-01-24T00:00:00","commitResults":[{"hash":"99b2bc1b7b01ce1399e398640bee43a7df3916b4","isMergeCommit":false,"messageTitle":"Add input/output redirection and test cases for task management","messageBody":"- Implemented functionality to read user input from input.txt.\n- Redirected program output to actual.txt for testing.\n- Added test cases for ToDo, Deadline, and Event tasks.\n- Prepared expected.txt to validate program output against expected results.\n- Fixed typos and whitespace issues\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":1,"deletions":1}}},{"hash":"c59e36ad9042588b0a1dec9b1cf6d45347fbed09","isMergeCommit":false,"messageTitle":"Add input validation and error handling for task commands","messageBody":"- Implemented validation for todo, deadline, and event commands to ensure non-empty descriptions and proper formatting.\n- Added range checks for mark and unmark commands to handle invalid or out-of-range task numbers.\n- Introduced user-friendly error messages for incorrect inputs using PlatoException.\n- Added handling for unknown commands with descriptive error messages.\n- Updated continue statements to ensure proper flow control after handling each command.\n","tags":["Level-5","A-Exception"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":5},"java":{"insertions":105,"deletions":58}}},{"hash":"8a8535ed0ecec9fc3d5e0838e3b6c18a17eead52","isMergeCommit":false,"messageTitle":"Add delete command to remove tasks from the list","messageBody":"- Implemented delete command to remove tasks by index.\n- Validated task indices to handle out-of-range and non-integer inputs.\n- Updated task list dynamically using ArrayList\u003cTask\u003e.\n- Printed details of the removed task and updated task count.\n","tags":["Level-6","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":2}}},{"hash":"040e3255f0d450ee54cb9b14a446ab27c9d63a8e","isMergeCommit":false,"messageTitle":"Refactor code to use TaskType enum for task types","messageBody":"- Added a TaskType enum to represent task types (TODO, DEADLINE, EVENT).\n- Updated the Task class to include a TaskType field for better structure and type safety.\n- Refactored ToDo, Deadline, and Event classes to use TaskType.\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":12}}}]},{"date":"2025-01-30T00:00:00","commitResults":[{"hash":"e35ec22138b12e1ec86243cde0c757aea0fafd50","isMergeCommit":false,"messageTitle":"Add storage for tasks","messageBody":"- Ensure tasks are saved after every addition, modification, or deletion\n- Handle file creation during loading\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":105,"deletions":1}}},{"hash":"47ba1b3c2930bfadd4a4a162267fbecdbc7eee8b","isMergeCommit":false,"messageTitle":"Add date and time handling for deadlines and events","messageBody":"- Store deadlines and events using java.time.LocalDateTime for proper date/time parsing\n- Accept user input in the format yyyy-MM-dd HHmm (e.g., 2019-12-02 1800)\n- Format output dates as MMM dd yyyy, h:mm a (e.g., Dec 02 2019, 6:00 PM)\n- Update file storage to save and load dates using proper formats\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":10}}}]},{"date":"2025-02-03T00:00:00","commitResults":[{"hash":"5a6b3788715797aef1869fe6276f0b42e6e3a397","isMergeCommit":false,"messageTitle":"Improve code structure with OOP design and command-based architecture","messageBody":"- Extract task-related logic into individual `Command` classes for maintainability\n  - AddCommand: Handles adding ToDo, Deadline, and Event tasks\n  - MarkCommand: Handles marking and unmarking tasks\n  - DeleteCommand: Handles task deletion\n  - ListCommand: Displays the list of tasks\n  - ExitCommand: Exits the program\n- Introduce an abstract `Command` class to encapsulate command execution logic\n- Refactor core logic into `TaskList`, `Storage`, and `Ui` classes to improve modularity\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":324,"deletions":141}}},{"hash":"1a2706e7c7a1a55204875c1a72cb5da230bbea50","isMergeCommit":false,"messageTitle":"Organise project into packages for better modularity","messageBody":"- Create packages: command, exception, model, parser, storage, ui, and utils\n- Move related classes into corresponding packages:\n  - Command classes to command package (AddCommand, DeleteCommand, etc.)\n  - Task-related classes to model package (Task, ToDo, Deadline, Event)\n  - Parser and exception handling classes to parser and exception packages\n  - Storage-related classes to storage package (Storage, PlatoFileWriter)\n  - User interaction classes to ui package (Ui)\n- Update package declarations and imports across all files\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":87,"deletions":10}}},{"hash":"14cf663dc249885b6084ed0750b99743ae556fb8","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-11T00:00:00","commitResults":[{"hash":"320fa8071c3d9f257c2934f7cdd6f06b122d0cc9","isMergeCommit":false,"messageTitle":"Add JUnit tests for AddCommand and Command classes","messageBody":"- Added unit tests for AddCommand to validate ToDo, Deadline, and Event task creation.\n- Included tests for valid and invalid date formats and proper exception handling.\n- Added tests for Command class behaviour using mock implementations.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":750,"deletions":2}}}]},{"date":"2025-02-17T00:00:00","commitResults":[{"hash":"8ef7d002eba47bb51deb3db379695b1b4957c738","isMergeCommit":false,"messageTitle":"Add Javadoc comments to Event class for improved documentation and clarity","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":4}}},{"hash":"a166e4ed5497c1313e598461cd0a0265536c5323","isMergeCommit":false,"messageTitle":"Add JavaDoc comments for ListCommand.java","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"d4a3352568fc7e0e7b729bb03ad4474054ffcc41","isMergeCommit":false,"messageTitle":"Add Javadoc comments for Parser and FindCommand classes to improve documentation and clarity","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":13}}},{"hash":"a82c4952aa898b59efd3a436c3150154ceaf612e","isMergeCommit":false,"messageTitle":"Fix packaging issues","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":5},"txt":{"insertions":1,"deletions":1},"java":{"insertions":24,"deletions":5}}},{"hash":"f0ad6e5f33e2118f801845f32fa9c129016138e3","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Jar\u0027","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-20T00:00:00","commitResults":[{"hash":"aab7f45544ec6451685bc129565f41a03bcd249d","isMergeCommit":false,"messageTitle":"Apply Checkstyle fixes and enforce coding standards","messageBody":"","tags":["A-Checkstyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":0},"txt":{"insertions":1,"deletions":0},"java":{"insertions":352,"deletions":57}}}]},{"date":"2025-02-24T00:00:00","commitResults":[{"hash":"cfd61268a6350627688125670986332ac71bfdd3","isMergeCommit":false,"messageTitle":"Fix event task parsing and file format","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":7},"txt":{"insertions":2,"deletions":1},"java":{"insertions":104,"deletions":91}}},{"hash":"d586ec588240e584bf851ca789dcce01dea9027b","isMergeCommit":false,"messageTitle":"Add FindCommand to search for tasks by keyword","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":0}}}]},{"date":"2025-02-25T00:00:00","commitResults":[{"hash":"508e2847ee0e0af8927f33ed945c681f517d8e24","isMergeCommit":false,"messageTitle":"Refactor Command execution to return responses \u0026 enable JavaFX exit on \"bye\"","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":1},"txt":{"insertions":2,"deletions":1},"fxml":{"insertions":66,"deletions":0},"java":{"insertions":202,"deletions":36}}},{"hash":"4041db9b33c162b2f302e0239400d3c58f285b3a","isMergeCommit":false,"messageTitle":"Plato, MainWindow: Add assertions to enforce assumptions","messageBody":"Some critical assumptions in the code were not explicitly checked,\nwhich could lead to unexpected runtime errors. For instance, user input\nand UI components were assumed to be initialized but were never\nvalidated.\n\nThis lack of validation could lead to `NullPointerException` or\nunexpected behavior if components were not properly set up.\n\nLet\u0027s add assertions in key areas to enforce these assumptions and\nimprove code robustness:\n\n- Ensure `filePath` in `Plato` constructor is non-null and non-empty\n- Validate that `tasks` and `command` are properly initialized\n- Assert `userInput`, `dialogContainer`, `scrollPane`, and `sendButton`\n  are initialized in `MainWindow`\n- Ensure that `getResponse` input and return values are not null\n\nThese assertions will help catch logical errors early in development\nwithout affecting production performance, as assertions can be disabled\nin runtime.\n","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":21}}},{"hash":"e5cfca0f441da70e213c5d47a994607a2518b0df","isMergeCommit":false,"messageTitle":"Add assertions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":9}}}]},{"date":"2025-02-27T00:00:00","commitResults":[{"hash":"9e5815e1b97c3578dc56570d97ddc8e931a3f065","isMergeCommit":false,"messageTitle":"Improve code quality","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":1},"java":{"insertions":399,"deletions":62}}},{"hash":"06605a142e2e00952740d6c64dc87fd7a7320c14","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Assertions\u0027","messageBody":"","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}}]},{"date":"2025-03-02T00:00:00","commitResults":[{"hash":"f4be24ccbb0c2f3030195fd5bf983d42abc62aa9","isMergeCommit":false,"messageTitle":"Fix priority parsing, storage, and display in tasks","messageBody":"Previously, task priorities were not correctly identified when adding a\ntask. If a priority (e.g., HIGH, MEDIUM, LOW) was provided, it was being\ntreated as part of the task description. Additionally, the priority\nwas stored incorrectly in tasks.txt for Deadline and Event tasks,\nleading to duplicate priority values in both file storage and display.\n\nThis commit implements the following fixes:\n\n- **Correctly parses priority levels** when adding tasks:\n  - Users can now specify priority at the end of their command.\n  - If no priority is provided, the task defaults to MEDIUM.\n  - Example: `todo Read book HIGH` correctly assigns HIGH priority.\n\n- **Fixes duplicate priority in tasks.txt**:\n  - `Deadline` and `Event` tasks previously appended an extra priority.\n  - Now, tasks are saved correctly:\n    - Before: `D ||   || sleep || MEDIUM || 2003-02-09 0012 || MEDIUM`\n    - After:  `D ||   || sleep || 2003-02-09 0012 || MEDIUM`\n\n- **Fixes duplicate priority in console output**:\n  - `toString()` for `Deadline` and `Event` was printing priority twice.\n  - Now, priority appears only once when displaying tasks.\n\n- **Refactored `AddCommand` to properly extract priority**:\n  - A helper method `isValidPriority()` ensures only valid priorities are parsed.\n  - Prevents cases where an invalid priority is mistaken for part of the description.\n","tags":["C-Priority","BCD-Extension","A-FullCommitMessage","A-Assertions"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":7},"java":{"insertions":139,"deletions":29}}},{"hash":"208af678851fc5cc01f3d55b6055a61af01fa511","isMergeCommit":false,"messageTitle":" Improve UI styling and update FXML layout","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"fxml":{"insertions":13,"deletions":38},"java":{"insertions":1,"deletions":0},"md":{"insertions":47,"deletions":13}}},{"hash":"ec5ceccc139c925676c9c44270968103ccae4ffa","isMergeCommit":false,"messageTitle":"Update README","messageBody":"","tags":["A-Release"],"fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"angjozee":{"java":2531,"md":47,"fxml":41,"sh":0,"bat":0,"gradle":37,"txt":23}},"authorContributionVariance":{"angjozee":27890.877},"authorDisplayNameMap":{"angjozee":"CS2103T-T14-2 ANG .. ZEE"}}
