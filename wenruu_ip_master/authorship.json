[{"path":"src/main/java/Botato.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wenruu"},"content":"import java.io.*;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wenruu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wenruu"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wenruu"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wenruu"},"content":"public class Botato {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wenruu"},"content":"        Scanner reader \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wenruu"},"content":"        String line \u003d \"---------------------------------------------------------------------------------------------------------------\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wenruu"},"content":"        String helloMessage \u003d \"Hello from BOTato!\\nWhat can I do for you?\\n\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wenruu"},"content":"        System.out.println(line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wenruu"},"content":"        ArrayList\u003cTask\u003e tasks \u003d loadData();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wenruu"},"content":"        System.out.println(helloMessage + line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wenruu"},"content":"        int terminate \u003d 0;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wenruu"},"content":"        while (terminate !\u003d 1) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wenruu"},"content":"            // Keeps reading commands until \"bye\" is typed","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wenruu"},"content":"            String cmd \u003d reader.nextLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wenruu"},"content":"            if (cmd.equals(\"bye\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wenruu"},"content":"                // Save data and exit chatbot","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wenruu"},"content":"                System.out.println(line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wenruu"},"content":"                writeData(tasks);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wenruu"},"content":"                System.out.println(\"Hope I helped! See you again!\\n\" + line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wenruu"},"content":"                terminate \u003d 1;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wenruu"},"content":"            } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wenruu"},"content":"                // Display list of tasks","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wenruu"},"content":"                System.out.println(line + \"\\nHere are your current tasks:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wenruu"},"content":"                IntStream.range(0, tasks.size())","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wenruu"},"content":"                        .forEach(i -\u003e System.out.println((i + 1) + \".\" + tasks.get(i)));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wenruu"},"content":"                System.out.println(line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wenruu"},"content":"            } else if (cmd.startsWith(\"mark \")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wenruu"},"content":"                // Mark specific task as completed","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wenruu"},"content":"                if (cmd.substring(4).isBlank()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nPlease choose the task you completed! You have \" + tasks.size() +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wenruu"},"content":"                            \" tasks!\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wenruu"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wenruu"},"content":"                String taskStr \u003d cmd.substring(4).strip(); // extract desired task index","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wenruu"},"content":"                if (taskStr.matches(\"-?\\\\d+\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wenruu"},"content":"                    // Validate that taskStr is an integer","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wenruu"},"content":"                    int taskNum \u003d Integer.parseInt(taskStr);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wenruu"},"content":"                    if (taskNum \u003e tasks.size()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wenruu"},"content":"                        System.out.println(line + (tasks.isEmpty() ? \"\\nYou have no tasks!\\n\" :","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wenruu"},"content":"                                \"\\nYou only have \" + tasks.size() + \" task(s)!\\n\") + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wenruu"},"content":"                        continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wenruu"},"content":"                    } else if (taskNum \u003c\u003d 0){","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wenruu"},"content":"                        System.out.println(line + \"\\nTask number cannot be less than 1!\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wenruu"},"content":"                        continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wenruu"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wenruu"},"content":"                    tasks.get(taskNum - 1).isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nGood job! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wenruu"},"content":"                            + tasks.get(taskNum - 1) + \"\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wenruu"},"content":"                } else { // if taskStr is not an integer","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nPlease choose a value between 1 and \" + tasks.size() +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wenruu"},"content":"                            \" to mark as done!\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wenruu"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wenruu"},"content":"            } else if (cmd.startsWith(\"unmark \")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wenruu"},"content":"                // Mark specified task as not done","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wenruu"},"content":"                if (cmd.substring(6).isBlank()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nPlease choose the task you completed! You have \" + tasks.size() +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wenruu"},"content":"                            \" task(s)!\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wenruu"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wenruu"},"content":"                String taskStr \u003d cmd.substring(6).strip(); // extract desired task index","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wenruu"},"content":"                if (taskStr.matches(\"-?\\\\d+\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wenruu"},"content":"                    // Validate that taskStr is an integer","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wenruu"},"content":"                    int taskNum \u003d Integer.parseInt(taskStr);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wenruu"},"content":"                    if (taskNum \u003e tasks.size()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wenruu"},"content":"                        System.out.println(line + (tasks.isEmpty() ? \"\\nYou have no tasks!\\n\" :","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wenruu"},"content":"                                \"\\nYou only have \" + tasks.size() + \" task(s)!\\n\") + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wenruu"},"content":"                        continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wenruu"},"content":"                    } else if (taskNum \u003c\u003d 0) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wenruu"},"content":"                        System.out.println(line + \"\\nTask number cannot be less than 1!\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wenruu"},"content":"                        continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wenruu"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wenruu"},"content":"                    tasks.get(taskNum - 1).isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nAww... Guess you didn\u0027t do this after all:\\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wenruu"},"content":"                            + tasks.get(taskNum - 1) + \"\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wenruu"},"content":"                } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wenruu"},"content":"                    // Handle invalid cases","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nPlease choose a value between 1 and \" + tasks.size() +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wenruu"},"content":"                            \" to mark as not done!\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wenruu"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wenruu"},"content":"            } else if (cmd.startsWith(\"todo \")){","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wenruu"},"content":"                // Add a Task of type Todo to tasks","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wenruu"},"content":"                Task task \u003d new Todo(cmd);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wenruu"},"content":"                if (task.description.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nPlease add a description for your task!\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wenruu"},"content":"                    continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wenruu"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wenruu"},"content":"                tasks.add(task);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wenruu"},"content":"                System.out.println(line + \"\\nAdded:\\n\" + task + \"\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wenruu"},"content":"            } else if (cmd.startsWith(\"deadline\")){","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wenruu"},"content":"                // Add a Task of type Deadline to tasks","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wenruu"},"content":"                if (cmd.contains(\"/by\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wenruu"},"content":"                    Deadline task \u003d new Deadline(cmd);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wenruu"},"content":"                    if (task.description.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wenruu"},"content":"                        System.out.println(line + \"\\nPlease add a description to your task!\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wenruu"},"content":"                        continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wenruu"},"content":"                    } else if (task.by \u003d\u003d null) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wenruu"},"content":"                        System.out.println(line + \"\\nPlease add a deadline in a valid format!\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wenruu"},"content":"                                + \"Type \u0027dateformats\u0027 to get a full list of supported formats.\\n\" + line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wenruu"},"content":"                        continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wenruu"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wenruu"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nAdded:\\n\" + task + \"\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wenruu"},"content":"                } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nMake sure your \u0027deadline\u0027 command contains \u0027/by\u0027 to indicate your \" +","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wenruu"},"content":"                            \"deadline!\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wenruu"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wenruu"},"content":"            } else if (cmd.startsWith(\"event \")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wenruu"},"content":"                // Add a Task of type Event to tasks","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wenruu"},"content":"                if (cmd.contains(\"/to\") \u0026\u0026 cmd.contains((\"/from\"))) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wenruu"},"content":"                    Event task \u003d new Event(cmd);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wenruu"},"content":"                    if (task.description.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wenruu"},"content":"                        System.out.println(line + \"\\nPlease add a description to your task!\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wenruu"},"content":"                        continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wenruu"},"content":"                    } else if (task.from \u003d\u003d null) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wenruu"},"content":"                        System.out.println(line + \"\\nPlease add a starting date in a valid format!\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wenruu"},"content":"                                + \"Type \u0027dateformats\u0027 to get a full list of supported formats.\\n\" + line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wenruu"},"content":"                        continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wenruu"},"content":"                    } else if (task.to \u003d\u003d null) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wenruu"},"content":"                        System.out.println(line + \"\\nPlease add an ending date in a valid format!\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wenruu"},"content":"                                + \"Type \u0027dateformats\u0027 to get a full list of supported formats.\\n\" + line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wenruu"},"content":"                        continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wenruu"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"wenruu"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nAdded:\\n\" + task + \"\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wenruu"},"content":"                } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nMake sure your \u0027event\u0027 command contains \u0027/from\u0027 and \u0027/to\u0027 to set \" ","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wenruu"},"content":"                            + \"your start and end dates!\\n\" + line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"wenruu"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"wenruu"},"content":"            } else if (cmd.startsWith(\"delete \")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"wenruu"},"content":"                // Delete a specified task based on task number given","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"wenruu"},"content":"                if (cmd.substring(6).strip().isBlank()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"wenruu"},"content":"                    // Handle no task number given","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nPlease choose a task you want to delete! You have \" + tasks.size() ","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"wenruu"},"content":"                            + \" tasks.\\n\" + line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"wenruu"},"content":"                    continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"wenruu"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"wenruu"},"content":"                String taskStr \u003d cmd.substring(6).strip();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"wenruu"},"content":"                // Extract desired task number","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"wenruu"},"content":"                if (taskStr.matches(\"-?\\\\d+\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"wenruu"},"content":"                    // Validate that taskStr is an integer","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"wenruu"},"content":"                    int taskNum \u003d Integer.parseInt(taskStr);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"wenruu"},"content":"                    // Convert to int","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"wenruu"},"content":"                    if (taskNum \u003e tasks.size()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"wenruu"},"content":"                        System.out.println(line + (tasks.isEmpty() ? \"\\nYou have no tasks!\\n\" ","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"wenruu"},"content":"                                : \"\\nYou only have \" + tasks.size() + \" task(s)!\\n\") + line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"wenruu"},"content":"                        continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"wenruu"},"content":"                    } else if (taskNum \u003c\u003d 0) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"wenruu"},"content":"                        // Handle invalid task numbers","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"wenruu"},"content":"                        System.out.println(line + \"\\nTask number cannot be less than 1!\\n\" + line);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"wenruu"},"content":"                        continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"wenruu"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"wenruu"},"content":"                    Task temp \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"wenruu"},"content":"                    tasks.remove(taskNum - 1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"wenruu"},"content":"                    System.out.println((line + \"\\nTask has been successfully removed:\\n\" + temp + \"\\n\" + line));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"wenruu"},"content":"                } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"wenruu"},"content":"                    System.out.println(line + \"\\nPlease choose a value between 1 and \" + tasks.size() ","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"wenruu"},"content":"                            + \" to delete!\\n\" + line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"wenruu"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"wenruu"},"content":"            } else if (cmd.equals(\"dateformats\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"wenruu"},"content":"                System.out.println(line + \"\\nSupported date formats include:\\n\" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"wenruu"},"content":"                        \"yyyy-MM-dd HH:mm:ss\\n\" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"wenruu"},"content":"                        \"yyyy-MM-dd HH:mm\\n\" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"wenruu"},"content":"                        \"yyyy-MM-dd\\n\" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"wenruu"},"content":"                        \"dd/MM/yyyy HH:mm:ss\\n\" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"wenruu"},"content":"                        \"dd/MM/yyyy HH:mm\\n\" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"wenruu"},"content":"                        \"dd/MM/yyyy\\n\" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"wenruu"},"content":"                        \"dd/MM/yy HH:mm:ss\\n\" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"wenruu"},"content":"                        \"dd/MM/yy HH:mm\\n\" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"wenruu"},"content":"                        \"dd/MM/yy\\n\" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"wenruu"},"content":"                        \"dd MMM yyyy HH:mm:ss\\n\" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"wenruu"},"content":"                        \"dd MMM yyyy HH:mm\\n\" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"wenruu"},"content":"                        \"dd MMM yyyy\\n\" + line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"wenruu"},"content":"            } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"wenruu"},"content":"                // Handle unknown commands","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"wenruu"},"content":"                System.out.println(line + \"\\nSorry, I don\u0027t know what that means... Here are the commands you can use:\" ","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"wenruu"},"content":"                        + \"\\n\u0027bye\u0027, \u0027list\u0027, \u0027mark \u0027, \u0027unmark \u0027, \u0027todo \u0027, \u0027deadline \u0027, \u0027event \u0027, \u0027delete \u0027, \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"wenruu"},"content":"                        + \"dateformats\\n\" + line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"wenruu"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"wenruu"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"wenruu"},"content":"     * Saves data to \u0027./data/data.txt\u0027.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"wenruu"},"content":"     * If \u0027./data/\u0027 does not exist, create it and save.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"wenruu"},"content":"     * @param data \u0027tasks\u0027 ArrayList","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"wenruu"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"wenruu"},"content":"    private static void writeData (ArrayList\u003cTask\u003e data)  {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"wenruu"},"content":"        // Check if data directory exists; if not, create it","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"wenruu"},"content":"        String directoryPath \u003d \"./data/\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"wenruu"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"wenruu"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"wenruu"},"content":"            directory.mkdirs();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"wenruu"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"wenruu"},"content":"        try (FileOutputStream fileOut \u003d new FileOutputStream(\"./data/data.txt\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"wenruu"},"content":"             ObjectOutputStream out \u003d new ObjectOutputStream(fileOut)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"wenruu"},"content":"            out.writeObject(data);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"wenruu"},"content":"            System.out.println(\"Data has been saved!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"wenruu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"wenruu"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"wenruu"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"wenruu"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"wenruu"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"wenruu"},"content":"     * Loads data from \u0027./data/data.txt\u0027.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"wenruu"},"content":"     * If file does not exist, return empty ArrayList instead.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"wenruu"},"content":"     * @return ArrayList containing tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"wenruu"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"wenruu"},"content":"    private static ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"wenruu"},"content":"        try (FileInputStream fileIn \u003d new FileInputStream(\"./data/data.txt\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"wenruu"},"content":"             ObjectInputStream in \u003d new ObjectInputStream(fileIn)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"wenruu"},"content":"            Object obj \u003d in.readObject();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"wenruu"},"content":"            if (obj instanceof ArrayList) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"wenruu"},"content":"                // Safe to cast to ArrayList\u003cTask\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"wenruu"},"content":"                @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"wenruu"},"content":"                ArrayList\u003cTask\u003e data \u003d (ArrayList\u003cTask\u003e) obj;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"wenruu"},"content":"                System.out.println(\"Data has been loaded!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"wenruu"},"content":"                return data;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"wenruu"},"content":"            } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"wenruu"},"content":"                System.out.println(\"Unexpected object type: \" + obj.getClass().getName());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"wenruu"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"wenruu"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"wenruu"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"wenruu"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"wenruu"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"wenruu":225,"-":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wenruu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wenruu"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wenruu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wenruu"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wenruu"},"content":" * Represents a Deadline task, which is a specific type of Task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wenruu"},"content":" * A Deadline task has a description and a deadline (stored in the {@code by} field).","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wenruu"},"content":" * This class extends the {@link Task} class and overrides the {@code toString()}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wenruu"},"content":" * method to provide a custom string representation of the task, including the deadline.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wenruu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wenruu"},"content":" * The description and deadline are extracted from the input command string.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wenruu"},"content":" * The description is the part of the command before the \"/by\" keyword, and the deadline","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wenruu"},"content":" * is the part after the \"/by\" keyword.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wenruu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wenruu"},"content":" * Example usage:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wenruu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wenruu"},"content":" * Deadline deadline \u003d new Deadline(\"deadline Submit report /by 2023-10-31\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wenruu"},"content":" * System.out.println(deadline); // Outputs: \"[ ] Deadline: Submit report (by: 2023-10-31)\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wenruu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wenruu"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wenruu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wenruu"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wenruu"},"content":"    public Deadline(String cmd) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wenruu"},"content":"        String dateStr \u003d cmd.substring(cmd.indexOf(\"/by\") + 3).strip();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wenruu"},"content":"        by \u003d parseDate(dateStr, LocalTime.of(23, 59));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wenruu"},"content":"        description \u003d cmd.substring(9, cmd.indexOf(\u0027/\u0027)).strip();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wenruu"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wenruu"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wenruu"},"content":"     * Overrides toString() method to print custom String","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wenruu"},"content":"     * @return String containing status, Deadline Task type, description and deadline","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wenruu"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wenruu"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wenruu"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wenruu"},"content":"        return String.format(\"[%s] Deadline: %s (by: %s)\", getStatusIcon(), description,","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wenruu"},"content":"                DateTimeFormatter.ofPattern(\"dd MMM yyy HH:mm\").format(by));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wenruu"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wenruu"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"wenruu":39}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wenruu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wenruu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wenruu"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wenruu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wenruu"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wenruu"},"content":" * Represents an Event task, which is a specific type of Task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wenruu"},"content":" * An Event task has a description, a start time (stored in the {@code from} field),","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wenruu"},"content":" * and an end time (stored in the {@code to} field).","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wenruu"},"content":" * This class extends the {@link Task} class and overrides the {@code toString()}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wenruu"},"content":" * method to provide a custom string representation of the task, including the start and end times.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wenruu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wenruu"},"content":" * The description, start time, and end time are extracted from the input command string.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wenruu"},"content":" * The description is the part of the command before the \"/from\" keyword, the start time","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wenruu"},"content":" * is the part between the \"/from\" and \"/to\" keywords, and the end time is the part after","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wenruu"},"content":" * the \"/to\" keyword.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wenruu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wenruu"},"content":" * Example usage:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wenruu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wenruu"},"content":" * Event event \u003d new Event(\"event Team meeting /from 2023-10-31 2pm /to 2023-10-31 4pm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wenruu"},"content":" * System.out.println(event); // Outputs: \"[ ] Event: Team meeting (from 2023-10-31 2pm to 2023-10-31 4pm)\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wenruu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wenruu"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wenruu"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wenruu"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wenruu"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wenruu"},"content":"    public Event(String cmd) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wenruu"},"content":"        String fromStr \u003d cmd.substring(cmd.indexOf(\"/from\") + 6, cmd.indexOf(\"/to\")).strip();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wenruu"},"content":"        String toStr \u003d cmd.substring(cmd.indexOf(\"/to\") + 3).strip();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wenruu"},"content":"        this.from \u003d parseDate(fromStr, LocalTime.of(0, 0));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wenruu"},"content":"        this.to \u003d parseDate(toStr, LocalTime.of(23, 59));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wenruu"},"content":"        description \u003d cmd.substring(6, cmd.indexOf(\u0027/\u0027)).strip();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wenruu"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wenruu"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wenruu"},"content":"     * Overrides toString() method to print custom String","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wenruu"},"content":"     * @return String with status, Event Task type, description and start and end date","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wenruu"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wenruu"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wenruu"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wenruu"},"content":"        return String.format(\"[%s] Event: %s (from %s to %s)\", getStatusIcon(), description,","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wenruu"},"content":"                DateTimeFormatter.ofPattern(\"dd MMM yyy HH:mm\").format(from),","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wenruu"},"content":"                DateTimeFormatter.ofPattern(\"dd MMM yyy HH:mm\").format(to));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wenruu"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wenruu"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"wenruu":46}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wenruu"},"content":"import java.io.Serializable;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wenruu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wenruu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wenruu"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wenruu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wenruu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wenruu"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wenruu"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wenruu"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wenruu"},"content":" * This class is serializable, allowing instances to be serialized and saved to storage.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wenruu"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wenruu"},"content":"public class Task implements Serializable {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wenruu"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wenruu"},"content":"    protected String description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wenruu"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wenruu"},"content":"     * Checks task completion and returns corresponding String status icon","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wenruu"},"content":"     * @return \"X\" if Task has been marked as completed, \" \" otherwise","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wenruu"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wenruu"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wenruu"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wenruu"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wenruu"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wenruu"},"content":"     * Parses a given date string into a {@link LocalDateTime} object based on various supported date formats.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wenruu"},"content":"     * If the date string does not include a time component, the provided {@link LocalTime} defaultTime is used","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wenruu"},"content":"     * to construct the {@link LocalDateTime} object.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wenruu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wenruu"},"content":"     * Supported date formats include:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wenruu"},"content":"     * - \"yyyy-MM-dd HH:mm:ss\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wenruu"},"content":"     * - \"yyyy-MM-dd HH:mm\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wenruu"},"content":"     * - \"yyyy-MM-dd\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wenruu"},"content":"     * - \"dd/MM/yyyy HH:mm:ss\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wenruu"},"content":"     * - \"dd/MM/yyyy HH:mm\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wenruu"},"content":"     * - \"dd/MM/yyyy\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wenruu"},"content":"     * - \"dd/MM/yy HH:mm:ss\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wenruu"},"content":"     * - \"dd/MM/yy HH:mm\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wenruu"},"content":"     * - \"dd/MM/yy\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wenruu"},"content":"     * - \"dd MMM yyyy HH:mm:ss\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wenruu"},"content":"     * - \"dd MMM yyyy HH:mm\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wenruu"},"content":"     * - \"dd MMM yyyy\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wenruu"},"content":"     *\u003c/p\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wenruu"},"content":"     * @param dateStr     The date string to parse.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wenruu"},"content":"     * @param defaultTime The default time to use if the date string does not include a time component.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wenruu"},"content":"     * @return A {@link LocalDateTime} object representing the parsed date and time or null if the format is","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wenruu"},"content":"     * unsupported.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wenruu"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wenruu"},"content":"    public LocalDateTime parseDate(String dateStr, LocalTime defaultTime) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wenruu"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wenruu"},"content":"            if (dateStr.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wenruu"},"content":"                return LocalDateTime.parse(dateStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wenruu"},"content":"            if (dateStr.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wenruu"},"content":"                return LocalDateTime.parse(dateStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wenruu"},"content":"            if (dateStr.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wenruu"},"content":"                LocalDate date \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wenruu"},"content":"                return LocalDateTime.of(date, defaultTime);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wenruu"},"content":"            if (dateStr.matches(\"\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{2}:\\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wenruu"},"content":"                return LocalDateTime.parse(dateStr, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wenruu"},"content":"            if (dateStr.matches(\"\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wenruu"},"content":"                return LocalDateTime.parse(dateStr, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wenruu"},"content":"            if (dateStr.matches(\"\\\\d{2}/\\\\d{2}/\\\\d{4}\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wenruu"},"content":"                LocalDate date \u003d LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wenruu"},"content":"                return LocalDateTime.of(date, defaultTime);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wenruu"},"content":"            if (dateStr.matches(\"\\\\d{2}/\\\\d{2}/\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wenruu"},"content":"                return LocalDateTime.parse(dateStr, DateTimeFormatter.ofPattern(\"dd/MM/yy HH:mm:ss\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wenruu"},"content":"            if (dateStr.matches(\"\\\\d{2}/\\\\d{2}/\\\\d{2} \\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wenruu"},"content":"                return LocalDateTime.parse(dateStr, DateTimeFormatter.ofPattern(\"dd/MM/yy HH:mm\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wenruu"},"content":"            if (dateStr.matches(\"\\\\d{2}/\\\\d{2}/\\\\d{2}\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wenruu"},"content":"                LocalDate date \u003d LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(\"dd/MM/yy\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wenruu"},"content":"                return LocalDateTime.of(date, defaultTime);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wenruu"},"content":"            if (dateStr.matches(\"\\\\d{2} \\\\w{3} \\\\d{4} \\\\d{2}:\\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wenruu"},"content":"                return LocalDateTime.parse(dateStr, DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm:ss\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wenruu"},"content":"            if (dateStr.matches(\"\\\\d{2} \\\\w{3} \\\\d{4} \\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wenruu"},"content":"                return LocalDateTime.parse(dateStr, DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wenruu"},"content":"            if (dateStr.matches(\"\\\\d{2} \\\\w{3} \\\\d{4}\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wenruu"},"content":"                LocalDate date \u003d LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wenruu"},"content":"                return LocalDateTime.of(date, defaultTime);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wenruu"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wenruu"},"content":"        } catch (DateTimeParseException ignored) {}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wenruu"},"content":"        return null;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wenruu"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wenruu"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"wenruu":94}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wenruu"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wenruu"},"content":" * Represents a Todo task, which is a specific type of Task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wenruu"},"content":" * A Todo task has a description but no additional date or time constraints.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wenruu"},"content":" * This class extends the {@link Task} class and overrides the {@code toString()}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wenruu"},"content":" * method to provide a custom string representation of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wenruu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wenruu"},"content":" * The description of the Todo task is extracted from the input command string","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wenruu"},"content":" * and stored in the {@code description} field inherited from the {@link Task} class.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wenruu"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wenruu"},"content":" * Example usage:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wenruu"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wenruu"},"content":" * Todo todo \u003d new Todo(\"todo Buy groceries\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wenruu"},"content":" * System.out.println(todo); // Outputs: \"[ ] Todo: Buy groceries\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wenruu"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wenruu"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wenruu"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wenruu"},"content":"    public Todo(String cmd) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wenruu"},"content":"        description \u003d cmd.substring(4).strip();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wenruu"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wenruu"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wenruu"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wenruu"},"content":"     * Overrides toString() method to print custom String","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wenruu"},"content":"     * @return String containing status, Todo task type and description","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wenruu"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wenruu"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wenruu"},"content":"    public String toString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wenruu"},"content":"        return String.format(\"[%s] Todo: %s\", getStatusIcon(), description);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wenruu"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wenruu"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"wenruu":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wenruu"},"content":"todo read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wenruu"},"content":"deadline return book /by tomorrow","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wenruu"},"content":"event book launch /from Sunday /to Tuesday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wenruu"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wenruu"},"content":"mark 3","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wenruu"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wenruu"},"content":"unmark 3","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wenruu"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wenruu"},"content":"delete 3","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wenruu"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wenruu"},"content":"todo","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wenruu"},"content":"deadline","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wenruu"},"content":"deadline /by","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wenruu"},"content":"deadline hi /by","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wenruu"},"content":"event","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wenruu"},"content":"event /from /to","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wenruu"},"content":"event hi /from /to","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wenruu"},"content":"event hi /from today /to","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wenruu"},"content":"mark 0","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wenruu"},"content":"mark","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wenruu"},"content":"mark  dd","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wenruu"},"content":"mark 1000","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wenruu"},"content":"unmark 0","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wenruu"},"content":"unmark","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wenruu"},"content":"unmark dd","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wenruu"},"content":"unmark 1000","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wenruu"},"content":"delete 0","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wenruu"},"content":"delete","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wenruu"},"content":"delete dd","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wenruu"},"content":"delete 1000","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wenruu"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"wenruu":31}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wenruu"},"content":"java -classpath ../bin BOTato \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"wenruu":1,"-":37}}]
