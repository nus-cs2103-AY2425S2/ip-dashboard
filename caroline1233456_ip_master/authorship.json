[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caroline1233456"},"content":"    mainClass.set(\"parakeet.gui.Launcher\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caroline1233456"},"content":"    archiveBaseName \u003d \"parakeet\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caroline1233456"},"content":"    jvmArgs \u003d [\u0027-ea\u0027]  // Enable assertions","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"caroline1233456":17,"-":39}},{"path":"data/parakeet.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"E | 0 | project meeting | Feb 21 2025 20:00 | Feb 21 2025 21:00","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"E | 1 | project meeting2 | Jan 02 2025 12:30 | Jan 02 2025 13:25","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"D | 0 | read a book | Nov 03 2026 23:59 | 0 ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"T | 0 | buy shampoo | 0 | 0 ","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"caroline1233456":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"# Parakeet User Guide","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"Parakeet is a chatbox that can help you manage your task easily.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"## Feature: Adding a todo task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"Add `todo` task to the list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"- Task with the same description and type(i.e: both of type `todo`) can not be added twice","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"Example: `todo go shopping`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"## Feature: Adding a deadline task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"Add a `deadline` task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"Format: `deadline DESCRIPTION /by DATE (yyyy-mm-dd HH:mm)`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"- DATE should be in form of yyyy-mm-dd HH:mm","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"- Task with the same description, type(i.e: both of type `deadline`) and date can not be added twice","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"Example: `deadline individual project /by 2025-02-21 16:59`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"## Feature: Adding an event task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"Add `event` task to the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"Format: `event DESCRIPTION /from DATE  /to DATE `","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"- DATE should be in form of yyyy-mm-dd HH:mm","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"- Replace DESCRIPTION with actual description of the task and DATE with the actual date of the task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"- Task with the same description and type(i.e: both of type `event`) and date","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caroline1233456"},"content":"Example: `event  project meeting /from 2025-02-21 16:59 /to 2025-02-21 17:35`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caroline1233456"},"content":"## Feature: List","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caroline1233456"},"content":"Shows a list of all the tasks that have been added","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caroline1233456"},"content":"Format: `list`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caroline1233456"},"content":"## Feature: Delete","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caroline1233456"},"content":"Deletes the specified task in the task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caroline1233456"},"content":"Format: `delete INDEX`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caroline1233456"},"content":"- Deletes the task at the specified INDEX.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caroline1233456"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caroline1233456"},"content":"- The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caroline1233456"},"content":"Example: `delete 1`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caroline1233456"},"content":"## Feature: Find","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caroline1233456"},"content":"Finds task whose description contains the given keyword.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caroline1233456"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caroline1233456"},"content":"- The search is case-insensitive. e.g `Assignment` does not match `assignment`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"caroline1233456"},"content":"Example: `find meeting`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"caroline1233456"},"content":"## Feature: Mark","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"caroline1233456"},"content":"Marks the specified task as done","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"caroline1233456"},"content":"Format: `mark INDEX`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"caroline1233456"},"content":"- Marks the task at the specified INDEX.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"caroline1233456"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"caroline1233456"},"content":"- The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"caroline1233456"},"content":"Example:`mark 1`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"caroline1233456"},"content":"## Feature: Mark","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"caroline1233456"},"content":"Marks the specified task as done","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"caroline1233456"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"caroline1233456"},"content":"- Unmarks the task at the specified INDEX.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"caroline1233456"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"caroline1233456"},"content":"- The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"caroline1233456"},"content":"Example:`unmark 2`","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"caroline1233456":69,"-":21}},{"path":"src/main/java/parakeet/DuplicateTaskError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"public class DuplicateTaskError extends Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"    public DuplicateTaskError (String message) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"        super(message);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"caroline1233456":7}},{"path":"src/main/java/parakeet/InvalidInputError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"public class InvalidInputError extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"    public InvalidInputError(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"        super(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"caroline1233456":7}},{"path":"src/main/java/parakeet/Parakeet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import parakeet.command.Command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":" * The Parakeet class represents the main application for managing tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":" * It interacts with the storage system, user interface, and task list to allow the user","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":" * to perform actions such as adding, removing, and viewing tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":" *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":" * \u003cp\u003eThis class initializes the necessary components, reads from storage, and listens","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":" * for user input. It processes the input using a parser and executes corresponding","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":" * commands until the user chooses to exit the program.\u003c/p\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":" *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":" * @author Your Name","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":" * @version 1.0","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":" * @since 2025-01-29","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"public class Parakeet {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"    private Parser parser;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"    public Parakeet() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"        Path path \u003d Paths.get(\"data\", \"parakeet.txt\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"        storage.readFromFile(taskList);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caroline1233456"},"content":"     * Runs the Parakeet application. This method:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caroline1233456"},"content":"     * - Reads tasks from storage","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caroline1233456"},"content":"     * - Displays a welcome message","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caroline1233456"},"content":"     * - Processes commands input by the user in an infinite loop","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caroline1233456"},"content":"     * - Executes the corresponding command based on user input","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caroline1233456"},"content":"     * - Terminates when the ExitCommand is issued","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caroline1233456"},"content":"    public String run(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caroline1233456"},"content":"           String command \u003d input;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caroline1233456"},"content":"            try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caroline1233456"},"content":"                Command parsedCommand \u003d parser.parse(command);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caroline1233456"},"content":"                return parsedCommand.execute(taskList, storage);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caroline1233456"},"content":"            } catch (Exception error) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caroline1233456"},"content":"               return error.getMessage();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caroline1233456"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caroline1233456"},"content":"            ","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caroline1233456"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caroline1233456"},"content":"        return this.run(input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caroline1233456"},"content":"     * The main method to run the Parakeet application.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caroline1233456"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"caroline1233456":71}},{"path":"src/main/java/parakeet/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import parakeet.command.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":" * The Parser class is responsible for parsing user input commands and creating","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":" * appropriate command objects to interact with the system.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":" * It can handle various commands such as \"bye\", \"list\", \"mark\", \"unmark\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":" * \"delete\", as well as commands related to adding tasks, such as \"todo\", \"event\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":" * and \"deadline\". It also validates the correctness of the input.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":" *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":" * \u003cp\u003eIt parses input for task descriptions, dates, and times, and ensures that","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":" * all necessary information is provided in the correct format.\u003c/p\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":" *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":" * @author Your Name","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":" * @version 1.0","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":" * @since 2025-01-29","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"public class Parser {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"    public ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"    public Parser() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"     * Parses a given command string and returns the appropriate Command object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"     * It handles various command types, such as:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caroline1233456"},"content":"     * - \"bye\" for exiting the application","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caroline1233456"},"content":"     * - \"list\" for listing tasks","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caroline1233456"},"content":"     * - \"mark\" for marking a task as done","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caroline1233456"},"content":"     * - \"unmark\" for unmarking a task","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caroline1233456"},"content":"     * - \"delete\" for deleting a task","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caroline1233456"},"content":"     * - \"todo\", \"deadline\", and \"event\" for adding tasks","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caroline1233456"},"content":"     * @param command The input command string to be parsed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caroline1233456"},"content":"     * @return The Command object corresponding to the parsed input.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caroline1233456"},"content":"     * @throws InvalidInputError If the command is invalid or in an incorrect format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caroline1233456"},"content":"    public Command parse(String command) throws InvalidInputError {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caroline1233456"},"content":"        if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caroline1233456"},"content":"            return getExitCommand();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caroline1233456"},"content":"        }else if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caroline1233456"},"content":"            return new ListCommand();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caroline1233456"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caroline1233456"},"content":"            return getMarkCommand(command);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caroline1233456"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caroline1233456"},"content":"            return getUnmarkCommand(command);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caroline1233456"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caroline1233456"},"content":"            return getDeleteCommand(command);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caroline1233456"},"content":"        } else if (command.startsWith(\"find\")){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caroline1233456"},"content":"            return getFindCommand(command);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caroline1233456"},"content":"        } else if (command.startsWith((\"todo\"))) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caroline1233456"},"content":"            return getTodoCommand(command);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caroline1233456"},"content":"        }else if (command.startsWith((\"deadline\"))) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caroline1233456"},"content":"            return getDeadlineCommand(command);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"caroline1233456"},"content":"        } else if (command.startsWith((\"event\"))) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"caroline1233456"},"content":"            return getEventCommand(command);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"caroline1233456"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"caroline1233456"},"content":"            throw new InvalidInputError(\"Sorry, I don\u0027t understand what you mean\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"caroline1233456"},"content":"    private static EventCommand getEventCommand(String command) throws InvalidInputError {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"caroline1233456"},"content":"        String processedCommand \u003d processCommand(command);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"caroline1233456"},"content":"        Matcher matcherDescription \u003d getEventDescription(processedCommand);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"caroline1233456"},"content":"        Matcher matcherFrom \u003d getStartDate(processedCommand);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"caroline1233456"},"content":"        Matcher matcherTo \u003d getEndDate(processedCommand);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"caroline1233456"},"content":"        boolean isValidInput \u003d matcherFrom.find() \u0026\u0026 matcherTo.find() \u0026\u0026 matcherDescription.find();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"caroline1233456"},"content":"        if (!isValidInput) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"caroline1233456"},"content":"            //check if time and description are given","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"caroline1233456"},"content":"            throw new InvalidInputError(\"Sorry, this is invalid input, you need to provide description and exact time\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"caroline1233456"},"content":"            //valid input:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"caroline1233456"},"content":"            //extract all the date and description of task","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"caroline1233456"},"content":"        String from \u003d matcherFrom.group(1).trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"caroline1233456"},"content":"        String to \u003d matcherTo.group(1).trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"caroline1233456"},"content":"        String description \u003d matcherDescription.group(1).trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"caroline1233456"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"caroline1233456"},"content":"            throw new InvalidInputError(\"Sorry, the description can not be empty\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"caroline1233456"},"content":"            //process the date","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"caroline1233456"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"caroline1233456"},"content":"            LocalDateTime timeFrom \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"caroline1233456"},"content":"            LocalDateTime timeTo \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"caroline1233456"},"content":"            return new EventCommand(description, timeFrom, timeTo);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"caroline1233456"},"content":"            ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"caroline1233456"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"caroline1233456"},"content":"            throw new InvalidInputError(","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"caroline1233456"},"content":"                    \"Error: Invalid date format or invalid date. valid: yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"caroline1233456"},"content":"    private static Matcher getEndDate(String processedCommand) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"caroline1233456"},"content":"        String toRegex \u003d \"/to\\\\s+(.*)\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"caroline1233456"},"content":"        Pattern patternT \u003d Pattern.compile(toRegex);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"caroline1233456"},"content":"        Matcher matcherTo \u003d patternT.matcher(processedCommand);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"caroline1233456"},"content":"        return matcherTo;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"caroline1233456"},"content":"    private static Matcher getStartDate(String processedCommand) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"caroline1233456"},"content":"        String fromRegex \u003d \"/from\\\\s+(.*?)(?\u003d\\\\s*/to|$)\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"caroline1233456"},"content":"        Pattern patternFrom \u003d Pattern.compile(fromRegex);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"caroline1233456"},"content":"        Matcher matcherFrom \u003d patternFrom.matcher(processedCommand);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"caroline1233456"},"content":"        return matcherFrom;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"caroline1233456"},"content":"    private static Matcher getEventDescription(String processedCommand) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"caroline1233456"},"content":"        String eventDescriptionRegex \u003d \"^(.*?)(?\u003d\\\\s*/from|$)\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"caroline1233456"},"content":"        Pattern patternDescription \u003d Pattern.compile(eventDescriptionRegex);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"caroline1233456"},"content":"        Matcher matcherDescription \u003d patternDescription.matcher(processedCommand);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"caroline1233456"},"content":"        return matcherDescription;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"caroline1233456"},"content":"    private static DeadlineCommand getDeadlineCommand(String command) throws InvalidInputError {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"caroline1233456"},"content":"        String processedCommand \u003d processCommand(command);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"caroline1233456"},"content":"        Matcher matcherDeadline \u003d getDeadline(processedCommand);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"caroline1233456"},"content":"        Matcher matcherDescription \u003d getDeadlineDescription(processedCommand);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"caroline1233456"},"content":"        boolean isValidInput \u003d matcherDeadline.find() \u0026\u0026 matcherDescription.find();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"caroline1233456"},"content":"        if(!isValidInput) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"caroline1233456"},"content":"            //check for case where deadline are not provided","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"caroline1233456"},"content":"            throw new InvalidInputError(\"Sorry, this is invalid input,\" +","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"caroline1233456"},"content":"                    \" you need to provide description and deadline\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"caroline1233456"},"content":"        String deadlineTime \u003d matcherDeadline.group(1).trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"caroline1233456"},"content":"        String description \u003d matcherDescription.group(1).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"caroline1233456"},"content":"        //check for input like \"deadline /by Sunday\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"caroline1233456"},"content":"        if(description.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"caroline1233456"},"content":"            throw new InvalidInputError(\"Sorry, the description can not be empty\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"caroline1233456"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"caroline1233456"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(deadlineTime, formatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"caroline1233456"},"content":"            return new DeadlineCommand(description, deadline);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"caroline1233456"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"caroline1233456"},"content":"            throw new InvalidInputError(\"Error: Invalid date format or invalid date.\" +","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"caroline1233456"},"content":"                    \" valid: yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"caroline1233456"},"content":"    private static Matcher getDeadlineDescription(String processedCommand) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"caroline1233456"},"content":"        String eventDescriptionRegex \u003d \"^(.*?)(?\u003d\\\\s*/by|$)\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"caroline1233456"},"content":"        Pattern patternDescription \u003d Pattern.compile(eventDescriptionRegex);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"caroline1233456"},"content":"        Matcher matcherDescription \u003d patternDescription.matcher(processedCommand);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"caroline1233456"},"content":"        return matcherDescription;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"caroline1233456"},"content":"    private static Matcher getDeadline(String processedCommand) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"caroline1233456"},"content":"        String deadlineRegex \u003d \"/by\\\\s+(.*)\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"caroline1233456"},"content":"        Pattern patternDeadline \u003d Pattern.compile(deadlineRegex);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"caroline1233456"},"content":"        Matcher matcherDeadline \u003d patternDeadline.matcher(processedCommand);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"caroline1233456"},"content":"        return matcherDeadline;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"caroline1233456"},"content":"    private static String processCommand(String command) throws InvalidInputError {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"caroline1233456"},"content":"        //split the command , remove the word deadline","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"caroline1233456"},"content":"        String[] splitCom \u003d Arrays.copyOfRange(command.split(\" \"),1,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"caroline1233456"},"content":"                command.split(\" \").length);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"caroline1233456"},"content":"        String commandOne\u003d String.join(\" \", splitCom);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"caroline1233456"},"content":"        //check for invalid input like \"deadline \" or \"deadline\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"caroline1233456"},"content":"        if(splitCom.length \u003d\u003d 0 || commandOne.trim().isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"caroline1233456"},"content":"            throw new InvalidInputError(\"Sorry, the description can not be empty\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"caroline1233456"},"content":"        assert splitCom.length \u003e 0: \"the length of description should be greater than zero\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"caroline1233456"},"content":"        return commandOne;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"caroline1233456"},"content":"    private static TodoCommand getTodoCommand(String command) throws InvalidInputError {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"caroline1233456"},"content":"        String processedCommand \u003d processCommand(command);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"caroline1233456"},"content":"        return new TodoCommand(processedCommand);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"caroline1233456"},"content":"    private static ExitCommand getExitCommand() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"caroline1233456"},"content":"        return new ExitCommand();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"caroline1233456"},"content":"    private static FindCommand getFindCommand(String command) throws InvalidInputError {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"caroline1233456"},"content":"        String keyword \u003d command.substring(5).trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"caroline1233456"},"content":"        if(keyword.isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"caroline1233456"},"content":"            throw new InvalidInputError(\"the search keyword cannot be empty\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"caroline1233456"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"caroline1233456"},"content":"    private static DeleteCommand getDeleteCommand(String command) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"caroline1233456"},"content":"        int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"caroline1233456"},"content":"        return new DeleteCommand(taskIndex);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"caroline1233456"},"content":"    private static UnmarkCommand getUnmarkCommand(String command) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"caroline1233456"},"content":"        int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"caroline1233456"},"content":"        return new UnmarkCommand(taskIndex);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"caroline1233456"},"content":"    private static MarkCommand getMarkCommand(String command) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"caroline1233456"},"content":"        int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"caroline1233456"},"content":"        return new MarkCommand(taskIndex);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"caroline1233456":252}},{"path":"src/main/java/parakeet/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Deadline;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Event;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Todo;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"import java.io.*;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":" * The {@code Storage} class is responsible for reading and writing task data","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":" * to a file. The data is stored in a text file at a specified location.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":" * The class handles creating necessary directories and files, reading data","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":" * from the file, and writing task data back to the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"public class Storage {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"    private Path path;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"    private File file;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"    public Storage(Path path) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"        this.path \u003d Paths.get(\"data\", \"parakeet.txt\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"        this.file \u003d path.toFile();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"            Files.createDirectories(this.path.getParent());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"            System.out.println(\"directory creation unsuccessful\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"            try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caroline1233456"},"content":"                    System.out.println(\"File created: \" + file.getAbsolutePath());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caroline1233456"},"content":"                } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caroline1233456"},"content":"                    System.out.println(\"File could not be created\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caroline1233456"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caroline1233456"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caroline1233456"},"content":"                System.out.println(\"Failed to create file: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caroline1233456"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caroline1233456"},"content":"            this.scanner \u003d new Scanner(file);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caroline1233456"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caroline1233456"},"content":"            System.out.println(\"file not found\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caroline1233456"},"content":"     * Reads the task data from the file and adds the tasks to the provided","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caroline1233456"},"content":"     * {@code TaskList}. The file format should be:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caroline1233456"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caroline1233456"},"content":"     * type|completed|description|start date|end date","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caroline1233456"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caroline1233456"},"content":"     * where type is one of the following:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caroline1233456"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caroline1233456"},"content":"     *     \u003cli\u003eT for Todo\u003c/li\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caroline1233456"},"content":"     *     \u003cli\u003eD for Deadline\u003c/li\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caroline1233456"},"content":"     *     \u003cli\u003eE for Event\u003c/li\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caroline1233456"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caroline1233456"},"content":"     * @param taskList the list of tasks to which the data will be added.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"caroline1233456"},"content":"    public void readFromFile(TaskList taskList) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"caroline1233456"},"content":"        while(this.scanner.hasNextLine()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"caroline1233456"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"caroline1233456"},"content":"            //all the task regardless of type follows format: type|complete|description|start date|endDate","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"caroline1233456"},"content":"            String[] components \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"caroline1233456"},"content":"            String taskType \u003d components[0].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"caroline1233456"},"content":"            boolean isCompleted \u003d components[1].trim().equals(\"1\");//completed is 1 and not completed is 0","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"caroline1233456"},"content":"            String description \u003d components[2].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"caroline1233456"},"content":"            String timeOne \u003d components[3].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"caroline1233456"},"content":"            String timeTwo \u003d components[4].trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"caroline1233456"},"content":"            assert !taskType.isEmpty():\"task type can not be empty\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"caroline1233456"},"content":"            assert !description.isEmpty():\"task description can not be empty\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"caroline1233456"},"content":"            assert !timeOne.isEmpty():\"time one cannot be empty\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"caroline1233456"},"content":"            assert !timeTwo.isEmpty():\"time two can not be empty\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"caroline1233456"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"caroline1233456"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"caroline1233456"},"content":"                Task newTask \u003d new Todo(isCompleted, description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"caroline1233456"},"content":"                try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"caroline1233456"},"content":"                    taskList.add(newTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"caroline1233456"},"content":"                } catch (DuplicateTaskError e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"caroline1233456"},"content":"                    System.out.println(\"Error, Writing to file : duplicate occured\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"caroline1233456"},"content":"                }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"caroline1233456"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"caroline1233456"},"content":"                LocalDateTime timeOneDate \u003d LocalDateTime.parse(timeOne, formatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"caroline1233456"},"content":"                Task newTask \u003d new Deadline(isCompleted, description, timeOneDate);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"caroline1233456"},"content":"                try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"caroline1233456"},"content":"                    taskList.add(newTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"caroline1233456"},"content":"                } catch (DuplicateTaskError e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"caroline1233456"},"content":"                    System.out.println(\"Error, Writing to file : duplicate occured\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"caroline1233456"},"content":"                }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"caroline1233456"},"content":"            } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"caroline1233456"},"content":"                LocalDateTime timeOneDate \u003d LocalDateTime.parse(timeOne, formatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"caroline1233456"},"content":"                LocalDateTime timeTwoDate \u003d LocalDateTime.parse(timeTwo, formatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"caroline1233456"},"content":"                Task newTask \u003d new Event(isCompleted, description, timeOneDate, timeTwoDate);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"caroline1233456"},"content":"                try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"caroline1233456"},"content":"                    taskList.add(newTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"caroline1233456"},"content":"                } catch (DuplicateTaskError e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"caroline1233456"},"content":"                    System.out.println(\"Error, Writing to file : duplicate occured\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"caroline1233456"},"content":"                }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"caroline1233456"},"content":"            } else {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"caroline1233456"},"content":"                System.out.println(\"Error, no event type\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"caroline1233456"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"caroline1233456"},"content":"     * Writes the tasks in the provided {@code TaskList} to the file in a format","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"caroline1233456"},"content":"     * that can be read later. The task list is converted to a file format where","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"caroline1233456"},"content":"     * each task is represented by a line in the following format:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"caroline1233456"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"caroline1233456"},"content":"     * type|completed|description|start date|end date","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"caroline1233456"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"caroline1233456"},"content":"     * @param taskList the list of tasks to be written to the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"caroline1233456"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"caroline1233456"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.file, false));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"caroline1233456"},"content":"            // Write the content to the file","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"caroline1233456"},"content":"            writer.write(taskList.convertToFileFormat());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"caroline1233456"},"content":"            // Flush and close the writer to ensure data is written","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"caroline1233456"},"content":"            writer.flush(); // This ensures the data is actually written to the file","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"caroline1233456"},"content":"            writer.close(); // Close","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"caroline1233456"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"caroline1233456"},"content":"            System.out.println(\"Error: writing tasklist to file\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"caroline1233456":149}},{"path":"src/main/java/parakeet/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":" * The {@code TaskList} class represents a collection of tasks. It provides","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":" * methods to manipulate the list of tasks such as completing, marking as undone,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":" * deleting tasks, and converting the list to a file-friendly format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"public class TaskList {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"    public ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"     * Marks the task at taskList[index] as completed","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"     * @param index the index in taskList.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"    public void complete(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"        this.taskList.get(index).complete();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"     * Marks the task at specific index as undone","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"     * @param index the index the task is at in taskList.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"    public void unDone(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"        this.taskList.get(index).unDone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caroline1233456"},"content":"     *Deletes the task at specific index","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caroline1233456"},"content":"     * @param index the index of the  task to be deleted.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caroline1233456"},"content":"     * @return the task deleted.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caroline1233456"},"content":"    public Task delete(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caroline1233456"},"content":"        Task deletedTask \u003d taskList.get(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caroline1233456"},"content":"        taskList.remove(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caroline1233456"},"content":"        return deletedTask;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caroline1233456"},"content":"     * Returns a string representation of the task at the specified index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caroline1233456"},"content":"     * @param index the index of the task to be printed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caroline1233456"},"content":"     * @return the string representation of the task at the specified index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caroline1233456"},"content":"    public String print(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caroline1233456"},"content":"        return this.taskList.get(index).toString();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caroline1233456"},"content":"     * Returns the size of the taskList","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caroline1233456"},"content":"     * @return the size of the taskList.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caroline1233456"},"content":"    public int getSize() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"caroline1233456"},"content":"        return this.taskList.size();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"caroline1233456"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"caroline1233456"},"content":"     * @param newTask the task to be added to the list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"caroline1233456"},"content":"    public void add(Task newTask) throws DuplicateTaskError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"caroline1233456"},"content":"        if (checkDuplicate(newTask)) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"caroline1233456"},"content":"            throw new DuplicateTaskError(\"Task with same type, same description and same time can not be added twice.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"caroline1233456"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"caroline1233456"},"content":"     * Converts the task list to a file-friendly format by calling each task\u0027s","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"caroline1233456"},"content":"     * {@code convertToFileFormat} method. The tasks are separated by new lines.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"caroline1233456"},"content":"     * @return a string representation of the task list in file format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"caroline1233456"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"caroline1233456"},"content":"        String str \u003d \"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"caroline1233456"},"content":"        for (int i \u003d0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"caroline1233456"},"content":"            str \u003d str + taskList.get(i).convertToFileFormat() + System.lineSeparator();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"caroline1233456"},"content":"        return str;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"caroline1233456"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"caroline1233456"},"content":"        TaskList subList \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"caroline1233456"},"content":"        for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"caroline1233456"},"content":"            if (taskList.get(i).contains(keyword)) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"caroline1233456"},"content":"                try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"caroline1233456"},"content":"                    subList.add(taskList.get(i));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"caroline1233456"},"content":"                } catch (DuplicateTaskError e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"caroline1233456"},"content":"                    System.out.println(\"Duplicate task in find method\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"caroline1233456"},"content":"                }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"caroline1233456"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"caroline1233456"},"content":"        return subList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"caroline1233456"},"content":"     * Checks if the new task is duplicate of any existing tasks in task list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"caroline1233456"},"content":"     * @param newTask the task to be added","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"caroline1233456"},"content":"     * @return  {@code true} if the task is a duplicate, {@code false} otherwise","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"caroline1233456"},"content":"    public boolean checkDuplicate(Task newTask) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"caroline1233456"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"caroline1233456"},"content":"            if (taskList.get(i).checkDuplicate(newTask)) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"caroline1233456"},"content":"                return true;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"caroline1233456"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"caroline1233456"},"content":"        return false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"caroline1233456"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"caroline1233456"},"content":"        String str \u003d \"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"caroline1233456"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"caroline1233456"},"content":"            str \u003d str + ( i + 1 )+ \".\" + taskList.get(i).toString() + System.lineSeparator();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"caroline1233456"},"content":"        return str;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"caroline1233456":139}},{"path":"src/main/java/parakeet/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import parakeet.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import parakeet.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":" * Represents an abstract command that adds a task to a {@link TaskList}.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":" * This class extends {@link Command} and defines the structure for commands that add tasks to the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":" *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":" * Subclasses must implement the {@link Command#execute(TaskList, Storage)} method to define the specific behavior","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":" * of adding a task (e.g., adding a {@link parakeet.task.Todo} or {@link parakeet.task.Event}).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"     * Executes the command to add a task to the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"     * This method must be implemented by subclasses to define the specific behavior for adding a task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"     * @param taskList The list of tasks to which the new task will be added.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"     * @param storage  The storage used to save the tasks (not used in all commands).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"    public abstract String execute(TaskList taskList, Storage storage) throws DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"caroline1233456":25}},{"path":"src/main/java/parakeet/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import parakeet.DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import parakeet.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":" * Represents a command that can be executed on a {@link TaskList}.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":" * This is an abstract class that defines the {@link #execute(TaskList, Storage)} method,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":" * which must be implemented by subclasses to define specific behavior for various commands.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":" *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":" * The command is executed by performing an action on the task list and updating the UI and storage accordingly.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"     * Executes the specific command on the given task list, updating the UI and storage as necessary.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"     * @param taskList The list of tasks on which the command will be executed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"     * @param storage  The storage that may be used to persist task data (not used in all commands).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"    public abstract String execute(TaskList taskList, Storage storage) throws DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"caroline1233456":23}},{"path":"src/main/java/parakeet/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import parakeet.DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import parakeet.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Deadline;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"public class DeadlineCommand extends AddCommand {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"    private String description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"    public DeadlineCommand(String description, LocalDateTime deadline) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"     * Executes the command to add a Deadline task to the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"     * This method creates a new {@link Deadline} task with the specified description,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"     * deadline,  adds it to the task list, and updates the UI with","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"     * the details of the new task and the total number of tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"     * @param taskList the list of tasks to add the deadline to.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"     * @param storage  the storage used to save the tasks (not used in this method).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"    public String execute(TaskList taskList, Storage storage) throws DuplicateTaskError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"        Task newDeadline \u003d new Deadline(false, description, deadline);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"        taskList.add(newDeadline);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"        String response \u003d \"Got it. I\u0027ve added this task: \\n\" + newDeadline.toString() + \"\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"                + \"Now you have \" + taskList.getSize()+ \" tasks in the list\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"        assert !response.isEmpty():\"respone can not be empty\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"        ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caroline1233456"},"content":"        return response;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"caroline1233456":40}},{"path":"src/main/java/parakeet/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import parakeet.DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import parakeet.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"    private int taskIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"     * Deletes the task at the specified index from the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"     * Sends a confirmation message displaying the task that was removed and the updated task count.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"     * @param taskList The list of tasks where the task will be deleted from.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"     * @param storage  The storage used to save the tasks (not used in this method).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"    public String execute(TaskList taskList, Storage storage) throws DuplicateTaskError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"        Task deletedTask \u003d taskList.delete(taskIndex);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"        String response \u003d \"Noted. I\u0027ve removed this task: \\n\" + deletedTask.toString() + \"\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"                + \"Now you have \" + taskList.getSize()+ \" tasks in the list\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"        return response;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"caroline1233456":31}},{"path":"src/main/java/parakeet/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import parakeet.DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"import parakeet.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"import parakeet.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Event;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"public class EventCommand extends AddCommand {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"    private String description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"    public EventCommand(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"     * Executes the command to add an Event task to the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"     * This method creates a new {@link Event} task with the specified description,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"     * start time, and end time, adds it to the task list, and updates the UI with","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"     * the details of the new task and the total number of tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"     * @param taskList the list of tasks to add the event to.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"     * @param storage  the storage used to save the tasks (not used in this method).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"    public String execute(TaskList taskList, Storage storage) throws DuplicateTaskError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"        Task newEvent \u003d new Event(false, description, startTime, endTime);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"        taskList.add(newEvent);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"        String response \u003d \"Got it. I\u0027ve added this task: \\n\" + newEvent.toString() + \"\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"                + \"Now you have \" + taskList.getSize()+ \" tasks in the list\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caroline1233456"},"content":"        return response;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"caroline1233456":41}},{"path":"src/main/java/parakeet/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import parakeet.DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import parakeet.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"    public ExitCommand() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"     * Executes the command to exit the application.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"     * This method saves the current task list to the file, displays a message indicating","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"     * that the tasks have been saved, and then prints the exit message to the UI.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"     * Finally, it closes the scanner used for user input.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"     * @param taskList the list of tasks to be saved.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"     * @param storage  the storage used to save the tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"    public String execute(TaskList taskList, Storage storage) throws DuplicateTaskError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"        String response \u003d \"Bye. Hope to see you again soon! \\nTask list has been saved\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"        return response;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"caroline1233456":29}},{"path":"src/main/java/parakeet/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import parakeet.DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import parakeet.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"    private String keyword;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"    public String execute(TaskList taskList, Storage storage) throws DuplicateTaskError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"        TaskList subList \u003d taskList.find(this.keyword);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"        String response \u003d subList.toString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"        return response;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"caroline1233456":24}},{"path":"src/main/java/parakeet/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import parakeet.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import parakeet.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"    public ListCommand() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"     * Executes the command to display the list of tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"     * This method prints the entire list of tasks to the UI by calling the","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"     * {@link TaskList#toString()} method and then prints it to the user.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"     * @param taskList the list of tasks to be displayed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"     * @param storage  the storage used to save the tasks (not used in this method).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"    public String execute(TaskList taskList, Storage storage) throws DuplicateTaskError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"        String response \u003d taskList.toString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"        return response;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"caroline1233456":25}},{"path":"src/main/java/parakeet/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import parakeet.DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import parakeet.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"    private int taskIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"     * Executes the command to mark a task as completed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"     * This method marks the task at the specified index in the task list as completed,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"     * then prints a confirmation message to the user, showing the task that was marked as done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"     * @param taskList the list of tasks where the task will be marked as completed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"     * @param storage  the storage used to save the tasks (not used in this method).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"    public String execute(TaskList taskList, Storage storage) throws DuplicateTaskError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"        taskList.complete(taskIndex);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"        String response \u003d \"Nice! I\u0027ve marked this task as done: \\n\" + taskList.print(taskIndex);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"        return response;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"caroline1233456":32}},{"path":"src/main/java/parakeet/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import parakeet.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import parakeet.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Todo;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"public class TodoCommand extends AddCommand {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"    private String taskDescription;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"    public TodoCommand(String taskDescription) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"     * Executes the command to add a Todo task to the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"     * This method creates a new {@link Todo} task with the specified description,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"     * adds it to the task list, and updates the UI with the details of the new task","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"     * and the total number of tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"     * @param taskList the list of tasks to add the Todo task to.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"     * @param storage  the storage used to save the tasks (not used in this method).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"    public String execute(TaskList taskList, Storage storage) throws DuplicateTaskError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"        Task newTask \u003d new Todo(false, this.taskDescription);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"        taskList.add(newTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"        String response \u003d \"Got it. I\u0027ve added this task: \\n\" + newTask.toString() + \"\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"                + \"Now you have \" + taskList.getSize()+ \" tasks in the list\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"        return response;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"caroline1233456":37}},{"path":"src/main/java/parakeet/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.DuplicateTaskError;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import parakeet.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import parakeet.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"    private int taskIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"     * Marks the task at the specified index as completed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"     * Sends a confirmation message displaying the task marked as done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"     * @param taskList List of tasks where the task is to be marked as completed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"     * @param storage  The storage used to save the tasks (not used in this method).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"    public String execute(TaskList taskList, Storage storage) throws DuplicateTaskError {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"        taskList.unDone(taskIndex);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"        String response \u003d \"Ok, I\u0027ve marked this task as not done yet: \\n\" + taskList.print(taskIndex);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"        return response;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"caroline1233456":29}},{"path":"src/main/java/parakeet/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.gui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"    private Label text;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"    public DialogBox(String s, Image i) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"        text \u003d new Label(s);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"        displayPicture \u003d new ImageView(i);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"        text.setWrapText(true);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"     *Flips the dialog box so that image appears to the left of the text","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"    private void flip() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caroline1233456"},"content":"     * Gets the dialog box of the user","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caroline1233456"},"content":"     * @param s User\u0027s input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caroline1233456"},"content":"     * @param i User image.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caroline1233456"},"content":"     * @return Dialog box with user input appears on the left and user image on the right.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caroline1233456"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caroline1233456"},"content":"        return new DialogBox(s, i);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caroline1233456"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caroline1233456"},"content":"     * Gets the dialog box of parakeet","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caroline1233456"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caroline1233456"},"content":"     * @param s the response of parakeet.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caroline1233456"},"content":"     * @param i the image of parakeet.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caroline1233456"},"content":"     * @return the dialog box of parakeet with text appears to the right of image.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caroline1233456"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caroline1233456"},"content":"    public static DialogBox getParakeetDialog(String s, Image i) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caroline1233456"},"content":"        var db \u003d new DialogBox(s, i);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caroline1233456"},"content":"        db.flip();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caroline1233456"},"content":"        return db;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"caroline1233456":64}},{"path":"src/main/java/parakeet/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.gui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"public class Launcher {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"caroline1233456":9}},{"path":"src/main/java/parakeet/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.gui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"import parakeet.Parakeet;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"    private Scene scene;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"    private Image parakeetImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaParakeet.png\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"    private Parakeet parakeet;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"        //Setting up required components","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"        parakeet \u003d new Parakeet();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caroline1233456"},"content":"        dialogContainer.getChildren()","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caroline1233456"},"content":"                .addAll(DialogBox","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caroline1233456"},"content":"                        .getParakeetDialog(\"Hello! I\u0027m Parakeet. \\n What can I do for you?\",","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caroline1233456"},"content":"                                parakeetImage));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caroline1233456"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caroline1233456"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caroline1233456"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caroline1233456"},"content":"        stage.setScene(scene);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caroline1233456"},"content":"        stage.show();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caroline1233456"},"content":"        stage.setOnCloseRequest(event -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caroline1233456"},"content":"            parakeet.getResponse(\"bye\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caroline1233456"},"content":"        });","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caroline1233456"},"content":"        stage.setTitle(\"Parakeet\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caroline1233456"},"content":"        stage.setResizable(false);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caroline1233456"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caroline1233456"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caroline1233456"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caroline1233456"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caroline1233456"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caroline1233456"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caroline1233456"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"caroline1233456"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"caroline1233456"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"caroline1233456"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"caroline1233456"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"caroline1233456"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"caroline1233456"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"caroline1233456"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"caroline1233456"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"caroline1233456"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"caroline1233456"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"caroline1233456"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"caroline1233456"},"content":"            handleUserInput();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"caroline1233456"},"content":"        });","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"caroline1233456"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"caroline1233456"},"content":"            handleUserInput();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"caroline1233456"},"content":"        });","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"caroline1233456"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"caroline1233456"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"caroline1233456"},"content":"        String parakeetText \u003d parakeet.getResponse(userInput.getText());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"caroline1233456"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"caroline1233456"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"caroline1233456"},"content":"                DialogBox.getParakeetDialog(parakeetText, parakeetImage)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"caroline1233456"},"content":"        );","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"caroline1233456"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"caroline1233456":108}},{"path":"src/main/java/parakeet/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"    public Deadline(boolean isDone, String description, LocalDateTime deadline) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"        super(isDone, description, TaskType.DEADLINE);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"        String str \u003d \"D | \" + (super.isDone? \"1\": \"0\")","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"                + \" | \" + super.description + \" | \"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"                +  this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \" | 0 \";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"        return str;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"    public boolean checkSameTime(Deadline task) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"        return task.deadline.equals(this.deadline);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"        String str \u003d \"[D]\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"        str \u003d str + super.toString() + \" (by: \"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"        return str;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"caroline1233456":31}},{"path":"src/main/java/parakeet/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"    public Event(boolean isDone, String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"        super(isDone, description, TaskType.EVENT);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"        String str \u003d \"E | \" + (super.isDone? \"1\": \"0\") + \" | \" + super.description","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"                + \" | \" + this.from. format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \" | \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"                + this.to. format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"        return str;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"    public boolean checkSameTime(Event task) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"        return task.from.equals(this.from) \u0026\u0026 this.to.equals(task.to);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"        String str \u003d \"[E]\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"        str \u003d str + super.toString() + \" (from: \" + from. format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"                + \" to: \" + to. format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"                + \")\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"        return str;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"caroline1233456":34}},{"path":"src/main/java/parakeet/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"    public boolean isDone;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"    public String description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"    private TaskType taskType;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"    public Task(boolean isDone, String description, TaskType taskType) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"    public void complete() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"    public void unDone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"    public abstract String convertToFileFormat();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"    public boolean checkDuplicate(Task task) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"        if (!task.description.equals(this.description)) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"            return false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"        if(task.taskType !\u003d this.taskType) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"            return false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"        //task with same description and type","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"        if (task.taskType \u003d\u003d TaskType.TODO) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caroline1233456"},"content":"            return true;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caroline1233456"},"content":"        }else if (task.taskType \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caroline1233456"},"content":"            Deadline convertedTask \u003d (Deadline) task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caroline1233456"},"content":"            Deadline thisTask \u003d (Deadline) this;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caroline1233456"},"content":"            return thisTask.checkSameTime(convertedTask);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caroline1233456"},"content":"        }else {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caroline1233456"},"content":"            assert task.taskType \u003d\u003d TaskType.EVENT:\"Task class: Invalid Task type\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caroline1233456"},"content":"            Event convertedTask \u003d (Event) task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caroline1233456"},"content":"            Event thisTask \u003d (Event) this;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caroline1233456"},"content":"            return thisTask.checkSameTime(convertedTask);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caroline1233456"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caroline1233456"},"content":"        String str \u003d \"[\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caroline1233456"},"content":"        if(isDone) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caroline1233456"},"content":"            str \u003d str + \"X\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caroline1233456"},"content":"        str \u003d str + \"] \" + description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caroline1233456"},"content":"        return str;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"caroline1233456":60}},{"path":"src/main/java/parakeet/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"public enum TaskType {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"    TODO,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"    EVENT;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"caroline1233456":8}},{"path":"src/main/java/parakeet/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"    public Todo(boolean isDone, String description) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"        super(isDone, description, TaskType.TODO);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"        String str \u003d \"T | \" + (super.isDone? \"1\": \"0\") + \" | \" + super.description +\" | 0 | 0 \";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"        return str;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"       String str \u003d \"[T]\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"       str \u003d str + super.toString();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"       return str;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"caroline1233456":21}},{"path":"src/test/java/parakeet/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import parakeet.command.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"    void parse_invalidCommand_throwException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"        try{","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"tod\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"            fail();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"            assertEquals(\"Sorry, I don\u0027t understand what you mean\", e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"    void parse_byeCommand_returnExitCommand() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"bye\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"            assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"            fail(\"Exception should not be thrown for valid exit command\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"    void parser_listCommand_returnListCommand() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"        try{","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"list\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"            assertTrue(command instanceof ListCommand);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"            fail(\"Exception should not be thrown with valid input\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caroline1233456"},"content":"    void parser_markCommand_returnMarkCommand() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"mark 1\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caroline1233456"},"content":"            assertTrue(command instanceof MarkCommand);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caroline1233456"},"content":"            fail(\"Exception should not be thrown for valid command\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caroline1233456"},"content":"    void parser_unMarkCommand_returnUnmarkCommand() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"unmark 1\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caroline1233456"},"content":"            assertTrue(command instanceof UnmarkCommand);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caroline1233456"},"content":"            fail(\"Exception should not be thrown for valid command\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caroline1233456"},"content":"    void parser_DeleteCommand_returnDeleteCommand() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"delete 1\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caroline1233456"},"content":"            assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caroline1233456"},"content":"            fail(\"Exception should not be thrown for valid command\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"caroline1233456"},"content":"    void parse_validTodoCommand_returnTodoCommand() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"todo finish individual project\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"caroline1233456"},"content":"            assertTrue(command instanceof TodoCommand);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"caroline1233456"},"content":"            fail(\"Exception is thrown when valid todo command is provided\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"caroline1233456"},"content":"    void parser_invalidTodoCommand_throwException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"todo  \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"caroline1233456"},"content":"            Command commandTwo \u003d parser.parse(\"todo\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"caroline1233456"},"content":"            fail(\"When given invalid todo command, no exception is thrown.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e ){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"caroline1233456"},"content":"            assertEquals(\"Sorry, the description of todo can not be empty\", e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"caroline1233456"},"content":"    void parser_validDeadlineCommand_returnDeadlineCommand() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"deadline meeting /by 2025-02-01 12:30\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"caroline1233456"},"content":"            assertTrue(command instanceof DeadlineCommand);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"caroline1233456"},"content":"            fail();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"caroline1233456"},"content":"    void parserDeadline_emptyDate_throwException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"deadline meeting /by \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"caroline1233456"},"content":"            fail();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"caroline1233456"},"content":"            assertEquals(\"Sorry, this is invalid input, you need to provide description and deadline\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"caroline1233456"},"content":"                    , e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"caroline1233456"},"content":"    void parserDeadline_emptyDescription_throwException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"deadline /by 2025-02-01 12:30 \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"caroline1233456"},"content":"            fail();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"caroline1233456"},"content":"            assertEquals(\"Sorry, the description can not be empty\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"caroline1233456"},"content":"                    , e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"caroline1233456"},"content":"    void parserDeadline_invalidDate_throwException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"deadline individual project /by 2025/02/01 12:30 \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"caroline1233456"},"content":"            fail();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"caroline1233456"},"content":"            assertEquals(\"Error: Invalid date format or invalid date. valid: yyyy-MM-dd HH:mm.\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"caroline1233456"},"content":"                    , e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"caroline1233456"},"content":"    void parserDeadline_invalidDateTwo_throwException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"deadline individual project /by 2025/02/01 12 \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"caroline1233456"},"content":"            fail();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"caroline1233456"},"content":"            assertEquals(\"Error: Invalid date format or invalid date. valid: yyyy-MM-dd HH:mm.\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"caroline1233456"},"content":"                    , e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"caroline1233456"},"content":"    void parserEvent_validInput_returnEvent() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"event meeting /from 2025-03-12 15:30 /to 2025-03-12 16:35\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"caroline1233456"},"content":"            assertTrue(command instanceof EventCommand);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"caroline1233456"},"content":"            fail();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"caroline1233456"},"content":"    void parserEvent_emptyTask_throwException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"event  \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"caroline1233456"},"content":"            fail();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"caroline1233456"},"content":"            assertEquals(\"Sorry, the description of event can not be empty\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"caroline1233456"},"content":"                    , e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"caroline1233456"},"content":"    void parserEvent_emptyDate_throwException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"event meeting /from 2025-01-05 12:25 /to  \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"caroline1233456"},"content":"            fail();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"caroline1233456"},"content":"            assertEquals(\"Sorry, this is invalid input, you need to provide description and exact time\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"caroline1233456"},"content":"                    , e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"caroline1233456"},"content":"    void parserEvent_emptyDescription_throwException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"event /from 2025-02-01 12:30 /to 2025-05-01 16:35\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"caroline1233456"},"content":"            fail();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"caroline1233456"},"content":"            assertEquals(\"Sorry, the description can not be empty\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"caroline1233456"},"content":"                    , e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"caroline1233456"},"content":"    void parserEvent_invalidDate_throwException() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"caroline1233456"},"content":"            Command command \u003d parser.parse(\"event meeting /from 2025/02/01 12:30 /to 2025-02-01 13\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"caroline1233456"},"content":"            fail();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"caroline1233456"},"content":"        } catch (InvalidInputError e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"caroline1233456"},"content":"            assertEquals(\"Error: Invalid date format or invalid date. valid: yyyy-MM-dd HH:mm.\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"caroline1233456"},"content":"                    , e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"caroline1233456"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"caroline1233456":205}},{"path":"src/test/java/parakeet/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"package parakeet;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Deadline;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Event;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"import parakeet.task.Todo;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"caroline1233456"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"caroline1233456"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"    private Path tempFilePath;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"caroline1233456"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"caroline1233456"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"        // Create a temporary file for testing","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"        tempFilePath \u003d Files.createTempFile(\"parakeet_test\", \".txt\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"caroline1233456"},"content":"        storage \u003d new Storage(tempFilePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"caroline1233456"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"caroline1233456"},"content":"    void writeToFile_taskSet_writeCorrectFormat() throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"        // Arrange: Add tasks","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"caroline1233456"},"content":"        Task todo \u003d new Todo(false, \"Read book\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"caroline1233456"},"content":"        Task deadline \u003d new Deadline(true, \"Submit assignment\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"caroline1233456"},"content":"                , LocalDateTime.of(2024, 1, 30, 23, 59));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"caroline1233456"},"content":"        Task event \u003d new Event(false, \"Team meeting\",","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"caroline1233456"},"content":"                LocalDateTime.of(2024, 2, 1, 14, 0),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"caroline1233456"},"content":"                LocalDateTime.of(2024, 2, 1, 16, 0));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"caroline1233456"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"caroline1233456"},"content":"            taskList.add(todo);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"caroline1233456"},"content":"            taskList.add(deadline);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"caroline1233456"},"content":"            taskList.add(event);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"caroline1233456"},"content":"        } catch (DuplicateTaskError e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"caroline1233456"},"content":"            assert false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"caroline1233456"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"caroline1233456"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"caroline1233456"},"content":"        String expectedContent \u003d \"T | 0 | Read book | 0 | 0 \\n\" +","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"caroline1233456"},"content":"                \"D | 1 | Submit assignment | Jan 30 2024 23:59 | 0 \\n\" +","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"caroline1233456"},"content":"                \"E | 0 | Team meeting | Feb 01 2024 14:00 | Feb 01 2024 16:00\\n\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"caroline1233456"},"content":"        String fileContent \u003d Files.readString(tempFilePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"caroline1233456"},"content":"        assertEquals(expectedContent, fileContent, \"File content should match the expected format.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"caroline1233456"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"caroline1233456"},"content":"    void writeToFile_EmptyTaskList_ShouldWriteNothing() throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"caroline1233456"},"content":"        // Act: Write an empty task list","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"caroline1233456"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"caroline1233456"},"content":"        // Assert: File should be empty","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"caroline1233456"},"content":"        String fileContent \u003d Files.readString(tempFilePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"caroline1233456"},"content":"        assertTrue(fileContent.isEmpty(), \"File should be empty when no tasks are written.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"caroline1233456"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"caroline1233456":66}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"caroline1233456"},"content":"todo borrow book","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"caroline1233456"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"caroline1233456"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"caroline1233456"},"content":"mark 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"caroline1233456"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"caroline1233456"},"content":"unmark 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"caroline1233456"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"caroline1233456"},"content":"deadline ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"caroline1233456"},"content":"event","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"deadline /by Sunday","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"caroline1233456"},"content":"event project meeting ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"caroline1233456"},"content":"blah","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"delete 3","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"caroline1233456"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"caroline1233456":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"caroline1233456"},"content":"java -classpath ../bin Parakeet \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"caroline1233456":1,"-":37}}]
