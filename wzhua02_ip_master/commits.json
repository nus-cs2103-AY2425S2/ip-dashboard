{"authorDailyContributionsMap":{"wzhua02":[{"date":"2025-01-22","commitResults":[{"hash":"53d7b1291dab7d7905537f6808da15ec9aa8bf75","isMergeCommit":false,"messageTitle":"Renamed Duke to Baymax","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10}}},{"hash":"1158ed9004c436d940a2411a96cab9fc06c7d478","isMergeCommit":false,"messageTitle":"Did Level 1: Echo and Level 2: Add, List","messageBody":"","tags":["Level-2","Level-1","Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":6}}},{"hash":"64989d4ff12e33071ddeba6eca524948968b29ec","isMergeCommit":false,"messageTitle":"Converted tasks from just Strings to the class Task; input is now split to String[], taskList uses ArrayList to store","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":12}}},{"hash":"74bb589de0fea65b90acdb94c71db9f73837c67b","isMergeCommit":false,"messageTitle":"Done level 3; Change switch-case to simply if-else","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":18}}},{"hash":"63d13d2320d45d6fb9c7398c2f9cbf986672e0f5","isMergeCommit":false,"messageTitle":"Done Level-4","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":12}}},{"hash":"30c55aa2fe73bc35d5f265f5f72cd3c6f6cbf3d7","isMergeCommit":false,"messageTitle":"Added new classes for each Task as files and with inheritance; Changed back to switch-case.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":146,"deletions":106}}},{"hash":"a3f3be5d9158c72ebda53b0a7709ad94581505e0","isMergeCommit":false,"messageTitle":"Done Level 5; Added Exception class","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":55}}},{"hash":"0813fb1506b9b47715fcc04de4eba228fb6d751d","isMergeCommit":false,"messageTitle":"Done A-TextUiTesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0},"java":{"insertions":7,"deletions":1},"bat":{"insertions":1,"deletions":1}}},{"hash":"1a89111f067deb4270de690d04f66f24d3f538c0","isMergeCommit":false,"messageTitle":"Done Level-6; Modified TextUiTesting to test it","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":2},"java":{"insertions":9,"deletions":2}}}]},{"date":"2025-01-26","commitResults":[{"hash":"b1ce053d16d7b5f249db86e9a494895c429aba17","isMergeCommit":false,"messageTitle":"Modify reply() method","messageBody":"Removed the indent string from the method, implemented a method\nthat auto indents every System.out message.\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":4}}},{"hash":"b932df7cbe9abcd549466b3b8b42221c0b9cf0e9","isMergeCommit":false,"messageTitle":"Add tasks.txt","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0}}}]},{"date":"2025-01-27","commitResults":[{"hash":"f66e65301e3ca369f7e54c3370df0b2756a6e785","isMergeCommit":false,"messageTitle":"Level-7","messageBody":"Refactor tasks.txt.\n\nAdd loading and saving to tasks.txt to Baymax.\n\nAdd saveFormat method and overload constructor to Task and its\nsubclasses to support saving and loading feature.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":139,"deletions":35}}},{"hash":"ed258c7154f0027c16e8757ba8cac64a0baf5d63","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"2d4b0beefc19771b27636c5e1dbe27d43d420d4f","isMergeCommit":false,"messageTitle":"Remove code that was used to test some functionality of the chatbot.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":6}}},{"hash":"d0ff8b9d26092ae42b78d2efaf0a52f9ccc78a5b","isMergeCommit":false,"messageTitle":"Add DateTime parsing to Baymax","messageBody":"Modify Deadline and Event to parse and output DateTime\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":4},"java":{"insertions":52,"deletions":18}}},{"hash":"f3eb3251c3216caa6c18ae546c95ae7a77e3657a","isMergeCommit":false,"messageTitle":"Modifications for text-ui-test","messageBody":"Fix text bug in Event.java.\n\nRemove trailing whitespaces in messages in Baymax.java.\n\nUpdate runtest.bat, input.txt and EXPECTED.TXT for level 8.\n","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":2},"java":{"insertions":18,"deletions":15},"bat":{"insertions":7,"deletions":0}}},{"hash":"a419af3e813d2bd9f5e7284cc817ac7cdde06657","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"4f2c6618d94b4e387b49dc4a6df7b2d15512c80a","isMergeCommit":false,"messageTitle":"Refactor Baymax for improved OOP design","messageBody":"The functionality for file interaction, task management, and user\ninteraction is tightly coupled in `Baymax.java`. Tasks have a redundant\ntype parameter, and the `Task` class has insufficient visibility scope.\n\nThis tight coupling makes the codebase harder to maintain and extend.\nThe redundant type parameter adds unnecessary complexity without\nproviding any benefits.\n\nLet\u0027s refactor the code to adhere to object-oriented principles by\nintroducing dedicated classes for specific responsibilities:\n- Add a `Storage` class to encapsulate file interaction functionality.\n- Add a `TaskList` class to manage the task list and its interactions.\n- Add a `UserInterface` class to handle user input and Baymax\u0027s\nresponses.\n- Refactor `Baymax.java` to align with this modular design, leaving\nparser functionality to be extracted separately.\n- Remove the type parameter from all `Task` subclasses to reduce\ncomplexity and redundancy.\n- Make the `Task` class public to enforce proper scope and visibility.\n\nThis approach aligns with the Single Responsibility Principle (SRP) and\nimproves code readability, modularity, and testability. Tasks no longer\nneed a redundant type parameter, as constructors already imply the type.\n\nFurther parser refactoring will be addressed in a future commit.\n","fileTypesAndContributionMap":{"java":{"insertions":264,"deletions":196}}},{"hash":"9cdc87cf7f8b556dbc6d72f7d4f7f848f2279208","isMergeCommit":false,"messageTitle":"Add parser class","messageBody":"Extract command logic functionality to Parser class.\n","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":55}}},{"hash":"450721ec5138124f9c2001b588cfd004562bc4cc","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"wzhua02":{"java":447,"md":0,"fxml":0,"sh":0,"bat":8,"gradle":0,"txt":25}},"authorContributionVariance":{"wzhua02":61615.67},"authorDisplayNameMap":{"wzhua02":"CS2103T-T13-1 WOO .. HUA"}}
