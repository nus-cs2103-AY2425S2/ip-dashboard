[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wzhua02"},"content":"    mainClass.set(\"baymax.Launcher\")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wzhua02"},"content":"checkstyle {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wzhua02"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wzhua02"},"content":"    archiveBaseName \u003d \"baymax\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wzhua02"},"content":"    archiveVersion \u003d \"v0.1\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"wzhua02":22,"-":39}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"T | 1 | read book","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"D | 0 | return book | 2025-05-01 15:30","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"E | 0 | project meeting | 2025-01-25 14:30 | 2025-01-25 16:30","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"T | 1 | join sports club","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"wzhua02":4}},{"path":"src/main/java/baymax/Baymax.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"import baymax.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"import baymax.util.Parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"import baymax.util.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":" * The main class for the Baymax chatbot.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":" * Handles user interactions and task management.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"public class Baymax {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"     * Constructs a Baymax instance.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"    public Baymax() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"     * Processes the user input and returns the corresponding response.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"     * @param input The user input as a string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"     * @return A String array, where the first value is the command type the second value is the response generated","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"     *      after parsing the input.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"    public String[] getResponse(String input) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"        return Parser.parse(input, tasks, storage);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"wzhua02":33}},{"path":"src/main/java/baymax/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"public class Launcher {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"wzhua02":12}},{"path":"src/main/java/baymax/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"import baymax.gui.MainWindow;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":" * A GUI for Baymax using FXML.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"    private Baymax baymax \u003d new Baymax();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBaymax(baymax); // inject the Baymax instance","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"            stage.show();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"wzhua02":34}},{"path":"src/main/java/baymax/exception/BaymaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax.exception;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":" * Represents an exception that occurs when there is an error in the baymax package.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"public class BaymaxException extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"     * Constructs a new BaymaxException with the specified message.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"     * @param message the error message detailing the cause of the exception.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"    public BaymaxException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"        super(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"wzhua02":15}},{"path":"src/main/java/baymax/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax.gui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wzhua02"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wzhua02"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wzhua02"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wzhua02"},"content":"    private void flip() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wzhua02"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wzhua02"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wzhua02"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wzhua02"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wzhua02"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wzhua02"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wzhua02"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wzhua02"},"content":"    private void changeDialogStyle(String commandType) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wzhua02"},"content":"        switch(commandType) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wzhua02"},"content":"        case \"todo\", \"deadline\", \"event\" -\u003e {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wzhua02"},"content":"            dialog.getStyleClass().add(\"add-label\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wzhua02"},"content":"        case \"mark\", \"unmark\" -\u003e {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wzhua02"},"content":"            dialog.getStyleClass().add(\"marked-label\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wzhua02"},"content":"        case \"delete\" -\u003e {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wzhua02"},"content":"            dialog.getStyleClass().add(\"delete-label\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wzhua02"},"content":"        default -\u003e {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wzhua02"},"content":"            // Do nothing","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wzhua02"},"content":"    public static DialogBox getBaymaxDialog(String text, Image img, String commandType) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wzhua02"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wzhua02"},"content":"        db.flip();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wzhua02"},"content":"        db.changeDialogStyle(commandType);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wzhua02"},"content":"        return db;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"wzhua02":79}},{"path":"src/main/java/baymax/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax.gui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"import baymax.Baymax;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"    private Baymax baymax;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/hiro.png\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"    private Image baymaxImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/baymax.jpeg\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wzhua02"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wzhua02"},"content":"    /** Injects the Baymax instance */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wzhua02"},"content":"    public void setBaymax(Baymax d) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wzhua02"},"content":"        baymax \u003d d;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wzhua02"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wzhua02"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wzhua02"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wzhua02"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wzhua02"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wzhua02"},"content":"        String[] responseArray \u003d baymax.getResponse(input);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wzhua02"},"content":"        String commandType \u003d responseArray[0];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wzhua02"},"content":"        String response \u003d responseArray[1];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wzhua02"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wzhua02"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wzhua02"},"content":"                DialogBox.getBaymaxDialog(response, baymaxImage, commandType)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wzhua02"},"content":"        );","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wzhua02"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wzhua02"},"content":"        // If the user inputs \"bye\", close the application","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wzhua02"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wzhua02"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wzhua02"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wzhua02"},"content":"            delay.play();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"wzhua02":66}},{"path":"src/main/java/baymax/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":" * Represents a deadline task with a specific due date and time.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"    protected String type;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"    protected LocalDateTime deadlineDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"     * Constructs a Deadline task with a description and due date.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"     * @param description  The description of the deadline task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"     * @param deadlineDate The due date and time of the deadline task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"    public Deadline(String description, LocalDateTime deadlineDate) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"        super(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"     * Constructs a Deadline task with a description, due date, and completion status.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"     * @param description  The description of the deadline task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"     * @param deadlineDate The due date and time of the deadline task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"     * @param isDone       The completion status of the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"    public Deadline(String description, LocalDateTime deadlineDate, boolean isDone) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"        super(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wzhua02"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wzhua02"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wzhua02"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wzhua02"},"content":"     * Returns the formatted due date of the deadline task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wzhua02"},"content":"     * @return The deadline date/time in \"dd MMM yyyy HH:mm\" format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wzhua02"},"content":"    public String getDeadlineDate() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wzhua02"},"content":"        return deadlineDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wzhua02"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wzhua02"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wzhua02"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wzhua02"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wzhua02"},"content":"        String typeStr \u003d \"[\" + this.type + \"]\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wzhua02"},"content":"        String markStr \u003d \"[\" + getStatusIcon() + \"] \";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wzhua02"},"content":"        return typeStr + markStr + getDescription() + \" (by: \" + getDeadlineDate() + \")\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wzhua02"},"content":"     * Converts the deadline task into a formatted string for saving.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wzhua02"},"content":"     * @return A formatted string representing the deadline task for storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wzhua02"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wzhua02"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wzhua02"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wzhua02"},"content":"                + this.deadlineDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"wzhua02":71}},{"path":"src/main/java/baymax/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":" * Represents an event task with a start date/time and an end date/time.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"    protected String type;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"    protected LocalDateTime toDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"    protected LocalDateTime fromDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"     * Constructs an Event task with a description, start date, and end date.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"     * @param fromDate    The start date/time of the event.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"     * @param toDate      The end date/time of the event.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"    public Event(String description, LocalDateTime fromDate, LocalDateTime toDate) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"        super(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"     * Constructs an Event task with a description, start date, end date, and completion status.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"     * @param fromDate    The start date/time of the event.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"     * @param toDate      The end date/time of the event.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wzhua02"},"content":"     * @param isDone      The completion status of the event.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wzhua02"},"content":"    public Event(String description, LocalDateTime fromDate, LocalDateTime toDate, boolean isDone) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wzhua02"},"content":"        super(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wzhua02"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wzhua02"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wzhua02"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wzhua02"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wzhua02"},"content":"     * Returns the formatted end date of the event.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wzhua02"},"content":"     * @return The end date/time in \"dd MMM yyyy HH:mm\" format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wzhua02"},"content":"    public String getToDate() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wzhua02"},"content":"        return toDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wzhua02"},"content":"     * Returns the formatted start date of the event.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wzhua02"},"content":"     * @return The start date/time in \"dd MMM yyyy HH:mm\" format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wzhua02"},"content":"    public String getFromDate() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wzhua02"},"content":"        return fromDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wzhua02"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wzhua02"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wzhua02"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wzhua02"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wzhua02"},"content":"        String typeStr \u003d \"[\" + this.type + \"]\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wzhua02"},"content":"        String markStr \u003d \"[\" + getStatusIcon() + \"] \";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wzhua02"},"content":"        String fromToStr \u003d \" (from: \" + getFromDate() + \") (to: \" + getToDate() + \")\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wzhua02"},"content":"        return typeStr + markStr + getDescription() + fromToStr;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wzhua02"},"content":"     * Converts the event task into a formatted string for saving.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wzhua02"},"content":"     * @return A formatted string representing the event for storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wzhua02"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wzhua02"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wzhua02"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + getDescription()","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wzhua02"},"content":"                + \" | \" + this.fromDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wzhua02"},"content":"                + \" | \" + this.toDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"wzhua02":87}},{"path":"src/main/java/baymax/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":" * Represents an abstract task with a description and completion status.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"    protected String description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"     * Constructs a Task with a given description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"     * Returns a status icon indicating whether the task is done.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"     * @return \"X\" if the task is completed, otherwise a space \" \".","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"     * Marks or unmarks the task as completed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"     * @param mark {@code true} to mark as done, {@code false} to unmark.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wzhua02"},"content":"    public void marker(boolean mark) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wzhua02"},"content":"        this.isDone \u003d mark;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wzhua02"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wzhua02"},"content":"     * @return The task description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wzhua02"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wzhua02"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wzhua02"},"content":"        return description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wzhua02"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wzhua02"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wzhua02"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wzhua02"},"content":"        return description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wzhua02"},"content":"     * Converts the task into a formatted string for saving.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wzhua02"},"content":"     * This method must be implemented by subclasses to define","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wzhua02"},"content":"     * how the task should be stored.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wzhua02"},"content":"     * @return A formatted string representing the task for storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wzhua02"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"wzhua02":66}},{"path":"src/main/java/baymax/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"import baymax.exception.BaymaxException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"import baymax.util.Parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"import baymax.util.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":" * Manages a list of tasks, allowing addition, removal, retrieval, and persistence.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"public class TaskList {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"     * Constructs a TaskList from a list of task strings.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"     * Each task string is parsed and converted into the appropriate task type.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"     * @param taskListString The list of task strings retrieved from storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"    public TaskList(ArrayList\u003cString\u003e taskListString) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"            for (String line : taskListString) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wzhua02"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wzhua02"},"content":"                boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wzhua02"},"content":"                switch (type) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wzhua02"},"content":"                case \"T\" -\u003e taskList.add(new Todo(parts[2], isDone));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wzhua02"},"content":"                case \"D\" -\u003e taskList.add(new Deadline(parts[2], Parser.parseDateTime(parts[3]), isDone));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wzhua02"},"content":"                case \"E\" -\u003e taskList.add(new Event(parts[2], Parser.parseDateTime(parts[3]),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wzhua02"},"content":"                        Parser.parseDateTime(parts[4]), isDone));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wzhua02"},"content":"                default -\u003e throw new BaymaxException(\"Task type not found.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wzhua02"},"content":"        } catch (BaymaxException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wzhua02"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wzhua02"},"content":"     * Returns a formatted string of all tasks in the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wzhua02"},"content":"     * @return A string representation of the task list, or a message if the list is empty.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wzhua02"},"content":"    public String listTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wzhua02"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wzhua02"},"content":"            return \"No tasks found!\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wzhua02"},"content":"        return \"Tasks:\\n\" + IntStream.range(0, taskList.size())","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wzhua02"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + taskList.get(i))","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wzhua02"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wzhua02"},"content":"     * Returns a formatted string of tasks that contain the specified search term.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wzhua02"},"content":"     * @param findTask The keyword to search for within task descriptions.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wzhua02"},"content":"     * @return A string representation of tasks matching the search term, or a message if no tasks are found.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wzhua02"},"content":"     * @throws BaymaxException If the search term is empty.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wzhua02"},"content":"    public String listTasks(String findTask) throws BaymaxException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wzhua02"},"content":"        if (findTask.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wzhua02"},"content":"            throw new BaymaxException(\"Let me know what task you want to find.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wzhua02"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wzhua02"},"content":"            return \"No tasks found!\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wzhua02"},"content":"        return IntStream.range(0, taskList.size())","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wzhua02"},"content":"                .filter(i -\u003e taskList.get(i).toString().toLowerCase().contains(findTask.toLowerCase()))","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wzhua02"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + taskList.get(i))","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wzhua02"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wzhua02"},"content":"     * Retrieves a task by its index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wzhua02"},"content":"     * @param idx The index of the task (0-based).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wzhua02"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wzhua02"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wzhua02"},"content":"        return taskList.get(idx);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wzhua02"},"content":"     * Retrieves the 1-based index of a given task in the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wzhua02"},"content":"     * @param task The task to find.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wzhua02"},"content":"     * @return The 1-based index of the task, or 0 if not found.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wzhua02"},"content":"    public int getTaskIdx(Task task) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wzhua02"},"content":"        return taskList.indexOf(task) + 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wzhua02"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wzhua02"},"content":"     * @param newTask The task to add to the list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wzhua02"},"content":"     * @throws BaymaxException If there is an issue with adding the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wzhua02"},"content":"    public void addTask(Task newTask) throws BaymaxException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wzhua02"},"content":"        taskList.add(newTask);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wzhua02"},"content":"     * Removes a task from the list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wzhua02"},"content":"     * @param theTask The task to remove from the list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wzhua02"},"content":"     * @throws BaymaxException If the task is not found.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wzhua02"},"content":"    public void removeTask(Task theTask) throws BaymaxException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wzhua02"},"content":"        taskList.remove(theTask);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"wzhua02"},"content":"     * Finds tasks that contain the specified substring in their descriptions.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wzhua02"},"content":"     * @param subString The substring to search for.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"wzhua02"},"content":"     * @return A list of tasks that contain the given substring.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wzhua02"},"content":"     * @throws BaymaxException If no tasks are found containing the substring.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"wzhua02"},"content":"    public ArrayList\u003cTask\u003e findTask(String subString) throws BaymaxException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"wzhua02"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"wzhua02"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"wzhua02"},"content":"            if (task.getDescription().toLowerCase().contains(subString)) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"wzhua02"},"content":"                foundTasks.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"wzhua02"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"wzhua02"},"content":"            throw new BaymaxException(\"No tasks found containing: \" + subString);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"wzhua02"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"wzhua02"},"content":"            return foundTasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"wzhua02"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"wzhua02"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"wzhua02"},"content":"    public int size() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"wzhua02"},"content":"        return taskList.size();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"wzhua02"},"content":"     * Saves the current task list to the specified storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"wzhua02"},"content":"     * @param storage The storage system to save tasks to.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"wzhua02"},"content":"    public void save(Storage storage) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"wzhua02"},"content":"        ArrayList\u003cString\u003e saveList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"wzhua02"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"wzhua02"},"content":"            saveList.add(task.toSaveFormat());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"wzhua02"},"content":"        storage.save(saveList);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"wzhua02":168}},{"path":"src/main/java/baymax/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":" * Represents a Todo task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"package baymax.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":" * Represents a Todo task, which is a basic task with a description and completion status.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"    protected String description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"    protected String type;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"     * Constructs a new Todo task with the specified description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"        super(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"     * Constructs a new Todo task with the specified description and completion status.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"     * @param isDone      Whether the task is completed or not.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"        super(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wzhua02"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wzhua02"},"content":"     * @return A formatted string representing the Todo task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wzhua02"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wzhua02"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wzhua02"},"content":"        String typeStr \u003d \"[\" + this.type + \"]\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wzhua02"},"content":"        String markStr \u003d \"[\" + getStatusIcon() + \"] \";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wzhua02"},"content":"        return typeStr + markStr + getDescription();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wzhua02"},"content":"     * Returns a formatted string representation of the Todo task for saving.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wzhua02"},"content":"     * @return A formatted string representing the Todo task for storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wzhua02"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wzhua02"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wzhua02"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"wzhua02":57}},{"path":"src/main/java/baymax/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax.util;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"import baymax.exception.BaymaxException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"import baymax.task.Deadline;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"import baymax.task.Event;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"import baymax.task.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"import baymax.task.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"import baymax.task.Todo;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":" * The Parser class is responsible for parsing user input and executing the corresponding commands.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"public class Parser {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"     * Parses the user input and executes the appropriate command.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"     * @param input   The user input string.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"     * @param tasks   The TaskList containing user tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"     * @param storage The Storage handler for saving and loading tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"     * @return A String that Baymax will reply to the user based on the input.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"    public static String[] parse(String input, TaskList tasks, Storage storage) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"        String[] args \u003d input.split(\" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"        String cmd \u003d args[0].toLowerCase();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"        String returnString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"            switch (cmd) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"            case \"list\" -\u003e {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"                String replyLine \u003d tasks.listTasks();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wzhua02"},"content":"                returnString \u003d \"Here are your tasks:\\n\" + replyLine;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wzhua02"},"content":"            case \"mark\" -\u003e {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wzhua02"},"content":"                if (args.length \u003c 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wzhua02"},"content":"                    throw new BaymaxException(\"Do let me know which task to mark/unmark.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wzhua02"},"content":"                int idx \u003d Integer.parseInt(args[1]) - 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wzhua02"},"content":"                if (idx \u003c 0 || idx \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wzhua02"},"content":"                    throw new BaymaxException(\"I do not know which task you are referring to.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wzhua02"},"content":"                Task theTask \u003d tasks.getTask(idx);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wzhua02"},"content":"                theTask.marker(true);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wzhua02"},"content":"                tasks.save(storage);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wzhua02"},"content":"                returnString \u003d \"Okie dokie this is marked as done:\\n\" + theTask;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wzhua02"},"content":"            case \"unmark\" -\u003e {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wzhua02"},"content":"                if (args.length \u003c 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wzhua02"},"content":"                    throw new BaymaxException(\"Do let me know which task to mark/unmark.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wzhua02"},"content":"                int idx \u003d Integer.parseInt(args[1]) - 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wzhua02"},"content":"                if (idx \u003c 0 || idx \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wzhua02"},"content":"                    throw new BaymaxException(\"I do not know which task you are referring to.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wzhua02"},"content":"                Task theTask \u003d tasks.getTask(idx);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wzhua02"},"content":"                theTask.marker(false);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wzhua02"},"content":"                tasks.save(storage);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wzhua02"},"content":"                returnString \u003d \"Okie this is marked as not done yet:\\n\" + theTask;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wzhua02"},"content":"            case \"todo\" -\u003e {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wzhua02"},"content":"                int spaceIdx \u003d input.indexOf(\" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wzhua02"},"content":"                if (spaceIdx \u003c 0) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wzhua02"},"content":"                    throw new BaymaxException(\"Let me know what task you wish to add.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wzhua02"},"content":"                String taskDescribe \u003d input.substring(spaceIdx + 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wzhua02"},"content":"                Task newTask \u003d new Todo(taskDescribe);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wzhua02"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wzhua02"},"content":"                tasks.save(storage);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wzhua02"},"content":"                returnString \u003d \"Got it. Added this task:\\n\" + newTask + \"\\nNow you have \" + tasks.size()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wzhua02"},"content":"                        + \" tasks in the list.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wzhua02"},"content":"            case \"deadline\" -\u003e {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wzhua02"},"content":"                int spaceIdx \u003d input.indexOf(\" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wzhua02"},"content":"                if (spaceIdx \u003c 0) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wzhua02"},"content":"                    throw new BaymaxException(\"Let me know what task you wish to add.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wzhua02"},"content":"                int byIdx \u003d input.indexOf(\"/by\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wzhua02"},"content":"                if (byIdx \u003c 0) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wzhua02"},"content":"                    throw new BaymaxException(\"Let me know the deadline of the task.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wzhua02"},"content":"                String taskDescribe \u003d input.substring(spaceIdx + 1, byIdx - 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wzhua02"},"content":"                String deadlineString \u003d input.substring(byIdx + 4);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wzhua02"},"content":"                Task newTask \u003d new Deadline(taskDescribe, Parser.parseDateTime(deadlineString));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wzhua02"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wzhua02"},"content":"                tasks.save(storage);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wzhua02"},"content":"                returnString \u003d \"Got it. Added this task:\\n\" + newTask + \"\\nNow you have \" + tasks.size()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wzhua02"},"content":"                        + \" tasks in the list.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wzhua02"},"content":"            case \"event\" -\u003e {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wzhua02"},"content":"                int spaceIdx \u003d input.indexOf(\" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wzhua02"},"content":"                if (spaceIdx \u003c 0) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wzhua02"},"content":"                    throw new BaymaxException(\"Let me know what task you wish to add.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wzhua02"},"content":"                int fromIdx \u003d input.indexOf(\"/from\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wzhua02"},"content":"                int toIdx \u003d input.indexOf(\"/to\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wzhua02"},"content":"                if (fromIdx \u003c 0 || toIdx \u003c 0) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wzhua02"},"content":"                    throw new BaymaxException(\"Let me know when the event starts and ends.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wzhua02"},"content":"                String taskDescribe \u003d input.substring(spaceIdx + 1, fromIdx - 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wzhua02"},"content":"                String fromDate \u003d input.substring(fromIdx + 6, toIdx - 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wzhua02"},"content":"                String toDate \u003d input.substring(toIdx + 4);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wzhua02"},"content":"                Task newTask \u003d new Event(taskDescribe, Parser.parseDateTime(fromDate), Parser.parseDateTime(toDate));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wzhua02"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wzhua02"},"content":"                tasks.save(storage);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wzhua02"},"content":"                returnString \u003d \"Got it. Added this task:\\n\" + newTask + \"\\nNow you have \" + tasks.size()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wzhua02"},"content":"                        + \" tasks in the list.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wzhua02"},"content":"            case \"delete\" -\u003e {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wzhua02"},"content":"                String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wzhua02"},"content":"                if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wzhua02"},"content":"                    throw new BaymaxException(\"Do let me know which task to mark/unmark.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wzhua02"},"content":"                int idx \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wzhua02"},"content":"                if (idx \u003c 0 || idx \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wzhua02"},"content":"                    throw new BaymaxException(\"I do not know which task you are referring to.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wzhua02"},"content":"                Task theTask \u003d tasks.getTask(idx);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wzhua02"},"content":"                tasks.removeTask(theTask);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wzhua02"},"content":"                tasks.save(storage);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wzhua02"},"content":"                returnString \u003d \"Task removed!\\n\" + \"   \" + theTask + \"\\nNow you have \" + tasks.size()","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wzhua02"},"content":"                        + \" tasks in the list.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wzhua02"},"content":"            case \"bye\" -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wzhua02"},"content":"                returnString \u003d \"Goodbye! *slowly deflates*\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wzhua02"},"content":"            case \"hello\" -\u003e {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"wzhua02"},"content":"                returnString \u003d \"Hello! I\u0027m Baymax\\n\" + \"How can I assist you?\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"wzhua02"},"content":"            case \"find\" -\u003e {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"wzhua02"},"content":"                if (args.length \u003c 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"wzhua02"},"content":"                    throw new BaymaxException(\"Let me know what task you would like to find.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"wzhua02"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"wzhua02"},"content":"                returnString \u003d \"These are the tasks you are looking for:\\n\" + tasks.listTasks(args[1]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"wzhua02"},"content":"            default -\u003e {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"wzhua02"},"content":"                throw new BaymaxException(\"I cannot comprehend what you are saying.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"wzhua02"},"content":"        } catch (BaymaxException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"wzhua02"},"content":"            returnString \u003d e.getMessage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"wzhua02"},"content":"        return new String[]{cmd, returnString};","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"wzhua02"},"content":"     * Parses a date-time string into a LocalDateTime object.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"wzhua02"},"content":"     * @param dateTimeStr The date-time string to be parsed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"wzhua02"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"wzhua02"},"content":"     * @throws BaymaxException If the date-time string does not match any valid format.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"wzhua02"},"content":"    public static LocalDateTime parseDateTime(String dateTimeStr) throws BaymaxException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"wzhua02"},"content":"        String[] patterns \u003d {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"wzhua02"},"content":"            \"yyyy-MM-dd HH:mm\", //e.g. 2025-01-27 12:30","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"wzhua02"},"content":"            \"dd/MM/yyyy HH:mm\", //e.g. 27/01/2025 12:30","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"wzhua02"},"content":"            \"yyyy MM dd HH:mm\", //e.g. 2025 01 27 12:30","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"wzhua02"},"content":"        };","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"wzhua02"},"content":"        for (String pattern : patterns) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"wzhua02"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"wzhua02"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"wzhua02"},"content":"                return LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"wzhua02"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"wzhua02"},"content":"                // Ignore and try the next pattern","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"wzhua02"},"content":"        throw new BaymaxException(\"No valid date-time pattern found for: \" + dateTimeStr","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"wzhua02"},"content":"                + \"\\n\" + INDENT + \"Try to format the date-time in the following pattern:\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"wzhua02"},"content":"                + \"\\n\" + INDENT + \"e.g. 2025-01-27 12:30\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"wzhua02"},"content":"                + \"\\n\" + INDENT + INDENT + \" 27/01/2025 12:30\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"wzhua02"},"content":"                + \"\\n\" + INDENT + INDENT + \" 2025 01 27 12:30\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"wzhua02":174}},{"path":"src/main/java/baymax/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax.util;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"import java.io.File;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":" * This class handles reading from and writing to a file that stores tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":" * It provides methods to load data from the file and save data to the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"public class Storage {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"    private static final Path FILE_PATH \u003d Paths.get(\"data\", \"tasks.txt\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"    private File dataFile; // The file where tasks are stored","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"     * If the file does not exist, it creates the file and its parent directories.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"    public Storage() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"            dataFile \u003d new File(FILE_PATH.toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"                File dataDir \u003d new File(FILE_PATH.getParent().toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"                dataDir.mkdirs();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"                System.out.println(\"\\\"tasks.txt\\\" not found in directory. Created a new one.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wzhua02"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wzhua02"},"content":"            System.err.println(\"File not Found Error: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wzhua02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wzhua02"},"content":"            System.err.println(\"Create File Error: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wzhua02"},"content":"     * Loads the list of tasks from the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wzhua02"},"content":"     * Each line in the file represents a single task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wzhua02"},"content":"     * @return an ArrayList containing the tasks read from the file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wzhua02"},"content":"    public ArrayList\u003cString\u003e load() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wzhua02"},"content":"        ArrayList\u003cString\u003e returnList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wzhua02"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wzhua02"},"content":"            Scanner fileScanner \u003d new Scanner(dataFile);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wzhua02"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wzhua02"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wzhua02"},"content":"                returnList.add(line);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wzhua02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wzhua02"},"content":"            System.err.println(\"Scanner Error: \" + e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wzhua02"},"content":"        return returnList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wzhua02"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wzhua02"},"content":"     * Saves a list of tasks to the file, each task on a new line.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wzhua02"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wzhua02"},"content":"     * @param saveList an ArrayList containing the tasks to be saved to the file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wzhua02"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wzhua02"},"content":"    public void save(ArrayList\u003cString\u003e saveList) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wzhua02"},"content":"        try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wzhua02"},"content":"            PrintWriter writer \u003d new PrintWriter(new FileWriter(dataFile));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wzhua02"},"content":"            for (String task : saveList) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wzhua02"},"content":"                writer.println(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wzhua02"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wzhua02"},"content":"            writer.close();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wzhua02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wzhua02"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wzhua02"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"wzhua02":79}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/23.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"wzhua02":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/23.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"baymax.gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"wzhua02":19}},{"path":"src/test/java/baymax/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax.util;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"import baymax.exception.BaymaxException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"import baymax.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"import baymax.task.Todo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"class ParserTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"    void parseDateTime_validPatterns_parsedCorrectly() throws BaymaxException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"        assertEquals(LocalDateTime.of(2025, 1, 27, 12, 30),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"                Parser.parseDateTime(\"2025-01-27 12:30\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"        assertEquals(LocalDateTime.of(2025, 1, 27, 12, 30),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"                Parser.parseDateTime(\"27/01/2025 12:30\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"        assertEquals(LocalDateTime.of(2025, 1, 27, 12, 30),","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"                Parser.parseDateTime(\"2025 01 27 12:30\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"    void parseDateTime_invalidPattern_exceptionThrown() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"        BaymaxException exception \u003d assertThrows(BaymaxException.class, () -\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"                Parser.parseDateTime(\"01-27-2025 12:30\")); // Invalid pattern","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"        assertTrue(exception.getMessage().contains(\"No valid date-time pattern found\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wzhua02"},"content":"    void parse_listCommand_tasksListed() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wzhua02"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wzhua02"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wzhua02"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wzhua02"},"content":"        String expectedOutput \u003d \"Here are your tasks:\\n\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wzhua02"},"content":"        assertEquals(expectedOutput, Parser.parse(input, tasks, storage));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wzhua02"},"content":"    void parse_markCommand_taskMarked() throws BaymaxException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wzhua02"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wzhua02"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wzhua02"},"content":"        tasks.addTask(new Todo(\"Sample Task\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wzhua02"},"content":"        String input \u003d \"mark 1\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wzhua02"},"content":"        String expectedOutput \u003d \"Okie dokie this is marked as done:\\n[T][X] Sample Task\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wzhua02"},"content":"        assertEquals(expectedOutput, Parser.parse(input, tasks, storage));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wzhua02"},"content":"    void parse_unmarkCommand_taskUnmarked() throws BaymaxException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wzhua02"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wzhua02"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wzhua02"},"content":"        tasks.addTask(new Todo(\"Sample Task\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wzhua02"},"content":"        tasks.getTask(0).marker(true); // Mark the task first","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wzhua02"},"content":"        String input \u003d \"unmark 1\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wzhua02"},"content":"        String expectedOutput \u003d \"Okie this is marked as not done yet:\\n[T][ ] Sample Task\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wzhua02"},"content":"        assertEquals(expectedOutput, Parser.parse(input, tasks, storage));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wzhua02"},"content":"    void parse_todoCommand_taskAdded() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wzhua02"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wzhua02"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wzhua02"},"content":"        String input \u003d \"todo Sample Task\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wzhua02"},"content":"        String expectedOutput \u003d \"Got it. Added this task:\\n[T][ ] Sample Task\\nNow you have 1 tasks in the list.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wzhua02"},"content":"        assertEquals(expectedOutput, Parser.parse(input, tasks, storage));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wzhua02"},"content":"    void parse_deadlineCommand_taskAdded() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wzhua02"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wzhua02"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wzhua02"},"content":"        String input \u003d \"deadline Sample Task /by 2025-01-27 12:30\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wzhua02"},"content":"        String expectedOutput \u003d \"Got it. Added this task:\\n[D][ ] Sample Task (by: Jan 27 2025 12:30)\\nNow you have 1 tasks in the list.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wzhua02"},"content":"        assertEquals(expectedOutput, Parser.parse(input, tasks, storage));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wzhua02"},"content":"    void parse_eventCommand_taskAdded() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wzhua02"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wzhua02"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wzhua02"},"content":"        String input \u003d \"event Sample Event /from 2025-01-27 12:30 /to 2025-01-27 14:30\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wzhua02"},"content":"        String expectedOutput \u003d \"Got it. Added this task:\\n[E][ ] Sample Event (from: Jan 27 2025 12:30 to: Jan 27 2025 14:30)\\nNow you have 1 tasks in the list.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wzhua02"},"content":"        assertEquals(expectedOutput, Parser.parse(input, tasks, storage));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wzhua02"},"content":"    void parse_deleteCommand_taskRemoved() throws BaymaxException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wzhua02"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wzhua02"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wzhua02"},"content":"        tasks.addTask(new Todo(\"Sample Task\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wzhua02"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wzhua02"},"content":"        String expectedOutput \u003d \"Task removed!\\n   [T][ ] Sample Task\\nNow you have 0 tasks in the list.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wzhua02"},"content":"        assertEquals(expectedOutput, Parser.parse(input, tasks, storage));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wzhua02"},"content":"    void parse_findCommand_tasksFound() throws BaymaxException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wzhua02"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wzhua02"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wzhua02"},"content":"        tasks.addTask(new Todo(\"Sample Task\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wzhua02"},"content":"        tasks.addTask(new Todo(\"Another Task\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wzhua02"},"content":"        String input \u003d \"find Sample\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wzhua02"},"content":"        String expectedOutput \u003d \"These are the tasks you are looking for:\\n1.[T][ ] Sample Task\\n\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wzhua02"},"content":"        assertEquals(expectedOutput, Parser.parse(input, tasks, storage));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wzhua02"},"content":"    void parse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wzhua02"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wzhua02"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wzhua02"},"content":"        String input \u003d \"invalid\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wzhua02"},"content":"        BaymaxException exception \u003d assertThrows(BaymaxException.class, () -\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wzhua02"},"content":"                Parser.parse(input, tasks, storage));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wzhua02"},"content":"        assertTrue(exception.getMessage().contains(\"I cannot comprehend what you are saying.\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"wzhua02":124}},{"path":"src/test/java/baymax/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"package baymax.util;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"class StorageTest {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"    private Path testFile;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"    void setUp(@TempDir Path tempDir) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"        testFile \u003d tempDir.resolve(\"tasks.txt\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"    void testFileCreation() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":"        assertTrue(Files.exists(testFile));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wzhua02"},"content":"    void testSaveAndLoad() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wzhua02"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e(List.of(\"Task 1\", \"Task 2\", \"Task 3\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wzhua02"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wzhua02"},"content":"        ArrayList\u003cString\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wzhua02"},"content":"        assertEquals(tasks, loadedTasks);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wzhua02"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wzhua02"},"content":"    void testLoadFromEmptyFile() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wzhua02"},"content":"        ArrayList\u003cString\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wzhua02"},"content":"        assertTrue(loadedTasks.isEmpty());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wzhua02"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wzhua02"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wzhua02"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"wzhua02":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wzhua02"},"content":"todo borrow book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wzhua02"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wzhua02"},"content":"deadline do homework /by 2025-01-24 16:30","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wzhua02"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wzhua02"},"content":"event party /from 2025-01-27 20:00 /to 2025-01-27 22:00","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wzhua02"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wzhua02"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wzhua02"},"content":"unmark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wzhua02"},"content":"delete 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"bwahhduehuhr","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wzhua02"},"content":"todo","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wzhua02"},"content":"deadline sdfsf","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wzhua02"},"content":"deadline wrongDate /by efuh","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wzhua02"},"content":"event aaaaaa /dfs","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wzhua02"},"content":"event wrongDate /from sdada /to 09239123","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wzhua02"},"content":"mark 1000","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wzhua02"},"content":"unmark 0","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"delete 1000","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wzhua02"},"content":"delete 1","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wzhua02"},"content":"delete 1","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wzhua02"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"wzhua02":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wzhua02"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\baymax\\Baymax.java","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wzhua02"},"content":"java -classpath ..\\bin Baymax \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wzhua02"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wzhua02"},"content":"    echo ********** TEST FAILED **********","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wzhua02"},"content":"    echo See differences above.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wzhua02"},"content":"    exit /b 1","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wzhua02"},"content":") ELSE (","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wzhua02"},"content":"    echo TEST PASSED!","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wzhua02"},"content":")","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"wzhua02":9,"-":19}}]
