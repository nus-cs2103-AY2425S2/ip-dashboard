{"authorDailyContributionsMap":{"qilstiano":[{"date":"2025-01-23","commitResults":[{"hash":"d3a0f150565d35709f871df317ed7f54b37ce54f","isMergeCommit":false,"messageTitle":"feat/greeting + feat/farewell","messageBody":"Einstein\n- added basic greeting\n- added basic farewell\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":10}}},{"hash":"880cf2747ed8fe269983e05fb6b49549a994efed","isMergeCommit":false,"messageTitle":"Revert \"feat/greeting + feat/farewell\"","messageBody":"This reverts commit d3a0f150565d35709f871df317ed7f54b37ce54f.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":25}}},{"hash":"310240ba146863b6c4f9ecee5ec1fa1e026ac634","isMergeCommit":false,"messageTitle":"feat/einstein","messageBody":"feat/greeting\nfeat/farewell\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":10}}},{"hash":"9575cd033ff73d254335637c407fe423efac4c9d","isMergeCommit":false,"messageTitle":"feat/echo","messageBody":"feat/echo\nstyles/ascii\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":5}}},{"hash":"6b92e7aee4a19c054c64491017e314909313bb03","isMergeCommit":false,"messageTitle":"feat/tasks","messageBody":"feat/add-tasks\nfeat/list-tasks\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":2}}},{"hash":"9db2078c0724d8343c5fcb5f419c89592985b8f1","isMergeCommit":false,"messageTitle":"feat/tasks","messageBody":"feat/mark-done\nfeat/unmark-done\nstyles/gradient-ascii\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":37}}}]},{"date":"2025-01-24","commitResults":[{"hash":"266cad8cdbd3f8fa3df112f8d19fec63c7e1e740","isMergeCommit":false,"messageTitle":"feat/tasks","messageBody":"feat/todo\nfeat/event\nfeat/deadline\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":116,"deletions":41}}},{"hash":"3a861fd26ecf92948d6abab4f49e839f581a19f5","isMergeCommit":false,"messageTitle":"testing/automated-ui-test","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"bat":{"insertions":2,"deletions":2},"sh":{"insertions":1,"deletions":1}}},{"hash":"7660470d29f29a05e18c88e8ecabb451be323aac","isMergeCommit":false,"messageTitle":"feat/error-handling","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":49}}},{"hash":"8ce7b4d892e0cd2a53ad0497ed5ab9593af32b98","isMergeCommit":false,"messageTitle":"feat/delete","messageBody":"- feat/delete\n- feat/help\n- styles/einstein-response\n- styles/responder\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":45}}},{"hash":"791251ec2b8c833f84d6b6b0bfabbc80c77a84a0","isMergeCommit":false,"messageTitle":"README/v1","messageBody":"basic README added","fileTypesAndContributionMap":{"md":{"insertions":288,"deletions":26}}},{"hash":"fc8aa1740356905afd13098a7020e0d82b65b0b4","isMergeCommit":false,"messageTitle":"update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]},{"date":"2025-02-01","commitResults":[{"hash":"cffb46e5a256762c1606ceebcf5bb6172887ef86","isMergeCommit":false,"messageTitle":"Add task persistence with file-based storage","messageBody":"Implement automatic saving and loading of tasks to/from a file to ensure data persistence.\n\n* Save tasks to `./data/duke.txt` whenever the task list changes.\n* Load tasks from the file when the chatbot starts.\n* Handle cases where the file or directory does not exist (Stretch goal)\n* Add basic handling for corrupted data in the file.\n* Use OS-independent file paths for compatibility across systems.\n\nThis ensures that tasks are preserved between sessions and improves the chatbot\u0027s usability.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":109,"deletions":0}}},{"hash":"844082d1484e101ae3c9710dcc8de1777d198797","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"Add task persistence with file-based storage\n\n- Save tasks to `./data/duke.txt` whenever the task list changes.\n- Load tasks from the file when the chatbot starts.\n- Handle cases where the file or directory does not exist.\n- Add basic handling for corrupted data in the file.\n- Use OS-independent file paths for compatibility across systems.\n\nThis ensures that tasks are preserved between sessions and improves the chatbot\u0027s usability.\n","fileTypesAndContributionMap":{}},{"hash":"8581a5acdbe3ac8b53ff850a380bd995a92b059e","isMergeCommit":false,"messageTitle":"Update Event and Deadline classes to use LocalDateTime","messageBody":"Refactor Event and Deadline classes to use java.time.LocalDateTime for date and time handling.\n\n* Replace String-based date fields with LocalDateTime in Event and Deadline classes.\n* Add date parsing logic to handle user input in formats like \"dd/MM/yyyy HHmm\".\n* Format dates for display in a user-friendly format (e.g., \"MMM dd yyyy, h:mm a\").\n* Update file saving and loading logic to support LocalDateTime serialization.\n\nThis change improves date and time handling, making it more robust and user-friendly.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":7}}},{"hash":"edb3e962ca40e7d6f7d8dc66f2b534414e825baf","isMergeCommit":false,"messageTitle":"Add date parsing, update deadline/event handling, and implement stretch goal","messageBody":"Enhance chatbot to handle dates and times effectively.\n\n* Add date parsing logic using `DateTimeFormatter` to parse user input (e.g., \"dd/MM/yyyy HHmm\").\n* Update `Deadline` and `Event` classes to use `LocalDateTime` for date and time storage.\n* Modify `handleDeadlineCommand` and `handleEventCommand` to parse and store dates correctly.\n* Implement stretch goal: Add `list \u003cdate\u003e` command to display tasks occurring on a specific date.\n* Update file saving and loading logic to support `LocalDateTime` serialization.\n\nThis change improves the chatbot\u0027s ability to understand and work with dates and times, providing a more intuitive user experience.\n","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":3}}},{"hash":"73494430e903cf3f5e96be495ae937af1f44402e","isMergeCommit":false,"messageTitle":"Update file handling and help function","messageBody":"Enhance chatbot functionality and improve file handling for date and time support.\n\n* Update `displayHelp` function to include the new `list \u003cdate\u003e` command and reflect the updated date format for deadlines and events.\n* Modify `saveTasksToFile` and `loadTasksFromFile` to handle `LocalDateTime` .\n* Ensure file saving and loading supports the new date and time format (dd/MM/yyyy HHmm).\n\nThese changes improve user guidance and ensure consistent handling of dates across file operations.\n","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":46}}},{"hash":"34ed5ddcc5857eef213fb3324106bd686a4a31d7","isMergeCommit":false,"messageTitle":"Update processCommands for date and time functionality","messageBody":"Enhance processCommands to support new date and time features.\n\n* Add support for parsing and handling dates in `deadline` and `event` commands.\n* Implement the `list \u003cdate\u003e` command to display tasks occurring on a specific date.\n* Improve error handling for invalid date formats and commands.\n* Ensure seamless integration with the updated `Deadline` and `Event` classes.\n\nThis change enables the chatbot to understand and process dates and times effectively, improving user interaction.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":4},"java":{"insertions":9,"deletions":4}}},{"hash":"7c9da7e9963c5cee083c16a48aa7145dd327ad40","isMergeCommit":false,"messageTitle":"Refactor list command handling to encapsulate logic in listTasks","messageBody":"Encapsulate the logic for handling the list command within the listTasks method.\n\n* Modify listTasks to handle both \"list\" and \"list \u003cdate\u003e\" commands.\n* Remove specific handling of \"list \u003cdate\u003e\" from processCommands.\n* Simplify processCommands to only call listTasks for list-related commands.\n* Ensure listTasksByDate remains unchanged and is called internally by listTasks.\n\nThis refactoring improves code readability and maintainability by centralizing the logic for listing tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":29}}},{"hash":"73ae7b10c86f4c70e4af9d0de680037df2ec37b4","isMergeCommit":true,"messageTitle":"Integrate branch-Level-8 into master, adding support for date and time handling.","messageBody":"Key changes included in this merge:\n* Added date parsing and formatting using `java.time.LocalDateTime`.\n* Updated `Deadline` and `Event` classes to store dates as `LocalDateTime`.\n* Implemented the `list \u003cdate\u003e` command to filter tasks by a specific date.\n* Refactored `listTasks` to handle both \"list\" and \"list \u003cdate\u003e\" commands.\n* Improved error handling for invalid date formats and commands.\n* Updated file saving and loading to support `LocalDateTime` serialization.\n\nThis merge enhances the chatbot\u0027s functionality by enabling robust date and time handling, improving user interaction and task management.\n","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"421bfb990dd40b877b195ad0dcffd9915ec66f62","isMergeCommit":false,"messageTitle":"Refactor: Apply OOP principles across classes and methods","messageBody":"Refactoring of methods and classes to improve modularity, reusability, and maintainability of the codebase.\n\nBy applying OOP principles, the code becomes easier to extend and maintain for better long-term scalability.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":431,"deletions":274}}},{"hash":"879ea0ff849e3b38db31da6fa6997a6d9591d0b9","isMergeCommit":true,"messageTitle":"Refactor codebase to adhere to OOP principles","messageBody":"Refactor the codebase to improve modularity, maintainability, and adherence to OOP principles.\n\nKey changes:\n- Extracted closely related code into separate classes:\n  - `Ui`: Handles all user interactions.\n  - `Storage`: Manages loading and saving tasks to/from a file.\n  - `Parser`: Parses user commands and returns appropriate `Command` objects.\n  - `TaskList`: Manages the list of tasks (e.g., adding, deleting, marking tasks).\n- Introduced the `Command` interface and implemented command classes (e.g., `AddCommand`, `DeleteCommand`, `ExitCommand`) to encapsulate the logic for each user command.\n- Simplified the `Einstein` class to delegate responsibilities to the extracted classes, improving readability and maintainability.\n\nBenefits of this refactoring:\n1. **Modularity**: Each class has a single responsibility, making the code easier to understand and extend.\n2. **Reusability**: Common functionality (e.g., parsing dates, saving tasks) is centralized and reusable.\n3. **Maintainability**: Changes to one part of the code (e.g., command logic) are isolated and less likely to affect other parts.\n4. **Scalability**: Adding new commands or features is now straightforward, as the structure is well-organized.\n\nThis refactoring ensures the codebase is more robust, flexible, and aligned with OOP best practices.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"9fd74a7cb98e1c3d323c6aaba216d611d8a9eeef","isMergeCommit":false,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"Refactor the codebase to organize classes into suitable Java packages.\n\nKey changes:\n- Created the following packages under `duke`:\n  - `einstein.command`: Contains all command-related classes (e.g., `AddCommand`, `DeleteCommand`).\n  - `einstein.exception`: Contains custom exceptions (e.g., `EinsteinException`).\n  - `einstein.storage`: Contains file storage-related classes (e.g., `Storage`).\n  - `einstein.task`: Contains task-related classes (e.g., `Task`, `Todo`, `Deadline`, `Event`).\n  - `einstein.ui`: Contains user interaction-related classes (e.g., `Ui`).\n- Updated package declarations and import statements in all classes to reflect the new package structure.\n- Moved the main application class (`Einstein`) to the root `einstein` package.\n\nBenefits of this refactoring:\n1. **Modularity**: Classes are grouped into packages based on their responsibilities, making the codebase easier to navigate and maintain.\n2. **Readability**: The package structure provides a clear separation of concerns, improving code readability.\n3. **Scalability**: The organized structure makes it easier to add new features or classes in the future.\n\nThis change aligns with OOP principles and improves the overall structure of the codebase.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":788,"deletions":644}}},{"hash":"56e3c591102aaa5565311b51b5dbf3f14e04170c","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/add-gradle-support\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"fdce585fbfd8bbbdcf3e35887a8edae9efd7edc7","isMergeCommit":false,"messageTitle":"Add unit tests for Parser, TaskList, and Storage","messageBody":"Added JUnit tests for Parser, TaskList, and Storage to ensure correct behavior.\n\n- ParserTest: Verifies that parsing \"todo\" and \"deadline\" commands returns the correct command objects and handles invalid input properly.\n- StorageTest: Ensures tasks are saved to and loaded from a file correctly.\n- TaskListTest: Checks adding and deleting tasks, including handling invalid deletions.\n\nThese tests improve code reliability and facilitate future refactoring.\n\nLet\u0027s:\n- Continue to regularly update test cases and implement future test cases for future functionalities (stretch goal)\n","tags":["v0.1","A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":2},"txt":{"insertions":3,"deletions":3},"java":{"insertions":109,"deletions":1}}}]},{"date":"2025-02-02","commitResults":[{"hash":"abc2c387c1c1c5598c07ac184528d99d372ec946","isMergeCommit":false,"messageTitle":"Update build.gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}}]},{"date":"2025-02-06","commitResults":[{"hash":"65fcf4fcc2dec96837c20ec4f15fb796723273f9","isMergeCommit":false,"messageTitle":"Add Javadocs to Parser class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"f484ff1600063328d1467821247b68baa8a7c972","isMergeCommit":false,"messageTitle":"Add Javadocs for EinsteinException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"2f68d808232ff8eef0976afb92aba8cc32489626","isMergeCommit":false,"messageTitle":"Add Javadocs for Storage and TaskList","messageBody":"Added Javadocs for code readability\nMinor edits to EinsteinException and\nStorage code style\n","fileTypesAndContributionMap":{"java":{"insertions":147,"deletions":78}}},{"hash":"01828ba3acf061512413c34dbec486a797d0db87","isMergeCommit":false,"messageTitle":"Add Javadocs for Deadline, Event, Task and Todo","messageBody":"- Add Javadocs for code readability\n- Rectify code style issues\n","fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":30}}},{"hash":"538dfd8f8b8dccc1b3acf31ce1e2973f02dbf53e","isMergeCommit":false,"messageTitle":"Add SearchCommand to support task searching","messageBody":"Currently, users have no way to search for tasks by keyword in their\ndescriptions. This makes it difficult to quickly locate specific tasks\nin long task lists.\n\nIntroduce `FindCommand`, which allows users to retrieve tasks\ncontaining a specified keyword. Additionally, update `Parser`\nto recognize the `find` command and invoke `SearchCommand` accordingly.\n\nWith this enhancement, users can efficiently filter their task list\nusing a simple search query.\n","fileTypesAndContributionMap":{"java":{"insertions":199,"deletions":85}}}]},{"date":"2025-02-07","commitResults":[{"hash":"3ad01d254e2e295e48dc79887f9b2948e7ff6c8a","isMergeCommit":false,"messageTitle":"Refactor: Ensure code adheres to Coding Standard","messageBody":"Current codebase contains inconsistencies and deviations from our\nestablished Coding Standard. This affects code readability and\nmaintainability.\n\nLet\u0027s update the code to strictly follow our Coding Standard:\n\n• Correct indentation and formatting across all files\n• Standardize naming conventions for variables and functions\n• Remove unused imports and variables\n• Add necessary comments for complex logic\n• Reorganize code structure for better modularity\n\nThis refactoring will improve code quality, make future maintenance\neasier, and help new developers understand the codebase more quickly.\n","fileTypesAndContributionMap":{"java":{"insertions":129,"deletions":128}}},{"hash":"ae78cd4267332a83a5250d11601e6053cfaa695c","isMergeCommit":true,"messageTitle":"Merge: Add JavaDoc to Einstein chatbot","messageBody":"The Einstein chatbot currently lacks comprehensive documentation,\nmaking it difficult for developers to understand and maintain the code.\n\nThis merge adds JavaDoc comments to the Einstein chatbot codebase:\n\n• Document public methods and classes\n• Add package-level documentation\n• Include usage examples for complex algorithms\n• Clarify parameter descriptions and return values\n\nThese changes will improve code readability, facilitate easier\nmaintenance, and help new developers onboard more quickly.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"f9e81cd92c0a444f44993db4e33c28aeeef0d169","isMergeCommit":true,"messageTitle":"Merge: Align Einstein project with CS2103 Coding Standard","messageBody":"The Einstein project currently deviates from the CS2103 Coding Standard,\nwhich can lead to inconsistencies and reduced code readability.\n\nThis merge updates the codebase to adhere to the current CS2103 Coding\nStandard:\n\n• Standardize naming conventions for variables, methods, and classes\n• Adjust indentation and formatting across all files\n• Reorganize code structure for improved modularity\n• Remove unused imports and variables\n• Add necessary comments for complex logic\n\nThese changes will enhance code quality, facilitate easier maintenance,\nand improve collaboration among team members.erge branch \u0027branch-A-CodingStandard\u0027\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"ee428684d95dc746a06fb4a5ae1377d0dd3a8678","isMergeCommit":true,"messageTitle":"Merge: Add task search and display feature to Einstein","messageBody":"Einstein currently lacks the ability to find and show user tasks based\non queries, limiting its usefulness as a personal assistant.\n\nThis merge introduces a new feature that allows Einstein to:\n\n• Parse user queries for task-related keywords\n• Search through the user\u0027s task database efficiently\n• Display relevant tasks matching the query criteria\n• Format task information for clear presentation\n\nThese enhancements will significantly improve Einstein\u0027s functionality\nas a task management tool, making it more valuable to users.\n","tags":["Level-9"],"fileTypesAndContributionMap":{}},{"hash":"d5d332b88781395bd417a541aed5baf7aa49d473","isMergeCommit":false,"messageTitle":"Update version in ASCII","messageBody":"","tags":["v0.1.1"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":1,"deletions":1}}}]},{"date":"2025-02-12","commitResults":[{"hash":"6aaa69ab9f2cbfd3e160fc01bd2a5b5843ece75f","isMergeCommit":false,"messageTitle":"Update build.gradle for GUI","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":6},"java":{"insertions":37,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"qilstiano":{"java":1133,"md":281,"fxml":0,"sh":1,"bat":2,"gradle":17,"txt":9}},"authorContributionVariance":{"qilstiano":215944.66},"authorDisplayNameMap":{"qilstiano":"CS2103T-T14-1 MUHA..ALID"}}
